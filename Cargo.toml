[workspace.package]
rust-version = "1.80"
authors = ["the Proven authors"]
edition = "2021"
license = "BSL-1.1"
repository = "https://github.com/proven-network/proven-node"

[workspace]
resolver = "2"
members = [
    "crates/applications",
    "crates/attestation",
    "crates/attestation-dev",
    "crates/attestation-nsm",
    "crates/core",
    "crates/dnscrypt-proxy",
    "crates/enclave",
    "crates/external-fs",
    "crates/host",
    "crates/http",
    "crates/http-insecure",
    "crates/http-letsencrypt",
    "crates/instance-details",
    "crates/imds",
    "crates/kms",
    "crates/local",
    "crates/locks",
    "crates/locks-memory",
    "crates/nats-monitor",
    "crates/nats-server",
    "crates/postgres",
    "crates/radix-aggregator",
    "crates/radix-gateway",
    "crates/radix-gateway-sdk",
    "crates/radix-node",
    "crates/radix-rola",
    "crates/runtime",
    "crates/sessions",
    "crates/sql",
    "crates/store",
    "crates/store-asm",
    "crates/store-fs",
    "crates/store-memory",
    "crates/store-nats",
    "crates/store-s3",
    "crates/stream",
    "crates/stream-nats",
    "crates/vsock-proxy",
    "crates/vsock-rpc",
    "crates/vsock-tracing",
    "vendor/deno/ext/broadcast_channel",
    "vendor/deno/ext/canvas",
    "vendor/deno/ext/cron",
    "vendor/deno/ext/crypto",
    "vendor/deno/ext/fetch",
    "vendor/deno/ext/ffi",
    "vendor/deno/ext/fs",
    "vendor/deno/ext/http",
    "vendor/deno/ext/kv",
    "vendor/deno/ext/tls",
    "vendor/deno/ext/napi",
    "vendor/deno/ext/napi/sym",
    "vendor/deno/ext/net",
    "vendor/deno/ext/node",
    "vendor/deno/ext/webgpu",
    "vendor/deno/ext/webidl",
    "vendor/deno/ext/url",
    "vendor/deno/ext/io",
    "vendor/deno/runtime/permissions",
    "vendor/deno/resolvers/deno",
    "vendor/deno/resolvers/node",
    "vendor/deno/runtime",
    "vendor/deno/tests/util/server",
    "vendor/rustyscript",
]
# Only test/build our own crates
default-members = [
    "crates/applications",
    "crates/attestation",
    "crates/attestation-dev",
    "crates/attestation-nsm",
    "crates/core",
    "crates/dnscrypt-proxy",
    "crates/enclave",
    "crates/external-fs",
    "crates/host",
    "crates/http",
    "crates/http-insecure",
    "crates/http-letsencrypt",
    "crates/instance-details",
    "crates/imds",
    "crates/kms",
    "crates/local",
    "crates/locks",
    "crates/locks-memory",
    "crates/nats-monitor",
    "crates/nats-server",
    "crates/postgres",
    "crates/radix-aggregator",
    "crates/radix-gateway",
    "crates/radix-gateway-sdk",
    "crates/radix-node",
    "crates/radix-rola",
    "crates/runtime",
    "crates/sessions",
    "crates/sql",
    "crates/store",
    "crates/store-asm",
    "crates/store-fs",
    "crates/store-memory",
    "crates/store-nats",
    "crates/store-s3",
    "crates/stream",
    "crates/stream-nats",
    "crates/vsock-proxy",
    "crates/vsock-rpc",
    "crates/vsock-tracing",
]

[workspace.dependencies]
aes = "0.8.4"
anyhow = "1.0.93"
asn1-rs = "0.6.2"
async-nats = "0.37.0"
async-trait = "0.1.82"
aws-config = { version = "1.5.10", features = ["behavior-version-latest"] }
aws-nitro-enclaves-nsm-api = "0.4.0"
aws-sdk-ec2 = "1.86.0"
aws-sdk-kms = "1.50.0"
aws-sdk-route53resolver = "1.53.0"
aws-sdk-s3 = "1.60.0"
aws-sdk-secretsmanager = "1.53.0"
axum = { version = "0.7.6", features = ["ws"] }
axum-extra = { version = "0.9.4", features = ["typed-header"] }
axum-server = { version = "0.7.1", features = ["tls-rustls-no-provider"] }
axum_typed_multipart = "0.13.1"
base32 = "=0.5.1"
base64 = "0.22.1"
bech32 = "0.11.0"
bencher = "0.1"
blake3 = "1.5.4"
block-padding = { version = "0.3.3", features = ["std"] }
brotli = "6.0.0"
bytes = "1.4.0"
cache_control = "=0.2.0"
cbc = { version = "=0.1.2", features = ["alloc"] }
chrono = { version = "0.4.26", features = ["serde"] }
cidr = { version = "0.3.0", features = ["serde"] }
clap = { version = "4.5.9", features = ["derive"] }
color-print = "0.3.5"
console_static_text = "=0.8.1"
coset = { version = "0.3.8", features = ["std"] }
dashmap = "5.5.3"
data-encoding = "2.3.3"
data-url = "0.3.1"
deno_ast = { version = "=0.43.3", features = ["transpiling"] }
deno_bench_util = { path = "vendor/deno/bench_util" }
deno_broadcast_channel = { path = "vendor/deno/ext/broadcast_channel" }
deno_cache = { path = "vendor/deno/ext/cache" }
deno_canvas = { path = "vendor/deno/ext/canvas" }
deno_config = { version = "=0.38.2", features = ["workspace", "sync"] }
deno_console = { path = "vendor/deno/ext/console" }
deno_core = { version = "0.318.0" }
deno_cron = { path = "vendor/deno/ext/cron" }
deno_crypto = { path = "vendor/deno/ext/crypto" }
deno_fetch = { path = "vendor/deno/ext/fetch" }
deno_ffi = { path = "vendor/deno/ext/ffi" }
deno_fs = { path = "vendor/deno/ext/fs" }
deno_http = { path = "vendor/deno/ext/http" }
deno_io = { path = "vendor/deno/ext/io" }
deno_kv = { path = "vendor/deno/ext/kv" }
deno_media_type = { version = "0.2.0", features = ["module_specifier"] }
deno_napi = { path = "vendor/deno/ext/napi" }
deno_net = { path = "vendor/deno/ext/net" }
deno_node = { path = "vendor/deno/ext/node" }
deno_package_json = { version = "0.1.2", default-features = false }
deno_path_util = "=0.2.1"
deno_permissions = { path = "vendor/deno/runtime/permissions" }
deno_resolver = { path = "vendor/deno/resolvers/deno" }
deno_runtime = { path = "vendor/deno/runtime" }
deno_semver = "=0.5.16"
deno_terminal = "0.2.0"
deno_tls = { path = "vendor/deno/ext/tls" }
deno_url = { path = "vendor/deno/ext/url" }
deno_web = { path = "vendor/deno/ext/web" }
deno_webgpu = { path = "vendor/deno/ext/webgpu" }
deno_webidl = { path = "vendor/deno/ext/webidl" }
deno_websocket = { path = "vendor/deno/ext/websocket" }
deno_webstorage = { path = "vendor/deno/ext/webstorage" }
denokv_proto = "0.8.4"
denokv_remote = "0.8.4"
# denokv_sqlite brings in bundled sqlite if we don't disable the default features
denokv_sqlite = { default-features = false, version = "0.8.4" }
derive_more = { version = "1.0.0", features = ["from"] }
dlopen2 = "0.6.1"
dns-stamp-parser = { git = "https://github.com/LinkTed/dns-stamp-parser" }
dyn-clone = "1"
ecb = "=0.1.2"
ed25519-dalek = { version = "2.1.1", features = ["rand_core", "signature"] }
elliptic-curve = { version = "0.13.4", features = ["alloc", "arithmetic", "ecdh", "std", "pem", "jwk"] }
encoding_rs = "0.8.35"
error_reporter = "1"
fast-socks5 = "0.9.6"
faster-hex = "0.9"
fastwebsockets = { version = "0.8", features = ["upgrade", "unstable-split"] }
fdlimit = "0.3.0"
filetime = "0.2.16"
flate2 = { version = "1.0.30", default-features = false }
fs3 = "0.5.0"
futures = "0.3.21"
glob = "0.3.1"
h2 = "0.4.6"
headers = "0.4.0"
hex = "0.4.3"
hickory-resolver = { version = "0.24.1", features = ["tokio-runtime", "serde-config"] }
hkdf = "0.12.3"
http = "1.1.0"
http-body = "1.0"
http-body-util = "0.1.2"
http_v02 = { package = "http", version = "0.2.9" }
httparse = "1.8.0"
httpclient = "0.23.9"
hyper = { version = "1.5.0", features = ["full"] }
hyper-rustls = { version = "0.27.3", default-features = false, features = ["http1", "http2", "tls12", "ring"] }
hyper-util = { version = "0.1.10", features = ["tokio", "client", "client-legacy", "server", "server-auto"] }
hyper_v014 = { package = "hyper", version = "0.14.26", features = ["runtime", "http1"] }
indexmap = { version = "2", features = ["serde"] }
ipnet = "2.3"
junction = "=0.2.0"
jsonc-parser = { version = "=0.26.2", features = ["serde"] }
lazy-regex = "3"
lazy_static = "1.4.0"
libsql = { version = "0.6.0", default-features = false, features = ["core"] }
libc = "0.2.126"
libz-sys = { version = "1.1.20", default-features = false }
log = "0.4.20"
lsp-types = "=0.97.0"
md5 = "0.7.0"
memmem = "0.1.1"
monch = "=0.5.0"
multi_key_map = "0.3.0"
napi_sym = { path = "vendor/deno/ext/napi/sym" }
nix = { version = "0.27.1", features = ["signal", "user"] }
node_resolver = { path = "vendor/deno/resolvers/node" }
notify = "=6.1.1"
num-bigint = { version = "0.4", features = ["rand"] }
once_cell = "1.17.1"
opentelemetry = "0.27.0"
opentelemetry-http = "0.27.0"
opentelemetry-otlp = { version = "0.27.0", features = ["logs", "http-proto", "http-json"] }
opentelemetry-semantic-conventions = { version = "0.27.0", features = ["semconv_experimental"] }
opentelemetry_sdk = "0.27.0"
os_pipe = { version = "1.2.1", features = ["io_safety"] }
p224 = { version = "0.13.0", features = ["ecdh"] }
p256 = { version = "0.13.2", features = ["ecdh", "jwk"] }
p384 = { version = "0.13.0", features = ["ecdh", "jwk"] }
parking_lot = "0.12.0"
pem = "3.0.4"
percent-encoding = "2.3.0"
phf = { version = "0.11", features = ["macros"] }
pin-project = "1.1.7"
pretty_assertions = "=1.4.0"
prost = "0.13"
prost-build = "0.13"
proven-applications = { path = "crates/applications" }
proven-attestation = { path = "crates/attestation" }
proven-attestation-dev = { path = "crates/attestation-dev" }
proven-attestation-nsm = { path = "crates/attestation-nsm" }
proven-core = { path = "crates/core" }
proven-dnscrypt-proxy = { path = "crates/dnscrypt-proxy" }
proven-enclave = { path = "crates/enclave" }
proven-external-fs = { path = "crates/external-fs" }
proven-host = { path = "crates/host" }
proven-http = { path = "crates/http" }
proven-http-insecure = { path = "crates/http-insecure" }
proven-http-letsencrypt = { path = "crates/http-letsencrypt" }
proven-imds = { path = "crates/imds" }
proven-instance-details = { path = "crates/instance-details" }
proven-kms = { path = "crates/kms" }
proven-local = { path = "crates/local" }
proven-locks = { path = "crates/locks" }
proven-locks-memory = { path = "crates/locks-memory" }
proven-nats-monitor = { path = "crates/nats-monitor" }
proven-nats-server = { path = "crates/nats-server" }
proven-postgres = { path = "crates/postgres" }
proven-radix-aggregator = { path = "crates/radix-aggregator" }
proven-radix-gateway = { path = "crates/radix-gateway" }
proven-radix-gateway-sdk = { path = "crates/radix-gateway-sdk" }
proven-radix-node = { path = "crates/radix-node" }
proven-radix-rola = { path = "crates/radix-rola" }
proven-runtime = { path = "crates/runtime" }
proven-sessions = { path = "crates/sessions" }
proven-sql = { path = "crates/sql" }
proven-store = { path = "crates/store" }
proven-store-asm = { path = "crates/store-asm" }
proven-store-fs = { path = "crates/store-fs" }
proven-store-memory = { path = "crates/store-memory" }
proven-store-nats = { path = "crates/store-nats" }
proven-store-s3 = { path = "crates/store-s3" }
proven-stream = { path = "crates/stream" }
proven-stream-nats = { path = "crates/stream-nats" }
proven-vsock-proxy = { path = "crates/vsock-proxy" }
proven-vsock-rpc = { path = "crates/vsock-rpc" }
proven-vsock-tracing = { path = "crates/vsock-tracing" }
quote = "1"
radix-common = { version = "1.2.0", features = ["secp256k1_sign_and_validate", "serde"] }
rand = "=0.8.5"
raw-window-handle = "0.6.0"
regex = "1.10.6"
reqwest = { version = "0.12.9", default-features = false, features = ["rustls-tls", "stream", "gzip", "brotli", "socks", "json", "http2"] }
ring = "^0.17.0"
rlimit = "0.10.2"
rsa = { version = "0.9.3", default-features = false, features = ["std", "pem", "hazmat"] } # hazmat needed for PrehashSigner in ext/node
rtnetlink = "0.14.1"
rusqlite = { version = "0.32.0", features = ["unlock_notify", "bundled"] }
rustls = { version = "0.23.16", default-features = false, features = ["logging", "std", "tls12", "ring"] }
rustls-pemfile = "2"
rustls-tokio-stream = "=0.3.0"
rustls-webpki = "0.102"
rustyline = "=13.0.0"
rustyscript = { path = "vendor/rustyscript", features = ["web"]}
saffron = "=0.1.0"
scopeguard = "1.2.0"
sec1 = "0.7"
serde = { version = "1.0.213", features = ["derive"] }
serde_bytes = "0.11"
serde_cbor = "0.11.2"
serde_json = "1.0.132"
sha1 = { version = "0.10.6", features = ["oid"] }
sha2 = { version = "0.10.8", features = ["oid"] }
signature = "2.2.0"
smallvec = "1.8"
socket2 = { version = "0.5.3", features = ["all"] }
spki = "0.7.3"
strip-ansi-escapes = "0.2.0"
syn = { version = "2", features = ["full", "extra-traits"] }
tar = "=0.4.40"
tempfile = "3.13.0"
termcolor = "1.1.3"
test_util = { package = "test_server", path = "vendor/deno/tests/util/server" }
thiserror = "2.0.0"
tokio = { version = "1.41.0", features = ["full"] }
tokio-metrics = { version = "0.3.0", features = ["rt"] }
tokio-rustls = { version = "0.26.0", default-features = false, features = ["ring", "tls12"] }
tokio-rustls-acme = { version = "0.4.0", features = ["axum"] }
tokio-socks = "0.5.1"
tokio-stream = "0.1.15"
tokio-tun = "0.12.1"
tokio-util = { version = "0.7.4", features = ["rt"] }
tokio-vsock = "0.5.0"
tower = { version = "0.5.1", default-features = false, features = ["util"] }
tower-http = { version = "0.6.1", features = ["decompression-br", "decompression-gzip", "cors"] }
tower-service = "0.3.2"
tracing = "0.1.40"
tracing-panic = "0.1.2"
tracing-subscriber = "0.3.18"
twox-hash = "=1.6.3"
url = { version = "< 2.5.0", features = ["serde", "expose_internals"] }
uuid = { version = "1.3.0", features = ["v4"] }
webpki-root-certs = "0.26.5"
webpki-roots = "0.26"
wgpu-core = "0.21.1"
wgpu-types = "0.20"
which = "4.4.2" # Can't upgrade currently
winapi = "=0.3.9"
windows-sys = { version = "0.59.0", features = ["Win32_Foundation", "Win32_Media", "Win32_Storage_FileSystem", "Win32_System_IO", "Win32_System_WindowsProgramming", "Wdk", "Wdk_System", "Wdk_System_SystemInformation", "Win32_Security", "Win32_System_Pipes", "Wdk_Storage_FileSystem", "Win32_System_Registry", "Win32_System_Kernel"] }
yoke = { version = "0.7.4", features = ["derive"] }
x509-parser = { version = "0.16.0", features = ["ring", "verify"] }
