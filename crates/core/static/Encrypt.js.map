{"version":3,"file":"Encrypt.js","sources":["../../../packages/node_modules/@scure/bip39/node_modules/@noble/hashes/_assert.js","../../../packages/node_modules/@scure/bip39/node_modules/@noble/hashes/cryptoBrowser.js","../../../packages/node_modules/@scure/bip39/node_modules/@noble/hashes/utils.js","../../../packages/node_modules/@scure/bip39/node_modules/@noble/hashes/hmac.js","../../../packages/node_modules/@scure/bip39/node_modules/@noble/hashes/pbkdf2.js","../../../packages/node_modules/@scure/bip39/node_modules/@noble/hashes/_sha2.js","../../../packages/node_modules/@scure/bip39/node_modules/@noble/hashes/sha256.js","../../../packages/node_modules/@scure/bip39/node_modules/@noble/hashes/_u64.js","../../../packages/node_modules/@scure/bip39/node_modules/@noble/hashes/sha512.js","../../../packages/node_modules/@scure/base/lib/index.js","../../../packages/node_modules/@scure/bip39/index.js","../../../packages/node_modules/@scure/bip39/wordlists/english.js","../../../packages/common/src/helpers/broker.ts","../../../packages/node_modules/cbor-x/decode.js","../../../packages/node_modules/cbor-x/encode.js","../../../packages/node_modules/@noble/ed25519/index.js","../../../packages/node_modules/neverthrow/dist/index.es.js","../../../packages/common/src/helpers/cose.ts","../../../packages/node_modules/@noble/hashes/esm/utils.js","../../../packages/node_modules/@noble/hashes/esm/_md.js","../../../packages/node_modules/@noble/hashes/esm/_u64.js","../../../packages/node_modules/@noble/hashes/esm/sha2.js","../../../packages/node_modules/reflect-metadata/Reflect.js","../../../packages/node_modules/pvtsutils/build/index.es.js","../../../packages/node_modules/pvutils/build/utils.es.js","../../../packages/node_modules/asn1js/build/index.es.js","../../../packages/node_modules/@peculiar/asn1-schema/build/es2015/enums.js","../../../packages/node_modules/@peculiar/asn1-schema/build/es2015/types/bit_string.js","../../../packages/node_modules/@peculiar/asn1-schema/build/es2015/types/octet_string.js","../../../packages/node_modules/@peculiar/asn1-schema/build/es2015/converters.js","../../../packages/node_modules/@peculiar/asn1-schema/build/es2015/helper.js","../../../packages/node_modules/@peculiar/asn1-schema/build/es2015/schema.js","../../../packages/node_modules/@peculiar/asn1-schema/build/es2015/storage.js","../../../packages/node_modules/@peculiar/asn1-schema/build/es2015/decorators.js","../../../packages/node_modules/@peculiar/asn1-schema/build/es2015/errors/schema_validation.js","../../../packages/node_modules/@peculiar/asn1-schema/build/es2015/parser.js","../../../packages/node_modules/@peculiar/asn1-schema/build/es2015/serializer.js","../../../packages/node_modules/@peculiar/asn1-schema/build/es2015/objects.js","../../../packages/node_modules/@peculiar/asn1-schema/build/es2015/convert.js","../../../packages/node_modules/tslib/tslib.es6.mjs","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/ip_converter.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/name.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/general_name.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/object_identifiers.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/authority_information_access.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/authority_key_identifier.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/basic_constraints.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/general_names.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/certificate_issuer.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/certificate_policies.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_number.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_delta_indicator.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_distribution_points.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_freshest.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_issuing_distribution_point.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_reason.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/extended_key_usage.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/inhibit_any_policy.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/invalidity_date.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/issuer_alternative_name.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/key_usage.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/name_constraints.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/policy_constraints.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/policy_mappings.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_alternative_name.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/attribute.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_directory_attributes.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_key_identifier.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/private_key_usage_period.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/entrust_version_info.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_info_access.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/algorithm_identifier.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/subject_public_key_info.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/time.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/validity.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/extension.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/types.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/tbs_certificate.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/certificate.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/tbs_cert_list.js","../../../packages/node_modules/@peculiar/asn1-x509/build/es2015/certificate_list.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/issuer_and_serial_number.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/signer_identifier.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/types.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/attribute.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/signer_info.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/attributes.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/aa_clear_attrs.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/attr_spec.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/aa_controls.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/issuer_serial.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/object_digest_info.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/v2_form.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/attr_cert_issuer.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/attr_cert_validity_period.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/holder.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/attribute_certificate_info.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/attribute_certificate.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/class_list.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/security_category.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/clearance.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/ietf_attr_syntax.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/target.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/proxy_info.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/role_syntax.js","../../../packages/node_modules/@peculiar/asn1-x509-attr/build/es2015/svce_auth_info.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/certificate_choices.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/content_info.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/encapsulated_content_info.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/encrypted_content_info.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/other_key_attribute.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/key_agree_recipient_info.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/key_trans_recipient_info.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/kek_recipient_info.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/password_recipient_info.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/recipient_info.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/recipient_infos.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/revocation_info_choice.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/originator_info.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/enveloped_data.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/object_identifiers.js","../../../packages/node_modules/@peculiar/asn1-cms/build/es2015/signed_data.js","../../../packages/node_modules/@peculiar/asn1-ecc/build/es2015/object_identifiers.js","../../../packages/node_modules/@peculiar/asn1-ecc/build/es2015/algorithms.js","../../../packages/node_modules/@peculiar/asn1-ecc/build/es2015/rfc3279.js","../../../packages/node_modules/@peculiar/asn1-ecc/build/es2015/ec_parameters.js","../../../packages/node_modules/@peculiar/asn1-ecc/build/es2015/ec_private_key.js","../../../packages/node_modules/@peculiar/asn1-ecc/build/es2015/ec_signature_value.js","../../../packages/node_modules/@peculiar/asn1-rsa/build/es2015/object_identifiers.js","../../../packages/node_modules/@peculiar/asn1-rsa/build/es2015/algorithms.js","../../../packages/node_modules/@peculiar/asn1-rsa/build/es2015/parameters/rsaes_oaep.js","../../../packages/node_modules/@peculiar/asn1-rsa/build/es2015/parameters/rsassa_pss.js","../../../packages/node_modules/@peculiar/asn1-rsa/build/es2015/parameters/rsassa_pkcs1_v1_5.js","../../../packages/node_modules/@peculiar/asn1-rsa/build/es2015/other_prime_info.js","../../../packages/node_modules/@peculiar/asn1-rsa/build/es2015/rsa_private_key.js","../../../packages/node_modules/@peculiar/asn1-rsa/build/es2015/rsa_public_key.js","../../../packages/node_modules/tsyringe/dist/esm5/types/lifecycle.js","../../../packages/node_modules/tsyringe/node_modules/tslib/tslib.es6.js","../../../packages/node_modules/tsyringe/dist/esm5/reflection-helpers.js","../../../packages/node_modules/tsyringe/dist/esm5/providers/class-provider.js","../../../packages/node_modules/tsyringe/dist/esm5/providers/factory-provider.js","../../../packages/node_modules/tsyringe/dist/esm5/lazy-helpers.js","../../../packages/node_modules/tsyringe/dist/esm5/providers/injection-token.js","../../../packages/node_modules/tsyringe/dist/esm5/providers/token-provider.js","../../../packages/node_modules/tsyringe/dist/esm5/providers/value-provider.js","../../../packages/node_modules/tsyringe/dist/esm5/providers/provider.js","../../../packages/node_modules/tsyringe/dist/esm5/registry-base.js","../../../packages/node_modules/tsyringe/dist/esm5/registry.js","../../../packages/node_modules/tsyringe/dist/esm5/resolution-context.js","../../../packages/node_modules/tsyringe/dist/esm5/error-helpers.js","../../../packages/node_modules/tsyringe/dist/esm5/types/disposable.js","../../../packages/node_modules/tsyringe/dist/esm5/interceptors.js","../../../packages/node_modules/tsyringe/dist/esm5/dependency-container.js","../../../packages/node_modules/tsyringe/dist/esm5/decorators/injectable.js","../../../packages/node_modules/tsyringe/dist/esm5/index.js","../../../packages/node_modules/@peculiar/asn1-pfx/build/es2015/attribute.js","../../../packages/node_modules/@peculiar/asn1-pfx/build/es2015/authenticated_safe.js","../../../packages/node_modules/@peculiar/asn1-pfx/build/es2015/bags/cert_bag.js","../../../packages/node_modules/@peculiar/asn1-pfx/build/es2015/bags/crl_bag.js","../../../packages/node_modules/@peculiar/asn1-pkcs8/build/es2015/encrypted_private_key_info.js","../../../packages/node_modules/@peculiar/asn1-pkcs8/build/es2015/private_key_info.js","../../../packages/node_modules/@peculiar/asn1-pfx/build/es2015/bags/key_bag.js","../../../packages/node_modules/@peculiar/asn1-pfx/build/es2015/bags/pkcs8_shrouded_key_bag.js","../../../packages/node_modules/@peculiar/asn1-pfx/build/es2015/bags/secret_bag.js","../../../packages/node_modules/@peculiar/asn1-pfx/build/es2015/mac_data.js","../../../packages/node_modules/@peculiar/asn1-pfx/build/es2015/pfx.js","../../../packages/node_modules/@peculiar/asn1-pfx/build/es2015/safe_bag.js","../../../packages/node_modules/@peculiar/asn1-pkcs9/build/es2015/index.js","../../../packages/node_modules/@peculiar/asn1-csr/build/es2015/attributes.js","../../../packages/node_modules/@peculiar/asn1-csr/build/es2015/certification_request_info.js","../../../packages/node_modules/@peculiar/asn1-csr/build/es2015/certification_request.js","../../../packages/node_modules/@peculiar/x509/build/x509.es.js","../../../packages/node_modules/@jfromaniello/typedmap/dist/esm/index.js","../../../packages/node_modules/@auth0/cose/dist/browser/cbor.js","../../../packages/node_modules/@auth0/cose/dist/browser/headers.js","../../../packages/node_modules/@auth0/cose/dist/browser/util/errors.js","../../../packages/node_modules/@auth0/cose/dist/browser/runtime/browser/subtle_dsa.js","../../../packages/node_modules/@auth0/cose/dist/browser/runtime/browser/webcrypto.js","../../../packages/node_modules/@auth0/cose/dist/browser/runtime/browser/check_key_length.js","../../../packages/node_modules/@auth0/cose/dist/browser/lib/crypto_key.js","../../../packages/node_modules/@auth0/cose/dist/browser/lib/invalid_key_input.js","../../../packages/node_modules/@auth0/cose/dist/browser/runtime/browser/is_key_like.js","../../../packages/node_modules/@auth0/cose/dist/browser/runtime/browser/get_sign_verify_key.js","../../../packages/node_modules/@auth0/cose/dist/browser/runtime/browser/sign.js","../../../packages/node_modules/@auth0/cose/dist/browser/runtime/browser/verify.js","../../../packages/node_modules/jose/dist/browser/runtime/webcrypto.js","../../../packages/node_modules/jose/dist/browser/lib/buffer_utils.js","../../../packages/node_modules/jose/dist/browser/runtime/base64url.js","../../../packages/node_modules/jose/dist/browser/util/errors.js","../../../packages/node_modules/jose/dist/browser/lib/invalid_key_input.js","../../../packages/node_modules/jose/dist/browser/runtime/is_key_like.js","../../../packages/node_modules/jose/dist/browser/lib/is_object.js","../../../packages/node_modules/jose/dist/browser/lib/format_pem.js","../../../packages/node_modules/jose/dist/browser/runtime/asn1.js","../../../packages/node_modules/jose/dist/browser/runtime/jwk_to_key.js","../../../packages/node_modules/jose/dist/browser/key/import.js","../../../packages/node_modules/jose/dist/browser/runtime/key_to_jwk.js","../../../packages/node_modules/jose/dist/browser/key/export.js","../../../packages/node_modules/jose/dist/browser/runtime/generate.js","../../../packages/node_modules/jose/dist/browser/key/generate_key_pair.js","../../../packages/node_modules/bytestreamjs/build/mjs/byte_stream.js","../../../packages/node_modules/bytestreamjs/build/mjs/seq_stream.js","../../../packages/node_modules/@noble/hashes/esm/legacy.js","../../../packages/node_modules/@noble/hashes/esm/sha1.js","../../../packages/node_modules/@noble/hashes/esm/sha256.js","../../../packages/node_modules/@noble/hashes/esm/sha512.js","../../../packages/node_modules/pkijs/build/index.es.js","../../../packages/node_modules/@auth0/cose/dist/browser/runtime/browser/pkijs.js","../../../packages/node_modules/@auth0/cose/dist/browser/lib/buffer_utils.js","../../../packages/node_modules/@auth0/cose/dist/browser/runtime/browser/base64.js","../../../packages/node_modules/@auth0/cose/dist/browser/util/cert.js","../../../packages/node_modules/@auth0/cose/dist/browser/cose/COSEBase.js","../../../packages/node_modules/@auth0/cose/dist/browser/lib/validate_algorithms.js","../../../packages/node_modules/@auth0/cose/dist/browser/cose/SignatureBase.js","../../../packages/node_modules/@auth0/cose/dist/browser/cose/decode.js","../../../packages/node_modules/@auth0/cose/dist/browser/cose/Sign1.js","../../../packages/node_modules/@auth0/cose/dist/browser/cose/Sign.js","../../../packages/node_modules/@auth0/cose/dist/browser/cose/Mac0.js","../../../packages/node_modules/@auth0/cose/dist/browser/runtime/browser/random.js","../../../packages/node_modules/@auth0/cose/dist/browser/lib/iv.js","../../../packages/node_modules/@auth0/cose/dist/browser/lib/check_iv_length.js","../../../packages/node_modules/@auth0/cose/dist/browser/runtime/browser/check_cek_length.js","../../../packages/node_modules/@auth0/cose/dist/browser/runtime/browser/timing_safe_equal.js","../../../packages/node_modules/@auth0/cose/dist/browser/runtime/browser/decrypt.js","../../../packages/node_modules/@auth0/cose/dist/browser/runtime/browser/encrypt.js","../../../packages/node_modules/@auth0/cose/dist/browser/cose/Encrypt0.js","../../../packages/node_modules/@auth0/cose/dist/browser/key/kty.js","../../../packages/node_modules/@auth0/cose/dist/browser/key/curve.js","../../../packages/node_modules/@auth0/cose/dist/browser/util/maps.js","../../../packages/node_modules/@auth0/cose/dist/browser/key/params.js","../../../packages/node_modules/@auth0/cose/dist/browser/key/key_ops.js","../../../packages/node_modules/@auth0/cose/dist/browser/key/COSEKey.js","../../../packages/node_modules/@auth0/cose/dist/browser/cose/Encrypt.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n//# sourceMappingURL=cryptoBrowser.js.map","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2Async = exports.pbkdf2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst hmac_js_1 = require(\"./hmac.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    _assert_js_1.default.hash(hash);\n    const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    _assert_js_1.default.number(c);\n    _assert_js_1.default.number(dkLen);\n    _assert_js_1.default.number(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = (0, utils_js_1.toBytes)(_password);\n    const salt = (0, utils_js_1.toBytes)(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac_js_1.hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nfunction pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2 = pbkdf2;\nasync function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, (i) => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2Async = pbkdf2Async;\n//# sourceMappingURL=pbkdf2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n//# sourceMappingURL=_sha2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha224 = exports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\nexports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig: exports.toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n//# sourceMappingURL=_u64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512_224 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_224 = (0, utils_js_1.wrapConstructor)(() => new SHA512_224());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","\"use strict\";\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.createBase58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64urlnopad = exports.base64url = exports.base64nopad = exports.base64 = exports.base32crockford = exports.base32hexnopad = exports.base32hex = exports.base32nopad = exports.base32 = exports.base16 = exports.utils = void 0;\nexports.assertNumber = assertNumber;\n// Utilities\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain(...args) {\n    const id = (a) => a;\n    // Wrap call in closure so JIT can inline calls\n    const wrap = (a, b) => (c) => a(b(c));\n    // Construct chain of args[-1].encode(args[-2].encode([...]))\n    const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n    // Construct chain of args[0].decode(args[1].decode(...))\n    const decode = args.map((x) => x.decode).reduce(wrap, id);\n    return { encode, decode };\n}\n/**\n * Encodes integer radix representation to array of strings using alphabet and back\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\n/**\n * Slow: O(n^2) time complexity\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix(data, from, to) {\n    // base 1 is impossible\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            const rounded = Math.floor(digitBase / to);\n            digits[i] = rounded;\n            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!rounded)\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = /* @__NO_SIDE_EFFECTS__ */ (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = /*@__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));\n/**\n * Implemented with numbers, because BigInt is 5x slower\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0; // bitwise position in current element\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1; // clean carry, otherwise it will cause overflow\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of numbers');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of numbers');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\n// prettier-ignore\nexports.utils = {\n    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n// RFC 4648 aka RFC 3548\n// ---------------------\nexports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexports.base32nopad = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), join(''));\nexports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexports.base32hexnopad = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), join(''));\nexports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexports.base64nopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), join(''));\nexports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nexports.base64urlnopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));\n// base58 code\n// -----------\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\n// xmr ver is done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n// Block encoding significantly reduces quadratic complexity of base58.\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexports.base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = exports.base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst createBase58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);\nexports.createBase58check = createBase58check;\n// legacy export, bad name\nexports.base58check = exports.createBase58check;\nconst BECH_ALPHABET = /* @__PURE__ */ chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (words instanceof Uint8Array)\n            words = Array.from(words);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        if (prefix.length === 0)\n            throw new TypeError(`Invalid prefix length ${prefix.length}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        const lowered = prefix.toLowerCase();\n        const sum = bechChecksum(lowered, words, ENCODING_CONST);\n        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        const sepIndex = lowered.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = lowered.slice(0, sepIndex);\n        const data = lowered.slice(sepIndex + 1);\n        if (data.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(data).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!data.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    function encodeFromBytes(prefix, bytes) {\n        return encode(prefix, toWords(bytes));\n    }\n    return {\n        encode,\n        decode,\n        encodeFromBytes,\n        decodeToBytes,\n        decodeUnsafe,\n        fromWords,\n        fromWordsUnsafe,\n        toWords,\n    };\n}\nexports.bech32 = genBech32('bech32');\nexports.bech32m = genBech32('bech32m');\nexports.utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\n// prettier-ignore\nconst CODERS = {\n    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr\n};\nconst coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!isBytes(bytes))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexports.bytesToString = bytesToString;\nexports.str = exports.bytesToString; // as in python, but for bytes only\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexports.stringToBytes = stringToBytes;\nexports.bytes = exports.stringToBytes;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mnemonicToSeedSync = exports.mnemonicToSeed = exports.validateMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.generateMnemonic = void 0;\n/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nconst _assert_1 = require(\"@noble/hashes/_assert\");\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst base_1 = require(\"@scure/base\");\n// Japanese wordlist\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    _assert_1.default.bytes(entropy, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction generateMnemonic(wordlist, strength = 128) {\n    _assert_1.default.number(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic((0, utils_1.randomBytes)(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([((0, sha256_1.sha256)(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2048 || typeof wordlist[0] !== 'string')\n        throw new Error('Worlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return base_1.utils.chain(base_1.utils.checksum(1, calcChecksum), base_1.utils.radix2(11, true), base_1.utils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    assertEntropy(entropy);\n    return entropy;\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeed(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlist = void 0;\nexports.wordlist = `abandon\nability\nable\nabout\nabove\nabsent\nabsorb\nabstract\nabsurd\nabuse\naccess\naccident\naccount\naccuse\nachieve\nacid\nacoustic\nacquire\nacross\nact\naction\nactor\nactress\nactual\nadapt\nadd\naddict\naddress\nadjust\nadmit\nadult\nadvance\nadvice\naerobic\naffair\nafford\nafraid\nagain\nage\nagent\nagree\nahead\naim\nair\nairport\naisle\nalarm\nalbum\nalcohol\nalert\nalien\nall\nalley\nallow\nalmost\nalone\nalpha\nalready\nalso\nalter\nalways\namateur\namazing\namong\namount\namused\nanalyst\nanchor\nancient\nanger\nangle\nangry\nanimal\nankle\nannounce\nannual\nanother\nanswer\nantenna\nantique\nanxiety\nany\napart\napology\nappear\napple\napprove\napril\narch\narctic\narea\narena\nargue\narm\narmed\narmor\narmy\naround\narrange\narrest\narrive\narrow\nart\nartefact\nartist\nartwork\nask\naspect\nassault\nasset\nassist\nassume\nasthma\nathlete\natom\nattack\nattend\nattitude\nattract\nauction\naudit\naugust\naunt\nauthor\nauto\nautumn\naverage\navocado\navoid\nawake\naware\naway\nawesome\nawful\nawkward\naxis\nbaby\nbachelor\nbacon\nbadge\nbag\nbalance\nbalcony\nball\nbamboo\nbanana\nbanner\nbar\nbarely\nbargain\nbarrel\nbase\nbasic\nbasket\nbattle\nbeach\nbean\nbeauty\nbecause\nbecome\nbeef\nbefore\nbegin\nbehave\nbehind\nbelieve\nbelow\nbelt\nbench\nbenefit\nbest\nbetray\nbetter\nbetween\nbeyond\nbicycle\nbid\nbike\nbind\nbiology\nbird\nbirth\nbitter\nblack\nblade\nblame\nblanket\nblast\nbleak\nbless\nblind\nblood\nblossom\nblouse\nblue\nblur\nblush\nboard\nboat\nbody\nboil\nbomb\nbone\nbonus\nbook\nboost\nborder\nboring\nborrow\nboss\nbottom\nbounce\nbox\nboy\nbracket\nbrain\nbrand\nbrass\nbrave\nbread\nbreeze\nbrick\nbridge\nbrief\nbright\nbring\nbrisk\nbroccoli\nbroken\nbronze\nbroom\nbrother\nbrown\nbrush\nbubble\nbuddy\nbudget\nbuffalo\nbuild\nbulb\nbulk\nbullet\nbundle\nbunker\nburden\nburger\nburst\nbus\nbusiness\nbusy\nbutter\nbuyer\nbuzz\ncabbage\ncabin\ncable\ncactus\ncage\ncake\ncall\ncalm\ncamera\ncamp\ncan\ncanal\ncancel\ncandy\ncannon\ncanoe\ncanvas\ncanyon\ncapable\ncapital\ncaptain\ncar\ncarbon\ncard\ncargo\ncarpet\ncarry\ncart\ncase\ncash\ncasino\ncastle\ncasual\ncat\ncatalog\ncatch\ncategory\ncattle\ncaught\ncause\ncaution\ncave\nceiling\ncelery\ncement\ncensus\ncentury\ncereal\ncertain\nchair\nchalk\nchampion\nchange\nchaos\nchapter\ncharge\nchase\nchat\ncheap\ncheck\ncheese\nchef\ncherry\nchest\nchicken\nchief\nchild\nchimney\nchoice\nchoose\nchronic\nchuckle\nchunk\nchurn\ncigar\ncinnamon\ncircle\ncitizen\ncity\ncivil\nclaim\nclap\nclarify\nclaw\nclay\nclean\nclerk\nclever\nclick\nclient\ncliff\nclimb\nclinic\nclip\nclock\nclog\nclose\ncloth\ncloud\nclown\nclub\nclump\ncluster\nclutch\ncoach\ncoast\ncoconut\ncode\ncoffee\ncoil\ncoin\ncollect\ncolor\ncolumn\ncombine\ncome\ncomfort\ncomic\ncommon\ncompany\nconcert\nconduct\nconfirm\ncongress\nconnect\nconsider\ncontrol\nconvince\ncook\ncool\ncopper\ncopy\ncoral\ncore\ncorn\ncorrect\ncost\ncotton\ncouch\ncountry\ncouple\ncourse\ncousin\ncover\ncoyote\ncrack\ncradle\ncraft\ncram\ncrane\ncrash\ncrater\ncrawl\ncrazy\ncream\ncredit\ncreek\ncrew\ncricket\ncrime\ncrisp\ncritic\ncrop\ncross\ncrouch\ncrowd\ncrucial\ncruel\ncruise\ncrumble\ncrunch\ncrush\ncry\ncrystal\ncube\nculture\ncup\ncupboard\ncurious\ncurrent\ncurtain\ncurve\ncushion\ncustom\ncute\ncycle\ndad\ndamage\ndamp\ndance\ndanger\ndaring\ndash\ndaughter\ndawn\nday\ndeal\ndebate\ndebris\ndecade\ndecember\ndecide\ndecline\ndecorate\ndecrease\ndeer\ndefense\ndefine\ndefy\ndegree\ndelay\ndeliver\ndemand\ndemise\ndenial\ndentist\ndeny\ndepart\ndepend\ndeposit\ndepth\ndeputy\nderive\ndescribe\ndesert\ndesign\ndesk\ndespair\ndestroy\ndetail\ndetect\ndevelop\ndevice\ndevote\ndiagram\ndial\ndiamond\ndiary\ndice\ndiesel\ndiet\ndiffer\ndigital\ndignity\ndilemma\ndinner\ndinosaur\ndirect\ndirt\ndisagree\ndiscover\ndisease\ndish\ndismiss\ndisorder\ndisplay\ndistance\ndivert\ndivide\ndivorce\ndizzy\ndoctor\ndocument\ndog\ndoll\ndolphin\ndomain\ndonate\ndonkey\ndonor\ndoor\ndose\ndouble\ndove\ndraft\ndragon\ndrama\ndrastic\ndraw\ndream\ndress\ndrift\ndrill\ndrink\ndrip\ndrive\ndrop\ndrum\ndry\nduck\ndumb\ndune\nduring\ndust\ndutch\nduty\ndwarf\ndynamic\neager\neagle\nearly\nearn\nearth\neasily\neast\neasy\necho\necology\neconomy\nedge\nedit\neducate\neffort\negg\neight\neither\nelbow\nelder\nelectric\nelegant\nelement\nelephant\nelevator\nelite\nelse\nembark\nembody\nembrace\nemerge\nemotion\nemploy\nempower\nempty\nenable\nenact\nend\nendless\nendorse\nenemy\nenergy\nenforce\nengage\nengine\nenhance\nenjoy\nenlist\nenough\nenrich\nenroll\nensure\nenter\nentire\nentry\nenvelope\nepisode\nequal\nequip\nera\nerase\nerode\nerosion\nerror\nerupt\nescape\nessay\nessence\nestate\neternal\nethics\nevidence\nevil\nevoke\nevolve\nexact\nexample\nexcess\nexchange\nexcite\nexclude\nexcuse\nexecute\nexercise\nexhaust\nexhibit\nexile\nexist\nexit\nexotic\nexpand\nexpect\nexpire\nexplain\nexpose\nexpress\nextend\nextra\neye\neyebrow\nfabric\nface\nfaculty\nfade\nfaint\nfaith\nfall\nfalse\nfame\nfamily\nfamous\nfan\nfancy\nfantasy\nfarm\nfashion\nfat\nfatal\nfather\nfatigue\nfault\nfavorite\nfeature\nfebruary\nfederal\nfee\nfeed\nfeel\nfemale\nfence\nfestival\nfetch\nfever\nfew\nfiber\nfiction\nfield\nfigure\nfile\nfilm\nfilter\nfinal\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfiscal\nfish\nfit\nfitness\nfix\nflag\nflame\nflash\nflat\nflavor\nflee\nflight\nflip\nfloat\nflock\nfloor\nflower\nfluid\nflush\nfly\nfoam\nfocus\nfog\nfoil\nfold\nfollow\nfood\nfoot\nforce\nforest\nforget\nfork\nfortune\nforum\nforward\nfossil\nfoster\nfound\nfox\nfragile\nframe\nfrequent\nfresh\nfriend\nfringe\nfrog\nfront\nfrost\nfrown\nfrozen\nfruit\nfuel\nfun\nfunny\nfurnace\nfury\nfuture\ngadget\ngain\ngalaxy\ngallery\ngame\ngap\ngarage\ngarbage\ngarden\ngarlic\ngarment\ngas\ngasp\ngate\ngather\ngauge\ngaze\ngeneral\ngenius\ngenre\ngentle\ngenuine\ngesture\nghost\ngiant\ngift\ngiggle\nginger\ngiraffe\ngirl\ngive\nglad\nglance\nglare\nglass\nglide\nglimpse\nglobe\ngloom\nglory\nglove\nglow\nglue\ngoat\ngoddess\ngold\ngood\ngoose\ngorilla\ngospel\ngossip\ngovern\ngown\ngrab\ngrace\ngrain\ngrant\ngrape\ngrass\ngravity\ngreat\ngreen\ngrid\ngrief\ngrit\ngrocery\ngroup\ngrow\ngrunt\nguard\nguess\nguide\nguilt\nguitar\ngun\ngym\nhabit\nhair\nhalf\nhammer\nhamster\nhand\nhappy\nharbor\nhard\nharsh\nharvest\nhat\nhave\nhawk\nhazard\nhead\nhealth\nheart\nheavy\nhedgehog\nheight\nhello\nhelmet\nhelp\nhen\nhero\nhidden\nhigh\nhill\nhint\nhip\nhire\nhistory\nhobby\nhockey\nhold\nhole\nholiday\nhollow\nhome\nhoney\nhood\nhope\nhorn\nhorror\nhorse\nhospital\nhost\nhotel\nhour\nhover\nhub\nhuge\nhuman\nhumble\nhumor\nhundred\nhungry\nhunt\nhurdle\nhurry\nhurt\nhusband\nhybrid\nice\nicon\nidea\nidentify\nidle\nignore\nill\nillegal\nillness\nimage\nimitate\nimmense\nimmune\nimpact\nimpose\nimprove\nimpulse\ninch\ninclude\nincome\nincrease\nindex\nindicate\nindoor\nindustry\ninfant\ninflict\ninform\ninhale\ninherit\ninitial\ninject\ninjury\ninmate\ninner\ninnocent\ninput\ninquiry\ninsane\ninsect\ninside\ninspire\ninstall\nintact\ninterest\ninto\ninvest\ninvite\ninvolve\niron\nisland\nisolate\nissue\nitem\nivory\njacket\njaguar\njar\njazz\njealous\njeans\njelly\njewel\njob\njoin\njoke\njourney\njoy\njudge\njuice\njump\njungle\njunior\njunk\njust\nkangaroo\nkeen\nkeep\nketchup\nkey\nkick\nkid\nkidney\nkind\nkingdom\nkiss\nkit\nkitchen\nkite\nkitten\nkiwi\nknee\nknife\nknock\nknow\nlab\nlabel\nlabor\nladder\nlady\nlake\nlamp\nlanguage\nlaptop\nlarge\nlater\nlatin\nlaugh\nlaundry\nlava\nlaw\nlawn\nlawsuit\nlayer\nlazy\nleader\nleaf\nlearn\nleave\nlecture\nleft\nleg\nlegal\nlegend\nleisure\nlemon\nlend\nlength\nlens\nleopard\nlesson\nletter\nlevel\nliar\nliberty\nlibrary\nlicense\nlife\nlift\nlight\nlike\nlimb\nlimit\nlink\nlion\nliquid\nlist\nlittle\nlive\nlizard\nload\nloan\nlobster\nlocal\nlock\nlogic\nlonely\nlong\nloop\nlottery\nloud\nlounge\nlove\nloyal\nlucky\nluggage\nlumber\nlunar\nlunch\nluxury\nlyrics\nmachine\nmad\nmagic\nmagnet\nmaid\nmail\nmain\nmajor\nmake\nmammal\nman\nmanage\nmandate\nmango\nmansion\nmanual\nmaple\nmarble\nmarch\nmargin\nmarine\nmarket\nmarriage\nmask\nmass\nmaster\nmatch\nmaterial\nmath\nmatrix\nmatter\nmaximum\nmaze\nmeadow\nmean\nmeasure\nmeat\nmechanic\nmedal\nmedia\nmelody\nmelt\nmember\nmemory\nmention\nmenu\nmercy\nmerge\nmerit\nmerry\nmesh\nmessage\nmetal\nmethod\nmiddle\nmidnight\nmilk\nmillion\nmimic\nmind\nminimum\nminor\nminute\nmiracle\nmirror\nmisery\nmiss\nmistake\nmix\nmixed\nmixture\nmobile\nmodel\nmodify\nmom\nmoment\nmonitor\nmonkey\nmonster\nmonth\nmoon\nmoral\nmore\nmorning\nmosquito\nmother\nmotion\nmotor\nmountain\nmouse\nmove\nmovie\nmuch\nmuffin\nmule\nmultiply\nmuscle\nmuseum\nmushroom\nmusic\nmust\nmutual\nmyself\nmystery\nmyth\nnaive\nname\nnapkin\nnarrow\nnasty\nnation\nnature\nnear\nneck\nneed\nnegative\nneglect\nneither\nnephew\nnerve\nnest\nnet\nnetwork\nneutral\nnever\nnews\nnext\nnice\nnight\nnoble\nnoise\nnominee\nnoodle\nnormal\nnorth\nnose\nnotable\nnote\nnothing\nnotice\nnovel\nnow\nnuclear\nnumber\nnurse\nnut\noak\nobey\nobject\noblige\nobscure\nobserve\nobtain\nobvious\noccur\nocean\noctober\nodor\noff\noffer\noffice\noften\noil\nokay\nold\nolive\nolympic\nomit\nonce\none\nonion\nonline\nonly\nopen\nopera\nopinion\noppose\noption\norange\norbit\norchard\norder\nordinary\norgan\norient\noriginal\norphan\nostrich\nother\noutdoor\nouter\noutput\noutside\noval\noven\nover\nown\nowner\noxygen\noyster\nozone\npact\npaddle\npage\npair\npalace\npalm\npanda\npanel\npanic\npanther\npaper\nparade\nparent\npark\nparrot\nparty\npass\npatch\npath\npatient\npatrol\npattern\npause\npave\npayment\npeace\npeanut\npear\npeasant\npelican\npen\npenalty\npencil\npeople\npepper\nperfect\npermit\nperson\npet\nphone\nphoto\nphrase\nphysical\npiano\npicnic\npicture\npiece\npig\npigeon\npill\npilot\npink\npioneer\npipe\npistol\npitch\npizza\nplace\nplanet\nplastic\nplate\nplay\nplease\npledge\npluck\nplug\nplunge\npoem\npoet\npoint\npolar\npole\npolice\npond\npony\npool\npopular\nportion\nposition\npossible\npost\npotato\npottery\npoverty\npowder\npower\npractice\npraise\npredict\nprefer\nprepare\npresent\npretty\nprevent\nprice\npride\nprimary\nprint\npriority\nprison\nprivate\nprize\nproblem\nprocess\nproduce\nprofit\nprogram\nproject\npromote\nproof\nproperty\nprosper\nprotect\nproud\nprovide\npublic\npudding\npull\npulp\npulse\npumpkin\npunch\npupil\npuppy\npurchase\npurity\npurpose\npurse\npush\nput\npuzzle\npyramid\nquality\nquantum\nquarter\nquestion\nquick\nquit\nquiz\nquote\nrabbit\nraccoon\nrace\nrack\nradar\nradio\nrail\nrain\nraise\nrally\nramp\nranch\nrandom\nrange\nrapid\nrare\nrate\nrather\nraven\nraw\nrazor\nready\nreal\nreason\nrebel\nrebuild\nrecall\nreceive\nrecipe\nrecord\nrecycle\nreduce\nreflect\nreform\nrefuse\nregion\nregret\nregular\nreject\nrelax\nrelease\nrelief\nrely\nremain\nremember\nremind\nremove\nrender\nrenew\nrent\nreopen\nrepair\nrepeat\nreplace\nreport\nrequire\nrescue\nresemble\nresist\nresource\nresponse\nresult\nretire\nretreat\nreturn\nreunion\nreveal\nreview\nreward\nrhythm\nrib\nribbon\nrice\nrich\nride\nridge\nrifle\nright\nrigid\nring\nriot\nripple\nrisk\nritual\nrival\nriver\nroad\nroast\nrobot\nrobust\nrocket\nromance\nroof\nrookie\nroom\nrose\nrotate\nrough\nround\nroute\nroyal\nrubber\nrude\nrug\nrule\nrun\nrunway\nrural\nsad\nsaddle\nsadness\nsafe\nsail\nsalad\nsalmon\nsalon\nsalt\nsalute\nsame\nsample\nsand\nsatisfy\nsatoshi\nsauce\nsausage\nsave\nsay\nscale\nscan\nscare\nscatter\nscene\nscheme\nschool\nscience\nscissors\nscorpion\nscout\nscrap\nscreen\nscript\nscrub\nsea\nsearch\nseason\nseat\nsecond\nsecret\nsection\nsecurity\nseed\nseek\nsegment\nselect\nsell\nseminar\nsenior\nsense\nsentence\nseries\nservice\nsession\nsettle\nsetup\nseven\nshadow\nshaft\nshallow\nshare\nshed\nshell\nsheriff\nshield\nshift\nshine\nship\nshiver\nshock\nshoe\nshoot\nshop\nshort\nshoulder\nshove\nshrimp\nshrug\nshuffle\nshy\nsibling\nsick\nside\nsiege\nsight\nsign\nsilent\nsilk\nsilly\nsilver\nsimilar\nsimple\nsince\nsing\nsiren\nsister\nsituate\nsix\nsize\nskate\nsketch\nski\nskill\nskin\nskirt\nskull\nslab\nslam\nsleep\nslender\nslice\nslide\nslight\nslim\nslogan\nslot\nslow\nslush\nsmall\nsmart\nsmile\nsmoke\nsmooth\nsnack\nsnake\nsnap\nsniff\nsnow\nsoap\nsoccer\nsocial\nsock\nsoda\nsoft\nsolar\nsoldier\nsolid\nsolution\nsolve\nsomeone\nsong\nsoon\nsorry\nsort\nsoul\nsound\nsoup\nsource\nsouth\nspace\nspare\nspatial\nspawn\nspeak\nspecial\nspeed\nspell\nspend\nsphere\nspice\nspider\nspike\nspin\nspirit\nsplit\nspoil\nsponsor\nspoon\nsport\nspot\nspray\nspread\nspring\nspy\nsquare\nsqueeze\nsquirrel\nstable\nstadium\nstaff\nstage\nstairs\nstamp\nstand\nstart\nstate\nstay\nsteak\nsteel\nstem\nstep\nstereo\nstick\nstill\nsting\nstock\nstomach\nstone\nstool\nstory\nstove\nstrategy\nstreet\nstrike\nstrong\nstruggle\nstudent\nstuff\nstumble\nstyle\nsubject\nsubmit\nsubway\nsuccess\nsuch\nsudden\nsuffer\nsugar\nsuggest\nsuit\nsummer\nsun\nsunny\nsunset\nsuper\nsupply\nsupreme\nsure\nsurface\nsurge\nsurprise\nsurround\nsurvey\nsuspect\nsustain\nswallow\nswamp\nswap\nswarm\nswear\nsweet\nswift\nswim\nswing\nswitch\nsword\nsymbol\nsymptom\nsyrup\nsystem\ntable\ntackle\ntag\ntail\ntalent\ntalk\ntank\ntape\ntarget\ntask\ntaste\ntattoo\ntaxi\nteach\nteam\ntell\nten\ntenant\ntennis\ntent\nterm\ntest\ntext\nthank\nthat\ntheme\nthen\ntheory\nthere\nthey\nthing\nthis\nthought\nthree\nthrive\nthrow\nthumb\nthunder\nticket\ntide\ntiger\ntilt\ntimber\ntime\ntiny\ntip\ntired\ntissue\ntitle\ntoast\ntobacco\ntoday\ntoddler\ntoe\ntogether\ntoilet\ntoken\ntomato\ntomorrow\ntone\ntongue\ntonight\ntool\ntooth\ntop\ntopic\ntopple\ntorch\ntornado\ntortoise\ntoss\ntotal\ntourist\ntoward\ntower\ntown\ntoy\ntrack\ntrade\ntraffic\ntragic\ntrain\ntransfer\ntrap\ntrash\ntravel\ntray\ntreat\ntree\ntrend\ntrial\ntribe\ntrick\ntrigger\ntrim\ntrip\ntrophy\ntrouble\ntruck\ntrue\ntruly\ntrumpet\ntrust\ntruth\ntry\ntube\ntuition\ntumble\ntuna\ntunnel\nturkey\nturn\nturtle\ntwelve\ntwenty\ntwice\ntwin\ntwist\ntwo\ntype\ntypical\nugly\numbrella\nunable\nunaware\nuncle\nuncover\nunder\nundo\nunfair\nunfold\nunhappy\nuniform\nunique\nunit\nuniverse\nunknown\nunlock\nuntil\nunusual\nunveil\nupdate\nupgrade\nuphold\nupon\nupper\nupset\nurban\nurge\nusage\nuse\nused\nuseful\nuseless\nusual\nutility\nvacant\nvacuum\nvague\nvalid\nvalley\nvalve\nvan\nvanish\nvapor\nvarious\nvast\nvault\nvehicle\nvelvet\nvendor\nventure\nvenue\nverb\nverify\nversion\nvery\nvessel\nveteran\nviable\nvibrant\nvicious\nvictory\nvideo\nview\nvillage\nvintage\nviolin\nvirtual\nvirus\nvisa\nvisit\nvisual\nvital\nvivid\nvocal\nvoice\nvoid\nvolcano\nvolume\nvote\nvoyage\nwage\nwagon\nwait\nwalk\nwall\nwalnut\nwant\nwarfare\nwarm\nwarrior\nwash\nwasp\nwaste\nwater\nwave\nway\nwealth\nweapon\nwear\nweasel\nweather\nweb\nwedding\nweekend\nweird\nwelcome\nwest\nwet\nwhale\nwhat\nwheat\nwheel\nwhen\nwhere\nwhip\nwhisper\nwide\nwidth\nwife\nwild\nwill\nwin\nwindow\nwine\nwing\nwink\nwinner\nwinter\nwire\nwisdom\nwise\nwish\nwitness\nwolf\nwoman\nwonder\nwood\nwool\nword\nwork\nworld\nworry\nworth\nwrap\nwreck\nwrestle\nwrist\nwrite\nwrong\nyard\nyear\nyellow\nyou\nyoung\nyouth\nzebra\nzero\nzone\nzoo`.split('\\n');\n","// Helper to communicate with the SharedWorker message broker\n// Provides a clean API for iframe-to-iframe communication\n\ninterface BrokerMessage {\n  type: string;\n  fromIframe: string;\n  toIframe?: string;\n  data: any;\n  messageId?: string; // For request-response correlation\n  isResponse?: boolean; // To distinguish responses from regular messages\n}\n\ninterface MessageHandler {\n  (message: BrokerMessage, respond?: (responseData: any) => void): void;\n}\n\ninterface PendingRequest {\n  resolve: (value: any) => void;\n  reject: (reason?: any) => void;\n  timeout: ReturnType<typeof setTimeout>;\n}\n\nexport class MessageBroker {\n  private worker: SharedWorker | null = null;\n  private port: MessagePort | null = null;\n  private windowId: string;\n  private iframeType: string;\n  private messageHandlers: Map<string, MessageHandler[]> = new Map();\n  private pendingRequests: Map<string, PendingRequest> = new Map();\n  private isConnected: boolean = false;\n  private readonly REQUEST_TIMEOUT = 30000; // 30 second timeout\n\n  constructor(windowId: string, iframeType: string) {\n    this.windowId = windowId;\n    this.iframeType = iframeType;\n  }\n\n  async connect(): Promise<void> {\n    if (this.isConnected) {\n      return;\n    }\n\n    try {\n      // Create SharedWorker connection with windowId in query string\n      this.worker = new SharedWorker(`../workers/broker-worker.js?window=${this.windowId}`);\n      this.port = this.worker.port;\n\n      // Set up message handling\n      this.port.onmessage = (event) => {\n        this.handleIncomingMessage(event.data);\n      };\n\n      this.port.onmessageerror = (error) => {\n        console.error(`Broker: Connection error for ${this.iframeType}:`, error);\n        this.isConnected = false;\n      };\n\n      // Start the port\n      this.port.start();\n\n      // Send init message\n      this.port.postMessage({\n        type: 'init',\n        iframeType: this.iframeType,\n      });\n\n      this.isConnected = true;\n      console.debug(`Broker: Connected ${this.iframeType}`);\n    } catch (error) {\n      console.error(`Broker: Failed to connect ${this.iframeType}:`, error);\n      this.isConnected = false;\n      throw error;\n    }\n  }\n\n  private handleIncomingMessage(message: BrokerMessage) {\n    console.debug(`Broker: ${this.iframeType} received message:`, message);\n\n    // Handle responses to pending requests\n    if (message.isResponse && message.messageId) {\n      // Responses should always be directed to a particular iframe\n      if (!message.toIframe) {\n        return;\n      }\n\n      // Ignore responses to messages that are not directed to this iframe\n      if (message.toIframe !== this.iframeType) {\n        return;\n      }\n\n      const pendingRequest = this.pendingRequests.get(message.messageId);\n      if (pendingRequest) {\n        clearTimeout(pendingRequest.timeout);\n        this.pendingRequests.delete(message.messageId);\n        pendingRequest.resolve(message.data);\n        return;\n      } else {\n        console.warn(`Broker: Received response for unknown request ${message.messageId}`);\n        return;\n      }\n    }\n\n    // Handle regular messages\n    const handlers = this.messageHandlers.get(message.type);\n    if (handlers) {\n      handlers.forEach((handler) => {\n        try {\n          // Create respond function if this message has a messageId (indicating it's a request)\n          const respond = message.messageId\n            ? (responseData: any) => {\n                this.sendResponse(message.messageId!, message.fromIframe, responseData);\n              }\n            : undefined;\n\n          handler(message, respond);\n        } catch (error) {\n          console.error(`Broker: Error in message handler for ${message.type}:`, error);\n          // If this was a request and there was an error, send error response\n          if (message.messageId) {\n            this.sendResponse(\n              message.messageId,\n              message.fromIframe,\n              null,\n              error instanceof Error ? error.message : String(error)\n            );\n          }\n        }\n      });\n    } else {\n      console.warn(`Broker: No handlers registered for message type: ${message.type}`);\n      // If this was a request with no handler, send error response\n      if (message.messageId) {\n        this.sendResponse(\n          message.messageId,\n          message.fromIframe,\n          null,\n          `No handler for message type: ${message.type}`\n        );\n      }\n    }\n  }\n\n  private async sendResponse(\n    messageId: string,\n    respondingTo: string,\n    responseData: any,\n    error?: string\n  ): Promise<void> {\n    if (!this.isConnected) {\n      await this.connect();\n    }\n\n    if (!this.port) {\n      throw new Error('Broker: Not connected');\n    }\n\n    const response: BrokerMessage = {\n      type: 'response',\n      fromIframe: this.iframeType,\n      toIframe: respondingTo,\n      data: error ? { error } : responseData,\n      messageId,\n      isResponse: true,\n    };\n\n    console.debug(`Broker: ${this.iframeType} sending response:`, response);\n    this.port.postMessage(response);\n  }\n\n  async send(type: string, data: any, toIframe?: string): Promise<void> {\n    if (!this.isConnected) {\n      await this.connect();\n    }\n\n    if (!this.port) {\n      throw new Error('Broker: Not connected');\n    }\n\n    const message: BrokerMessage = {\n      type,\n      fromIframe: this.iframeType,\n      data,\n      ...(toIframe !== undefined && { toIframe }),\n    };\n\n    console.debug(`Broker: ${this.iframeType} sending message:`, message);\n    this.port.postMessage(message);\n  }\n\n  async request<T = any>(type: string, data: any, toIframe: string): Promise<T> {\n    if (!toIframe) {\n      throw new Error('Broker: request() requires a target iframe type');\n    }\n\n    if (!this.isConnected) {\n      await this.connect();\n    }\n\n    if (!this.port) {\n      throw new Error('Broker: Not connected');\n    }\n\n    const messageId = crypto.randomUUID();\n\n    // Create promise for the response\n    const promise = new Promise<T>((resolve, reject) => {\n      // Set up timeout\n      const timeout = setTimeout(() => {\n        this.pendingRequests.delete(messageId);\n        reject(new Error(`Request timeout after ${this.REQUEST_TIMEOUT}ms`));\n      }, this.REQUEST_TIMEOUT);\n\n      // Store the pending request\n      this.pendingRequests.set(messageId, {\n        resolve: (value: any) => {\n          if (value && value.error) {\n            reject(new Error(value.error));\n          } else {\n            resolve(value);\n          }\n        },\n        reject,\n        timeout,\n      });\n    });\n\n    const message: BrokerMessage = {\n      type,\n      fromIframe: this.iframeType,\n      toIframe,\n      data,\n      messageId,\n    };\n\n    console.debug(`Broker: ${this.iframeType} sending request:`, message);\n    this.port.postMessage(message);\n\n    return promise;\n  }\n\n  on(messageType: string, handler: MessageHandler): void {\n    if (!this.messageHandlers.has(messageType)) {\n      this.messageHandlers.set(messageType, []);\n    }\n    this.messageHandlers.get(messageType)!.push(handler);\n    console.debug(`Broker: ${this.iframeType} registered handler for ${messageType}`);\n  }\n\n  off(messageType: string, handler: MessageHandler): void {\n    const handlers = this.messageHandlers.get(messageType);\n    if (handlers) {\n      const index = handlers.indexOf(handler);\n      if (index > -1) {\n        handlers.splice(index, 1);\n        console.debug(`Broker: ${this.iframeType} removed handler for ${messageType}`);\n      }\n    }\n  }\n\n  disconnect(): void {\n    // Clear all pending requests\n    this.pendingRequests.forEach((request) => {\n      clearTimeout(request.timeout);\n      request.reject(new Error('Broker disconnected'));\n    });\n    this.pendingRequests.clear();\n\n    if (this.port) {\n      this.port.close();\n      this.port = null;\n    }\n    this.worker = null;\n    this.isConnected = false;\n    this.messageHandlers.clear();\n    console.debug(`Broker: ${this.iframeType} disconnected`);\n  }\n\n  isReady(): boolean {\n    return this.isConnected;\n  }\n}\n\n// Utility function to extract window ID from URL fragment\nexport function getWindowIdFromUrl(): string | null {\n  const fragment = window.location.hash.substring(1); // Remove the #\n  if (fragment.startsWith('window=')) {\n    return fragment.substring(7); // Remove 'window='\n  }\n  return null;\n}\n\n// Utility function to generate a random window ID\nexport function generateWindowId(): string {\n  return (\n    'win_' +\n    Math.random().toString(36).substring(2, 15) +\n    Math.random().toString(36).substring(2, 15)\n  );\n}\n","let decoder\ntry {\n\tdecoder = new TextDecoder()\n} catch(error) {}\nlet src\nlet srcEnd\nlet position = 0\nlet alreadySet\nconst EMPTY_ARRAY = []\nconst LEGACY_RECORD_INLINE_ID = 105\nconst RECORD_DEFINITIONS_ID = 0xdffe\nconst RECORD_INLINE_ID = 0xdfff // temporary first-come first-serve tag // proposed tag: 0x7265 // 're'\nconst BUNDLED_STRINGS_ID = 0xdff9\nconst PACKED_TABLE_TAG_ID = 51\nconst PACKED_REFERENCE_TAG_ID = 6\nconst STOP_CODE = {}\nlet maxArraySize = 112810000 // This is the maximum array size in V8. We would potentially detect and set it higher\n// for JSC, but this is pretty large and should be sufficient for most use cases\nlet maxMapSize = 16810000 // JavaScript has a fixed maximum map size of about 16710000, but JS itself enforces this,\n// so we don't need to\n\nlet maxObjectSize = 16710000; // This is the maximum number of keys in a Map. It takes over a minute to create this\n// many keys in an object, so also probably a reasonable choice there.\nlet strings = EMPTY_ARRAY\nlet stringPosition = 0\nlet currentDecoder = {}\nlet currentStructures\nlet srcString\nlet srcStringStart = 0\nlet srcStringEnd = 0\nlet bundledStrings\nlet referenceMap\nlet currentExtensions = []\nlet currentExtensionRanges = []\nlet packedValues\nlet dataView\nlet restoreMapsAsObject\nlet defaultOptions = {\n\tuseRecords: false,\n\tmapsAsObjects: true\n}\nlet sequentialMode = false\nlet inlineObjectReadThreshold = 2;\nvar BlockedFunction // we use search and replace to change the next call to BlockedFunction to avoid CSP issues for\n// no-eval build\ntry {\n\tnew Function('')\n} catch(error) {\n\t// if eval variants are not supported, do not create inline object readers ever\n\tinlineObjectReadThreshold = Infinity\n}\n\n\n\nexport class Decoder {\n\tconstructor(options) {\n\t\tif (options) {\n\t\t\tif ((options.keyMap || options._keyMap) && !options.useRecords) {\n\t\t\t\toptions.useRecords = false\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\t}\n\t\t\tif (options.useRecords === false && options.mapsAsObjects === undefined)\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\tif (options.getStructures)\n\t\t\t\toptions.getShared = options.getStructures\n\t\t\tif (options.getShared && !options.structures)\n\t\t\t\t(options.structures = []).uninitialized = true // this is what we use to denote an uninitialized structures\n\t\t\tif (options.keyMap) {\n\t\t\t\tthis.mapKey = new Map()\n\t\t\t\tfor (let [k,v] of Object.entries(options.keyMap)) this.mapKey.set(v,k)\n\t\t\t}\n\t\t}\n\t\tObject.assign(this, options)\n\t}\n\t/*\n\tdecodeKey(key) {\n\t\treturn this.keyMap\n\t\t\t? Object.keys(this.keyMap)[Object.values(this.keyMap).indexOf(key)] || key\n\t\t\t: key\n\t}\n\t*/\n\tdecodeKey(key) {\n\t\treturn this.keyMap ? this.mapKey.get(key) || key : key\n\t}\n\t\n\tencodeKey(key) {\n\t\treturn this.keyMap && this.keyMap.hasOwnProperty(key) ? this.keyMap[key] : key\n\t}\n\n\tencodeKeys(rec) {\n\t\tif (!this._keyMap) return rec\n\t\tlet map = new Map()\n\t\tfor (let [k,v] of Object.entries(rec)) map.set((this._keyMap.hasOwnProperty(k) ? this._keyMap[k] : k), v)\n\t\treturn map\n\t}\n\n\tdecodeKeys(map) {\n\t\tif (!this._keyMap || map.constructor.name != 'Map') return map\n\t\tif (!this._mapKey) {\n\t\t\tthis._mapKey = new Map()\n\t\t\tfor (let [k,v] of Object.entries(this._keyMap)) this._mapKey.set(v,k)\n\t\t}\n\t\tlet res = {}\n\t\t//map.forEach((v,k) => res[Object.keys(this._keyMap)[Object.values(this._keyMap).indexOf(k)] || k] = v)\n\t\tmap.forEach((v,k) => res[safeKey(this._mapKey.has(k) ? this._mapKey.get(k) : k)] =  v)\n\t\treturn res\n\t}\n\t\n\tmapDecode(source, end) {\n\t\n\t\tlet res = this.decode(source)\n\t\tif (this._keyMap) { \n\t\t\t//Experiemntal support for Optimised KeyMap  decoding \n\t\t\tswitch (res.constructor.name) {\n\t\t\t\tcase 'Array': return res.map(r => this.decodeKeys(r))\n\t\t\t\t//case 'Map': return this.decodeKeys(res)\n\t\t\t}\n\t\t}\n\t\treturn res\n\t}\n\n\tdecode(source, end) {\n\t\tif (src) {\n\t\t\t// re-entrant execution, save the state and restore it after we do this decode\n\t\t\treturn saveState(() => {\n\t\t\t\tclearSource()\n\t\t\t\treturn this ? this.decode(source, end) : Decoder.prototype.decode.call(defaultOptions, source, end)\n\t\t\t})\n\t\t}\n\t\tsrcEnd = end > -1 ? end : source.length\n\t\tposition = 0\n\t\tstringPosition = 0\n\t\tsrcStringEnd = 0\n\t\tsrcString = null\n\t\tstrings = EMPTY_ARRAY\n\t\tbundledStrings = null\n\t\tsrc = source\n\t\t// this provides cached access to the data view for a buffer if it is getting reused, which is a recommend\n\t\t// technique for getting data from a database where it can be copied into an existing buffer instead of creating\n\t\t// new ones\n\t\ttry {\n\t\t\tdataView = source.dataView || (source.dataView = new DataView(source.buffer, source.byteOffset, source.byteLength))\n\t\t} catch(error) {\n\t\t\t// if it doesn't have a buffer, maybe it is the wrong type of object\n\t\t\tsrc = null\n\t\t\tif (source instanceof Uint8Array)\n\t\t\t\tthrow error\n\t\t\tthrow new Error('Source must be a Uint8Array or Buffer but was a ' + ((source && typeof source == 'object') ? source.constructor.name : typeof source))\n\t\t}\n\t\tif (this instanceof Decoder) {\n\t\t\tcurrentDecoder = this\n\t\t\tpackedValues = this.sharedValues &&\n\t\t\t\t(this.pack ? new Array(this.maxPrivatePackedValues || 16).concat(this.sharedValues) :\n\t\t\t\tthis.sharedValues)\n\t\t\tif (this.structures) {\n\t\t\t\tcurrentStructures = this.structures\n\t\t\t\treturn checkedRead()\n\t\t\t} else if (!currentStructures || currentStructures.length > 0) {\n\t\t\t\tcurrentStructures = []\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentDecoder = defaultOptions\n\t\t\tif (!currentStructures || currentStructures.length > 0)\n\t\t\t\tcurrentStructures = []\n\t\t\tpackedValues = null\n\t\t}\n\t\treturn checkedRead()\n\t}\n\tdecodeMultiple(source, forEach) {\n\t\tlet values, lastPosition = 0\n\t\ttry {\n\t\t\tlet size = source.length\n\t\t\tsequentialMode = true\n\t\t\tlet value = this ? this.decode(source, size) : defaultDecoder.decode(source, size)\n\t\t\tif (forEach) {\n\t\t\t\tif (forEach(value) === false) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tif (forEach(checkedRead()) === false) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalues = [ value ]\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tvalues.push(checkedRead())\n\t\t\t\t}\n\t\t\t\treturn values\n\t\t\t}\n\t\t} catch(error) {\n\t\t\terror.lastPosition = lastPosition\n\t\t\terror.values = values\n\t\t\tthrow error\n\t\t} finally {\n\t\t\tsequentialMode = false\n\t\t\tclearSource()\n\t\t}\n\t}\n}\nexport function getPosition() {\n\treturn position\n}\nexport function checkedRead() {\n\ttry {\n\t\tlet result = read()\n\t\tif (bundledStrings) {\n\t\t\tif (position >= bundledStrings.postBundlePosition) {\n\t\t\t\tlet error = new Error('Unexpected bundle position');\n\t\t\t\terror.incomplete = true;\n\t\t\t\tthrow error\n\t\t\t}\n\t\t\t// bundled strings to skip past\n\t\t\tposition = bundledStrings.postBundlePosition;\n\t\t\tbundledStrings = null;\n\t\t}\n\n\t\tif (position == srcEnd) {\n\t\t\t// finished reading this source, cleanup references\n\t\t\tcurrentStructures = null\n\t\t\tsrc = null\n\t\t\tif (referenceMap)\n\t\t\t\treferenceMap = null\n\t\t} else if (position > srcEnd) {\n\t\t\t// over read\n\t\t\tlet error = new Error('Unexpected end of CBOR data')\n\t\t\terror.incomplete = true\n\t\t\tthrow error\n\t\t} else if (!sequentialMode) {\n\t\t\tthrow new Error('Data read, but end of buffer not reached')\n\t\t}\n\t\t// else more to read, but we are reading sequentially, so don't clear source yet\n\t\treturn result\n\t} catch(error) {\n\t\tclearSource()\n\t\tif (error instanceof RangeError || error.message.startsWith('Unexpected end of buffer')) {\n\t\t\terror.incomplete = true\n\t\t}\n\t\tthrow error\n\t}\n}\n\nexport function read() {\n\tlet token = src[position++]\n\tlet majorType = token >> 5\n\ttoken = token & 0x1f\n\tif (token > 0x17) {\n\t\tswitch (token) {\n\t\t\tcase 0x18:\n\t\t\t\ttoken = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0x19:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\treturn getFloat16()\n\t\t\t\t}\n\t\t\t\ttoken = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0x1a:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\tlet value = dataView.getFloat32(position)\n\t\t\t\t\tif (currentDecoder.useFloat32 > 2) {\n\t\t\t\t\t\t// this does rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\tlet multiplier = mult10[((src[position] & 0x7f) << 1) | (src[position + 1] >> 7)]\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\treturn ((multiplier * value + (value > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n\t\t\t\t\t}\n\t\t\t\t\tposition += 4\n\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\ttoken = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t\tcase 0x1b:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\tlet value = dataView.getFloat64(position)\n\t\t\t\t\tposition += 8\n\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\tif (majorType > 1) {\n\t\t\t\t\tif (dataView.getUint32(position) > 0)\n\t\t\t\t\t\tthrow new Error('JavaScript does not support arrays, maps, or strings with length over 4294967295')\n\t\t\t\t\ttoken = dataView.getUint32(position + 4)\n\t\t\t\t} else if (currentDecoder.int64AsNumber) {\n\t\t\t\t\ttoken = dataView.getUint32(position) * 0x100000000\n\t\t\t\t\ttoken += dataView.getUint32(position + 4)\n\t\t\t\t} else\n\t\t\t\t\ttoken = dataView.getBigUint64(position)\n\t\t\t\tposition += 8\n\t\t\t\tbreak\n\t\t\tcase 0x1f: \n\t\t\t\t// indefinite length\n\t\t\t\tswitch(majorType) {\n\t\t\t\t\tcase 2: // byte string\n\t\t\t\t\tcase 3: // text string\n\t\t\t\t\t\tthrow new Error('Indefinite length not supported for byte or text strings')\n\t\t\t\t\tcase 4: // array\n\t\t\t\t\t\tlet array = []\n\t\t\t\t\t\tlet value, i = 0\n\t\t\t\t\t\twhile ((value = read()) != STOP_CODE) {\n\t\t\t\t\t\t\tif (i >= maxArraySize) throw new Error(`Array length exceeds ${maxArraySize}`)\n\t\t\t\t\t\t\tarray[i++] = value\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn majorType == 4 ? array : majorType == 3 ? array.join('') : Buffer.concat(array)\n\t\t\t\t\tcase 5: // map\n\t\t\t\t\t\tlet key\n\t\t\t\t\t\tif (currentDecoder.mapsAsObjects) {\n\t\t\t\t\t\t\tlet object = {}\n\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\tif (currentDecoder.keyMap) {\n\t\t\t\t\t\t\t\twhile((key = read()) != STOP_CODE) {\n\t\t\t\t\t\t\t\t\tif (i++ >= maxMapSize) throw new Error(`Property count exceeds ${maxMapSize}`)\n\t\t\t\t\t\t\t\t\tobject[safeKey(currentDecoder.decodeKey(key))] = read()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\twhile ((key = read()) != STOP_CODE) {\n\t\t\t\t\t\t\t\t\tif (i++ >= maxMapSize) throw new Error(`Property count exceeds ${maxMapSize}`)\n\t\t\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn object\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (restoreMapsAsObject) {\n\t\t\t\t\t\t\t\tcurrentDecoder.mapsAsObjects = true\n\t\t\t\t\t\t\t\trestoreMapsAsObject = false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet map = new Map()\n\t\t\t\t\t\t\tif (currentDecoder.keyMap) {\n\t\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\t\twhile((key = read()) != STOP_CODE) {\n\t\t\t\t\t\t\t\t\tif (i++ >= maxMapSize) {\n\t\t\t\t\t\t\t\t\t\tthrow new Error(`Map size exceeds ${maxMapSize}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmap.set(currentDecoder.decodeKey(key), read())\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\t\twhile ((key = read()) != STOP_CODE) {\n\t\t\t\t\t\t\t\t\tif (i++ >= maxMapSize) {\n\t\t\t\t\t\t\t\t\t\tthrow new Error(`Map size exceeds ${maxMapSize}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmap.set(key, read())\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn map\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\treturn STOP_CODE\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Invalid major type for indefinite length ' + majorType)\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unknown token ' + token)\n\t\t}\n\t}\n\tswitch (majorType) {\n\t\tcase 0: // positive int\n\t\t\treturn token\n\t\tcase 1: // negative int\n\t\t\treturn ~token\n\t\tcase 2: // buffer\n\t\t\treturn readBin(token)\n\t\tcase 3: // string\n\t\t\tif (srcStringEnd >= position) {\n\t\t\t\treturn srcString.slice(position - srcStringStart, (position += token) - srcStringStart)\n\t\t\t}\n\t\t\tif (srcStringEnd == 0 && srcEnd < 140 && token < 32) {\n\t\t\t\t// for small blocks, avoiding the overhead of the extract call is helpful\n\t\t\t\tlet string = token < 16 ? shortStringInJS(token) : longStringInJS(token)\n\t\t\t\tif (string != null)\n\t\t\t\t\treturn string\n\t\t\t}\n\t\t\treturn readFixedString(token)\n\t\tcase 4: // array\n\t\t\tif (token >= maxArraySize) throw new Error(`Array length exceeds ${maxArraySize}`)\n\t\t\tlet array = new Array(token)\n\t\t  //if (currentDecoder.keyMap) for (let i = 0; i < token; i++) array[i] = currentDecoder.decodeKey(read())\t\n\t\t\t//else \n\t\t\tfor (let i = 0; i < token; i++) array[i] = read()\n\t\t\treturn array\n\t\tcase 5: // map\n\t\t\tif (token >= maxMapSize) throw new Error(`Map size exceeds ${maxArraySize}`)\n\t\t\tif (currentDecoder.mapsAsObjects) {\n\t\t\t\tlet object = {}\n\t\t\t\tif (currentDecoder.keyMap) for (let i = 0; i < token; i++) object[safeKey(currentDecoder.decodeKey(read()))] = read()\n\t\t\t\telse for (let i = 0; i < token; i++) object[safeKey(read())] = read()\n\t\t\t\treturn object\n\t\t\t} else {\n\t\t\t\tif (restoreMapsAsObject) {\n\t\t\t\t\tcurrentDecoder.mapsAsObjects = true\n\t\t\t\t\trestoreMapsAsObject = false\n\t\t\t\t}\n\t\t\t\tlet map = new Map()\n\t\t\t\tif (currentDecoder.keyMap) for (let i = 0; i < token; i++) map.set(currentDecoder.decodeKey(read()),read())\n\t\t\t\telse for (let i = 0; i < token; i++) map.set(read(), read())\n\t\t\t\treturn map\n\t\t\t}\n\t\tcase 6: // extension\n\t\t\tif (token >= BUNDLED_STRINGS_ID) {\n\t\t\t\tlet structure = currentStructures[token & 0x1fff] // check record structures first\n\t\t\t\t// At some point we may provide an option for dynamic tag assignment with a range like token >= 8 && (token < 16 || (token > 0x80 && token < 0xc0) || (token > 0x130 && token < 0x4000))\n\t\t\t\tif (structure) {\n\t\t\t\t\tif (!structure.read) structure.read = createStructureReader(structure)\n\t\t\t\t\treturn structure.read()\n\t\t\t\t}\n\t\t\t\tif (token < 0x10000) {\n\t\t\t\t\tif (token == RECORD_INLINE_ID) { // we do a special check for this so that we can keep the\n\t\t\t\t\t\t// currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n\t\t\t\t\t\tlet length = readJustLength()\n\t\t\t\t\t\tlet id = read()\n\t\t\t\t\t\tlet structure = read()\n\t\t\t\t\t\trecordDefinition(id, structure)\n\t\t\t\t\t\tlet object = {}\n\t\t\t\t\t\tif (currentDecoder.keyMap) for (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\tlet key = currentDecoder.decodeKey(structure[i - 2])\n\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse for (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\tlet key = structure[i - 2]\n\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn object\n\t\t\t\t\t}\n\t\t\t\t\telse if (token == RECORD_DEFINITIONS_ID) {\n\t\t\t\t\t\tlet length = readJustLength()\n\t\t\t\t\t\tlet id = read()\n\t\t\t\t\t\tfor (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\trecordDefinition(id++, read())\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn read()\n\t\t\t\t\t} else if (token == BUNDLED_STRINGS_ID) {\n\t\t\t\t\t\treturn readBundleExt()\n\t\t\t\t\t}\n\t\t\t\t\tif (currentDecoder.getShared) {\n\t\t\t\t\t\tloadShared()\n\t\t\t\t\t\tstructure = currentStructures[token & 0x1fff]\n\t\t\t\t\t\tif (structure) {\n\t\t\t\t\t\t\tif (!structure.read)\n\t\t\t\t\t\t\t\tstructure.read = createStructureReader(structure)\n\t\t\t\t\t\t\treturn structure.read()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet extension = currentExtensions[token]\n\t\t\tif (extension) {\n\t\t\t\tif (extension.handlesRead)\n\t\t\t\t\treturn extension(read)\n\t\t\t\telse\n\t\t\t\t\treturn extension(read())\n\t\t\t} else {\n\t\t\t\tlet input = read()\n\t\t\t\tfor (let i = 0; i < currentExtensionRanges.length; i++) {\n\t\t\t\t\tlet value = currentExtensionRanges[i](token, input)\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\treturn new Tag(input, token)\n\t\t\t}\n\t\tcase 7: // fixed value\n\t\t\tswitch (token) {\n\t\t\t\tcase 0x14: return false\n\t\t\t\tcase 0x15: return true\n\t\t\t\tcase 0x16: return null\n\t\t\t\tcase 0x17: return; // undefined\n\t\t\t\tcase 0x1f:\n\t\t\t\tdefault:\n\t\t\t\t\tlet packedValue = (packedValues || getPackedValues())[token]\n\t\t\t\t\tif (packedValue !== undefined)\n\t\t\t\t\t\treturn packedValue\n\t\t\t\t\tthrow new Error('Unknown token ' + token)\n\t\t\t}\n\t\tdefault: // negative int\n\t\t\tif (isNaN(token)) {\n\t\t\t\tlet error = new Error('Unexpected end of CBOR data')\n\t\t\t\terror.incomplete = true\n\t\t\t\tthrow error\n\t\t\t}\n\t\t\tthrow new Error('Unknown CBOR token ' + token)\n\t}\n}\nconst validName = /^[a-zA-Z_$][a-zA-Z\\d_$]*$/\nfunction createStructureReader(structure) {\n\tif (!structure) throw new Error('Structure is required in record definition');\n\tfunction readObject() {\n\t\t// get the array size from the header\n\t\tlet length = src[position++]\n\t\t//let majorType = token >> 5\n\t\tlength = length & 0x1f\n\t\tif (length > 0x17) {\n\t\t\tswitch (length) {\n\t\t\t\tcase 0x18:\n\t\t\t\t\tlength = src[position++]\n\t\t\t\t\tbreak\n\t\t\t\tcase 0x19:\n\t\t\t\t\tlength = dataView.getUint16(position)\n\t\t\t\t\tposition += 2\n\t\t\t\t\tbreak\n\t\t\t\tcase 0x1a:\n\t\t\t\t\tlength = dataView.getUint32(position)\n\t\t\t\t\tposition += 4\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Expected array header, but got ' + src[position - 1])\n\t\t\t}\n\t\t}\n\t\t// This initial function is quick to instantiate, but runs slower. After several iterations pay the cost to build the faster function\n\t\tlet compiledReader = this.compiledReader // first look to see if we have the fast compiled function\n\t\twhile(compiledReader) {\n\t\t\t// we have a fast compiled object literal reader\n\t\t\tif (compiledReader.propertyCount === length)\n\t\t\t\treturn compiledReader(read) // with the right length, so we use it\n\t\t\tcompiledReader = compiledReader.next // see if there is another reader with the right length\n\t\t}\n\t\tif (this.slowReads++ >= inlineObjectReadThreshold) { // create a fast compiled reader\n\t\t\tlet array = this.length == length ? this : this.slice(0, length)\n\t\t\tcompiledReader = currentDecoder.keyMap \n\t\t\t? new Function('r', 'return {' + array.map(k => currentDecoder.decodeKey(k)).map(k => validName.test(k) ? safeKey(k) + ':r()' : ('[' + JSON.stringify(k) + ']:r()')).join(',') + '}')\n\t\t\t: new Function('r', 'return {' + array.map(key => validName.test(key) ? safeKey(key) + ':r()' : ('[' + JSON.stringify(key) + ']:r()')).join(',') + '}')\n\t\t\tif (this.compiledReader)\n\t\t\t\tcompiledReader.next = this.compiledReader // if there is an existing one, we store multiple readers as a linked list because it is usually pretty rare to have multiple readers (of different length) for the same structure\n\t\t\tcompiledReader.propertyCount = length\n\t\t\tthis.compiledReader = compiledReader\n\t\t\treturn compiledReader(read)\n\t\t}\n\t\tlet object = {}\n\t\tif (currentDecoder.keyMap) for (let i = 0; i < length; i++) object[safeKey(currentDecoder.decodeKey(this[i]))] = read()\n\t\telse for (let i = 0; i < length; i++) {\n\t\t\tobject[safeKey(this[i])] = read();\n\t\t}\n\t\treturn object\n\t}\n\tstructure.slowReads = 0\n\treturn readObject\n}\n\nfunction safeKey(key) {\n\t// protect against prototype pollution\n\tif (typeof key === 'string') return key === '__proto__' ? '__proto_' : key\n\tif (typeof key === 'number' || typeof key === 'boolean' || typeof key === 'bigint') return key.toString();\n\tif (key == null) return key + '';\n\t// protect against expensive (DoS) string conversions\n\tthrow new Error('Invalid property name type ' + typeof key);\n}\n\nlet readFixedString = readStringJS\nlet readString8 = readStringJS\nlet readString16 = readStringJS\nlet readString32 = readStringJS\n\nexport let isNativeAccelerationEnabled = false\nexport function setExtractor(extractStrings) {\n\tisNativeAccelerationEnabled = true\n\treadFixedString = readString(1)\n\treadString8 = readString(2)\n\treadString16 = readString(3)\n\treadString32 = readString(5)\n\tfunction readString(headerLength) {\n\t\treturn function readString(length) {\n\t\t\tlet string = strings[stringPosition++]\n\t\t\tif (string == null) {\n\t\t\t\tif (bundledStrings)\n\t\t\t\t\treturn readStringJS(length)\n\t\t\t\tlet extraction = extractStrings(position, srcEnd, length, src)\n\t\t\t\tif (typeof extraction == 'string') {\n\t\t\t\t\tstring = extraction\n\t\t\t\t\tstrings = EMPTY_ARRAY\n\t\t\t\t} else {\n\t\t\t\t\tstrings = extraction\n\t\t\t\t\tstringPosition = 1\n\t\t\t\t\tsrcStringEnd = 1 // even if a utf-8 string was decoded, must indicate we are in the midst of extracted strings and can't skip strings\n\t\t\t\t\tstring = strings[0]\n\t\t\t\t\tif (string === undefined)\n\t\t\t\t\t\tthrow new Error('Unexpected end of buffer')\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet srcStringLength = string.length\n\t\t\tif (srcStringLength <= length) {\n\t\t\t\tposition += length\n\t\t\t\treturn string\n\t\t\t}\n\t\t\tsrcString = string\n\t\t\tsrcStringStart = position\n\t\t\tsrcStringEnd = position + srcStringLength\n\t\t\tposition += length\n\t\t\treturn string.slice(0, length) // we know we just want the beginning\n\t\t}\n\t}\n}\nfunction readStringJS(length) {\n\tlet result\n\tif (length < 16) {\n\t\tif (result = shortStringInJS(length))\n\t\t\treturn result\n\t}\n\tif (length > 64 && decoder)\n\t\treturn decoder.decode(src.subarray(position, position += length))\n\tconst end = position + length\n\tconst units = []\n\tresult = ''\n\twhile (position < end) {\n\t\tconst byte1 = src[position++]\n\t\tif ((byte1 & 0x80) === 0) {\n\t\t\t// 1 byte\n\t\t\tunits.push(byte1)\n\t\t} else if ((byte1 & 0xe0) === 0xc0) {\n\t\t\t// 2 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 6) | byte2)\n\t\t} else if ((byte1 & 0xf0) === 0xe0) {\n\t\t\t// 3 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3)\n\t\t} else if ((byte1 & 0xf8) === 0xf0) {\n\t\t\t// 4 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tconst byte4 = src[position++] & 0x3f\n\t\t\tlet unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4\n\t\t\tif (unit > 0xffff) {\n\t\t\t\tunit -= 0x10000\n\t\t\t\tunits.push(((unit >>> 10) & 0x3ff) | 0xd800)\n\t\t\t\tunit = 0xdc00 | (unit & 0x3ff)\n\t\t\t}\n\t\t\tunits.push(unit)\n\t\t} else {\n\t\t\tunits.push(byte1)\n\t\t}\n\n\t\tif (units.length >= 0x1000) {\n\t\t\tresult += fromCharCode.apply(String, units)\n\t\t\tunits.length = 0\n\t\t}\n\t}\n\n\tif (units.length > 0) {\n\t\tresult += fromCharCode.apply(String, units)\n\t}\n\n\treturn result\n}\nlet fromCharCode = String.fromCharCode\nfunction longStringInJS(length) {\n\tlet start = position\n\tlet bytes = new Array(length)\n\tfor (let i = 0; i < length; i++) {\n\t\tconst byte = src[position++];\n\t\tif ((byte & 0x80) > 0) {\n\t\t\tposition = start\n    \t\t\treturn\n    \t\t}\n    \t\tbytes[i] = byte\n    \t}\n    \treturn fromCharCode.apply(String, bytes)\n}\nfunction shortStringInJS(length) {\n\tif (length < 4) {\n\t\tif (length < 2) {\n\t\t\tif (length === 0)\n\t\t\t\treturn ''\n\t\t\telse {\n\t\t\t\tlet a = src[position++]\n\t\t\t\tif ((a & 0x80) > 1) {\n\t\t\t\t\tposition -= 1\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a)\n\t\t\t}\n\t\t} else {\n\t\t\tlet a = src[position++]\n\t\t\tlet b = src[position++]\n\t\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0) {\n\t\t\t\tposition -= 2\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 3)\n\t\t\t\treturn fromCharCode(a, b)\n\t\t\tlet c = src[position++]\n\t\t\tif ((c & 0x80) > 0) {\n\t\t\t\tposition -= 3\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c)\n\t\t}\n\t} else {\n\t\tlet a = src[position++]\n\t\tlet b = src[position++]\n\t\tlet c = src[position++]\n\t\tlet d = src[position++]\n\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0 || (c & 0x80) > 0 || (d & 0x80) > 0) {\n\t\t\tposition -= 4\n\t\t\treturn\n\t\t}\n\t\tif (length < 6) {\n\t\t\tif (length === 4)\n\t\t\t\treturn fromCharCode(a, b, c, d)\n\t\t\telse {\n\t\t\t\tlet e = src[position++]\n\t\t\t\tif ((e & 0x80) > 0) {\n\t\t\t\t\tposition -= 5\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e)\n\t\t\t}\n\t\t} else if (length < 8) {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0) {\n\t\t\t\tposition -= 6\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 7)\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f)\n\t\t\tlet g = src[position++]\n\t\t\tif ((g & 0x80) > 0) {\n\t\t\t\tposition -= 7\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c, d, e, f, g)\n\t\t} else {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tlet g = src[position++]\n\t\t\tlet h = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0 || (g & 0x80) > 0 || (h & 0x80) > 0) {\n\t\t\t\tposition -= 8\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 10) {\n\t\t\t\tif (length === 8)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h)\n\t\t\t\telse {\n\t\t\t\t\tlet i = src[position++]\n\t\t\t\t\tif ((i & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 9\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i)\n\t\t\t\t}\n\t\t\t} else if (length < 12) {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0) {\n\t\t\t\t\tposition -= 10\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 11)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j)\n\t\t\t\tlet k = src[position++]\n\t\t\t\tif ((k & 0x80) > 0) {\n\t\t\t\t\tposition -= 11\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k)\n\t\t\t} else {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tlet k = src[position++]\n\t\t\t\tlet l = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0 || (k & 0x80) > 0 || (l & 0x80) > 0) {\n\t\t\t\t\tposition -= 12\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 14) {\n\t\t\t\t\tif (length === 12)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l)\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\t\tif ((m & 0x80) > 0) {\n\t\t\t\t\t\t\tposition -= 13\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\tlet n = src[position++]\n\t\t\t\t\tif ((m & 0x80) > 0 || (n & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 14\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (length < 15)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n)\n\t\t\t\t\tlet o = src[position++]\n\t\t\t\t\tif ((o & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 15\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction readBin(length) {\n\treturn currentDecoder.copyBuffers ?\n\t\t// specifically use the copying slice (not the node one)\n\t\tUint8Array.prototype.slice.call(src, position, position += length) :\n\t\tsrc.subarray(position, position += length)\n}\nfunction readExt(length) {\n\tlet type = src[position++]\n\tif (currentExtensions[type]) {\n\t\treturn currentExtensions[type](src.subarray(position, position += length))\n\t}\n\telse\n\t\tthrow new Error('Unknown extension type ' + type)\n}\nlet f32Array = new Float32Array(1)\nlet u8Array = new Uint8Array(f32Array.buffer, 0, 4)\nfunction getFloat16() {\n\tlet byte0 = src[position++]\n\tlet byte1 = src[position++]\n\tlet exponent = (byte0 & 0x7f) >> 2;\n\tif (exponent === 0x1f) { // specials\n\t\tif (byte1 || (byte0 & 3))\n\t\t\treturn NaN;\n\t\treturn (byte0 & 0x80) ? -Infinity : Infinity;\n\t}\n\tif (exponent === 0) { // sub-normals\n\t\t// significand with 10 fractional bits and divided by 2^14\n\t\tlet abs = (((byte0 & 3) << 8) | byte1) / (1 << 24)\n\t\treturn (byte0 & 0x80) ? -abs : abs\n\t}\n\n\tu8Array[3] = (byte0 & 0x80) | // sign bit\n\t\t((exponent >> 1) + 56) // 4 of 5 of the exponent bits, re-offset-ed\n\tu8Array[2] = ((byte0 & 7) << 5) | // last exponent bit and first two mantissa bits\n\t\t(byte1 >> 3) // next 5 bits of mantissa\n\tu8Array[1] = byte1 << 5; // last three bits of mantissa\n\tu8Array[0] = 0;\n\treturn f32Array[0];\n}\n\nlet keyCache = new Array(4096)\nfunction readKey() {\n\tlet length = src[position++]\n\tif (length >= 0x60 && length < 0x78) {\n\t\t// fixstr, potentially use key cache\n\t\tlength = length - 0x60\n\t\tif (srcStringEnd >= position) // if it has been extracted, must use it (and faster anyway)\n\t\t\treturn srcString.slice(position - srcStringStart, (position += length) - srcStringStart)\n\t\telse if (!(srcStringEnd == 0 && srcEnd < 180))\n\t\t\treturn readFixedString(length)\n\t} else { // not cacheable, go back and do a standard read\n\t\tposition--\n\t\treturn read()\n\t}\n\tlet key = ((length << 5) ^ (length > 1 ? dataView.getUint16(position) : length > 0 ? src[position] : 0)) & 0xfff\n\tlet entry = keyCache[key]\n\tlet checkPosition = position\n\tlet end = position + length - 3\n\tlet chunk\n\tlet i = 0\n\tif (entry && entry.bytes == length) {\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = dataView.getUint32(checkPosition)\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcheckPosition += 4\n\t\t}\n\t\tend += 3\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = src[checkPosition++]\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif (checkPosition === end) {\n\t\t\tposition = checkPosition\n\t\t\treturn entry.string\n\t\t}\n\t\tend -= 3\n\t\tcheckPosition = position\n\t}\n\tentry = []\n\tkeyCache[key] = entry\n\tentry.bytes = length\n\twhile (checkPosition < end) {\n\t\tchunk = dataView.getUint32(checkPosition)\n\t\tentry.push(chunk)\n\t\tcheckPosition += 4\n\t}\n\tend += 3\n\twhile (checkPosition < end) {\n\t\tchunk = src[checkPosition++]\n\t\tentry.push(chunk)\n\t}\n\t// for small blocks, avoiding the overhead of the extract call is helpful\n\tlet string = length < 16 ? shortStringInJS(length) : longStringInJS(length)\n\tif (string != null)\n\t\treturn entry.string = string\n\treturn entry.string = readFixedString(length)\n}\n\nexport class Tag {\n\tconstructor(value, tag) {\n\t\tthis.value = value\n\t\tthis.tag = tag\n\t}\n}\n\ncurrentExtensions[0] = (dateString) => {\n\t// string date extension\n\treturn new Date(dateString)\n}\n\ncurrentExtensions[1] = (epochSec) => {\n\t// numeric date extension\n\treturn new Date(Math.round(epochSec * 1000))\n}\n\ncurrentExtensions[2] = (buffer) => {\n\t// bigint extension\n\tlet value = BigInt(0)\n\tfor (let i = 0, l = buffer.byteLength; i < l; i++) {\n\t\tvalue = BigInt(buffer[i]) + (value << BigInt(8))\n\t}\n\treturn value\n}\n\ncurrentExtensions[3] = (buffer) => {\n\t// negative bigint extension\n\treturn BigInt(-1) - currentExtensions[2](buffer)\n}\ncurrentExtensions[4] = (fraction) => {\n\t// best to reparse to maintain accuracy\n\treturn +(fraction[1] + 'e' + fraction[0])\n}\n\ncurrentExtensions[5] = (fraction) => {\n\t// probably not sufficiently accurate\n\treturn fraction[1] * Math.exp(fraction[0] * Math.log(2))\n}\n\n// the registration of the record definition extension\nconst recordDefinition = (id, structure) => {\n\tid = id - 0xe000\n\tlet existingStructure = currentStructures[id]\n\tif (existingStructure && existingStructure.isShared) {\n\t\t(currentStructures.restoreStructures || (currentStructures.restoreStructures = []))[id] = existingStructure\n\t}\n\tcurrentStructures[id] = structure\n\n\tstructure.read = createStructureReader(structure)\n}\ncurrentExtensions[LEGACY_RECORD_INLINE_ID] = (data) => {\n\tlet length = data.length\n\tlet structure = data[1]\n\trecordDefinition(data[0], structure)\n\tlet object = {}\n\tfor (let i = 2; i < length; i++) {\n\t\tlet key = structure[i - 2]\n\t\tobject[safeKey(key)] = data[i]\n\t}\n\treturn object\n}\ncurrentExtensions[14] = (value) => {\n\tif (bundledStrings)\n\t\treturn bundledStrings[0].slice(bundledStrings.position0, bundledStrings.position0 += value)\n\treturn new Tag(value, 14)\n}\ncurrentExtensions[15] = (value) => {\n\tif (bundledStrings)\n\t\treturn bundledStrings[1].slice(bundledStrings.position1, bundledStrings.position1 += value)\n\treturn new Tag(value, 15)\n}\nlet glbl = { Error, RegExp }\ncurrentExtensions[27] = (data) => { // http://cbor.schmorp.de/generic-object\n\treturn (glbl[data[0]] || Error)(data[1], data[2])\n}\nconst packedTable = (read) => {\n\tif (src[position++] != 0x84) {\n\t\tlet error = new Error('Packed values structure must be followed by a 4 element array')\n\t\tif (src.length < position)\n\t\t\terror.incomplete = true\n\t\tthrow error\n\t}\n\tlet newPackedValues = read() // packed values\n\tif (!newPackedValues || !newPackedValues.length) {\n\t\tlet error = new Error('Packed values structure must be followed by a 4 element array')\n\t\terror.incomplete = true\n\t\tthrow error\n\t}\n\tpackedValues = packedValues ? newPackedValues.concat(packedValues.slice(newPackedValues.length)) : newPackedValues\n\tpackedValues.prefixes = read()\n\tpackedValues.suffixes = read()\n\treturn read() // read the rump\n}\npackedTable.handlesRead = true\ncurrentExtensions[51] = packedTable\n\ncurrentExtensions[PACKED_REFERENCE_TAG_ID] = (data) => { // packed reference\n\tif (!packedValues) {\n\t\tif (currentDecoder.getShared)\n\t\t\tloadShared()\n\t\telse\n\t\t\treturn new Tag(data, PACKED_REFERENCE_TAG_ID)\n\t}\n\tif (typeof data == 'number')\n\t\treturn packedValues[16 + (data >= 0 ? 2 * data : (-2 * data - 1))]\n\tlet error = new Error('No support for non-integer packed references yet')\n\tif (data === undefined)\n\t\terror.incomplete = true\n\tthrow error\n}\n\n// The following code is an incomplete implementation of http://cbor.schmorp.de/stringref\n// the real thing would need to implemennt more logic to populate the stringRefs table and\n// maintain a stack of stringRef \"namespaces\".\n//\n// currentExtensions[25] = (id) => {\n// \treturn stringRefs[id]\n// }\n// currentExtensions[256] = (read) => {\n// \tstringRefs = []\n// \ttry {\n// \t\treturn read()\n// \t} finally {\n// \t\tstringRefs = null\n// \t}\n// }\n// currentExtensions[256].handlesRead = true\n\ncurrentExtensions[28] = (read) => { \n\t// shareable http://cbor.schmorp.de/value-sharing (for structured clones)\n\tif (!referenceMap) {\n\t\treferenceMap = new Map()\n\t\treferenceMap.id = 0\n\t}\n\tlet id = referenceMap.id++\n\tlet startingPosition = position\n\tlet token = src[position]\n\tlet target\n\t// TODO: handle Maps, Sets, and other types that can cycle; this is complicated, because you potentially need to read\n\t// ahead past references to record structure definitions\n\tif ((token >> 5) == 4)\n\t\ttarget = []\n\telse\n\t\ttarget = {}\n\n\tlet refEntry = { target } // a placeholder object\n\treferenceMap.set(id, refEntry)\n\tlet targetProperties = read() // read the next value as the target object to id\n\tif (refEntry.used) {// there is a cycle, so we have to assign properties to original target\n\t\tif (Object.getPrototypeOf(target) !== Object.getPrototypeOf(targetProperties)) {\n\t\t\t// this means that the returned target does not match the targetProperties, so we need rerun the read to\n\t\t\t// have the correctly create instance be assigned as a reference, then we do the copy the properties back to the\n\t\t\t// target\n\t\t\t// reset the position so that the read can be repeated\n\t\t\tposition = startingPosition\n\t\t\t// the returned instance is our new target for references\n\t\t\ttarget = targetProperties\n\t\t\treferenceMap.set(id, { target })\n\t\t\ttargetProperties = read()\n\t\t}\n\t\treturn Object.assign(target, targetProperties)\n\t}\n\trefEntry.target = targetProperties // the placeholder wasn't used, replace with the deserialized one\n\treturn targetProperties // no cycle, can just use the returned read object\n}\ncurrentExtensions[28].handlesRead = true\n\ncurrentExtensions[29] = (id) => {\n\t// sharedref http://cbor.schmorp.de/value-sharing (for structured clones)\n\tlet refEntry = referenceMap.get(id)\n\trefEntry.used = true\n\treturn refEntry.target\n}\n\ncurrentExtensions[258] = (array) => new Set(array); // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n(currentExtensions[259] = (read) => {\n\t// https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec\n\t// for decoding as a standard Map\n\tif (currentDecoder.mapsAsObjects) {\n\t\tcurrentDecoder.mapsAsObjects = false\n\t\trestoreMapsAsObject = true\n\t}\n\treturn read()\n}).handlesRead = true\nfunction combine(a, b) {\n\tif (typeof a === 'string')\n\t\treturn a + b\n\tif (a instanceof Array)\n\t\treturn a.concat(b)\n\treturn Object.assign({}, a, b)\n}\nfunction getPackedValues() {\n\tif (!packedValues) {\n\t\tif (currentDecoder.getShared)\n\t\t\tloadShared()\n\t\telse\n\t\t\tthrow new Error('No packed values available')\n\t}\n\treturn packedValues\n}\nconst SHARED_DATA_TAG_ID = 0x53687264 // ascii 'Shrd'\ncurrentExtensionRanges.push((tag, input) => {\n\tif (tag >= 225 && tag <= 255)\n\t\treturn combine(getPackedValues().prefixes[tag - 224], input)\n\tif (tag >= 28704 && tag <= 32767)\n\t\treturn combine(getPackedValues().prefixes[tag - 28672], input)\n\tif (tag >= 1879052288 && tag <= 2147483647)\n\t\treturn combine(getPackedValues().prefixes[tag - 1879048192], input)\n\tif (tag >= 216 && tag <= 223)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 216])\n\tif (tag >= 27647 && tag <= 28671)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 27639])\n\tif (tag >= 1811940352 && tag <= 1879048191)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 1811939328])\n\tif (tag == SHARED_DATA_TAG_ID) {// we do a special check for this so that we can keep the currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n\t\treturn {\n\t\t\tpackedValues: packedValues,\n\t\t\tstructures: currentStructures.slice(0),\n\t\t\tversion: input,\n\t\t}\n\t}\n\tif (tag == 55799) // self-descriptive CBOR tag, just return input value\n\t\treturn input\n})\n\nconst isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1\nexport const typedArrays = [Uint8Array, Uint8ClampedArray, Uint16Array, Uint32Array,\n\ttypeof BigUint64Array == 'undefined' ? { name:'BigUint64Array' } : BigUint64Array, Int8Array, Int16Array, Int32Array,\n\ttypeof BigInt64Array == 'undefined' ? { name:'BigInt64Array' } : BigInt64Array, Float32Array, Float64Array]\nconst typedArrayTags = [64, 68, 69, 70, 71, 72, 77, 78, 79, 85, 86]\nfor (let i = 0; i < typedArrays.length; i++) {\n\tregisterTypedArray(typedArrays[i], typedArrayTags[i])\n}\nfunction registerTypedArray(TypedArray, tag) {\n\tlet dvMethod = 'get' + TypedArray.name.slice(0, -5)\n\tlet bytesPerElement;\n\tif (typeof TypedArray === 'function')\n\t\tbytesPerElement = TypedArray.BYTES_PER_ELEMENT;\n\telse\n\t\tTypedArray = null;\n\tfor (let littleEndian = 0; littleEndian < 2; littleEndian++) {\n\t\tif (!littleEndian && bytesPerElement == 1)\n\t\t\tcontinue\n\t\tlet sizeShift = bytesPerElement == 2 ? 1 : bytesPerElement == 4 ? 2 : bytesPerElement == 8 ? 3 : 0\n\t\tcurrentExtensions[littleEndian ? tag : (tag - 4)] = (bytesPerElement == 1 || littleEndian == isLittleEndianMachine) ? (buffer) => {\n\t\t\tif (!TypedArray)\n\t\t\t\tthrow new Error('Could not find typed array for code ' + tag)\n\t\t\tif (!currentDecoder.copyBuffers) {\n\t\t\t\t// try provide a direct view, but will only work if we are byte-aligned\n\t\t\t\tif (bytesPerElement === 1 ||\n\t\t\t\t\tbytesPerElement === 2 && !(buffer.byteOffset & 1) ||\n\t\t\t\t\tbytesPerElement === 4 && !(buffer.byteOffset & 3) ||\n\t\t\t\t\tbytesPerElement === 8 && !(buffer.byteOffset & 7))\n\t\t\t\t\treturn new TypedArray(buffer.buffer, buffer.byteOffset, buffer.byteLength >> sizeShift);\n\t\t\t}\n\t\t\t// we have to slice/copy here to get a new ArrayBuffer, if we are not word/byte aligned\n\t\t\treturn new TypedArray(Uint8Array.prototype.slice.call(buffer, 0).buffer)\n\t\t} : buffer => {\n\t\t\tif (!TypedArray)\n\t\t\t\tthrow new Error('Could not find typed array for code ' + tag)\n\t\t\tlet dv = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\t\t\tlet elements = buffer.length >> sizeShift\n\t\t\tlet ta = new TypedArray(elements)\n\t\t\tlet method = dv[dvMethod]\n\t\t\tfor (let i = 0; i < elements; i++) {\n\t\t\t\tta[i] = method.call(dv, i << sizeShift, littleEndian)\n\t\t\t}\n\t\t\treturn ta\n\t\t}\n\t}\n}\n\nfunction readBundleExt() {\n\tlet length = readJustLength()\n\tlet bundlePosition = position + read()\n\tfor (let i = 2; i < length; i++) {\n\t\t// skip past bundles that were already read\n\t\tlet bundleLength = readJustLength() // this will increment position, so must add to position afterwards\n\t\tposition += bundleLength\n\t}\n\tlet dataPosition = position\n\tposition = bundlePosition\n\tbundledStrings = [readStringJS(readJustLength()), readStringJS(readJustLength())]\n\tbundledStrings.position0 = 0\n\tbundledStrings.position1 = 0\n\tbundledStrings.postBundlePosition = position\n\tposition = dataPosition\n\treturn read()\n}\n\nfunction readJustLength() {\n\tlet token = src[position++] & 0x1f\n\tif (token > 0x17) {\n\t\tswitch (token) {\n\t\t\tcase 0x18:\n\t\t\t\ttoken = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0x19:\n\t\t\t\ttoken = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0x1a:\n\t\t\t\ttoken = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t}\n\t}\n\treturn token\n}\n\nfunction loadShared() {\n\tif (currentDecoder.getShared) {\n\t\tlet sharedData = saveState(() => {\n\t\t\t// save the state in case getShared modifies our buffer\n\t\t\tsrc = null\n\t\t\treturn currentDecoder.getShared()\n\t\t}) || {}\n\t\tlet updatedStructures = sharedData.structures || []\n\t\tcurrentDecoder.sharedVersion = sharedData.version\n\t\tpackedValues = currentDecoder.sharedValues = sharedData.packedValues\n\t\tif (currentStructures === true)\n\t\t\tcurrentDecoder.structures = currentStructures = updatedStructures\n\t\telse\n\t\t\tcurrentStructures.splice.apply(currentStructures, [0, updatedStructures.length].concat(updatedStructures))\n\t}\n}\n\nfunction saveState(callback) {\n\tlet savedSrcEnd = srcEnd\n\tlet savedPosition = position\n\tlet savedStringPosition = stringPosition\n\tlet savedSrcStringStart = srcStringStart\n\tlet savedSrcStringEnd = srcStringEnd\n\tlet savedSrcString = srcString\n\tlet savedStrings = strings\n\tlet savedReferenceMap = referenceMap\n\tlet savedBundledStrings = bundledStrings\n\n\t// TODO: We may need to revisit this if we do more external calls to user code (since it could be slow)\n\tlet savedSrc = new Uint8Array(src.slice(0, srcEnd)) // we copy the data in case it changes while external data is processed\n\tlet savedStructures = currentStructures\n\tlet savedDecoder = currentDecoder\n\tlet savedSequentialMode = sequentialMode\n\tlet value = callback()\n\tsrcEnd = savedSrcEnd\n\tposition = savedPosition\n\tstringPosition = savedStringPosition\n\tsrcStringStart = savedSrcStringStart\n\tsrcStringEnd = savedSrcStringEnd\n\tsrcString = savedSrcString\n\tstrings = savedStrings\n\treferenceMap = savedReferenceMap\n\tbundledStrings = savedBundledStrings\n\tsrc = savedSrc\n\tsequentialMode = savedSequentialMode\n\tcurrentStructures = savedStructures\n\tcurrentDecoder = savedDecoder\n\tdataView = new DataView(src.buffer, src.byteOffset, src.byteLength)\n\treturn value\n}\nexport function clearSource() {\n\tsrc = null\n\treferenceMap = null\n\tcurrentStructures = null\n}\n\nexport function addExtension(extension) {\n\tcurrentExtensions[extension.tag] = extension.decode\n}\n\nexport function setSizeLimits(limits) {\n\tif (limits.maxMapSize) maxMapSize = limits.maxMapSize;\n\tif (limits.maxArraySize) maxArraySize = limits.maxArraySize;\n\tif (limits.maxObjectSize) maxObjectSize = limits.maxObjectSize;\n}\n\nexport const mult10 = new Array(147) // this is a table matching binary exponents to the multiplier to determine significant digit rounding\nfor (let i = 0; i < 256; i++) {\n\tmult10[i] = +('1e' + Math.floor(45.15 - i * 0.30103))\n}\nlet defaultDecoder = new Decoder({ useRecords: false })\nexport const decode = defaultDecoder.decode\nexport const decodeMultiple = defaultDecoder.decodeMultiple\nexport const FLOAT32_OPTIONS = {\n\tNEVER: 0,\n\tALWAYS: 1,\n\tDECIMAL_ROUND: 3,\n\tDECIMAL_FIT: 4\n}\nexport function roundFloat32(float32Number) {\n\tf32Array[0] = float32Number\n\tlet multiplier = mult10[((u8Array[3] & 0x7f) << 1) | (u8Array[2] >> 7)]\n\treturn ((multiplier * float32Number + (float32Number > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n}\n","import { Decoder, mult10, Tag, typedArrays, addExtension as decodeAddExtension } from './decode.js'\nlet textEncoder\ntry {\n\ttextEncoder = new TextEncoder()\n} catch (error) {}\nlet extensions, extensionClasses\nconst Buffer = typeof globalThis === 'object' && globalThis.Buffer;\nconst hasNodeBuffer = typeof Buffer !== 'undefined'\nconst ByteArrayAllocate = hasNodeBuffer ? Buffer.allocUnsafeSlow : Uint8Array\nconst ByteArray = hasNodeBuffer ? Buffer : Uint8Array\nconst MAX_STRUCTURES = 0x100\nconst MAX_BUFFER_SIZE = hasNodeBuffer ? 0x100000000 : 0x7fd00000\nlet serializationId = 1\nlet throwOnIterable\nlet target\nlet targetView\nlet position = 0\nlet safeEnd\nlet bundledStrings = null\nconst MAX_BUNDLE_SIZE = 0xf000\nconst hasNonLatin = /[\\u0080-\\uFFFF]/\nconst RECORD_SYMBOL = Symbol('record-id')\nexport class Encoder extends Decoder {\n\tconstructor(options) {\n\t\tsuper(options)\n\t\tthis.offset = 0\n\t\tlet typeBuffer\n\t\tlet start\n\t\tlet sharedStructures\n\t\tlet hasSharedUpdate\n\t\tlet structures\n\t\tlet referenceMap\n\t\toptions = options || {}\n\t\tlet encodeUtf8 = ByteArray.prototype.utf8Write ? function(string, position, maxBytes) {\n\t\t\treturn target.utf8Write(string, position, maxBytes)\n\t\t} : (textEncoder && textEncoder.encodeInto) ?\n\t\t\tfunction(string, position) {\n\t\t\t\treturn textEncoder.encodeInto(string, target.subarray(position)).written\n\t\t\t} : false\n\n\t\tlet encoder = this\n\t\tlet hasSharedStructures = options.structures || options.saveStructures\n\t\tlet maxSharedStructures = options.maxSharedStructures\n\t\tif (maxSharedStructures == null)\n\t\t\tmaxSharedStructures = hasSharedStructures ? 128 : 0\n\t\tif (maxSharedStructures > 8190)\n\t\t\tthrow new Error('Maximum maxSharedStructure is 8190')\n\t\tlet isSequential = options.sequential\n\t\tif (isSequential) {\n\t\t\tmaxSharedStructures = 0\n\t\t}\n\t\tif (!this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.saveStructures)\n\t\t\tthis.saveShared = this.saveStructures\n\t\tlet samplingPackedValues, packedObjectMap, sharedValues = options.sharedValues\n\t\tlet sharedPackedObjectMap\n\t\tif (sharedValues) {\n\t\t\tsharedPackedObjectMap = Object.create(null)\n\t\t\tfor (let i = 0, l = sharedValues.length; i < l; i++) {\n\t\t\t\tsharedPackedObjectMap[sharedValues[i]] = i\n\t\t\t}\n\t\t}\n\t\tlet recordIdsToRemove = []\n\t\tlet transitionsCount = 0\n\t\tlet serializationsSinceTransitionRebuild = 0\n\t\t\n\t\tthis.mapEncode = function(value, encodeOptions) {\n\t\t\t// Experimental support for premapping keys using _keyMap instad of keyMap - not optiimised yet)\n\t\t\tif (this._keyMap && !this._mapped) {\n\t\t\t\t//console.log('encoding ', value)\n\t\t\t\tswitch (value.constructor.name) {\n\t\t\t\t\tcase 'Array': \n\t\t\t\t\t\tvalue = value.map(r => this.encodeKeys(r))\n\t\t\t\t\t\tbreak\n\t\t\t\t\t//case 'Map': \n\t\t\t\t\t//\tvalue = this.encodeKeys(value)\n\t\t\t\t\t//\tbreak\n\t\t\t\t}\n\t\t\t\t//this._mapped = true\n\t\t\t}\n\t\t\treturn this.encode(value, encodeOptions)\n\t\t}\n\t\t\n\t\tthis.encode = function(value, encodeOptions)\t{\n\t\t\tif (!target) {\n\t\t\t\ttarget = new ByteArrayAllocate(8192)\n\t\t\t\ttargetView = new DataView(target.buffer, 0, 8192)\n\t\t\t\tposition = 0\n\t\t\t}\n\t\t\tsafeEnd = target.length - 10\n\t\t\tif (safeEnd - position < 0x800) {\n\t\t\t\t// don't start too close to the end, \n\t\t\t\ttarget = new ByteArrayAllocate(target.length)\n\t\t\t\ttargetView = new DataView(target.buffer, 0, target.length)\n\t\t\t\tsafeEnd = target.length - 10\n\t\t\t\tposition = 0\n\t\t\t} else if (encodeOptions === REUSE_BUFFER_MODE)\n\t\t\t\tposition = (position + 7) & 0x7ffffff8 // Word align to make any future copying of this buffer faster\n\t\t\tstart = position\n\t\t\tif (encoder.useSelfDescribedHeader) {\n\t\t\t\ttargetView.setUint32(position, 0xd9d9f700) // tag two byte, then self-descriptive tag\n\t\t\t\tposition += 3\n\t\t\t}\n\t\t\treferenceMap = encoder.structuredClone ? new Map() : null\n\t\t\tif (encoder.bundleStrings && typeof value !== 'string') {\n\t\t\t\tbundledStrings = []\n\t\t\t\tbundledStrings.size = Infinity // force a new bundle start on first string\n\t\t\t} else\n\t\t\t\tbundledStrings = null\n\n\t\t\tsharedStructures = encoder.structures\n\t\t\tif (sharedStructures) {\n\t\t\t\tif (sharedStructures.uninitialized) {\n\t\t\t\t\tlet sharedData = encoder.getShared() || {}\n\t\t\t\t\tencoder.structures = sharedStructures = sharedData.structures || []\n\t\t\t\t\tencoder.sharedVersion = sharedData.version\n\t\t\t\t\tlet sharedValues = encoder.sharedValues = sharedData.packedValues\n\t\t\t\t\tif (sharedValues) {\n\t\t\t\t\t\tsharedPackedObjectMap = {}\n\t\t\t\t\t\tfor (let i = 0, l = sharedValues.length; i < l; i++)\n\t\t\t\t\t\t\tsharedPackedObjectMap[sharedValues[i]] = i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet sharedStructuresLength = sharedStructures.length\n\t\t\t\tif (sharedStructuresLength > maxSharedStructures && !isSequential)\n\t\t\t\t\tsharedStructuresLength = maxSharedStructures\n\t\t\t\tif (!sharedStructures.transitions) {\n\t\t\t\t\t// rebuild our structure transitions\n\t\t\t\t\tsharedStructures.transitions = Object.create(null)\n\t\t\t\t\tfor (let i = 0; i < sharedStructuresLength; i++) {\n\t\t\t\t\t\tlet keys = sharedStructures[i]\n\t\t\t\t\t\t//console.log('shared struct keys:', keys)\n\t\t\t\t\t\tif (!keys)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tlet nextTransition, transition = sharedStructures.transitions\n\t\t\t\t\t\tfor (let j = 0, l = keys.length; j < l; j++) {\n\t\t\t\t\t\t\tif (transition[RECORD_SYMBOL] === undefined)\n\t\t\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i\n\t\t\t\t\t\t\tlet key = keys[j]\n\t\t\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i | 0x100000\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isSequential)\n\t\t\t\t\tsharedStructures.nextId = sharedStructuresLength\n\t\t\t}\n\t\t\tif (hasSharedUpdate)\n\t\t\t\thasSharedUpdate = false\n\t\t\tstructures = sharedStructures || []\n\t\t\tpackedObjectMap = sharedPackedObjectMap\n\t\t\tif (options.pack) {\n\t\t\t\tlet packedValues = new Map()\n\t\t\t\tpackedValues.values = []\n\t\t\t\tpackedValues.encoder = encoder\n\t\t\t\tpackedValues.maxValues = options.maxPrivatePackedValues || (sharedPackedObjectMap ? 16 : Infinity)\n\t\t\t\tpackedValues.objectMap = sharedPackedObjectMap || false\n\t\t\t\tpackedValues.samplingPackedValues = samplingPackedValues\n\t\t\t\tfindRepetitiveStrings(value, packedValues)\n\t\t\t\tif (packedValues.values.length > 0) {\n\t\t\t\t\ttarget[position++] = 0xd8 // one-byte tag\n\t\t\t\t\ttarget[position++] = 51 // tag 51 for packed shared structures https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\twriteArrayHeader(4)\n\t\t\t\t\tlet valuesArray = packedValues.values\n\t\t\t\t\tencode(valuesArray)\n\t\t\t\t\twriteArrayHeader(0) // prefixes\n\t\t\t\t\twriteArrayHeader(0) // suffixes\n\t\t\t\t\tpackedObjectMap = Object.create(sharedPackedObjectMap || null)\n\t\t\t\t\tfor (let i = 0, l = valuesArray.length; i < l; i++) {\n\t\t\t\t\t\tpackedObjectMap[valuesArray[i]] = i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrowOnIterable = encodeOptions & THROW_ON_ITERABLE;\n\t\t\ttry {\n\t\t\t\tif (throwOnIterable)\n\t\t\t\t\treturn;\n\t\t\t\tencode(value)\n\t\t\t\tif (bundledStrings) {\n\t\t\t\t\twriteBundles(start, encode)\n\t\t\t\t}\n\t\t\t\tencoder.offset = position // update the offset so next serialization doesn't write over our buffer, but can continue writing to same buffer sequentially\n\t\t\t\tif (referenceMap && referenceMap.idsToInsert) {\n\t\t\t\t\tposition += referenceMap.idsToInsert.length * 2\n\t\t\t\t\tif (position > safeEnd)\n\t\t\t\t\t\tmakeRoom(position)\n\t\t\t\t\tencoder.offset = position\n\t\t\t\t\tlet serialized = insertIds(target.subarray(start, position), referenceMap.idsToInsert)\n\t\t\t\t\treferenceMap = null\n\t\t\t\t\treturn serialized\n\t\t\t\t}\n\t\t\t\tif (encodeOptions & REUSE_BUFFER_MODE) {\n\t\t\t\t\ttarget.start = start\n\t\t\t\t\ttarget.end = position\n\t\t\t\t\treturn target\n\t\t\t\t}\n\t\t\t\treturn target.subarray(start, position) // position can change if we call encode again in saveShared, so we get the buffer now\n\t\t\t} finally {\n\t\t\t\tif (sharedStructures) {\n\t\t\t\t\tif (serializationsSinceTransitionRebuild < 10)\n\t\t\t\t\t\tserializationsSinceTransitionRebuild++\n\t\t\t\t\tif (sharedStructures.length > maxSharedStructures)\n\t\t\t\t\t\tsharedStructures.length = maxSharedStructures\n\t\t\t\t\tif (transitionsCount > 10000) {\n\t\t\t\t\t\t// force a rebuild occasionally after a lot of transitions so it can get cleaned up\n\t\t\t\t\t\tsharedStructures.transitions = null\n\t\t\t\t\t\tserializationsSinceTransitionRebuild = 0\n\t\t\t\t\t\ttransitionsCount = 0\n\t\t\t\t\t\tif (recordIdsToRemove.length > 0)\n\t\t\t\t\t\t\trecordIdsToRemove = []\n\t\t\t\t\t} else if (recordIdsToRemove.length > 0 && !isSequential) {\n\t\t\t\t\t\tfor (let i = 0, l = recordIdsToRemove.length; i < l; i++) {\n\t\t\t\t\t\t\trecordIdsToRemove[i][RECORD_SYMBOL] = undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecordIdsToRemove = []\n\t\t\t\t\t\t//sharedStructures.nextId = maxSharedStructures\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (hasSharedUpdate && encoder.saveShared) {\n\t\t\t\t\tif (encoder.structures.length > maxSharedStructures) {\n\t\t\t\t\t\tencoder.structures = encoder.structures.slice(0, maxSharedStructures)\n\t\t\t\t\t}\n\t\t\t\t\t// we can't rely on start/end with REUSE_BUFFER_MODE since they will (probably) change when we save\n\t\t\t\t\tlet returnBuffer = target.subarray(start, position)\n\t\t\t\t\tif (encoder.updateSharedData() === false)\n\t\t\t\t\t\treturn encoder.encode(value) // re-encode if it fails\n\t\t\t\t\treturn returnBuffer\n\t\t\t\t}\n\t\t\t\tif (encodeOptions & RESET_BUFFER_MODE)\n\t\t\t\t\tposition = start\n\t\t\t}\n\t\t}\n\t\tthis.findCommonStringsToPack = () => {\n\t\t\tsamplingPackedValues = new Map()\n\t\t\tif (!sharedPackedObjectMap)\n\t\t\t\tsharedPackedObjectMap = Object.create(null)\n\t\t\treturn (options) => {\n\t\t\t\tlet threshold = options && options.threshold || 4\n\t\t\t\tlet position = this.pack ? options.maxPrivatePackedValues || 16 : 0\n\t\t\t\tif (!sharedValues)\n\t\t\t\t\tsharedValues = this.sharedValues = []\n\t\t\t\tfor (let [ key, status ] of samplingPackedValues) {\n\t\t\t\t\tif (status.count > threshold) {\n\t\t\t\t\t\tsharedPackedObjectMap[key] = position++\n\t\t\t\t\t\tsharedValues.push(key)\n\t\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (this.saveShared && this.updateSharedData() === false) {}\n\t\t\t\tsamplingPackedValues = null\n\t\t\t}\n\t\t}\n\t\tconst encode = (value) => {\n\t\t\tif (position > safeEnd)\n\t\t\t\ttarget = makeRoom(position)\n\n\t\t\tvar type = typeof value\n\t\t\tvar length\n\t\t\tif (type === 'string') {\n\t\t\t\tif (packedObjectMap) {\n\t\t\t\t\tlet packedPosition = packedObjectMap[value]\n\t\t\t\t\tif (packedPosition >= 0) {\n\t\t\t\t\t\tif (packedPosition < 16)\n\t\t\t\t\t\t\ttarget[position++] = packedPosition + 0xe0 // simple values, defined in https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttarget[position++] = 0xc6 // tag 6 defined in https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\t\t\tif (packedPosition & 1)\n\t\t\t\t\t\t\t\tencode((15 - packedPosition) >> 1)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tencode((packedPosition - 16) >> 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn\n/*\t\t\t\t\t\t} else if (packedStatus.serializationId != serializationId) {\n\t\t\t\t\t\t\tpackedStatus.serializationId = serializationId\n\t\t\t\t\t\t\tpackedStatus.count = 1\n\t\t\t\t\t\t\tif (options.sharedPack) {\n\t\t\t\t\t\t\t\tlet sharedCount = packedStatus.sharedCount = (packedStatus.sharedCount || 0) + 1\n\t\t\t\t\t\t\t\tif (shareCount > (options.sharedPack.threshold || 5)) {\n\t\t\t\t\t\t\t\t\tlet sharedPosition = packedStatus.position = packedStatus.nextSharedPosition\n\t\t\t\t\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t\t\t\t\t\tif (sharedPosition < 16)\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = sharedPosition + 0xc0\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} // else any in-doc incrementation?*/\n\t\t\t\t\t} else if (samplingPackedValues && !options.pack) {\n\t\t\t\t\t\tlet status = samplingPackedValues.get(value)\n\t\t\t\t\t\tif (status)\n\t\t\t\t\t\t\tstatus.count++\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsamplingPackedValues.set(value, {\n\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet strLength = value.length\n\t\t\t\tif (bundledStrings && strLength >= 4 && strLength < 0x400) {\n\t\t\t\t\tif ((bundledStrings.size += strLength) > MAX_BUNDLE_SIZE) {\n\t\t\t\t\t\tlet extStart\n\t\t\t\t\t\tlet maxBytes = (bundledStrings[0] ? bundledStrings[0].length * 3 + bundledStrings[1].length : 0) + 10\n\t\t\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\t\t\t\t\t\ttarget[position++] = 0xd9 // tag 16-bit\n\t\t\t\t\t\ttarget[position++] = 0xdf // tag 0xdff9\n\t\t\t\t\t\ttarget[position++] = 0xf9\n\t\t\t\t\t\t// TODO: If we only have one bundle with any string data, only write one string bundle\n\t\t\t\t\t\ttarget[position++] = bundledStrings.position ? 0x84 : 0x82 // array of 4 or 2 elements depending on if we write bundles\n\t\t\t\t\t\ttarget[position++] = 0x1a // 32-bit unsigned int\n\t\t\t\t\t\textStart = position - start\n\t\t\t\t\t\tposition += 4 // reserve for writing bundle reference\n\t\t\t\t\t\tif (bundledStrings.position) {\n\t\t\t\t\t\t\twriteBundles(start, encode) // write the last bundles\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbundledStrings = ['', ''] // create new ones\n\t\t\t\t\t\tbundledStrings.size = 0\n\t\t\t\t\t\tbundledStrings.position = extStart\n\t\t\t\t\t}\n\t\t\t\t\tlet twoByte = hasNonLatin.test(value)\n\t\t\t\t\tbundledStrings[twoByte ? 0 : 1] += value\n\t\t\t\t\ttarget[position++] = twoByte ? 0xce : 0xcf\n\t\t\t\t\tencode(strLength);\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tlet headerSize\n\t\t\t\t// first we estimate the header size, so we can write to the correct location\n\t\t\t\tif (strLength < 0x20) {\n\t\t\t\t\theaderSize = 1\n\t\t\t\t} else if (strLength < 0x100) {\n\t\t\t\t\theaderSize = 2\n\t\t\t\t} else if (strLength < 0x10000) {\n\t\t\t\t\theaderSize = 3\n\t\t\t\t} else {\n\t\t\t\t\theaderSize = 5\n\t\t\t\t}\n\t\t\t\tlet maxBytes = strLength * 3\n\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\n\t\t\t\tif (strLength < 0x40 || !encodeUtf8) {\n\t\t\t\t\tlet i, c1, c2, strPosition = position + headerSize\n\t\t\t\t\tfor (i = 0; i < strLength; i++) {\n\t\t\t\t\t\tc1 = value.charCodeAt(i)\n\t\t\t\t\t\tif (c1 < 0x80) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1\n\t\t\t\t\t\t} else if (c1 < 0x800) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 | 0xc0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t(c1 & 0xfc00) === 0xd800 &&\n\t\t\t\t\t\t\t((c2 = value.charCodeAt(i + 1)) & 0xfc00) === 0xdc00\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tc1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff)\n\t\t\t\t\t\t\ti++\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 18 | 0xf0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 | 0xe0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlength = strPosition - position - headerSize\n\t\t\t\t} else {\n\t\t\t\t\tlength = encodeUtf8(value, position + headerSize, maxBytes)\n\t\t\t\t}\n\n\t\t\t\tif (length < 0x18) {\n\t\t\t\t\ttarget[position++] = 0x60 | length\n\t\t\t\t} else if (length < 0x100) {\n\t\t\t\t\tif (headerSize < 2) {\n\t\t\t\t\t\ttarget.copyWithin(position + 2, position + 1, position + 1 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x78\n\t\t\t\t\ttarget[position++] = length\n\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\tif (headerSize < 3) {\n\t\t\t\t\t\ttarget.copyWithin(position + 3, position + 2, position + 2 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x79\n\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t} else {\n\t\t\t\t\tif (headerSize < 5) {\n\t\t\t\t\t\ttarget.copyWithin(position + 5, position + 3, position + 3 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x7a\n\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\tposition += 4\n\t\t\t\t}\n\t\t\t\tposition += length\n\t\t\t} else if (type === 'number') {\n\t\t\t\tif (!this.alwaysUseFloat && value >>> 0 === value) {// positive integer, 32-bit or less\n\t\t\t\t\t// positive uint\n\t\t\t\t\tif (value < 0x18) {\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x100) {\n\t\t\t\t\t\ttarget[position++] = 0x18\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0x19\n\t\t\t\t\t\ttarget[position++] = value >> 8\n\t\t\t\t\t\ttarget[position++] = value & 0xff\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0x1a\n\t\t\t\t\t\ttargetView.setUint32(position, value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else if (!this.alwaysUseFloat && value >> 0 === value) { // negative integer\n\t\t\t\t\tif (value >= -0x18) {\n\t\t\t\t\t\ttarget[position++] = 0x1f - value\n\t\t\t\t\t} else if (value >= -0x100) {\n\t\t\t\t\t\ttarget[position++] = 0x38\n\t\t\t\t\t\ttarget[position++] = ~value\n\t\t\t\t\t} else if (value >= -0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0x39\n\t\t\t\t\t\ttargetView.setUint16(position, ~value)\n\t\t\t\t\t\tposition += 2\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0x3a\n\t\t\t\t\t\ttargetView.setUint32(position, ~value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet useFloat32\n\t\t\t\t\tif ((useFloat32 = this.useFloat32) > 0 && value < 0x100000000 && value >= -0x80000000) {\n\t\t\t\t\t\ttarget[position++] = 0xfa\n\t\t\t\t\t\ttargetView.setFloat32(position, value)\n\t\t\t\t\t\tlet xShifted\n\t\t\t\t\t\tif (useFloat32 < 4 ||\n\t\t\t\t\t\t\t\t// this checks for rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\t\t\t((xShifted = value * mult10[((target[position] & 0x7f) << 1) | (target[position + 1] >> 7)]) >> 0) === xShifted) {\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tposition-- // move back into position for writing a double\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xfb\n\t\t\t\t\ttargetView.setFloat64(position, value)\n\t\t\t\t\tposition += 8\n\t\t\t\t}\n\t\t\t} else if (type === 'object') {\n\t\t\t\tif (!value)\n\t\t\t\t\ttarget[position++] = 0xf6\n\t\t\t\telse {\n\t\t\t\t\tif (referenceMap) {\n\t\t\t\t\t\tlet referee = referenceMap.get(value)\n\t\t\t\t\t\tif (referee) {\n\t\t\t\t\t\t\ttarget[position++] = 0xd8\n\t\t\t\t\t\t\ttarget[position++] = 29 // http://cbor.schmorp.de/value-sharing\n\t\t\t\t\t\t\ttarget[position++] = 0x19 // 16-bit uint\n\t\t\t\t\t\t\tif (!referee.references) {\n\t\t\t\t\t\t\t\tlet idsToInsert = referenceMap.idsToInsert || (referenceMap.idsToInsert = [])\n\t\t\t\t\t\t\t\treferee.references = []\n\t\t\t\t\t\t\t\tidsToInsert.push(referee)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treferee.references.push(position - start)\n\t\t\t\t\t\t\tposition += 2 // TODO: also support 32-bit\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else \n\t\t\t\t\t\t\treferenceMap.set(value, { offset: position - start })\n\t\t\t\t\t}\n\t\t\t\t\tlet constructor = value.constructor\n\t\t\t\t\tif (constructor === Object) {\n\t\t\t\t\t\twriteObject(value)\n\t\t\t\t\t} else if (constructor === Array) {\n\t\t\t\t\t\tlength = value.length\n\t\t\t\t\t\tif (length < 0x18) {\n\t\t\t\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twriteArrayHeader(length)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\t\tencode(value[i])\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (constructor === Map) {\n\t\t\t\t\t\tif (this.mapsAsObjects ? this.useTag259ForMaps !== false : this.useTag259ForMaps) {\n\t\t\t\t\t\t\t// use Tag 259 (https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec--explicit-maps.md) for maps if the user wants it that way\n\t\t\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\t\t\ttarget[position++] = 1\n\t\t\t\t\t\t\ttarget[position++] = 3\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlength = value.size\n\t\t\t\t\t\tif (length < 0x18) {\n\t\t\t\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t\t\t\t} else if (length < 0x100) {\n\t\t\t\t\t\t\ttarget[position++] = 0xb8\n\t\t\t\t\t\t\ttarget[position++] = length\n\t\t\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\t\t\ttarget[position++] = 0xb9\n\t\t\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[position++] = 0xba\n\t\t\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (encoder.keyMap) { \n\t\t\t\t\t\t\tfor (let [ key, entryValue ] of value) {\n\t\t\t\t\t\t\t\tencode(encoder.encodeKey(key))\n\t\t\t\t\t\t\t\tencode(entryValue)\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} else { \n\t\t\t\t\t\t\tfor (let [ key, entryValue ] of value) {\n\t\t\t\t\t\t\t\tencode(key) \n\t\t\t\t\t\t\t\tencode(entryValue)\n\t\t\t\t\t\t\t} \t\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let i = 0, l = extensions.length; i < l; i++) {\n\t\t\t\t\t\t\tlet extensionClass = extensionClasses[i]\n\t\t\t\t\t\t\tif (value instanceof extensionClass) {\n\t\t\t\t\t\t\t\tlet extension = extensions[i]\n\t\t\t\t\t\t\t\tlet tag = extension.tag\n\t\t\t\t\t\t\t\tif (tag == undefined)\n\t\t\t\t\t\t\t\t\ttag = extension.getTag && extension.getTag.call(this, value)\n\t\t\t\t\t\t\t\tif (tag < 0x18) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xc0 | tag\n\t\t\t\t\t\t\t\t} else if (tag < 0x100) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd8\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag\n\t\t\t\t\t\t\t\t} else if (tag < 0x10000) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag >> 8\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag & 0xff\n\t\t\t\t\t\t\t\t} else if (tag > -1) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xda\n\t\t\t\t\t\t\t\t\ttargetView.setUint32(position, tag)\n\t\t\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\t\t} // else undefined, don't write tag\n\t\t\t\t\t\t\t\textension.encode.call(this, value, encode, makeRoom)\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value[Symbol.iterator]) {\n\t\t\t\t\t\t\tif (throwOnIterable) {\n\t\t\t\t\t\t\t\tlet error = new Error('Iterable should be serialized as iterator')\n\t\t\t\t\t\t\t\terror.iteratorNotHandled = true;\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0x9f // indefinite length array\n\t\t\t\t\t\t\tfor (let entry of value) {\n\t\t\t\t\t\t\t\tencode(entry)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0xff // stop-code\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value[Symbol.asyncIterator] || isBlob(value)) {\n\t\t\t\t\t\t\tlet error = new Error('Iterable/blob should be serialized as iterator')\n\t\t\t\t\t\t\terror.iteratorNotHandled = true;\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.useToJSON && value.toJSON) {\n\t\t\t\t\t\t\tconst json = value.toJSON()\n\t\t\t\t\t\t\t// if for some reason value.toJSON returns itself it'll loop forever\n\t\t\t\t\t\t\tif (json !== value)\n\t\t\t\t\t\t\t\treturn encode(json)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// no extension found, write as a plain object\n\t\t\t\t\t\twriteObject(value)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'boolean') {\n\t\t\t\ttarget[position++] = value ? 0xf5 : 0xf4\n\t\t\t} else if (type === 'bigint') {\n\t\t\t\tif (value < (BigInt(1)<<BigInt(64)) && value >= 0) {\n\t\t\t\t\t// use an unsigned int as long as it fits\n\t\t\t\t\ttarget[position++] = 0x1b\n\t\t\t\t\ttargetView.setBigUint64(position, value)\n\t\t\t\t} else if (value > -(BigInt(1)<<BigInt(64)) && value < 0) {\n\t\t\t\t\t// if we can fit an unsigned int, use that\n\t\t\t\t\ttarget[position++] = 0x3b\n\t\t\t\t\ttargetView.setBigUint64(position, -value - BigInt(1))\n\t\t\t\t} else {\n\t\t\t\t\t// overflow\n\t\t\t\t\tif (this.largeBigIntToFloat) {\n\t\t\t\t\t\ttarget[position++] = 0xfb\n\t\t\t\t\t\ttargetView.setFloat64(position, Number(value))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (value >= BigInt(0))\n\t\t\t\t\t\t\ttarget[position++] = 0xc2 // tag 2\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttarget[position++] = 0xc3 // tag 2\n\t\t\t\t\t\t\tvalue = BigInt(-1) - value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet bytes = [];\n\t\t\t\t\t\twhile (value) {\n\t\t\t\t\t\t\tbytes.push(Number(value & BigInt(0xff)));\n\t\t\t\t\t\t\tvalue >>= BigInt(8);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twriteBuffer(new Uint8Array(bytes.reverse()), makeRoom);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tposition += 8\n\t\t\t} else if (type === 'undefined') {\n\t\t\t\ttarget[position++] = 0xf7\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown type: ' + type)\n\t\t\t}\n\t\t}\n\n\t\tconst writeObject = this.useRecords === false ? this.variableMapSize ? (object) => {\n\t\t\t// this method is slightly slower, but generates \"preferred serialization\" (optimally small for smaller objects)\n\t\t\tlet keys = Object.keys(object)\n\t\t\tlet vals = Object.values(object)\n\t\t\tlet length = keys.length\n\t\t\tif (length < 0x18) {\n\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t} else if (length < 0x100) {\n\t\t\t\ttarget[position++] = 0xb8\n\t\t\t\ttarget[position++] = length\n\t\t\t} else if (length < 0x10000) {\n\t\t\t\ttarget[position++] = 0xb9\n\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t} else {\n\t\t\t\ttarget[position++] = 0xba\n\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\tposition += 4\n\t\t\t}\n\t\t\tlet key\n\t\t\tif (encoder.keyMap) { \n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tencode(encoder.encodeKey(keys[i]))\n\t\t\t\t\tencode(vals[i])\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tencode(keys[i])\n\t\t\t\t\tencode(vals[i])\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\t\t(object) => {\n\t\t\ttarget[position++] = 0xb9 // always use map 16, so we can preallocate and set the length afterwards\n\t\t\tlet objectOffset = position - start\n\t\t\tposition += 2\n\t\t\tlet size = 0\n\t\t\tif (encoder.keyMap) {\n\t\t\t\tfor (let key in object) if (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\tencode(encoder.encodeKey(key))\n\t\t\t\t\tencode(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t} else { \n\t\t\t\tfor (let key in object) if (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\t\tencode(key)\n\t\t\t\t\t\tencode(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t}\n\t\t\ttarget[objectOffset++ + start] = size >> 8\n\t\t\ttarget[objectOffset + start] = size & 0xff\n\t\t} :\n\t\t(object, skipValues) => {\n\t\t\tlet nextTransition, transition = structures.transitions || (structures.transitions = Object.create(null))\n\t\t\tlet newTransitions = 0\n\t\t\tlet length = 0\n\t\t\tlet parentRecordId\n\t\t\tlet keys\n\t\t\tif (this.keyMap) {\n\t\t\t\tkeys = Object.keys(object).map(k => this.encodeKey(k))\n\t\t\t\tlength = keys.length\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet key = keys[i]\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t}\n\t\t\t\t\ttransition = nextTransition\n\t\t\t\t}\t\t\t\t\n\t\t\t} else {\n\t\t\t\tfor (let key in object) if (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\tif (transition[RECORD_SYMBOL] & 0x100000) {// this indicates it is a brancheable/extendable terminal node, so we will use this record id and extend it\n\t\t\t\t\t\t\tparentRecordId = transition[RECORD_SYMBOL] & 0xffff\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t}\n\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\tlength++\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet recordId = transition[RECORD_SYMBOL]\n\t\t\tif (recordId !== undefined) {\n\t\t\t\trecordId &= 0xffff\n\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\ttarget[position++] = (recordId >> 8) | 0xe0\n\t\t\t\ttarget[position++] = recordId & 0xff\n\t\t\t} else {\n\t\t\t\tif (!keys)\n\t\t\t\t\tkeys = transition.__keys__ || (transition.__keys__ = Object.keys(object))\n\t\t\t\tif (parentRecordId === undefined) {\n\t\t\t\t\trecordId = structures.nextId++\n\t\t\t\t\tif (!recordId) {\n\t\t\t\t\t\trecordId = 0\n\t\t\t\t\t\tstructures.nextId = 1\n\t\t\t\t\t}\n\t\t\t\t\tif (recordId >= MAX_STRUCTURES) {// cycle back around\n\t\t\t\t\t\tstructures.nextId = (recordId = maxSharedStructures) + 1\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trecordId = parentRecordId\n\t\t\t\t}\n\t\t\t\tstructures[recordId] = keys\n\t\t\t\tif (recordId < maxSharedStructures) {\n\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\ttarget[position++] = (recordId >> 8) | 0xe0\n\t\t\t\t\ttarget[position++] = recordId & 0xff\n\t\t\t\t\ttransition = structures.transitions\n\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\tif (transition[RECORD_SYMBOL] === undefined || (transition[RECORD_SYMBOL] & 0x100000))\n\t\t\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\t\t\t\ttransition = transition[keys[i]]\n\t\t\t\t\t}\n\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId | 0x100000 // indicates it is a extendable terminal\n\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t} else {\n\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\t\t\ttargetView.setUint32(position, 0xd9dfff00) // tag two byte, then record definition id\n\t\t\t\t\tposition += 3\n\t\t\t\t\tif (newTransitions)\n\t\t\t\t\t\ttransitionsCount += serializationsSinceTransitionRebuild * newTransitions\n\t\t\t\t\t// record the removal of the id, we can maintain our shared structure\n\t\t\t\t\tif (recordIdsToRemove.length >= MAX_STRUCTURES - maxSharedStructures)\n\t\t\t\t\t\trecordIdsToRemove.shift()[RECORD_SYMBOL] = undefined // we are cycling back through, and have to remove old ones\n\t\t\t\t\trecordIdsToRemove.push(transition)\n\t\t\t\t\twriteArrayHeader(length + 2)\n\t\t\t\t\tencode(0xe000 + recordId)\n\t\t\t\t\tencode(keys)\n\t\t\t\t\tif (skipValues) return; // special exit for iterator\n\t\t\t\t\tfor (let key in object)\n\t\t\t\t\t\tif (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key))\n\t\t\t\t\t\t\tencode(object[key])\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (length < 0x18) { // write the array header\n\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t} else {\n\t\t\t\twriteArrayHeader(length)\n\t\t\t}\n\t\t\tif (skipValues) return; // special exit for iterator\n\t\t\tfor (let key in object)\n\t\t\t\tif (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key))\n\t\t\t\t\tencode(object[key])\n\t\t}\n\t\tconst makeRoom = (end) => {\n\t\t\tlet newSize\n\t\t\tif (end > 0x1000000) {\n\t\t\t\t// special handling for really large buffers\n\t\t\t\tif ((end - start) > MAX_BUFFER_SIZE)\n\t\t\t\t\tthrow new Error('Encoded buffer would be larger than maximum buffer size')\n\t\t\t\tnewSize = Math.min(MAX_BUFFER_SIZE,\n\t\t\t\t\tMath.round(Math.max((end - start) * (end > 0x4000000 ? 1.25 : 2), 0x400000) / 0x1000) * 0x1000)\n\t\t\t} else // faster handling for smaller buffers\n\t\t\t\tnewSize = ((Math.max((end - start) << 2, target.length - 1) >> 12) + 1) << 12\n\t\t\tlet newBuffer = new ByteArrayAllocate(newSize)\n\t\t\ttargetView = new DataView(newBuffer.buffer, 0, newSize)\n\t\t\tif (target.copy)\n\t\t\t\ttarget.copy(newBuffer, 0, start, end)\n\t\t\telse\n\t\t\t\tnewBuffer.set(target.slice(start, end))\n\t\t\tposition -= start\n\t\t\tstart = 0\n\t\t\tsafeEnd = newBuffer.length - 10\n\t\t\treturn target = newBuffer\n\t\t}\n\t\tlet chunkThreshold = 100;\n\t\tlet continuedChunkThreshold = 1000;\n\t\tthis.encodeAsIterable = function(value, options) {\n\t\t\treturn startEncoding(value, options, encodeObjectAsIterable);\n\t\t}\n\t\tthis.encodeAsAsyncIterable = function(value, options) {\n\t\t\treturn startEncoding(value, options, encodeObjectAsAsyncIterable);\n\t\t}\n\n\t\tfunction* encodeObjectAsIterable(object, iterateProperties, finalIterable) {\n\t\t\tlet constructor = object.constructor;\n\t\t\tif (constructor === Object) {\n\t\t\t\tlet useRecords = encoder.useRecords !== false;\n\t\t\t\tif (useRecords)\n\t\t\t\t\twriteObject(object, true); // write the record identifier\n\t\t\t\telse\n\t\t\t\t\twriteEntityLength(Object.keys(object).length, 0xa0);\n\t\t\t\tfor (let key in object) {\n\t\t\t\t\tlet value = object[key];\n\t\t\t\t\tif (!useRecords) encode(key);\n\t\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\t\tif (iterateProperties[key])\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties[key]);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, key);\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t} else if (constructor === Array) {\n\t\t\t\tlet length = object.length;\n\t\t\t\twriteArrayHeader(length);\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet value = object[i];\n\t\t\t\t\tif (value && (typeof value === 'object' || position - start > chunkThreshold)) {\n\t\t\t\t\t\tif (iterateProperties.element)\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties.element);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, 'element');\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t} else if (object[Symbol.iterator] && !object.buffer) { // iterator, but exclude typed arrays\n\t\t\t\ttarget[position++] = 0x9f; // start indefinite array\n\t\t\t\tfor (let value of object) {\n\t\t\t\t\tif (value && (typeof value === 'object' || position - start > chunkThreshold)) {\n\t\t\t\t\t\tif (iterateProperties.element)\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties.element);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, 'element');\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t\ttarget[position++] = 0xff; // stop byte\n\t\t\t} else if (isBlob(object)){\n\t\t\t\twriteEntityLength(object.size, 0x40); // encode as binary data\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\tyield object; // directly return blobs, they have to be encoded asynchronously\n\t\t\t\trestartEncoding();\n\t\t\t} else if (object[Symbol.asyncIterator]) {\n\t\t\t\ttarget[position++] = 0x9f; // start indefinite array\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\tyield object; // directly return async iterators, they have to be encoded asynchronously\n\t\t\t\trestartEncoding();\n\t\t\t\ttarget[position++] = 0xff; // stop byte\n\t\t\t} else {\n\t\t\t\tencode(object);\n\t\t\t}\n\t\t\tif (finalIterable && position > start) yield target.subarray(start, position);\n\t\t\telse if (position - start > chunkThreshold) {\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\trestartEncoding();\n\t\t\t}\n\t\t}\n\t\tfunction* tryEncode(value, iterateProperties, key) {\n\t\t\tlet restart = position - start;\n\t\t\ttry {\n\t\t\t\tencode(value);\n\t\t\t\tif (position - start > chunkThreshold) {\n\t\t\t\t\tyield target.subarray(start, position);\n\t\t\t\t\trestartEncoding();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (error.iteratorNotHandled) {\n\t\t\t\t\titerateProperties[key] = {};\n\t\t\t\t\tposition = start + restart; // restart our position so we don't have partial data from last encode\n\t\t\t\t\tyield* encodeObjectAsIterable.call(this, value, iterateProperties[key]);\n\t\t\t\t} else throw error;\n\t\t\t}\n\t\t}\n\t\tfunction restartEncoding() {\n\t\t\tchunkThreshold = continuedChunkThreshold;\n\t\t\tencoder.encode(null, THROW_ON_ITERABLE); // restart encoding\n\t\t}\n\t\tfunction startEncoding(value, options, encodeIterable) {\n\t\t\tif (options && options.chunkThreshold) // explicitly specified chunk sizes\n\t\t\t\tchunkThreshold = continuedChunkThreshold = options.chunkThreshold;\n\t\t\telse // we start with a smaller threshold to get initial bytes sent quickly\n\t\t\t\tchunkThreshold = 100;\n\t\t\tif (value && typeof value === 'object') {\n\t\t\t\tencoder.encode(null, THROW_ON_ITERABLE); // start encoding\n\t\t\t\treturn encodeIterable(value, encoder.iterateProperties || (encoder.iterateProperties = {}), true);\n\t\t\t}\n\t\t\treturn [encoder.encode(value)];\n\t\t}\n\n\t\tasync function* encodeObjectAsAsyncIterable(value, iterateProperties) {\n\t\t\tfor (let encodedValue of encodeObjectAsIterable(value, iterateProperties, true)) {\n\t\t\t\tlet constructor = encodedValue.constructor;\n\t\t\t\tif (constructor === ByteArray || constructor === Uint8Array)\n\t\t\t\t\tyield encodedValue;\n\t\t\t\telse if (isBlob(encodedValue)) {\n\t\t\t\t\tlet reader = encodedValue.stream().getReader();\n\t\t\t\t\tlet next;\n\t\t\t\t\twhile (!(next = await reader.read()).done) {\n\t\t\t\t\t\tyield next.value;\n\t\t\t\t\t}\n\t\t\t\t} else if (encodedValue[Symbol.asyncIterator]) {\n\t\t\t\t\tfor await (let asyncValue of encodedValue) {\n\t\t\t\t\t\trestartEncoding();\n\t\t\t\t\t\tif (asyncValue)\n\t\t\t\t\t\t\tyield* encodeObjectAsAsyncIterable(asyncValue, iterateProperties.async || (iterateProperties.async = {}));\n\t\t\t\t\t\telse yield encoder.encode(asyncValue);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tyield encodedValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tuseBuffer(buffer) {\n\t\t// this means we are finished using our own buffer and we can write over it safely\n\t\ttarget = buffer\n\t\ttargetView = new DataView(target.buffer, target.byteOffset, target.byteLength)\n\t\tposition = 0\n\t}\n\tclearSharedData() {\n\t\tif (this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.sharedValues)\n\t\t\tthis.sharedValues = undefined\n\t}\n\tupdateSharedData() {\n\t\tlet lastVersion = this.sharedVersion || 0\n\t\tthis.sharedVersion = lastVersion + 1\n\t\tlet structuresCopy = this.structures.slice(0)\n\t\tlet sharedData = new SharedData(structuresCopy, this.sharedValues, this.sharedVersion)\n\t\tlet saveResults = this.saveShared(sharedData,\n\t\t\t\texistingShared => (existingShared && existingShared.version || 0) == lastVersion)\n\t\tif (saveResults === false) {\n\t\t\t// get updated structures and try again if the update failed\n\t\t\tsharedData = this.getShared() || {}\n\t\t\tthis.structures = sharedData.structures || []\n\t\t\tthis.sharedValues = sharedData.packedValues\n\t\t\tthis.sharedVersion = sharedData.version\n\t\t\tthis.structures.nextId = this.structures.length\n\t\t} else {\n\t\t\t// restore structures\n\t\t\tstructuresCopy.forEach((structure, i) => this.structures[i] = structure)\n\t\t}\n\t\t// saveShared may fail to write and reload, or may have reloaded to check compatibility and overwrite saved data, either way load the correct shared data\n\t\treturn saveResults\n\t}\n}\nfunction writeEntityLength(length, majorValue) {\n\tif (length < 0x18)\n\t\ttarget[position++] = majorValue | length\n\telse if (length < 0x100) {\n\t\ttarget[position++] = majorValue | 0x18\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = majorValue | 0x19\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = majorValue | 0x1a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\n}\nclass SharedData {\n\tconstructor(structures, values, version) {\n\t\tthis.structures = structures\n\t\tthis.packedValues = values\n\t\tthis.version = version\n\t}\n}\n\nfunction writeArrayHeader(length) {\n\tif (length < 0x18)\n\t\ttarget[position++] = 0x80 | length\n\telse if (length < 0x100) {\n\t\ttarget[position++] = 0x98\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = 0x99\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = 0x9a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n}\n\nconst BlobConstructor = typeof Blob === 'undefined' ? function(){} : Blob;\nfunction isBlob(object) {\n\tif (object instanceof BlobConstructor)\n\t\treturn true;\n\tlet tag = object[Symbol.toStringTag];\n\treturn tag === 'Blob' || tag === 'File';\n}\nfunction findRepetitiveStrings(value, packedValues) {\n\tswitch(typeof value) {\n\t\tcase 'string':\n\t\t\tif (value.length > 3) {\n\t\t\t\tif (packedValues.objectMap[value] > -1 || packedValues.values.length >= packedValues.maxValues)\n\t\t\t\t\treturn\n\t\t\t\tlet packedStatus = packedValues.get(value)\n\t\t\t\tif (packedStatus) {\n\t\t\t\t\tif (++packedStatus.count == 2) {\n\t\t\t\t\t\tpackedValues.values.push(value)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpackedValues.set(value, {\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t})\n\t\t\t\t\tif (packedValues.samplingPackedValues) {\n\t\t\t\t\t\tlet status = packedValues.samplingPackedValues.get(value)\n\t\t\t\t\t\tif (status)\n\t\t\t\t\t\t\tstatus.count++\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpackedValues.samplingPackedValues.set(value, {\n\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'object':\n\t\t\tif (value) {\n\t\t\t\tif (value instanceof Array) {\n\t\t\t\t\tfor (let i = 0, l = value.length; i < l; i++) {\n\t\t\t\t\t\tfindRepetitiveStrings(value[i], packedValues)\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tlet includeKeys = !packedValues.encoder.useRecords\n\t\t\t\t\tfor (var key in value) {\n\t\t\t\t\t\tif (value.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tif (includeKeys)\n\t\t\t\t\t\t\t\tfindRepetitiveStrings(key, packedValues)\n\t\t\t\t\t\t\tfindRepetitiveStrings(value[key], packedValues)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'function': console.log(value)\n\t}\n}\nconst isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1\nextensionClasses = [ Date, Set, Error, RegExp, Tag, ArrayBuffer,\n\tUint8Array, Uint8ClampedArray, Uint16Array, Uint32Array,\n\ttypeof BigUint64Array == 'undefined' ? function() {} : BigUint64Array, Int8Array, Int16Array, Int32Array,\n\ttypeof BigInt64Array == 'undefined' ? function() {} : BigInt64Array,\n\tFloat32Array, Float64Array, SharedData ]\n\n//Object.getPrototypeOf(Uint8Array.prototype).constructor /*TypedArray*/\nextensions = [{ // Date\n\ttag: 1,\n\tencode(date, encode) {\n\t\tlet seconds = date.getTime() / 1000\n\t\tif ((this.useTimestamp32 || date.getMilliseconds() === 0) && seconds >= 0 && seconds < 0x100000000) {\n\t\t\t// Timestamp 32\n\t\t\ttarget[position++] = 0x1a\n\t\t\ttargetView.setUint32(position, seconds)\n\t\t\tposition += 4\n\t\t} else {\n\t\t\t// Timestamp float64\n\t\t\ttarget[position++] = 0xfb\n\t\t\ttargetView.setFloat64(position, seconds)\n\t\t\tposition += 8\n\t\t}\n\t}\n}, { // Set\n\ttag: 258, // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n\tencode(set, encode) {\n\t\tlet array = Array.from(set)\n\t\tencode(array)\n\t}\n}, { // Error\n\ttag: 27, // http://cbor.schmorp.de/generic-object\n\tencode(error, encode) {\n\t\tencode([ error.name, error.message ])\n\t}\n}, { // RegExp\n\ttag: 27, // http://cbor.schmorp.de/generic-object\n\tencode(regex, encode) {\n\t\tencode([ 'RegExp', regex.source, regex.flags ])\n\t}\n}, { // Tag\n\tgetTag(tag) {\n\t\treturn tag.tag\n\t},\n\tencode(tag, encode) {\n\t\tencode(tag.value)\n\t}\n}, { // ArrayBuffer\n\tencode(arrayBuffer, encode, makeRoom) {\n\t\twriteBuffer(arrayBuffer, makeRoom)\n\t}\n}, { // Uint8Array\n\tgetTag(typedArray) {\n\t\tif (typedArray.constructor === Uint8Array) {\n\t\t\tif (this.tagUint8Array || hasNodeBuffer && this.tagUint8Array !== false)\n\t\t\t\treturn 64;\n\t\t} // else no tag\n\t},\n\tencode(typedArray, encode, makeRoom) {\n\t\twriteBuffer(typedArray, makeRoom)\n\t}\n},\n\ttypedArrayEncoder(68, 1),\n\ttypedArrayEncoder(69, 2),\n\ttypedArrayEncoder(70, 4),\n\ttypedArrayEncoder(71, 8),\n\ttypedArrayEncoder(72, 1),\n\ttypedArrayEncoder(77, 2),\n\ttypedArrayEncoder(78, 4),\n\ttypedArrayEncoder(79, 8),\n\ttypedArrayEncoder(85, 4),\n\ttypedArrayEncoder(86, 8),\n{\n\tencode(sharedData, encode) { // write SharedData\n\t\tlet packedValues = sharedData.packedValues || []\n\t\tlet sharedStructures = sharedData.structures || []\n\t\tif (packedValues.values.length > 0) {\n\t\t\ttarget[position++] = 0xd8 // one-byte tag\n\t\t\ttarget[position++] = 51 // tag 51 for packed shared structures https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\twriteArrayHeader(4)\n\t\t\tlet valuesArray = packedValues.values\n\t\t\tencode(valuesArray)\n\t\t\twriteArrayHeader(0) // prefixes\n\t\t\twriteArrayHeader(0) // suffixes\n\t\t\tpackedObjectMap = Object.create(sharedPackedObjectMap || null)\n\t\t\tfor (let i = 0, l = valuesArray.length; i < l; i++) {\n\t\t\t\tpackedObjectMap[valuesArray[i]] = i\n\t\t\t}\n\t\t}\n\t\tif (sharedStructures) {\n\t\t\ttargetView.setUint32(position, 0xd9dffe00)\n\t\t\tposition += 3\n\t\t\tlet definitions = sharedStructures.slice(0)\n\t\t\tdefinitions.unshift(0xe000)\n\t\t\tdefinitions.push(new Tag(sharedData.version, 0x53687264))\n\t\t\tencode(definitions)\n\t\t} else\n\t\t\tencode(new Tag(sharedData.version, 0x53687264))\n\t\t}\n\t}]\nfunction typedArrayEncoder(tag, size) {\n\tif (!isLittleEndianMachine && size > 1)\n\t\ttag -= 4 // the big endian equivalents are 4 less\n\treturn {\n\t\ttag: tag,\n\t\tencode: function writeExtBuffer(typedArray, encode) {\n\t\t\tlet length = typedArray.byteLength\n\t\t\tlet offset = typedArray.byteOffset || 0\n\t\t\tlet buffer = typedArray.buffer || typedArray\n\t\t\tencode(hasNodeBuffer ? Buffer.from(buffer, offset, length) :\n\t\t\t\tnew Uint8Array(buffer, offset, length))\n\t\t}\n\t}\n}\nfunction writeBuffer(buffer, makeRoom) {\n\tlet length = buffer.byteLength\n\tif (length < 0x18) {\n\t\ttarget[position++] = 0x40 + length\n\t} else if (length < 0x100) {\n\t\ttarget[position++] = 0x58\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = 0x59\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = 0x5a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\tif (position + length >= target.length) {\n\t\tmakeRoom(position + length)\n\t}\n\t// if it is already a typed array (has an ArrayBuffer), use that, but if it is an ArrayBuffer itself,\n\t// must wrap it to set it.\n\ttarget.set(buffer.buffer ? buffer : new Uint8Array(buffer), position)\n\tposition += length\n}\n\nfunction insertIds(serialized, idsToInsert) {\n\t// insert the ids that need to be referenced for structured clones\n\tlet nextId\n\tlet distanceToMove = idsToInsert.length * 2\n\tlet lastEnd = serialized.length - distanceToMove\n\tidsToInsert.sort((a, b) => a.offset > b.offset ? 1 : -1)\n\tfor (let id = 0; id < idsToInsert.length; id++) {\n\t\tlet referee = idsToInsert[id]\n\t\treferee.id = id\n\t\tfor (let position of referee.references) {\n\t\t\tserialized[position++] = id >> 8\n\t\t\tserialized[position] = id & 0xff\n\t\t}\n\t}\n\twhile (nextId = idsToInsert.pop()) {\n\t\tlet offset = nextId.offset\n\t\tserialized.copyWithin(offset + distanceToMove, offset, lastEnd)\n\t\tdistanceToMove -= 2\n\t\tlet position = offset + distanceToMove\n\t\tserialized[position++] = 0xd8\n\t\tserialized[position++] = 28 // http://cbor.schmorp.de/value-sharing\n\t\tlastEnd = offset\n\t}\n\treturn serialized\n}\nfunction writeBundles(start, encode) {\n\ttargetView.setUint32(bundledStrings.position + start, position - bundledStrings.position - start + 1) // the offset to bundle\n\tlet writeStrings = bundledStrings\n\tbundledStrings = null\n\tencode(writeStrings[0])\n\tencode(writeStrings[1])\n}\n\nexport function addExtension(extension) {\n\tif (extension.Class) {\n\t\tif (!extension.encode)\n\t\t\tthrow new Error('Extension has no encode function')\n\t\textensionClasses.unshift(extension.Class)\n\t\textensions.unshift(extension)\n\t}\n\tdecodeAddExtension(extension)\n}\nlet defaultEncoder = new Encoder({ useRecords: false })\nexport const encode = defaultEncoder.encode\nexport const encodeAsIterable = defaultEncoder.encodeAsIterable\nexport const encodeAsAsyncIterable = defaultEncoder.encodeAsAsyncIterable\nexport { FLOAT32_OPTIONS } from './decode.js'\nimport { FLOAT32_OPTIONS } from './decode.js'\nexport const { NEVER, ALWAYS, DECIMAL_ROUND, DECIMAL_FIT } = FLOAT32_OPTIONS\nexport const REUSE_BUFFER_MODE = 512\nexport const RESET_BUFFER_MODE = 1024\nexport const THROW_ON_ITERABLE = 2048\n\n\n","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\n/**\n * 4KB JS implementation of ed25519 EdDSA signatures.\n * Compliant with RFC8032, FIPS 186-5 & ZIP215.\n * @module\n * @example\n * ```js\nimport * as ed from '@noble/ed25519';\n(async () => {\n  const privKey = ed.utils.randomPrivateKey();\n  const message = Uint8Array.from([0xab, 0xbc, 0xcd, 0xde]);\n  const pubKey = await ed.getPublicKeyAsync(privKey); // Sync methods are also present\n  const signature = await ed.signAsync(message, privKey);\n  const isValid = await ed.verifyAsync(signature, message, pubKey);\n})();\n```\n */\n/**\n * Curve params. ed25519 is twisted edwards curve. Equation is −x² + y² = -a + dx²y².\n * * P = `2n**255n - 19n` // field over which calculations are done\n * * N = `2n**252n + 27742317777372353535851937790883648493n` // group order, amount of curve points\n * * h = 8 // cofactor\n * * a = `Fp.create(BigInt(-1))` // equation param\n * * d = -121665/121666 a.k.a. `Fp.neg(121665 * Fp.inv(121666))` // equation param\n * * Gx, Gy are coordinates of Generator / base point\n */\nconst ed25519_CURVE = {\n    p: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffedn,\n    n: 0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3edn,\n    h: 8n,\n    a: 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffecn,\n    d: 0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3n,\n    Gx: 0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51an,\n    Gy: 0x6666666666666666666666666666666666666666666666666666666666666658n,\n};\nconst { p: P, n: N, Gx, Gy, a: _a, d: _d } = ed25519_CURVE;\nconst h = 8n; // cofactor\nconst L = 32; // field / group byte length\nconst L2 = 64;\n// Helpers and Precomputes sections are reused between libraries\n// ## Helpers\n// ----------\n// error helper, messes-up stack trace\nconst err = (m = '') => {\n    throw new Error(m);\n};\nconst isBig = (n) => typeof n === 'bigint'; // is big integer\nconst isStr = (s) => typeof s === 'string'; // is string\nconst isBytes = (a) => a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n/** assert is Uint8Array (of specific length) */\nconst abytes = (a, l) => !isBytes(a) || (typeof l === 'number' && l > 0 && a.length !== l)\n    ? err('Uint8Array expected')\n    : a;\n/** create Uint8Array */\nconst u8n = (len) => new Uint8Array(len);\nconst u8fr = (buf) => Uint8Array.from(buf);\nconst padh = (n, pad) => n.toString(16).padStart(pad, '0');\nconst bytesToHex = (b) => Array.from(abytes(b))\n    .map((e) => padh(e, 2))\n    .join('');\nconst C = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 }; // ASCII characters\nconst _ch = (ch) => {\n    if (ch >= C._0 && ch <= C._9)\n        return ch - C._0; // '2' => 50-48\n    if (ch >= C.A && ch <= C.F)\n        return ch - (C.A - 10); // 'B' => 66-(65-10)\n    if (ch >= C.a && ch <= C.f)\n        return ch - (C.a - 10); // 'b' => 98-(97-10)\n    return;\n};\nconst hexToBytes = (hex) => {\n    const e = 'hex invalid';\n    if (!isStr(hex))\n        return err(e);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        return err(e);\n    const array = u8n(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        // treat each char as ASCII\n        const n1 = _ch(hex.charCodeAt(hi)); // parse first char, multiply it by 16\n        const n2 = _ch(hex.charCodeAt(hi + 1)); // parse second char\n        if (n1 === undefined || n2 === undefined)\n            return err(e);\n        array[ai] = n1 * 16 + n2; // example: 'A9' => 10*16 + 9\n    }\n    return array;\n};\n/** normalize hex or ui8a to ui8a */\nconst toU8 = (a, len) => abytes(isStr(a) ? hexToBytes(a) : u8fr(abytes(a)), len);\nconst cr = () => globalThis?.crypto; // WebCrypto is available in all modern environments\nconst subtle = () => cr()?.subtle ?? err('crypto.subtle must be defined');\n// prettier-ignore\nconst concatBytes = (...arrs) => {\n    const r = u8n(arrs.reduce((sum, a) => sum + abytes(a).length, 0)); // create u8a of summed length\n    let pad = 0; // walk through each array,\n    arrs.forEach(a => { r.set(a, pad); pad += a.length; }); // ensure they have proper type\n    return r;\n};\n/** WebCrypto OS-level CSPRNG (random number generator). Will throw when not available. */\nconst randomBytes = (len = L) => {\n    const c = cr();\n    return c.getRandomValues(u8n(len));\n};\nconst big = BigInt;\nconst arange = (n, min, max, msg = 'bad number: out of range') => isBig(n) && min <= n && n < max ? n : err(msg);\n/** modular division */\nconst M = (a, b = P) => {\n    const r = a % b;\n    return r >= 0n ? r : b + r;\n};\nconst modN = (a) => M(a, N);\n/** Modular inversion using eucledian GCD (non-CT). No negative exponent for now. */\n// prettier-ignore\nconst invert = (num, md) => {\n    if (num === 0n || md <= 0n)\n        err('no inverse n=' + num + ' mod=' + md);\n    let a = M(num, md), b = md, x = 0n, y = 1n, u = 1n, v = 0n;\n    while (a !== 0n) {\n        const q = b / a, r = b % a;\n        const m = x - u * q, n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    return b === 1n ? M(x, md) : err('no inverse'); // b is gcd at this point\n};\nconst callHash = (name) => {\n    // @ts-ignore\n    const fn = etc[name];\n    if (typeof fn !== 'function')\n        err('hashes.' + name + ' not set');\n    return fn;\n};\nconst apoint = (p) => (p instanceof Point ? p : err('Point expected'));\n// ## End of Helpers\n// -----------------\nconst B256 = 2n ** 256n;\n/** Point in XYZT extended coordinates. */\nclass Point {\n    static BASE;\n    static ZERO;\n    ex;\n    ey;\n    ez;\n    et;\n    constructor(ex, ey, ez, et) {\n        const max = B256;\n        this.ex = arange(ex, 0n, max);\n        this.ey = arange(ey, 0n, max);\n        this.ez = arange(ez, 1n, max);\n        this.et = arange(et, 0n, max);\n        Object.freeze(this);\n    }\n    static fromAffine(p) {\n        return new Point(p.x, p.y, 1n, M(p.x * p.y));\n    }\n    /** RFC8032 5.1.3: Uint8Array to Point. */\n    static fromBytes(hex, zip215 = false) {\n        const d = _d;\n        // Copy array to not mess it up.\n        const normed = u8fr(abytes(hex, L));\n        // adjust first LE byte = last BE byte\n        const lastByte = hex[31];\n        normed[31] = lastByte & ~0x80;\n        const y = bytesToNumLE(normed);\n        // zip215=true:           0 <= y < 2^256\n        // zip215=false, RFC8032: 0 <= y < 2^255-19\n        const max = zip215 ? B256 : P;\n        arange(y, 0n, max);\n        const y2 = M(y * y); // y²\n        const u = M(y2 - 1n); // u=y²-1\n        const v = M(d * y2 + 1n); // v=dy²+1\n        let { isValid, value: x } = uvRatio(u, v); // (uv³)(uv⁷)^(p-5)/8; square root\n        if (!isValid)\n            err('bad point: y not sqrt'); // not square root: bad point\n        const isXOdd = (x & 1n) === 1n; // adjust sign of x coordinate\n        const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n        if (!zip215 && x === 0n && isLastByteOdd)\n            err('bad point: x==0, isLastByteOdd'); // x=0, x_0=1\n        if (isLastByteOdd !== isXOdd)\n            x = M(-x);\n        return new Point(x, y, 1n, M(x * y)); // Z=1, T=xy\n    }\n    /** Checks if the point is valid and on-curve. */\n    assertValidity() {\n        const a = _a;\n        const d = _d;\n        const p = this;\n        if (p.is0())\n            throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n        // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n        // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n        const { ex: X, ey: Y, ez: Z, et: T } = p;\n        const X2 = M(X * X); // X²\n        const Y2 = M(Y * Y); // Y²\n        const Z2 = M(Z * Z); // Z²\n        const Z4 = M(Z2 * Z2); // Z⁴\n        const aX2 = M(X2 * a); // aX²\n        const left = M(Z2 * M(aX2 + Y2)); // (aX² + Y²)Z²\n        const right = M(Z4 + M(d * M(X2 * Y2))); // Z⁴ + dX²Y²\n        if (left !== right)\n            throw new Error('bad point: equation left != right (1)');\n        // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n        const XY = M(X * Y);\n        const ZT = M(Z * T);\n        if (XY !== ZT)\n            throw new Error('bad point: equation left != right (2)');\n        return this;\n    }\n    /** Equality check: compare points P&Q. */\n    equals(other) {\n        const { ex: X1, ey: Y1, ez: Z1 } = this;\n        const { ex: X2, ey: Y2, ez: Z2 } = apoint(other); // checks class equality\n        const X1Z2 = M(X1 * Z2);\n        const X2Z1 = M(X2 * Z1);\n        const Y1Z2 = M(Y1 * Z2);\n        const Y2Z1 = M(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    is0() {\n        return this.equals(I);\n    }\n    /** Flip point over y coordinate. */\n    negate() {\n        return new Point(M(-this.ex), this.ey, this.ez, M(-this.et));\n    }\n    /** Point doubling. Complete formula. Cost: `4M + 4S + 1*a + 6add + 1*2`. */\n    double() {\n        const { ex: X1, ey: Y1, ez: Z1 } = this;\n        const a = _a;\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        const A = M(X1 * X1);\n        const B = M(Y1 * Y1);\n        const C = M(2n * M(Z1 * Z1));\n        const D = M(a * A);\n        const x1y1 = X1 + Y1;\n        const E = M(M(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = M(E * F);\n        const Y3 = M(G * H);\n        const T3 = M(E * H);\n        const Z3 = M(F * G);\n        return new Point(X3, Y3, Z3, T3);\n    }\n    /** Point addition. Complete formula. Cost: `8M + 1*k + 8add + 1*2`. */\n    add(other) {\n        const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n        const { ex: X2, ey: Y2, ez: Z2, et: T2 } = apoint(other); // doesn't check if other on-curve\n        const a = _a;\n        const d = _d;\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-3\n        const A = M(X1 * X2);\n        const B = M(Y1 * Y2);\n        const C = M(T1 * d * T2);\n        const D = M(Z1 * Z2);\n        const E = M((X1 + Y1) * (X2 + Y2) - A - B);\n        const F = M(D - C);\n        const G = M(D + C);\n        const H = M(B - a * A);\n        const X3 = M(E * F);\n        const Y3 = M(G * H);\n        const T3 = M(E * H);\n        const Z3 = M(F * G);\n        return new Point(X3, Y3, Z3, T3);\n    }\n    /**\n     * Point-by-scalar multiplication. Scalar must be in range 1 <= n < CURVE.n.\n     * Uses {@link wNAF} for base point.\n     * Uses fake point to mitigate side-channel leakage.\n     * @param n scalar by which point is multiplied\n     * @param safe safe mode guards against timing attacks; unsafe mode is faster\n     */\n    multiply(n, safe = true) {\n        if (!safe && (n === 0n || this.is0()))\n            return I;\n        arange(n, 1n, N);\n        if (n === 1n)\n            return this;\n        if (this.equals(G))\n            return wNAF(n).p;\n        // init result point & fake point\n        let p = I;\n        let f = G;\n        for (let d = this; n > 0n; d = d.double(), n >>= 1n) {\n            // if bit is present, add to point\n            // if not present, add to fake, for timing safety\n            if (n & 1n)\n                p = p.add(d);\n            else if (safe)\n                f = f.add(d);\n        }\n        return p;\n    }\n    /** Convert point to 2d xy affine point. (X, Y, Z) ∋ (x=X/Z, y=Y/Z) */\n    toAffine() {\n        const { ex: x, ey: y, ez: z } = this;\n        // fast-paths for ZERO point OR Z=1\n        if (this.equals(I))\n            return { x: 0n, y: 1n };\n        const iz = invert(z, P);\n        // (Z * Z^-1) must be 1, otherwise bad math\n        if (M(z * iz) !== 1n)\n            err('invalid inverse');\n        // x = X*Z^-1; y = Y*Z^-1\n        return { x: M(x * iz), y: M(y * iz) };\n    }\n    toBytes() {\n        const { x, y } = this.assertValidity().toAffine();\n        const b = numTo32bLE(y);\n        // store sign in first LE byte\n        b[31] |= x & 1n ? 0x80 : 0;\n        return b;\n    }\n    toHex() {\n        return bytesToHex(this.toBytes());\n    } // encode to hex string\n    clearCofactor() {\n        return this.multiply(big(h), false);\n    }\n    isSmallOrder() {\n        return this.clearCofactor().is0();\n    }\n    isTorsionFree() {\n        // multiply by big number CURVE.n\n        let p = this.multiply(N / 2n, false).double(); // ensures the point is not \"bad\".\n        if (N % 2n)\n            p = p.add(this); // P^(N+1) // P*N == (P*(N/2))*2+P\n        return p.is0();\n    }\n    static fromHex(hex, zip215) {\n        return Point.fromBytes(toU8(hex), zip215);\n    }\n    get x() {\n        return this.toAffine().x;\n    }\n    get y() {\n        return this.toAffine().y;\n    }\n    toRawBytes() {\n        return this.toBytes();\n    }\n}\n/** Generator / base point */\nconst G = new Point(Gx, Gy, 1n, M(Gx * Gy));\n/** Identity / zero point */\nconst I = new Point(0n, 1n, 1n, 0n);\n// Static aliases\nPoint.BASE = G;\nPoint.ZERO = I;\nconst numTo32bLE = (num) => hexToBytes(padh(arange(num, 0n, B256), L2)).reverse();\nconst bytesToNumLE = (b) => big('0x' + bytesToHex(u8fr(abytes(b)).reverse()));\nconst pow2 = (x, power) => {\n    // pow2(x, 4) == x^(2^4)\n    let r = x;\n    while (power-- > 0n) {\n        r *= r;\n        r %= P;\n    }\n    return r;\n};\n// prettier-ignore\nconst pow_2_252_3 = (x) => {\n    const x2 = (x * x) % P; // x^2,       bits 1\n    const b2 = (x2 * x) % P; // x^3,       bits 11\n    const b4 = (pow2(b2, 2n) * b2) % P; // x^(2^4-1), bits 1111\n    const b5 = (pow2(b4, 1n) * x) % P; // x^(2^5-1), bits 11111\n    const b10 = (pow2(b5, 5n) * b5) % P; // x^(2^10)\n    const b20 = (pow2(b10, 10n) * b10) % P; // x^(2^20)\n    const b40 = (pow2(b20, 20n) * b20) % P; // x^(2^40)\n    const b80 = (pow2(b40, 40n) * b40) % P; // x^(2^80)\n    const b160 = (pow2(b80, 80n) * b80) % P; // x^(2^160)\n    const b240 = (pow2(b160, 80n) * b80) % P; // x^(2^240)\n    const b250 = (pow2(b240, 10n) * b10) % P; // x^(2^250)\n    const pow_p_5_8 = (pow2(b250, 2n) * x) % P; // < To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n};\nconst RM1 = 0x2b8324804fc1df0b2b4d00993dfbd7a72f431806ad2fe478c4ee1b274a0ea0b0n; // √-1\n// for sqrt comp\n// prettier-ignore\nconst uvRatio = (u, v) => {\n    const v3 = M(v * v * v); // v³\n    const v7 = M(v3 * v3 * v); // v⁷\n    const pow = pow_2_252_3(u * v7).pow_p_5_8; // (uv⁷)^(p-5)/8\n    let x = M(u * v3 * pow); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = M(v * x * x); // vx²\n    const root1 = x; // First root candidate\n    const root2 = M(x * RM1); // Second root candidate; RM1 is √-1\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === M(-u); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === M(-u * RM1); // There is no valid root, vx² = -u√-1\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if ((M(x) & 1n) === 1n)\n        x = M(-x); // edIsNegative\n    return { isValid: useRoot1 || useRoot2, value: x };\n};\n// N == L, just weird naming\nconst modL_LE = (hash) => modN(bytesToNumLE(hash)); // modulo L; but little-endian\nconst sha512a = (...m) => etc.sha512Async(...m); // Async SHA512\nconst sha512s = (...m) => callHash('sha512Sync')(...m);\n// RFC8032 5.1.5\nconst hash2extK = (hashed) => {\n    // slice creates a copy, unlike subarray\n    const head = hashed.slice(0, L);\n    head[0] &= 248; // Clamp bits: 0b1111_1000\n    head[31] &= 127; // 0b0111_1111\n    head[31] |= 64; // 0b0100_0000\n    const prefix = hashed.slice(L, L2); // private key \"prefix\"\n    const scalar = modL_LE(head); // modular division over curve order\n    const point = G.multiply(scalar); // public key point\n    const pointBytes = point.toBytes(); // point serialized to Uint8Array\n    return { head, prefix, scalar, point, pointBytes };\n};\n// RFC8032 5.1.5; getPublicKey async, sync. Hash priv key and extract point.\nconst getExtendedPublicKeyAsync = (priv) => sha512a(toU8(priv, L)).then(hash2extK);\nconst getExtendedPublicKey = (priv) => hash2extK(sha512s(toU8(priv, L)));\n/** Creates 32-byte ed25519 public key from 32-byte private key. Async. */\nconst getPublicKeyAsync = (priv) => getExtendedPublicKeyAsync(priv).then((p) => p.pointBytes);\n/** Creates 32-byte ed25519 public key from 32-byte private key. To use, set `etc.sha512Sync` first. */\nconst getPublicKey = (priv) => getExtendedPublicKey(priv).pointBytes;\nconst hashFinishA = (res) => sha512a(res.hashable).then(res.finish);\nconst hashFinishS = (res) => res.finish(sha512s(res.hashable));\nconst _sign = (e, rBytes, msg) => {\n    // sign() shared code\n    const { pointBytes: P, scalar: s } = e;\n    const r = modL_LE(rBytes); // r was created outside, reduce it modulo L\n    const R = G.multiply(r).toBytes(); // R = [r]B\n    const hashable = concatBytes(R, P, msg); // dom2(F, C) || R || A || PH(M)\n    const finish = (hashed) => {\n        // k = SHA512(dom2(F, C) || R || A || PH(M))\n        const S = modN(r + modL_LE(hashed) * s); // S = (r + k * s) mod L; 0 <= s < l\n        return abytes(concatBytes(R, numTo32bLE(S)), L2); // 64-byte sig: 32b R.x + 32b LE(S)\n    };\n    return { hashable, finish };\n};\n/**\n * Signs message (NOT message hash) using private key. Async.\n * Follows RFC8032 5.1.6.\n */\nconst signAsync = async (msg, privKey) => {\n    const m = toU8(msg);\n    const e = await getExtendedPublicKeyAsync(privKey);\n    const rBytes = await sha512a(e.prefix, m); // r = SHA512(dom2(F, C) || prefix || PH(M))\n    return hashFinishA(_sign(e, rBytes, m)); // gen R, k, S, then 64-byte signature\n};\n/**\n * Signs message (NOT message hash) using private key. To use, set `hashes.sha512` first.\n * Follows RFC8032 5.1.6.\n */\nconst sign = (msg, privKey) => {\n    const m = toU8(msg);\n    const e = getExtendedPublicKey(privKey);\n    const rBytes = sha512s(e.prefix, m); // r = SHA512(dom2(F, C) || prefix || PH(M))\n    return hashFinishS(_sign(e, rBytes, m)); // gen R, k, S, then 64-byte signature\n};\nconst veriOpts = { zip215: true };\nconst _verify = (sig, msg, pub, opts = veriOpts) => {\n    sig = toU8(sig, L2); // Signature hex str/Bytes, must be 64 bytes\n    msg = toU8(msg); // Message hex str/Bytes\n    pub = toU8(pub, L);\n    const { zip215 } = opts; // switch between zip215 and rfc8032 verif\n    let A;\n    let R;\n    let s;\n    let SB;\n    let hashable = Uint8Array.of();\n    try {\n        A = Point.fromHex(pub, zip215); // public key A decoded\n        R = Point.fromHex(sig.slice(0, L), zip215); // 0 <= R < 2^256: ZIP215 R can be >= P\n        s = bytesToNumLE(sig.slice(L, L2)); // Decode second half as an integer S\n        SB = G.multiply(s, false); // in the range 0 <= s < L\n        hashable = concatBytes(R.toBytes(), A.toBytes(), msg); // dom2(F, C) || R || A || PH(M)\n    }\n    catch (error) { }\n    const finish = (hashed) => {\n        // k = SHA512(dom2(F, C) || R || A || PH(M))\n        if (SB == null)\n            return false; // false if try-catch catched an error\n        if (!zip215 && A.isSmallOrder())\n            return false; // false for SBS: Strongly Binding Signature\n        const k = modL_LE(hashed); // decode in little-endian, modulo L\n        const RkA = R.add(A.multiply(k, false)); // [8]R + [8][k]A'\n        return RkA.add(SB.negate()).clearCofactor().is0(); // [8][S]B = [8]R + [8][k]A'\n    };\n    return { hashable, finish };\n};\n/** Verifies signature on message and public key. Async. Follows RFC8032 5.1.7. */\nconst verifyAsync = async (s, m, p, opts = veriOpts) => hashFinishA(_verify(s, m, p, opts));\n/** Verifies signature on message and public key. To use, set `hashes.sha512` first. Follows RFC8032 5.1.7. */\nconst verify = (s, m, p, opts = veriOpts) => hashFinishS(_verify(s, m, p, opts));\n/** Math, hex, byte helpers. Not in `utils` because utils share API with noble-curves. */\nconst etc = {\n    sha512Async: async (...messages) => {\n        const s = subtle();\n        const m = concatBytes(...messages);\n        return u8n(await s.digest('SHA-512', m.buffer));\n    },\n    sha512Sync: undefined,\n    bytesToHex: bytesToHex,\n    hexToBytes: hexToBytes,\n    concatBytes: concatBytes,\n    mod: M,\n    invert: invert,\n    randomBytes: randomBytes,\n};\n/** ed25519-specific key utilities. */\nconst utils = {\n    getExtendedPublicKeyAsync: getExtendedPublicKeyAsync,\n    getExtendedPublicKey: getExtendedPublicKey,\n    randomPrivateKey: () => randomBytes(L),\n    precompute: (w = 8, p = G) => {\n        p.multiply(3n);\n        w;\n        return p;\n    }, // no-op\n};\n// ## Precomputes\n// --------------\nconst W = 8; // W is window size\nconst scalarBits = 256;\nconst pwindows = Math.ceil(scalarBits / W) + 1; // 33 for W=8\nconst pwindowSize = 2 ** (W - 1); // 128 for W=8\nconst precompute = () => {\n    const points = [];\n    let p = G;\n    let b = p;\n    for (let w = 0; w < pwindows; w++) {\n        b = p;\n        points.push(b);\n        for (let i = 1; i < pwindowSize; i++) {\n            b = b.add(p);\n            points.push(b);\n        } // i=1, bc we skip 0\n        p = b.double();\n    }\n    return points;\n};\nlet Gpows = undefined; // precomputes for base point G\n// const-time negate\nconst ctneg = (cnd, p) => {\n    const n = p.negate();\n    return cnd ? n : p;\n};\n/**\n * Precomputes give 12x faster getPublicKey(), 10x sign(), 2x verify() by\n * caching multiples of G (base point). Cache is stored in 32MB of RAM.\n * Any time `G.multiply` is done, precomputes are used.\n * Not used for getSharedSecret, which instead multiplies random pubkey `P.multiply`.\n *\n * w-ary non-adjacent form (wNAF) precomputation method is 10% slower than windowed method,\n * but takes 2x less RAM. RAM reduction is possible by utilizing `.subtract`.\n *\n * !! Precomputes can be disabled by commenting-out call of the wNAF() inside Point#multiply().\n */\nconst wNAF = (n) => {\n    const comp = Gpows || (Gpows = precompute());\n    let p = I;\n    let f = G; // f must be G, or could become I in the end\n    const pow_2_w = 2 ** W; // 256 for W=8\n    const maxNum = pow_2_w; // 256 for W=8\n    const mask = big(pow_2_w - 1); // 255 for W=8 == mask 0b11111111\n    const shiftBy = big(W); // 8 for W=8\n    for (let w = 0; w < pwindows; w++) {\n        let wbits = Number(n & mask); // extract W bits.\n        n >>= shiftBy; // shift number by W bits.\n        if (wbits > pwindowSize) {\n            wbits -= maxNum;\n            n += 1n;\n        } // split if bits > max: +224 => 256-32\n        const off = w * pwindowSize;\n        const offF = off; // offsets, evaluate both\n        const offP = off + Math.abs(wbits) - 1;\n        const isEven = w % 2 !== 0; // conditions, evaluate both\n        const isNeg = wbits < 0;\n        if (wbits === 0) {\n            // off == I: can't add it. Adding random offF instead.\n            f = f.add(ctneg(isEven, comp[offF])); // bits are 0: add garbage to fake point\n        }\n        else {\n            p = p.add(ctneg(isNeg, comp[offP])); // bits are 1: add to result point\n        }\n    }\n    return { p, f }; // return both real and fake points for JIT\n};\n// !! Remove the export to easily use in REPL / browser console\nexport { ed25519_CURVE as CURVE, etc, Point as ExtendedPoint, getPublicKey, getPublicKeyAsync, Point, sign, signAsync, utils, verify, verifyAsync, };\n","const defaultErrorConfig = {\r\n    withStackTrace: false,\r\n};\r\n// Custom error object\r\n// Context / discussion: https://github.com/supermacro/neverthrow/pull/215\r\nconst createNeverThrowError = (message, result, config = defaultErrorConfig) => {\r\n    const data = result.isOk()\r\n        ? { type: 'Ok', value: result.value }\r\n        : { type: 'Err', value: result.error };\r\n    const maybeStack = config.withStackTrace ? new Error().stack : undefined;\r\n    return {\r\n        data,\r\n        message,\r\n        stack: maybeStack,\r\n    };\r\n};\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nclass ResultAsync {\r\n    constructor(res) {\r\n        this._promise = res;\r\n    }\r\n    static fromSafePromise(promise) {\r\n        const newPromise = promise.then((value) => new Ok(value));\r\n        return new ResultAsync(newPromise);\r\n    }\r\n    static fromPromise(promise, errorFn) {\r\n        const newPromise = promise\r\n            .then((value) => new Ok(value))\r\n            .catch((e) => new Err(errorFn(e)));\r\n        return new ResultAsync(newPromise);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    static fromThrowable(fn, errorFn) {\r\n        return (...args) => {\r\n            return new ResultAsync((() => __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    return new Ok(yield fn(...args));\r\n                }\r\n                catch (error) {\r\n                    return new Err(errorFn ? errorFn(error) : error);\r\n                }\r\n            }))());\r\n        };\r\n    }\r\n    static combine(asyncResultList) {\r\n        return combineResultAsyncList(asyncResultList);\r\n    }\r\n    static combineWithAllErrors(asyncResultList) {\r\n        return combineResultAsyncListWithAllErrors(asyncResultList);\r\n    }\r\n    map(f) {\r\n        return new ResultAsync(this._promise.then((res) => __awaiter(this, void 0, void 0, function* () {\r\n            if (res.isErr()) {\r\n                return new Err(res.error);\r\n            }\r\n            return new Ok(yield f(res.value));\r\n        })));\r\n    }\r\n    andThrough(f) {\r\n        return new ResultAsync(this._promise.then((res) => __awaiter(this, void 0, void 0, function* () {\r\n            if (res.isErr()) {\r\n                return new Err(res.error);\r\n            }\r\n            const newRes = yield f(res.value);\r\n            if (newRes.isErr()) {\r\n                return new Err(newRes.error);\r\n            }\r\n            return new Ok(res.value);\r\n        })));\r\n    }\r\n    andTee(f) {\r\n        return new ResultAsync(this._promise.then((res) => __awaiter(this, void 0, void 0, function* () {\r\n            if (res.isErr()) {\r\n                return new Err(res.error);\r\n            }\r\n            try {\r\n                yield f(res.value);\r\n            }\r\n            catch (e) {\r\n                // Tee does not care about the error\r\n            }\r\n            return new Ok(res.value);\r\n        })));\r\n    }\r\n    orTee(f) {\r\n        return new ResultAsync(this._promise.then((res) => __awaiter(this, void 0, void 0, function* () {\r\n            if (res.isOk()) {\r\n                return new Ok(res.value);\r\n            }\r\n            try {\r\n                yield f(res.error);\r\n            }\r\n            catch (e) {\r\n                // Tee does not care about the error\r\n            }\r\n            return new Err(res.error);\r\n        })));\r\n    }\r\n    mapErr(f) {\r\n        return new ResultAsync(this._promise.then((res) => __awaiter(this, void 0, void 0, function* () {\r\n            if (res.isOk()) {\r\n                return new Ok(res.value);\r\n            }\r\n            return new Err(yield f(res.error));\r\n        })));\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\r\n    andThen(f) {\r\n        return new ResultAsync(this._promise.then((res) => {\r\n            if (res.isErr()) {\r\n                return new Err(res.error);\r\n            }\r\n            const newValue = f(res.value);\r\n            return newValue instanceof ResultAsync ? newValue._promise : newValue;\r\n        }));\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\r\n    orElse(f) {\r\n        return new ResultAsync(this._promise.then((res) => __awaiter(this, void 0, void 0, function* () {\r\n            if (res.isErr()) {\r\n                return f(res.error);\r\n            }\r\n            return new Ok(res.value);\r\n        })));\r\n    }\r\n    match(ok, _err) {\r\n        return this._promise.then((res) => res.match(ok, _err));\r\n    }\r\n    unwrapOr(t) {\r\n        return this._promise.then((res) => res.unwrapOr(t));\r\n    }\r\n    /**\r\n     * @deprecated will be removed in 9.0.0.\r\n     *\r\n     * You can use `safeTry` without this method.\r\n     * @example\r\n     * ```typescript\r\n     * safeTry(async function* () {\r\n     *   const okValue = yield* yourResult\r\n     * })\r\n     * ```\r\n     * Emulates Rust's `?` operator in `safeTry`'s body. See also `safeTry`.\r\n     */\r\n    safeUnwrap() {\r\n        return __asyncGenerator(this, arguments, function* safeUnwrap_1() {\r\n            return yield __await(yield __await(yield* __asyncDelegator(__asyncValues(yield __await(this._promise.then((res) => res.safeUnwrap()))))));\r\n        });\r\n    }\r\n    // Makes ResultAsync implement PromiseLike<Result>\r\n    then(successCallback, failureCallback) {\r\n        return this._promise.then(successCallback, failureCallback);\r\n    }\r\n    [Symbol.asyncIterator]() {\r\n        return __asyncGenerator(this, arguments, function* _a() {\r\n            const result = yield __await(this._promise);\r\n            if (result.isErr()) {\r\n                // @ts-expect-error -- This is structurally equivalent and safe\r\n                yield yield __await(errAsync(result.error));\r\n            }\r\n            // @ts-expect-error -- This is structurally equivalent and safe\r\n            return yield __await(result.value);\r\n        });\r\n    }\r\n}\r\nfunction okAsync(value) {\r\n    return new ResultAsync(Promise.resolve(new Ok(value)));\r\n}\r\nfunction errAsync(err) {\r\n    return new ResultAsync(Promise.resolve(new Err(err)));\r\n}\r\nconst fromPromise = ResultAsync.fromPromise;\r\nconst fromSafePromise = ResultAsync.fromSafePromise;\r\nconst fromAsyncThrowable = ResultAsync.fromThrowable;\n\n/**\r\n * Short circuits on the FIRST Err value that we find\r\n */\r\nconst combineResultList = (resultList) => {\r\n    let acc = ok([]);\r\n    for (const result of resultList) {\r\n        if (result.isErr()) {\r\n            acc = err(result.error);\r\n            break;\r\n        }\r\n        else {\r\n            acc.map((list) => list.push(result.value));\r\n        }\r\n    }\r\n    return acc;\r\n};\r\n/* This is the typesafe version of Promise.all\r\n *\r\n * Takes a list of ResultAsync<T, E> and success if all inner results are Ok values\r\n * or fails if one (or more) of the inner results are Err values\r\n */\r\nconst combineResultAsyncList = (asyncResultList) => ResultAsync.fromSafePromise(Promise.all(asyncResultList)).andThen(combineResultList);\r\n/**\r\n * Give a list of all the errors we find\r\n */\r\nconst combineResultListWithAllErrors = (resultList) => {\r\n    let acc = ok([]);\r\n    for (const result of resultList) {\r\n        if (result.isErr() && acc.isErr()) {\r\n            acc.error.push(result.error);\r\n        }\r\n        else if (result.isErr() && acc.isOk()) {\r\n            acc = err([result.error]);\r\n        }\r\n        else if (result.isOk() && acc.isOk()) {\r\n            acc.value.push(result.value);\r\n        }\r\n        // do nothing when result.isOk() && acc.isErr()\r\n    }\r\n    return acc;\r\n};\r\nconst combineResultAsyncListWithAllErrors = (asyncResultList) => ResultAsync.fromSafePromise(Promise.all(asyncResultList)).andThen(combineResultListWithAllErrors);\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nvar Result;\r\n(function (Result) {\r\n    /**\r\n     * Wraps a function with a try catch, creating a new function with the same\r\n     * arguments but returning `Ok` if successful, `Err` if the function throws\r\n     *\r\n     * @param fn function to wrap with ok on success or err on failure\r\n     * @param errorFn when an error is thrown, this will wrap the error result if provided\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    function fromThrowable(fn, errorFn) {\r\n        return (...args) => {\r\n            try {\r\n                const result = fn(...args);\r\n                return ok(result);\r\n            }\r\n            catch (e) {\r\n                return err(errorFn ? errorFn(e) : e);\r\n            }\r\n        };\r\n    }\r\n    Result.fromThrowable = fromThrowable;\r\n    function combine(resultList) {\r\n        return combineResultList(resultList);\r\n    }\r\n    Result.combine = combine;\r\n    function combineWithAllErrors(resultList) {\r\n        return combineResultListWithAllErrors(resultList);\r\n    }\r\n    Result.combineWithAllErrors = combineWithAllErrors;\r\n})(Result || (Result = {}));\r\nfunction ok(value) {\r\n    return new Ok(value);\r\n}\r\nfunction err(err) {\r\n    return new Err(err);\r\n}\r\nfunction safeTry(body) {\r\n    const n = body().next();\r\n    if (n instanceof Promise) {\r\n        return new ResultAsync(n.then((r) => r.value));\r\n    }\r\n    return n.value;\r\n}\r\nclass Ok {\r\n    constructor(value) {\r\n        this.value = value;\r\n    }\r\n    isOk() {\r\n        return true;\r\n    }\r\n    isErr() {\r\n        return !this.isOk();\r\n    }\r\n    map(f) {\r\n        return ok(f(this.value));\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    mapErr(_f) {\r\n        return ok(this.value);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\r\n    andThen(f) {\r\n        return f(this.value);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\r\n    andThrough(f) {\r\n        return f(this.value).map((_value) => this.value);\r\n    }\r\n    andTee(f) {\r\n        try {\r\n            f(this.value);\r\n        }\r\n        catch (e) {\r\n            // Tee doesn't care about the error\r\n        }\r\n        return ok(this.value);\r\n    }\r\n    orTee(_f) {\r\n        return ok(this.value);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\r\n    orElse(_f) {\r\n        return ok(this.value);\r\n    }\r\n    asyncAndThen(f) {\r\n        return f(this.value);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\r\n    asyncAndThrough(f) {\r\n        return f(this.value).map(() => this.value);\r\n    }\r\n    asyncMap(f) {\r\n        return ResultAsync.fromSafePromise(f(this.value));\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    unwrapOr(_v) {\r\n        return this.value;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    match(ok, _err) {\r\n        return ok(this.value);\r\n    }\r\n    safeUnwrap() {\r\n        const value = this.value;\r\n        /* eslint-disable-next-line require-yield */\r\n        return (function* () {\r\n            return value;\r\n        })();\r\n    }\r\n    _unsafeUnwrap(_) {\r\n        return this.value;\r\n    }\r\n    _unsafeUnwrapErr(config) {\r\n        throw createNeverThrowError('Called `_unsafeUnwrapErr` on an Ok', this, config);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias, require-yield\r\n    *[Symbol.iterator]() {\r\n        return this.value;\r\n    }\r\n}\r\nclass Err {\r\n    constructor(error) {\r\n        this.error = error;\r\n    }\r\n    isOk() {\r\n        return false;\r\n    }\r\n    isErr() {\r\n        return !this.isOk();\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    map(_f) {\r\n        return err(this.error);\r\n    }\r\n    mapErr(f) {\r\n        return err(f(this.error));\r\n    }\r\n    andThrough(_f) {\r\n        return err(this.error);\r\n    }\r\n    andTee(_f) {\r\n        return err(this.error);\r\n    }\r\n    orTee(f) {\r\n        try {\r\n            f(this.error);\r\n        }\r\n        catch (e) {\r\n            // Tee doesn't care about the error\r\n        }\r\n        return err(this.error);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\r\n    andThen(_f) {\r\n        return err(this.error);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\r\n    orElse(f) {\r\n        return f(this.error);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    asyncAndThen(_f) {\r\n        return errAsync(this.error);\r\n    }\r\n    asyncAndThrough(_f) {\r\n        return errAsync(this.error);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    asyncMap(_f) {\r\n        return errAsync(this.error);\r\n    }\r\n    unwrapOr(v) {\r\n        return v;\r\n    }\r\n    match(_ok, err) {\r\n        return err(this.error);\r\n    }\r\n    safeUnwrap() {\r\n        const error = this.error;\r\n        return (function* () {\r\n            yield err(error);\r\n            throw new Error('Do not use this generator out of `safeTry`');\r\n        })();\r\n    }\r\n    _unsafeUnwrap(config) {\r\n        throw createNeverThrowError('Called `_unsafeUnwrap` on an Err', this, config);\r\n    }\r\n    _unsafeUnwrapErr(_) {\r\n        return this.error;\r\n    }\r\n    *[Symbol.iterator]() {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const self = this;\r\n        // @ts-expect-error -- This is structurally equivalent and safe\r\n        yield self;\r\n        // @ts-expect-error -- This is structurally equivalent and safe\r\n        return self;\r\n    }\r\n}\r\nconst fromThrowable = Result.fromThrowable;\r\n//#endregion\n\nexport { Err, Ok, Result, ResultAsync, err, errAsync, fromAsyncThrowable, fromPromise, fromSafePromise, fromThrowable, ok, okAsync, safeTry };\n","import { Encoder, decode } from 'cbor-x';\nimport { signAsync, verifyAsync } from '@noble/ed25519';\nimport { Result, ok, err } from 'neverthrow';\n\n// Note: This is a tiny implementation of COSE Sign1, using noble/ed25519 for signing\n// and verifying of EdDSA signatures.\n//\n// Notes from cose Signature1 spec:\n// Sig_structure = [\n//   context : \"Signature\" / \"Signature1\" / \"CounterSignature\",\n//   body_protected : empty_or_serialized_map,\n//   ? sign_protected : empty_or_serialized_map,\n//   external_aad : bstr,\n//   payload : bstr\n// ]\n\ntype Payload = unknown;\ntype UnprotectedHeaders = Record<string, unknown>;\ntype DecodedMessage = {\n  headers: UnprotectedHeaders;\n  payload: Payload;\n};\n\n// Define key types as Uint8Array for Noble\ntype PrivateKey = Uint8Array;\ntype PublicKey = Uint8Array;\n\n// Use Uint8Array instead of Buffer for browser compatibility\nconst ed25519Header = new Uint8Array([0xa1, 0x01, 0x27]); // -7 = EdDSA\nconst coseEncoder = new Encoder({\n  variableMapSize: true,\n  tagUint8Array: false,\n  useRecords: false,\n  mapsAsObjects: false,\n  // @ts-ignore\n  useTag259ForMaps: false,\n});\n\nexport const decodeAndVerifyCoseSign1 = async (\n  coseSign1: Uint8Array,\n  verifyingKey: PublicKey,\n  externalAad: Uint8Array = new Uint8Array(0)\n): Promise<Result<DecodedMessage, string>> => {\n  const coseElements = (await decode(coseSign1)) as [\n    Uint8Array,\n    UnprotectedHeaders,\n    Uint8Array,\n    Uint8Array,\n  ];\n\n  if (coseElements.length !== 4) {\n    return err('Invalid COSE Sign1 structure.');\n  }\n\n  const [protectedHeaders, unprotectedHeaders, payload, signature] = coseElements;\n\n  const toBeSigned = await coseEncoder.encode([\n    'Signature1', // context\n    protectedHeaders, // body_protected\n    externalAad, // external_aad\n    payload, // payload\n  ]);\n\n  if (!(await verifyAsync(signature, toBeSigned, verifyingKey))) {\n    return err('COSE Sign1 verification failed.');\n  }\n\n  const decodedPayload = await decode(payload);\n  return ok({ headers: unprotectedHeaders, payload: decodedPayload });\n};\n\nexport const CoseSign1Decoder = (\n  verifyingKey: PublicKey,\n  externalAad: Uint8Array = new Uint8Array(0)\n) => ({\n  decodeAndVerify: (coseSign1: Uint8Array) =>\n    decodeAndVerifyCoseSign1(coseSign1, verifyingKey, externalAad),\n});\n\nexport const encodeSign1 = async (\n  payload: unknown,\n  signingKey: PrivateKey,\n  externalAad: Uint8Array = new Uint8Array(0),\n  unprotectedHeaders: Record<string, unknown> = {}\n): Promise<Uint8Array> => {\n  const payloadCbor = await coseEncoder.encode(payload);\n\n  const toBeSigned = await coseEncoder.encode([\n    'Signature1', // context\n    ed25519Header, // body_protected\n    externalAad, // external_aad\n    payloadCbor, // payload\n  ]);\n\n  const signature = await signAsync(toBeSigned, signingKey);\n  const coseSign1 = await coseEncoder.encode([\n    ed25519Header,\n    unprotectedHeaders,\n    payloadCbor,\n    signature,\n  ]);\n\n  return coseSign1;\n};\n\nexport const CoseSign1Encoder = (\n  signingKey: PrivateKey,\n  externalAad: Uint8Array = new Uint8Array(0)\n) => ({\n  encode: (payload: unknown, unprotectedHeaders: Record<string, unknown> = {}) =>\n    encodeSign1(payload, signingKey, externalAad, unprotectedHeaders),\n});\n","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is positive integer. */\nexport function anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nexport function abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nexport function ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.createHasher');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n/** The byte swap operation for uint32 */\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** @deprecated */\nexport const byteSwapIfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n    return arr;\n}\nexport const swap32IfBE = isLE\n    ? (u) => u\n    : byteSwap32;\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function createOptHasher(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function createXOFer(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport const wrapConstructor = createHasher;\nexport const wrapConstructorWithOpts = createOptHasher;\nexport const wrapXOFConstructorWithOpts = createXOFer;\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return Uint8Array.from(crypto.randomBytes(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { Hash, abytes, aexists, aoutput, clean, createView, toBytes } from \"./utils.js\";\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nexport function Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { view, buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        clean(this.buffer.subarray(pos));\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.destroyed = destroyed;\n        to.finished = finished;\n        to.length = length;\n        to.pos = pos;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n}\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV = /* @__PURE__ */ Uint32Array.from([\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV = /* @__PURE__ */ Uint32Array.from([\n    0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n//# sourceMappingURL=_md.js.map","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    const len = lst.length;\n    let Ah = new Uint32Array(len);\n    let Al = new Uint32Array(len);\n    for (let i = 0; i < len; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from \"./_md.js\";\nimport * as u64 from \"./_u64.js\";\nimport { clean, createHasher, rotr } from \"./utils.js\";\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor(outputLen = 32) {\n        super(64, outputLen, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        clean(SHA256_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        clean(this.buffer);\n    }\n}\nexport class SHA224 extends SHA256 {\n    constructor() {\n        super(28);\n        this.A = SHA224_IV[0] | 0;\n        this.B = SHA224_IV[1] | 0;\n        this.C = SHA224_IV[2] | 0;\n        this.D = SHA224_IV[3] | 0;\n        this.E = SHA224_IV[4] | 0;\n        this.F = SHA224_IV[5] | 0;\n        this.G = SHA224_IV[6] | 0;\n        this.H = SHA224_IV[7] | 0;\n    }\n}\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor(outputLen = 64) {\n        super(128, outputLen, 16, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = SHA512_IV[0] | 0;\n        this.Al = SHA512_IV[1] | 0;\n        this.Bh = SHA512_IV[2] | 0;\n        this.Bl = SHA512_IV[3] | 0;\n        this.Ch = SHA512_IV[4] | 0;\n        this.Cl = SHA512_IV[5] | 0;\n        this.Dh = SHA512_IV[6] | 0;\n        this.Dl = SHA512_IV[7] | 0;\n        this.Eh = SHA512_IV[8] | 0;\n        this.El = SHA512_IV[9] | 0;\n        this.Fh = SHA512_IV[10] | 0;\n        this.Fl = SHA512_IV[11] | 0;\n        this.Gh = SHA512_IV[12] | 0;\n        this.Gl = SHA512_IV[13] | 0;\n        this.Hh = SHA512_IV[14] | 0;\n        this.Hl = SHA512_IV[15] | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        clean(SHA512_W_H, SHA512_W_L);\n    }\n    destroy() {\n        clean(this.buffer);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super(48);\n        this.Ah = SHA384_IV[0] | 0;\n        this.Al = SHA384_IV[1] | 0;\n        this.Bh = SHA384_IV[2] | 0;\n        this.Bl = SHA384_IV[3] | 0;\n        this.Ch = SHA384_IV[4] | 0;\n        this.Cl = SHA384_IV[5] | 0;\n        this.Dh = SHA384_IV[6] | 0;\n        this.Dl = SHA384_IV[7] | 0;\n        this.Eh = SHA384_IV[8] | 0;\n        this.El = SHA384_IV[9] | 0;\n        this.Fh = SHA384_IV[10] | 0;\n        this.Fl = SHA384_IV[11] | 0;\n        this.Gh = SHA384_IV[12] | 0;\n        this.Gl = SHA384_IV[13] | 0;\n        this.Hh = SHA384_IV[14] | 0;\n        this.Hl = SHA384_IV[15] | 0;\n    }\n}\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n    0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n    0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n    0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super(28);\n        this.Ah = T224_IV[0] | 0;\n        this.Al = T224_IV[1] | 0;\n        this.Bh = T224_IV[2] | 0;\n        this.Bl = T224_IV[3] | 0;\n        this.Ch = T224_IV[4] | 0;\n        this.Cl = T224_IV[5] | 0;\n        this.Dh = T224_IV[6] | 0;\n        this.Dl = T224_IV[7] | 0;\n        this.Eh = T224_IV[8] | 0;\n        this.El = T224_IV[9] | 0;\n        this.Fh = T224_IV[10] | 0;\n        this.Fl = T224_IV[11] | 0;\n        this.Gh = T224_IV[12] | 0;\n        this.Gl = T224_IV[13] | 0;\n        this.Hh = T224_IV[14] | 0;\n        this.Hl = T224_IV[15] | 0;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super(32);\n        this.Ah = T256_IV[0] | 0;\n        this.Al = T256_IV[1] | 0;\n        this.Bh = T256_IV[2] | 0;\n        this.Bl = T256_IV[3] | 0;\n        this.Ch = T256_IV[4] | 0;\n        this.Cl = T256_IV[5] | 0;\n        this.Dh = T256_IV[6] | 0;\n        this.Dl = T256_IV[7] | 0;\n        this.Eh = T256_IV[8] | 0;\n        this.El = T256_IV[9] | 0;\n        this.Fh = T256_IV[10] | 0;\n        this.Fl = T256_IV[11] | 0;\n        this.Gh = T256_IV[12] | 0;\n        this.Gl = T256_IV[13] | 0;\n        this.Hh = T256_IV[14] | 0;\n        this.Hl = T256_IV[15] | 0;\n    }\n}\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256 = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224 = /* @__PURE__ */ createHasher(() => new SHA224());\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512 = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384 = /* @__PURE__ */ createHasher(() => new SHA384());\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256 = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224 = /* @__PURE__ */ createHasher(() => new SHA512_224());\n//# sourceMappingURL=sha2.js.map","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof globalThis === \"object\" ? globalThis :\n            typeof global === \"object\" ? global :\n                typeof self === \"object\" ? self :\n                    typeof this === \"object\" ? this :\n                        sloppyModeThis();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect !== \"undefined\") {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter, root);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                if (previous)\n                    previous(key, value);\n            };\n        }\n        function functionThis() {\n            try {\n                return Function(\"return this;\")();\n            }\n            catch (_) { }\n        }\n        function indirectEvalThis() {\n            try {\n                return (void 0, eval)(\"(function() { return this; })()\");\n            }\n            catch (_) { }\n        }\n        function sloppyModeThis() {\n            return functionThis() || indirectEvalThis();\n        }\n    })(function (exporter, root) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        var registrySymbol = supportsSymbol ? Symbol.for(\"@reflect-metadata:registry\") : undefined;\n        var metadataRegistry = GetOrCreateMetadataRegistry();\n        var metadataProvider = CreateMetadataProvider(metadataRegistry);\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var provider = GetMetadataProvider(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return;\n            return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ true);\n            provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var provider = GetMetadataProvider(O, P, /*create*/ false);\n            if (!provider) {\n                return [];\n            }\n            return provider.OrdinaryOwnMetadataKeys(O, P);\n        }\n        // 6 ECMAScript Data Types and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        function SameValueZero(x, y) {\n            return x === y || x !== x && y !== y;\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // Global metadata registry\n        // - Allows `import \"reflect-metadata\"` and `import \"reflect-metadata/no-conflict\"` to interoperate.\n        // - Uses isolated metadata if `Reflect` is frozen before the registry can be installed.\n        /**\n         * Creates a registry used to allow multiple `reflect-metadata` providers.\n         */\n        function CreateMetadataRegistry() {\n            var fallback;\n            if (!IsUndefined(registrySymbol) &&\n                typeof root.Reflect !== \"undefined\" &&\n                !(registrySymbol in root.Reflect) &&\n                typeof root.Reflect.defineMetadata === \"function\") {\n                // interoperate with older version of `reflect-metadata` that did not support a registry.\n                fallback = CreateFallbackProvider(root.Reflect);\n            }\n            var first;\n            var second;\n            var rest;\n            var targetProviderMap = new _WeakMap();\n            var registry = {\n                registerProvider: registerProvider,\n                getProvider: getProvider,\n                setProvider: setProvider,\n            };\n            return registry;\n            function registerProvider(provider) {\n                if (!Object.isExtensible(registry)) {\n                    throw new Error(\"Cannot add provider to a frozen registry.\");\n                }\n                switch (true) {\n                    case fallback === provider: break;\n                    case IsUndefined(first):\n                        first = provider;\n                        break;\n                    case first === provider: break;\n                    case IsUndefined(second):\n                        second = provider;\n                        break;\n                    case second === provider: break;\n                    default:\n                        if (rest === undefined)\n                            rest = new _Set();\n                        rest.add(provider);\n                        break;\n                }\n            }\n            function getProviderNoCache(O, P) {\n                if (!IsUndefined(first)) {\n                    if (first.isProviderFor(O, P))\n                        return first;\n                    if (!IsUndefined(second)) {\n                        if (second.isProviderFor(O, P))\n                            return first;\n                        if (!IsUndefined(rest)) {\n                            var iterator = GetIterator(rest);\n                            while (true) {\n                                var next = IteratorStep(iterator);\n                                if (!next) {\n                                    return undefined;\n                                }\n                                var provider = IteratorValue(next);\n                                if (provider.isProviderFor(O, P)) {\n                                    IteratorClose(iterator);\n                                    return provider;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) {\n                    return fallback;\n                }\n                return undefined;\n            }\n            function getProvider(O, P) {\n                var providerMap = targetProviderMap.get(O);\n                var provider;\n                if (!IsUndefined(providerMap)) {\n                    provider = providerMap.get(P);\n                }\n                if (!IsUndefined(provider)) {\n                    return provider;\n                }\n                provider = getProviderNoCache(O, P);\n                if (!IsUndefined(provider)) {\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return provider;\n            }\n            function hasProvider(provider) {\n                if (IsUndefined(provider))\n                    throw new TypeError();\n                return first === provider || second === provider || !IsUndefined(rest) && rest.has(provider);\n            }\n            function setProvider(O, P, provider) {\n                if (!hasProvider(provider)) {\n                    throw new Error(\"Metadata provider not registered.\");\n                }\n                var existingProvider = getProvider(O, P);\n                if (existingProvider !== provider) {\n                    if (!IsUndefined(existingProvider)) {\n                        return false;\n                    }\n                    var providerMap = targetProviderMap.get(O);\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return true;\n            }\n        }\n        /**\n         * Gets or creates the shared registry of metadata providers.\n         */\n        function GetOrCreateMetadataRegistry() {\n            var metadataRegistry;\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                metadataRegistry = root.Reflect[registrySymbol];\n            }\n            if (IsUndefined(metadataRegistry)) {\n                metadataRegistry = CreateMetadataRegistry();\n            }\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                Object.defineProperty(root.Reflect, registrySymbol, {\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                    value: metadataRegistry\n                });\n            }\n            return metadataRegistry;\n        }\n        function CreateMetadataProvider(registry) {\n            // [[Metadata]] internal slot\n            // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n            var metadata = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var targetMetadata = metadata.get(O);\n                    if (IsUndefined(targetMetadata))\n                        return false;\n                    return targetMetadata.has(P);\n                },\n                OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata,\n                OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata,\n                OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata,\n                OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys,\n                OrdinaryDeleteMetadata: OrdinaryDeleteMetadata,\n            };\n            metadataRegistry.registerProvider(provider);\n            return provider;\n            function GetOrCreateMetadataMap(O, P, Create) {\n                var targetMetadata = metadata.get(O);\n                var createdTargetMetadata = false;\n                if (IsUndefined(targetMetadata)) {\n                    if (!Create)\n                        return undefined;\n                    targetMetadata = new _Map();\n                    metadata.set(O, targetMetadata);\n                    createdTargetMetadata = true;\n                }\n                var metadataMap = targetMetadata.get(P);\n                if (IsUndefined(metadataMap)) {\n                    if (!Create)\n                        return undefined;\n                    metadataMap = new _Map();\n                    targetMetadata.set(P, metadataMap);\n                    if (!registry.setProvider(O, P, provider)) {\n                        targetMetadata.delete(P);\n                        if (createdTargetMetadata) {\n                            metadata.delete(O);\n                        }\n                        throw new Error(\"Wrong provider for target.\");\n                    }\n                }\n                return metadataMap;\n            }\n            // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n            function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                return ToBoolean(metadataMap.has(MetadataKey));\n            }\n            // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n            function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return undefined;\n                return metadataMap.get(MetadataKey);\n            }\n            // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n            function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n                metadataMap.set(MetadataKey, MetadataValue);\n            }\n            // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n            function OrdinaryOwnMetadataKeys(O, P) {\n                var keys = [];\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return keys;\n                var keysObj = metadataMap.keys();\n                var iterator = GetIterator(keysObj);\n                var k = 0;\n                while (true) {\n                    var next = IteratorStep(iterator);\n                    if (!next) {\n                        keys.length = k;\n                        return keys;\n                    }\n                    var nextValue = IteratorValue(next);\n                    try {\n                        keys[k] = nextValue;\n                    }\n                    catch (e) {\n                        try {\n                            IteratorClose(iterator);\n                        }\n                        finally {\n                            throw e;\n                        }\n                    }\n                    k++;\n                }\n            }\n            function OrdinaryDeleteMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                if (!metadataMap.delete(MetadataKey))\n                    return false;\n                if (metadataMap.size === 0) {\n                    var targetMetadata = metadata.get(O);\n                    if (!IsUndefined(targetMetadata)) {\n                        targetMetadata.delete(P);\n                        if (targetMetadata.size === 0) {\n                            metadata.delete(targetMetadata);\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n        function CreateFallbackProvider(reflect) {\n            var defineMetadata = reflect.defineMetadata, hasOwnMetadata = reflect.hasOwnMetadata, getOwnMetadata = reflect.getOwnMetadata, getOwnMetadataKeys = reflect.getOwnMetadataKeys, deleteMetadata = reflect.deleteMetadata;\n            var metadataOwner = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var metadataPropertySet = metadataOwner.get(O);\n                    if (!IsUndefined(metadataPropertySet) && metadataPropertySet.has(P)) {\n                        return true;\n                    }\n                    if (getOwnMetadataKeys(O, P).length) {\n                        if (IsUndefined(metadataPropertySet)) {\n                            metadataPropertySet = new _Set();\n                            metadataOwner.set(O, metadataPropertySet);\n                        }\n                        metadataPropertySet.add(P);\n                        return true;\n                    }\n                    return false;\n                },\n                OrdinaryDefineOwnMetadata: defineMetadata,\n                OrdinaryHasOwnMetadata: hasOwnMetadata,\n                OrdinaryGetOwnMetadata: getOwnMetadata,\n                OrdinaryOwnMetadataKeys: getOwnMetadataKeys,\n                OrdinaryDeleteMetadata: deleteMetadata,\n            };\n            return provider;\n        }\n        /**\n         * Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,\n         * then this module's metadata provider is assigned to the object.\n         */\n        function GetMetadataProvider(O, P, Create) {\n            var registeredProvider = metadataRegistry.getProvider(O, P);\n            if (!IsUndefined(registeredProvider)) {\n                return registeredProvider;\n            }\n            if (Create) {\n                if (metadataRegistry.setProvider(O, P, metadataProvider)) {\n                    return metadataProvider;\n                }\n                throw new Error(\"Illegal state.\");\n            }\n            return undefined;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            var Map = /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (SameValueZero(key, this._cacheKey)) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (!SameValueZero(this._cacheKey, key)) {\n                        this._cacheIndex = -1;\n                        for (var i = 0; i < this._keys.length; i++) {\n                            if (SameValueZero(this._keys[i], key)) {\n                                this._cacheIndex = i;\n                                break;\n                            }\n                        }\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            return Map;\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            var Set = /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.keys(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n            return Set;\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    var array = new Uint8Array(size);\n                    if (typeof crypto !== \"undefined\") {\n                        crypto.getRandomValues(array);\n                    }\n                    else if (typeof msCrypto !== \"undefined\") {\n                        msCrypto.getRandomValues(array);\n                    }\n                    else {\n                        FillRandomBytes(array, size);\n                    }\n                    return array;\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","/*!\n * MIT License\n * \n * Copyright (c) 2017-2024 Peculiar Ventures, LLC\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n */\n\nconst ARRAY_BUFFER_NAME = \"[object ArrayBuffer]\";\nclass BufferSourceConverter {\n    static isArrayBuffer(data) {\n        return Object.prototype.toString.call(data) === ARRAY_BUFFER_NAME;\n    }\n    static toArrayBuffer(data) {\n        if (this.isArrayBuffer(data)) {\n            return data;\n        }\n        if (data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        if (data.byteOffset === 0 && data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        return this.toUint8Array(data.buffer)\n            .slice(data.byteOffset, data.byteOffset + data.byteLength)\n            .buffer;\n    }\n    static toUint8Array(data) {\n        return this.toView(data, Uint8Array);\n    }\n    static toView(data, type) {\n        if (data.constructor === type) {\n            return data;\n        }\n        if (this.isArrayBuffer(data)) {\n            return new type(data);\n        }\n        if (this.isArrayBufferView(data)) {\n            return new type(data.buffer, data.byteOffset, data.byteLength);\n        }\n        throw new TypeError(\"The provided value is not of type '(ArrayBuffer or ArrayBufferView)'\");\n    }\n    static isBufferSource(data) {\n        return this.isArrayBufferView(data)\n            || this.isArrayBuffer(data);\n    }\n    static isArrayBufferView(data) {\n        return ArrayBuffer.isView(data)\n            || (data && this.isArrayBuffer(data.buffer));\n    }\n    static isEqual(a, b) {\n        const aView = BufferSourceConverter.toUint8Array(a);\n        const bView = BufferSourceConverter.toUint8Array(b);\n        if (aView.length !== bView.byteLength) {\n            return false;\n        }\n        for (let i = 0; i < aView.length; i++) {\n            if (aView[i] !== bView[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static concat(...args) {\n        let buffers;\n        if (Array.isArray(args[0]) && !(args[1] instanceof Function)) {\n            buffers = args[0];\n        }\n        else if (Array.isArray(args[0]) && args[1] instanceof Function) {\n            buffers = args[0];\n        }\n        else {\n            if (args[args.length - 1] instanceof Function) {\n                buffers = args.slice(0, args.length - 1);\n            }\n            else {\n                buffers = args;\n            }\n        }\n        let size = 0;\n        for (const buffer of buffers) {\n            size += buffer.byteLength;\n        }\n        const res = new Uint8Array(size);\n        let offset = 0;\n        for (const buffer of buffers) {\n            const view = this.toUint8Array(buffer);\n            res.set(view, offset);\n            offset += view.length;\n        }\n        if (args[args.length - 1] instanceof Function) {\n            return this.toView(res, args[args.length - 1]);\n        }\n        return res.buffer;\n    }\n}\n\nconst STRING_TYPE = \"string\";\nconst HEX_REGEX = /^[0-9a-f\\s]+$/i;\nconst BASE64_REGEX = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\nconst BASE64URL_REGEX = /^[a-zA-Z0-9-_]+$/;\nclass Utf8Converter {\n    static fromString(text) {\n        const s = unescape(encodeURIComponent(text));\n        const uintArray = new Uint8Array(s.length);\n        for (let i = 0; i < s.length; i++) {\n            uintArray[i] = s.charCodeAt(i);\n        }\n        return uintArray.buffer;\n    }\n    static toString(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let encodedString = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            encodedString += String.fromCharCode(buf[i]);\n        }\n        const decodedString = decodeURIComponent(escape(encodedString));\n        return decodedString;\n    }\n}\nclass Utf16Converter {\n    static toString(buffer, littleEndian = false) {\n        const arrayBuffer = BufferSourceConverter.toArrayBuffer(buffer);\n        const dataView = new DataView(arrayBuffer);\n        let res = \"\";\n        for (let i = 0; i < arrayBuffer.byteLength; i += 2) {\n            const code = dataView.getUint16(i, littleEndian);\n            res += String.fromCharCode(code);\n        }\n        return res;\n    }\n    static fromString(text, littleEndian = false) {\n        const res = new ArrayBuffer(text.length * 2);\n        const dataView = new DataView(res);\n        for (let i = 0; i < text.length; i++) {\n            dataView.setUint16(i * 2, text.charCodeAt(i), littleEndian);\n        }\n        return res;\n    }\n}\nclass Convert {\n    static isHex(data) {\n        return typeof data === STRING_TYPE\n            && HEX_REGEX.test(data);\n    }\n    static isBase64(data) {\n        return typeof data === STRING_TYPE\n            && BASE64_REGEX.test(data);\n    }\n    static isBase64Url(data) {\n        return typeof data === STRING_TYPE\n            && BASE64URL_REGEX.test(data);\n    }\n    static ToString(buffer, enc = \"utf8\") {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.ToUtf8String(buf);\n            case \"binary\":\n                return this.ToBinary(buf);\n            case \"hex\":\n                return this.ToHex(buf);\n            case \"base64\":\n                return this.ToBase64(buf);\n            case \"base64url\":\n                return this.ToBase64Url(buf);\n            case \"utf16le\":\n                return Utf16Converter.toString(buf, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buf);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static FromString(str, enc = \"utf8\") {\n        if (!str) {\n            return new ArrayBuffer(0);\n        }\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.FromUtf8String(str);\n            case \"binary\":\n                return this.FromBinary(str);\n            case \"hex\":\n                return this.FromHex(str);\n            case \"base64\":\n                return this.FromBase64(str);\n            case \"base64url\":\n                return this.FromBase64Url(str);\n            case \"utf16le\":\n                return Utf16Converter.fromString(str, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(str);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static ToBase64(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        if (typeof btoa !== \"undefined\") {\n            const binary = this.ToString(buf, \"binary\");\n            return btoa(binary);\n        }\n        else {\n            return Buffer.from(buf).toString(\"base64\");\n        }\n    }\n    static FromBase64(base64) {\n        const formatted = this.formatString(base64);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64(formatted)) {\n            throw new TypeError(\"Argument 'base64Text' is not Base64 encoded\");\n        }\n        if (typeof atob !== \"undefined\") {\n            return this.FromBinary(atob(formatted));\n        }\n        else {\n            return new Uint8Array(Buffer.from(formatted, \"base64\")).buffer;\n        }\n    }\n    static FromBase64Url(base64url) {\n        const formatted = this.formatString(base64url);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64Url(formatted)) {\n            throw new TypeError(\"Argument 'base64url' is not Base64Url encoded\");\n        }\n        return this.FromBase64(this.Base64Padding(formatted.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\")));\n    }\n    static ToBase64Url(data) {\n        return this.ToBase64(data).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=/g, \"\");\n    }\n    static FromUtf8String(text, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.FromBinary(text);\n            case \"utf8\":\n                return Utf8Converter.fromString(text);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(text);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.fromString(text, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static ToUtf8String(buffer, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.ToBinary(buffer);\n            case \"utf8\":\n                return Utf8Converter.toString(buffer);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buffer);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.toString(buffer, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static FromBinary(text) {\n        const stringLength = text.length;\n        const resultView = new Uint8Array(stringLength);\n        for (let i = 0; i < stringLength; i++) {\n            resultView[i] = text.charCodeAt(i);\n        }\n        return resultView.buffer;\n    }\n    static ToBinary(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let res = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            res += String.fromCharCode(buf[i]);\n        }\n        return res;\n    }\n    static ToHex(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let result = \"\";\n        const len = buf.length;\n        for (let i = 0; i < len; i++) {\n            const byte = buf[i];\n            if (byte < 16) {\n                result += \"0\";\n            }\n            result += byte.toString(16);\n        }\n        return result;\n    }\n    static FromHex(hexString) {\n        let formatted = this.formatString(hexString);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isHex(formatted)) {\n            throw new TypeError(\"Argument 'hexString' is not HEX encoded\");\n        }\n        if (formatted.length % 2) {\n            formatted = `0${formatted}`;\n        }\n        const res = new Uint8Array(formatted.length / 2);\n        for (let i = 0; i < formatted.length; i = i + 2) {\n            const c = formatted.slice(i, i + 2);\n            res[i / 2] = parseInt(c, 16);\n        }\n        return res.buffer;\n    }\n    static ToUtf16String(buffer, littleEndian = false) {\n        return Utf16Converter.toString(buffer, littleEndian);\n    }\n    static FromUtf16String(text, littleEndian = false) {\n        return Utf16Converter.fromString(text, littleEndian);\n    }\n    static Base64Padding(base64) {\n        const padCount = 4 - (base64.length % 4);\n        if (padCount < 4) {\n            for (let i = 0; i < padCount; i++) {\n                base64 += \"=\";\n            }\n        }\n        return base64;\n    }\n    static formatString(data) {\n        return (data === null || data === void 0 ? void 0 : data.replace(/[\\n\\r\\t ]/g, \"\")) || \"\";\n    }\n}\nConvert.DEFAULT_UTF8_ENCODING = \"utf8\";\n\nfunction assign(target, ...sources) {\n    const res = arguments[0];\n    for (let i = 1; i < arguments.length; i++) {\n        const obj = arguments[i];\n        for (const prop in obj) {\n            res[prop] = obj[prop];\n        }\n    }\n    return res;\n}\nfunction combine(...buf) {\n    const totalByteLength = buf.map((item) => item.byteLength).reduce((prev, cur) => prev + cur);\n    const res = new Uint8Array(totalByteLength);\n    let currentPos = 0;\n    buf.map((item) => new Uint8Array(item)).forEach((arr) => {\n        for (const item2 of arr) {\n            res[currentPos++] = item2;\n        }\n    });\n    return res.buffer;\n}\nfunction isEqual(bytes1, bytes2) {\n    if (!(bytes1 && bytes2)) {\n        return false;\n    }\n    if (bytes1.byteLength !== bytes2.byteLength) {\n        return false;\n    }\n    const b1 = new Uint8Array(bytes1);\n    const b2 = new Uint8Array(bytes2);\n    for (let i = 0; i < bytes1.byteLength; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport { BufferSourceConverter, Convert, assign, combine, isEqual };\n","/*!\n Copyright (c) Peculiar Ventures, LLC\n*/\n\nfunction getUTCDate(date) {\r\n    return new Date(date.getTime() + (date.getTimezoneOffset() * 60000));\r\n}\r\nfunction getParametersValue(parameters, name, defaultValue) {\r\n    var _a;\r\n    if ((parameters instanceof Object) === false) {\r\n        return defaultValue;\r\n    }\r\n    return (_a = parameters[name]) !== null && _a !== void 0 ? _a : defaultValue;\r\n}\r\nfunction bufferToHexCodes(inputBuffer, inputOffset = 0, inputLength = (inputBuffer.byteLength - inputOffset), insertSpace = false) {\r\n    let result = \"\";\r\n    for (const item of (new Uint8Array(inputBuffer, inputOffset, inputLength))) {\r\n        const str = item.toString(16).toUpperCase();\r\n        if (str.length === 1) {\r\n            result += \"0\";\r\n        }\r\n        result += str;\r\n        if (insertSpace) {\r\n            result += \" \";\r\n        }\r\n    }\r\n    return result.trim();\r\n}\r\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\r\n    if (!(inputBuffer instanceof ArrayBuffer)) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer must be \\\"ArrayBuffer\\\"\";\r\n        return false;\r\n    }\r\n    if (!inputBuffer.byteLength) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n        return false;\r\n    }\r\n    if (inputOffset < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n        return false;\r\n    }\r\n    if (inputLength < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n        return false;\r\n    }\r\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\r\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction utilFromBase(inputBuffer, inputBase) {\r\n    let result = 0;\r\n    if (inputBuffer.length === 1) {\r\n        return inputBuffer[0];\r\n    }\r\n    for (let i = (inputBuffer.length - 1); i >= 0; i--) {\r\n        result += inputBuffer[(inputBuffer.length - 1) - i] * Math.pow(2, inputBase * i);\r\n    }\r\n    return result;\r\n}\r\nfunction utilToBase(value, base, reserved = (-1)) {\r\n    const internalReserved = reserved;\r\n    let internalValue = value;\r\n    let result = 0;\r\n    let biggest = Math.pow(2, base);\r\n    for (let i = 1; i < 8; i++) {\r\n        if (value < biggest) {\r\n            let retBuf;\r\n            if (internalReserved < 0) {\r\n                retBuf = new ArrayBuffer(i);\r\n                result = i;\r\n            }\r\n            else {\r\n                if (internalReserved < i) {\r\n                    return (new ArrayBuffer(0));\r\n                }\r\n                retBuf = new ArrayBuffer(internalReserved);\r\n                result = internalReserved;\r\n            }\r\n            const retView = new Uint8Array(retBuf);\r\n            for (let j = (i - 1); j >= 0; j--) {\r\n                const basis = Math.pow(2, j * base);\r\n                retView[result - j - 1] = Math.floor(internalValue / basis);\r\n                internalValue -= (retView[result - j - 1]) * basis;\r\n            }\r\n            return retBuf;\r\n        }\r\n        biggest *= Math.pow(2, base);\r\n    }\r\n    return new ArrayBuffer(0);\r\n}\r\nfunction utilConcatBuf(...buffers) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const buffer of buffers) {\r\n        outputLength += buffer.byteLength;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const buffer of buffers) {\r\n        retView.set(new Uint8Array(buffer), prevLength);\r\n        prevLength += buffer.byteLength;\r\n    }\r\n    return retBuf;\r\n}\r\nfunction utilConcatView(...views) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const view of views) {\r\n        outputLength += view.length;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const view of views) {\r\n        retView.set(view, prevLength);\r\n        prevLength += view.length;\r\n    }\r\n    return retView;\r\n}\r\nfunction utilDecodeTC() {\r\n    const buf = new Uint8Array(this.valueHex);\r\n    if (this.valueHex.byteLength >= 2) {\r\n        const condition1 = (buf[0] === 0xFF) && (buf[1] & 0x80);\r\n        const condition2 = (buf[0] === 0x00) && ((buf[1] & 0x80) === 0x00);\r\n        if (condition1 || condition2) {\r\n            this.warnings.push(\"Needlessly long format\");\r\n        }\r\n    }\r\n    const bigIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const bigIntView = new Uint8Array(bigIntBuffer);\r\n    for (let i = 0; i < this.valueHex.byteLength; i++) {\r\n        bigIntView[i] = 0;\r\n    }\r\n    bigIntView[0] = (buf[0] & 0x80);\r\n    const bigInt = utilFromBase(bigIntView, 8);\r\n    const smallIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const smallIntView = new Uint8Array(smallIntBuffer);\r\n    for (let j = 0; j < this.valueHex.byteLength; j++) {\r\n        smallIntView[j] = buf[j];\r\n    }\r\n    smallIntView[0] &= 0x7F;\r\n    const smallInt = utilFromBase(smallIntView, 8);\r\n    return (smallInt - bigInt);\r\n}\r\nfunction utilEncodeTC(value) {\r\n    const modValue = (value < 0) ? (value * (-1)) : value;\r\n    let bigInt = 128;\r\n    for (let i = 1; i < 8; i++) {\r\n        if (modValue <= bigInt) {\r\n            if (value < 0) {\r\n                const smallInt = bigInt - modValue;\r\n                const retBuf = utilToBase(smallInt, 8, i);\r\n                const retView = new Uint8Array(retBuf);\r\n                retView[0] |= 0x80;\r\n                return retBuf;\r\n            }\r\n            let retBuf = utilToBase(modValue, 8, i);\r\n            let retView = new Uint8Array(retBuf);\r\n            if (retView[0] & 0x80) {\r\n                const tempBuf = retBuf.slice(0);\r\n                const tempView = new Uint8Array(tempBuf);\r\n                retBuf = new ArrayBuffer(retBuf.byteLength + 1);\r\n                retView = new Uint8Array(retBuf);\r\n                for (let k = 0; k < tempBuf.byteLength; k++) {\r\n                    retView[k + 1] = tempView[k];\r\n                }\r\n                retView[0] = 0x00;\r\n            }\r\n            return retBuf;\r\n        }\r\n        bigInt *= Math.pow(2, 8);\r\n    }\r\n    return (new ArrayBuffer(0));\r\n}\r\nfunction isEqualBuffer(inputBuffer1, inputBuffer2) {\r\n    if (inputBuffer1.byteLength !== inputBuffer2.byteLength) {\r\n        return false;\r\n    }\r\n    const view1 = new Uint8Array(inputBuffer1);\r\n    const view2 = new Uint8Array(inputBuffer2);\r\n    for (let i = 0; i < view1.length; i++) {\r\n        if (view1[i] !== view2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction padNumber(inputNumber, fullLength) {\r\n    const str = inputNumber.toString(10);\r\n    if (fullLength < str.length) {\r\n        return \"\";\r\n    }\r\n    const dif = fullLength - str.length;\r\n    const padding = new Array(dif);\r\n    for (let i = 0; i < dif; i++) {\r\n        padding[i] = \"0\";\r\n    }\r\n    const paddingString = padding.join(\"\");\r\n    return paddingString.concat(str);\r\n}\r\nconst base64Template = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\nconst base64UrlTemplate = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\";\r\nfunction toBase64(input, useUrlTemplate = false, skipPadding = false, skipLeadingZeros = false) {\r\n    let i = 0;\r\n    let flag1 = 0;\r\n    let flag2 = 0;\r\n    let output = \"\";\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    if (skipLeadingZeros) {\r\n        let nonZeroPosition = 0;\r\n        for (let i = 0; i < input.length; i++) {\r\n            if (input.charCodeAt(i) !== 0) {\r\n                nonZeroPosition = i;\r\n                break;\r\n            }\r\n        }\r\n        input = input.slice(nonZeroPosition);\r\n    }\r\n    while (i < input.length) {\r\n        const chr1 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag1 = 1;\r\n        }\r\n        const chr2 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag2 = 1;\r\n        }\r\n        const chr3 = input.charCodeAt(i++);\r\n        const enc1 = chr1 >> 2;\r\n        const enc2 = ((chr1 & 0x03) << 4) | (chr2 >> 4);\r\n        let enc3 = ((chr2 & 0x0F) << 2) | (chr3 >> 6);\r\n        let enc4 = chr3 & 0x3F;\r\n        if (flag1 === 1) {\r\n            enc3 = enc4 = 64;\r\n        }\r\n        else {\r\n            if (flag2 === 1) {\r\n                enc4 = 64;\r\n            }\r\n        }\r\n        if (skipPadding) {\r\n            if (enc3 === 64) {\r\n                output += `${template.charAt(enc1)}${template.charAt(enc2)}`;\r\n            }\r\n            else {\r\n                if (enc4 === 64) {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}`;\r\n                }\r\n                else {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction fromBase64(input, useUrlTemplate = false, cutTailZeros = false) {\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    function indexOf(toSearch) {\r\n        for (let i = 0; i < 64; i++) {\r\n            if (template.charAt(i) === toSearch)\r\n                return i;\r\n        }\r\n        return 64;\r\n    }\r\n    function test(incoming) {\r\n        return ((incoming === 64) ? 0x00 : incoming);\r\n    }\r\n    let i = 0;\r\n    let output = \"\";\r\n    while (i < input.length) {\r\n        const enc1 = indexOf(input.charAt(i++));\r\n        const enc2 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc3 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc4 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const chr1 = (test(enc1) << 2) | (test(enc2) >> 4);\r\n        const chr2 = ((test(enc2) & 0x0F) << 4) | (test(enc3) >> 2);\r\n        const chr3 = ((test(enc3) & 0x03) << 6) | test(enc4);\r\n        output += String.fromCharCode(chr1);\r\n        if (enc3 !== 64) {\r\n            output += String.fromCharCode(chr2);\r\n        }\r\n        if (enc4 !== 64) {\r\n            output += String.fromCharCode(chr3);\r\n        }\r\n    }\r\n    if (cutTailZeros) {\r\n        const outputLength = output.length;\r\n        let nonZeroStart = (-1);\r\n        for (let i = (outputLength - 1); i >= 0; i--) {\r\n            if (output.charCodeAt(i) !== 0) {\r\n                nonZeroStart = i;\r\n                break;\r\n            }\r\n        }\r\n        if (nonZeroStart !== (-1)) {\r\n            output = output.slice(0, nonZeroStart + 1);\r\n        }\r\n        else {\r\n            output = \"\";\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction arrayBufferToString(buffer) {\r\n    let resultString = \"\";\r\n    const view = new Uint8Array(buffer);\r\n    for (const element of view) {\r\n        resultString += String.fromCharCode(element);\r\n    }\r\n    return resultString;\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    const stringLength = str.length;\r\n    const resultBuffer = new ArrayBuffer(stringLength);\r\n    const resultView = new Uint8Array(resultBuffer);\r\n    for (let i = 0; i < stringLength; i++) {\r\n        resultView[i] = str.charCodeAt(i);\r\n    }\r\n    return resultBuffer;\r\n}\r\nconst log2 = Math.log(2);\r\nfunction nearestPowerOf2(length) {\r\n    const base = (Math.log(length) / log2);\r\n    const floor = Math.floor(base);\r\n    const round = Math.round(base);\r\n    return ((floor === round) ? floor : round);\r\n}\r\nfunction clearProps(object, propsArray) {\r\n    for (const prop of propsArray) {\r\n        delete object[prop];\r\n    }\r\n}\n\nexport { arrayBufferToString, bufferToHexCodes, checkBufferParams, clearProps, fromBase64, getParametersValue, getUTCDate, isEqualBuffer, nearestPowerOf2, padNumber, stringToArrayBuffer, toBase64, utilConcatBuf, utilConcatView, utilDecodeTC, utilEncodeTC, utilFromBase, utilToBase };\n","/*!\n * Copyright (c) 2014, GMO GlobalSign\n * Copyright (c) 2015-2022, Peculiar Ventures\n * All rights reserved.\n * \n * Author 2014-2019, Yury Strozhevsky\n * \n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n * \n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n * \n * * Redistributions in binary form must reproduce the above copyright notice, this\n *   list of conditions and the following disclaimer in the documentation and/or\n *   other materials provided with the distribution.\n * \n * * Neither the name of the copyright holder nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nimport * as pvtsutils from 'pvtsutils';\nimport * as pvutils from 'pvutils';\n\nfunction assertBigInt() {\n    if (typeof BigInt === \"undefined\") {\n        throw new Error(\"BigInt is not defined. Your environment doesn't implement BigInt.\");\n    }\n}\nfunction concat(buffers) {\n    let outputLength = 0;\n    let prevLength = 0;\n    for (let i = 0; i < buffers.length; i++) {\n        const buffer = buffers[i];\n        outputLength += buffer.byteLength;\n    }\n    const retView = new Uint8Array(outputLength);\n    for (let i = 0; i < buffers.length; i++) {\n        const buffer = buffers[i];\n        retView.set(new Uint8Array(buffer), prevLength);\n        prevLength += buffer.byteLength;\n    }\n    return retView.buffer;\n}\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\n    if (!(inputBuffer instanceof Uint8Array)) {\n        baseBlock.error = \"Wrong parameter: inputBuffer must be 'Uint8Array'\";\n        return false;\n    }\n    if (!inputBuffer.byteLength) {\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\n        return false;\n    }\n    if (inputOffset < 0) {\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\n        return false;\n    }\n    if (inputLength < 0) {\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\n        return false;\n    }\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\n        return false;\n    }\n    return true;\n}\n\nclass ViewWriter {\n    constructor() {\n        this.items = [];\n    }\n    write(buf) {\n        this.items.push(buf);\n    }\n    final() {\n        return concat(this.items);\n    }\n}\n\nconst powers2 = [new Uint8Array([1])];\nconst digitsString = \"0123456789\";\nconst NAME = \"name\";\nconst VALUE_HEX_VIEW = \"valueHexView\";\nconst IS_HEX_ONLY = \"isHexOnly\";\nconst ID_BLOCK = \"idBlock\";\nconst TAG_CLASS = \"tagClass\";\nconst TAG_NUMBER = \"tagNumber\";\nconst IS_CONSTRUCTED = \"isConstructed\";\nconst FROM_BER = \"fromBER\";\nconst TO_BER = \"toBER\";\nconst LOCAL = \"local\";\nconst EMPTY_STRING = \"\";\nconst EMPTY_BUFFER = new ArrayBuffer(0);\nconst EMPTY_VIEW = new Uint8Array(0);\nconst END_OF_CONTENT_NAME = \"EndOfContent\";\nconst OCTET_STRING_NAME = \"OCTET STRING\";\nconst BIT_STRING_NAME = \"BIT STRING\";\n\nfunction HexBlock(BaseClass) {\n    var _a;\n    return _a = class Some extends BaseClass {\n            get valueHex() {\n                return this.valueHexView.slice().buffer;\n            }\n            set valueHex(value) {\n                this.valueHexView = new Uint8Array(value);\n            }\n            constructor(...args) {\n                var _b;\n                super(...args);\n                const params = args[0] || {};\n                this.isHexOnly = (_b = params.isHexOnly) !== null && _b !== void 0 ? _b : false;\n                this.valueHexView = params.valueHex ? pvtsutils.BufferSourceConverter.toUint8Array(params.valueHex) : EMPTY_VIEW;\n            }\n            fromBER(inputBuffer, inputOffset, inputLength) {\n                const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\n                if (!checkBufferParams(this, view, inputOffset, inputLength)) {\n                    return -1;\n                }\n                const endLength = inputOffset + inputLength;\n                this.valueHexView = view.subarray(inputOffset, endLength);\n                if (!this.valueHexView.length) {\n                    this.warnings.push(\"Zero buffer length\");\n                    return inputOffset;\n                }\n                this.blockLength = inputLength;\n                return endLength;\n            }\n            toBER(sizeOnly = false) {\n                if (!this.isHexOnly) {\n                    this.error = \"Flag 'isHexOnly' is not set, abort\";\n                    return EMPTY_BUFFER;\n                }\n                if (sizeOnly) {\n                    return new ArrayBuffer(this.valueHexView.byteLength);\n                }\n                return (this.valueHexView.byteLength === this.valueHexView.buffer.byteLength)\n                    ? this.valueHexView.buffer\n                    : this.valueHexView.slice().buffer;\n            }\n            toJSON() {\n                return {\n                    ...super.toJSON(),\n                    isHexOnly: this.isHexOnly,\n                    valueHex: pvtsutils.Convert.ToHex(this.valueHexView),\n                };\n            }\n        },\n        _a.NAME = \"hexBlock\",\n        _a;\n}\n\nclass LocalBaseBlock {\n    static blockName() {\n        return this.NAME;\n    }\n    get valueBeforeDecode() {\n        return this.valueBeforeDecodeView.slice().buffer;\n    }\n    set valueBeforeDecode(value) {\n        this.valueBeforeDecodeView = new Uint8Array(value);\n    }\n    constructor({ blockLength = 0, error = EMPTY_STRING, warnings = [], valueBeforeDecode = EMPTY_VIEW, } = {}) {\n        this.blockLength = blockLength;\n        this.error = error;\n        this.warnings = warnings;\n        this.valueBeforeDecodeView = pvtsutils.BufferSourceConverter.toUint8Array(valueBeforeDecode);\n    }\n    toJSON() {\n        return {\n            blockName: this.constructor.NAME,\n            blockLength: this.blockLength,\n            error: this.error,\n            warnings: this.warnings,\n            valueBeforeDecode: pvtsutils.Convert.ToHex(this.valueBeforeDecodeView),\n        };\n    }\n}\nLocalBaseBlock.NAME = \"baseBlock\";\n\nclass ValueBlock extends LocalBaseBlock {\n    fromBER(_inputBuffer, _inputOffset, _inputLength) {\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\n    }\n    toBER(_sizeOnly, _writer) {\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\n    }\n}\nValueBlock.NAME = \"valueBlock\";\n\nclass LocalIdentificationBlock extends HexBlock(LocalBaseBlock) {\n    constructor({ idBlock = {} } = {}) {\n        var _a, _b, _c, _d;\n        super();\n        if (idBlock) {\n            this.isHexOnly = (_a = idBlock.isHexOnly) !== null && _a !== void 0 ? _a : false;\n            this.valueHexView = idBlock.valueHex\n                ? pvtsutils.BufferSourceConverter.toUint8Array(idBlock.valueHex)\n                : EMPTY_VIEW;\n            this.tagClass = (_b = idBlock.tagClass) !== null && _b !== void 0 ? _b : -1;\n            this.tagNumber = (_c = idBlock.tagNumber) !== null && _c !== void 0 ? _c : -1;\n            this.isConstructed = (_d = idBlock.isConstructed) !== null && _d !== void 0 ? _d : false;\n        }\n        else {\n            this.tagClass = -1;\n            this.tagNumber = -1;\n            this.isConstructed = false;\n        }\n    }\n    toBER(sizeOnly = false) {\n        let firstOctet = 0;\n        switch (this.tagClass) {\n            case 1:\n                firstOctet |= 0x00;\n                break;\n            case 2:\n                firstOctet |= 0x40;\n                break;\n            case 3:\n                firstOctet |= 0x80;\n                break;\n            case 4:\n                firstOctet |= 0xC0;\n                break;\n            default:\n                this.error = \"Unknown tag class\";\n                return EMPTY_BUFFER;\n        }\n        if (this.isConstructed)\n            firstOctet |= 0x20;\n        if (this.tagNumber < 31 && !this.isHexOnly) {\n            const retView = new Uint8Array(1);\n            if (!sizeOnly) {\n                let number = this.tagNumber;\n                number &= 0x1F;\n                firstOctet |= number;\n                retView[0] = firstOctet;\n            }\n            return retView.buffer;\n        }\n        if (!this.isHexOnly) {\n            const encodedBuf = pvutils.utilToBase(this.tagNumber, 7);\n            const encodedView = new Uint8Array(encodedBuf);\n            const size = encodedBuf.byteLength;\n            const retView = new Uint8Array(size + 1);\n            retView[0] = (firstOctet | 0x1F);\n            if (!sizeOnly) {\n                for (let i = 0; i < (size - 1); i++)\n                    retView[i + 1] = encodedView[i] | 0x80;\n                retView[size] = encodedView[size - 1];\n            }\n            return retView.buffer;\n        }\n        const retView = new Uint8Array(this.valueHexView.byteLength + 1);\n        retView[0] = (firstOctet | 0x1F);\n        if (!sizeOnly) {\n            const curView = this.valueHexView;\n            for (let i = 0; i < (curView.length - 1); i++)\n                retView[i + 1] = curView[i] | 0x80;\n            retView[this.valueHexView.byteLength] = curView[curView.length - 1];\n        }\n        return retView.buffer;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n            return -1;\n        }\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n        if (intBuffer.length === 0) {\n            this.error = \"Zero buffer length\";\n            return -1;\n        }\n        const tagClassMask = intBuffer[0] & 0xC0;\n        switch (tagClassMask) {\n            case 0x00:\n                this.tagClass = (1);\n                break;\n            case 0x40:\n                this.tagClass = (2);\n                break;\n            case 0x80:\n                this.tagClass = (3);\n                break;\n            case 0xC0:\n                this.tagClass = (4);\n                break;\n            default:\n                this.error = \"Unknown tag class\";\n                return -1;\n        }\n        this.isConstructed = (intBuffer[0] & 0x20) === 0x20;\n        this.isHexOnly = false;\n        const tagNumberMask = intBuffer[0] & 0x1F;\n        if (tagNumberMask !== 0x1F) {\n            this.tagNumber = (tagNumberMask);\n            this.blockLength = 1;\n        }\n        else {\n            let count = 1;\n            let intTagNumberBuffer = this.valueHexView = new Uint8Array(255);\n            let tagNumberBufferMaxLength = 255;\n            while (intBuffer[count] & 0x80) {\n                intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\n                count++;\n                if (count >= intBuffer.length) {\n                    this.error = \"End of input reached before message was fully decoded\";\n                    return -1;\n                }\n                if (count === tagNumberBufferMaxLength) {\n                    tagNumberBufferMaxLength += 255;\n                    const tempBufferView = new Uint8Array(tagNumberBufferMaxLength);\n                    for (let i = 0; i < intTagNumberBuffer.length; i++)\n                        tempBufferView[i] = intTagNumberBuffer[i];\n                    intTagNumberBuffer = this.valueHexView = new Uint8Array(tagNumberBufferMaxLength);\n                }\n            }\n            this.blockLength = (count + 1);\n            intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\n            const tempBufferView = new Uint8Array(count);\n            for (let i = 0; i < count; i++)\n                tempBufferView[i] = intTagNumberBuffer[i];\n            intTagNumberBuffer = this.valueHexView = new Uint8Array(count);\n            intTagNumberBuffer.set(tempBufferView);\n            if (this.blockLength <= 9)\n                this.tagNumber = pvutils.utilFromBase(intTagNumberBuffer, 7);\n            else {\n                this.isHexOnly = true;\n                this.warnings.push(\"Tag too long, represented as hex-coded\");\n            }\n        }\n        if (((this.tagClass === 1))\n            && (this.isConstructed)) {\n            switch (this.tagNumber) {\n                case 1:\n                case 2:\n                case 5:\n                case 6:\n                case 9:\n                case 13:\n                case 14:\n                case 23:\n                case 24:\n                case 31:\n                case 32:\n                case 33:\n                case 34:\n                    this.error = \"Constructed encoding used for primitive type\";\n                    return -1;\n            }\n        }\n        return (inputOffset + this.blockLength);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            tagClass: this.tagClass,\n            tagNumber: this.tagNumber,\n            isConstructed: this.isConstructed,\n        };\n    }\n}\nLocalIdentificationBlock.NAME = \"identificationBlock\";\n\nclass LocalLengthBlock extends LocalBaseBlock {\n    constructor({ lenBlock = {} } = {}) {\n        var _a, _b, _c;\n        super();\n        this.isIndefiniteForm = (_a = lenBlock.isIndefiniteForm) !== null && _a !== void 0 ? _a : false;\n        this.longFormUsed = (_b = lenBlock.longFormUsed) !== null && _b !== void 0 ? _b : false;\n        this.length = (_c = lenBlock.length) !== null && _c !== void 0 ? _c : 0;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\n            return -1;\n        }\n        const intBuffer = view.subarray(inputOffset, inputOffset + inputLength);\n        if (intBuffer.length === 0) {\n            this.error = \"Zero buffer length\";\n            return -1;\n        }\n        if (intBuffer[0] === 0xFF) {\n            this.error = \"Length block 0xFF is reserved by standard\";\n            return -1;\n        }\n        this.isIndefiniteForm = intBuffer[0] === 0x80;\n        if (this.isIndefiniteForm) {\n            this.blockLength = 1;\n            return (inputOffset + this.blockLength);\n        }\n        this.longFormUsed = !!(intBuffer[0] & 0x80);\n        if (this.longFormUsed === false) {\n            this.length = (intBuffer[0]);\n            this.blockLength = 1;\n            return (inputOffset + this.blockLength);\n        }\n        const count = intBuffer[0] & 0x7F;\n        if (count > 8) {\n            this.error = \"Too big integer\";\n            return -1;\n        }\n        if ((count + 1) > intBuffer.length) {\n            this.error = \"End of input reached before message was fully decoded\";\n            return -1;\n        }\n        const lenOffset = inputOffset + 1;\n        const lengthBufferView = view.subarray(lenOffset, lenOffset + count);\n        if (lengthBufferView[count - 1] === 0x00)\n            this.warnings.push(\"Needlessly long encoded length\");\n        this.length = pvutils.utilFromBase(lengthBufferView, 8);\n        if (this.longFormUsed && (this.length <= 127))\n            this.warnings.push(\"Unnecessary usage of long length form\");\n        this.blockLength = count + 1;\n        return (inputOffset + this.blockLength);\n    }\n    toBER(sizeOnly = false) {\n        let retBuf;\n        let retView;\n        if (this.length > 127)\n            this.longFormUsed = true;\n        if (this.isIndefiniteForm) {\n            retBuf = new ArrayBuffer(1);\n            if (sizeOnly === false) {\n                retView = new Uint8Array(retBuf);\n                retView[0] = 0x80;\n            }\n            return retBuf;\n        }\n        if (this.longFormUsed) {\n            const encodedBuf = pvutils.utilToBase(this.length, 8);\n            if (encodedBuf.byteLength > 127) {\n                this.error = \"Too big length\";\n                return (EMPTY_BUFFER);\n            }\n            retBuf = new ArrayBuffer(encodedBuf.byteLength + 1);\n            if (sizeOnly)\n                return retBuf;\n            const encodedView = new Uint8Array(encodedBuf);\n            retView = new Uint8Array(retBuf);\n            retView[0] = encodedBuf.byteLength | 0x80;\n            for (let i = 0; i < encodedBuf.byteLength; i++)\n                retView[i + 1] = encodedView[i];\n            return retBuf;\n        }\n        retBuf = new ArrayBuffer(1);\n        if (sizeOnly === false) {\n            retView = new Uint8Array(retBuf);\n            retView[0] = this.length;\n        }\n        return retBuf;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            isIndefiniteForm: this.isIndefiniteForm,\n            longFormUsed: this.longFormUsed,\n            length: this.length,\n        };\n    }\n}\nLocalLengthBlock.NAME = \"lengthBlock\";\n\nconst typeStore = {};\n\nclass BaseBlock extends LocalBaseBlock {\n    constructor({ name = EMPTY_STRING, optional = false, primitiveSchema, ...parameters } = {}, valueBlockType) {\n        super(parameters);\n        this.name = name;\n        this.optional = optional;\n        if (primitiveSchema) {\n            this.primitiveSchema = primitiveSchema;\n        }\n        this.idBlock = new LocalIdentificationBlock(parameters);\n        this.lenBlock = new LocalLengthBlock(parameters);\n        this.valueBlock = valueBlockType ? new valueBlockType(parameters) : new ValueBlock(parameters);\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm)\n            ? inputLength\n            : this.lenBlock.length);\n        if (resultOffset === -1) {\n            this.error = this.valueBlock.error;\n            return resultOffset;\n        }\n        if (!this.idBlock.error.length)\n            this.blockLength += this.idBlock.blockLength;\n        if (!this.lenBlock.error.length)\n            this.blockLength += this.lenBlock.blockLength;\n        if (!this.valueBlock.error.length)\n            this.blockLength += this.valueBlock.blockLength;\n        return resultOffset;\n    }\n    toBER(sizeOnly, writer) {\n        const _writer = writer || new ViewWriter();\n        if (!writer) {\n            prepareIndefiniteForm(this);\n        }\n        const idBlockBuf = this.idBlock.toBER(sizeOnly);\n        _writer.write(idBlockBuf);\n        if (this.lenBlock.isIndefiniteForm) {\n            _writer.write(new Uint8Array([0x80]).buffer);\n            this.valueBlock.toBER(sizeOnly, _writer);\n            _writer.write(new ArrayBuffer(2));\n        }\n        else {\n            const valueBlockBuf = this.valueBlock.toBER(sizeOnly);\n            this.lenBlock.length = valueBlockBuf.byteLength;\n            const lenBlockBuf = this.lenBlock.toBER(sizeOnly);\n            _writer.write(lenBlockBuf);\n            _writer.write(valueBlockBuf);\n        }\n        if (!writer) {\n            return _writer.final();\n        }\n        return EMPTY_BUFFER;\n    }\n    toJSON() {\n        const object = {\n            ...super.toJSON(),\n            idBlock: this.idBlock.toJSON(),\n            lenBlock: this.lenBlock.toJSON(),\n            valueBlock: this.valueBlock.toJSON(),\n            name: this.name,\n            optional: this.optional,\n        };\n        if (this.primitiveSchema)\n            object.primitiveSchema = this.primitiveSchema.toJSON();\n        return object;\n    }\n    toString(encoding = \"ascii\") {\n        if (encoding === \"ascii\") {\n            return this.onAsciiEncoding();\n        }\n        return pvtsutils.Convert.ToHex(this.toBER());\n    }\n    onAsciiEncoding() {\n        const name = this.constructor.NAME;\n        const value = pvtsutils.Convert.ToHex(this.valueBlock.valueBeforeDecodeView);\n        return `${name} : ${value}`;\n    }\n    isEqual(other) {\n        if (this === other) {\n            return true;\n        }\n        if (!(other instanceof this.constructor)) {\n            return false;\n        }\n        const thisRaw = this.toBER();\n        const otherRaw = other.toBER();\n        return pvutils.isEqualBuffer(thisRaw, otherRaw);\n    }\n}\nBaseBlock.NAME = \"BaseBlock\";\nfunction prepareIndefiniteForm(baseBlock) {\n    var _a;\n    if (baseBlock instanceof typeStore.Constructed) {\n        for (const value of baseBlock.valueBlock.value) {\n            if (prepareIndefiniteForm(value)) {\n                baseBlock.lenBlock.isIndefiniteForm = true;\n            }\n        }\n    }\n    return !!((_a = baseBlock.lenBlock) === null || _a === void 0 ? void 0 : _a.isIndefiniteForm);\n}\n\nclass BaseStringBlock extends BaseBlock {\n    getValue() {\n        return this.valueBlock.value;\n    }\n    setValue(value) {\n        this.valueBlock.value = value;\n    }\n    constructor({ value = EMPTY_STRING, ...parameters } = {}, stringValueBlockType) {\n        super(parameters, stringValueBlockType);\n        if (value) {\n            this.fromString(value);\n        }\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm)\n            ? inputLength\n            : this.lenBlock.length);\n        if (resultOffset === -1) {\n            this.error = this.valueBlock.error;\n            return resultOffset;\n        }\n        this.fromBuffer(this.valueBlock.valueHexView);\n        if (!this.idBlock.error.length)\n            this.blockLength += this.idBlock.blockLength;\n        if (!this.lenBlock.error.length)\n            this.blockLength += this.lenBlock.blockLength;\n        if (!this.valueBlock.error.length)\n            this.blockLength += this.valueBlock.blockLength;\n        return resultOffset;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : '${this.valueBlock.value}'`;\n    }\n}\nBaseStringBlock.NAME = \"BaseStringBlock\";\n\nclass LocalPrimitiveValueBlock extends HexBlock(ValueBlock) {\n    constructor({ isHexOnly = true, ...parameters } = {}) {\n        super(parameters);\n        this.isHexOnly = isHexOnly;\n    }\n}\nLocalPrimitiveValueBlock.NAME = \"PrimitiveValueBlock\";\n\nvar _a$w;\nclass Primitive extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, LocalPrimitiveValueBlock);\n        this.idBlock.isConstructed = false;\n    }\n}\n_a$w = Primitive;\n(() => {\n    typeStore.Primitive = _a$w;\n})();\nPrimitive.NAME = \"PRIMITIVE\";\n\nfunction localChangeType(inputObject, newType) {\n    if (inputObject instanceof newType) {\n        return inputObject;\n    }\n    const newObject = new newType();\n    newObject.idBlock = inputObject.idBlock;\n    newObject.lenBlock = inputObject.lenBlock;\n    newObject.warnings = inputObject.warnings;\n    newObject.valueBeforeDecodeView = inputObject.valueBeforeDecodeView;\n    return newObject;\n}\nfunction localFromBER(inputBuffer, inputOffset = 0, inputLength = inputBuffer.length) {\n    const incomingOffset = inputOffset;\n    let returnObject = new BaseBlock({}, ValueBlock);\n    const baseBlock = new LocalBaseBlock();\n    if (!checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength)) {\n        returnObject.error = baseBlock.error;\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    const intBuffer = inputBuffer.subarray(inputOffset, inputOffset + inputLength);\n    if (!intBuffer.length) {\n        returnObject.error = \"Zero buffer length\";\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    let resultOffset = returnObject.idBlock.fromBER(inputBuffer, inputOffset, inputLength);\n    if (returnObject.idBlock.warnings.length) {\n        returnObject.warnings.concat(returnObject.idBlock.warnings);\n    }\n    if (resultOffset === -1) {\n        returnObject.error = returnObject.idBlock.error;\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    inputOffset = resultOffset;\n    inputLength -= returnObject.idBlock.blockLength;\n    resultOffset = returnObject.lenBlock.fromBER(inputBuffer, inputOffset, inputLength);\n    if (returnObject.lenBlock.warnings.length) {\n        returnObject.warnings.concat(returnObject.lenBlock.warnings);\n    }\n    if (resultOffset === -1) {\n        returnObject.error = returnObject.lenBlock.error;\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    inputOffset = resultOffset;\n    inputLength -= returnObject.lenBlock.blockLength;\n    if (!returnObject.idBlock.isConstructed\n        && returnObject.lenBlock.isIndefiniteForm) {\n        returnObject.error = \"Indefinite length form used for primitive encoding form\";\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    let newASN1Type = BaseBlock;\n    switch (returnObject.idBlock.tagClass) {\n        case 1:\n            if ((returnObject.idBlock.tagNumber >= 37)\n                && (returnObject.idBlock.isHexOnly === false)) {\n                returnObject.error = \"UNIVERSAL 37 and upper tags are reserved by ASN.1 standard\";\n                return {\n                    offset: -1,\n                    result: returnObject,\n                };\n            }\n            switch (returnObject.idBlock.tagNumber) {\n                case 0:\n                    if ((returnObject.idBlock.isConstructed)\n                        && (returnObject.lenBlock.length > 0)) {\n                        returnObject.error = \"Type [UNIVERSAL 0] is reserved\";\n                        return {\n                            offset: -1,\n                            result: returnObject,\n                        };\n                    }\n                    newASN1Type = typeStore.EndOfContent;\n                    break;\n                case 1:\n                    newASN1Type = typeStore.Boolean;\n                    break;\n                case 2:\n                    newASN1Type = typeStore.Integer;\n                    break;\n                case 3:\n                    newASN1Type = typeStore.BitString;\n                    break;\n                case 4:\n                    newASN1Type = typeStore.OctetString;\n                    break;\n                case 5:\n                    newASN1Type = typeStore.Null;\n                    break;\n                case 6:\n                    newASN1Type = typeStore.ObjectIdentifier;\n                    break;\n                case 10:\n                    newASN1Type = typeStore.Enumerated;\n                    break;\n                case 12:\n                    newASN1Type = typeStore.Utf8String;\n                    break;\n                case 13:\n                    newASN1Type = typeStore.RelativeObjectIdentifier;\n                    break;\n                case 14:\n                    newASN1Type = typeStore.TIME;\n                    break;\n                case 15:\n                    returnObject.error = \"[UNIVERSAL 15] is reserved by ASN.1 standard\";\n                    return {\n                        offset: -1,\n                        result: returnObject,\n                    };\n                case 16:\n                    newASN1Type = typeStore.Sequence;\n                    break;\n                case 17:\n                    newASN1Type = typeStore.Set;\n                    break;\n                case 18:\n                    newASN1Type = typeStore.NumericString;\n                    break;\n                case 19:\n                    newASN1Type = typeStore.PrintableString;\n                    break;\n                case 20:\n                    newASN1Type = typeStore.TeletexString;\n                    break;\n                case 21:\n                    newASN1Type = typeStore.VideotexString;\n                    break;\n                case 22:\n                    newASN1Type = typeStore.IA5String;\n                    break;\n                case 23:\n                    newASN1Type = typeStore.UTCTime;\n                    break;\n                case 24:\n                    newASN1Type = typeStore.GeneralizedTime;\n                    break;\n                case 25:\n                    newASN1Type = typeStore.GraphicString;\n                    break;\n                case 26:\n                    newASN1Type = typeStore.VisibleString;\n                    break;\n                case 27:\n                    newASN1Type = typeStore.GeneralString;\n                    break;\n                case 28:\n                    newASN1Type = typeStore.UniversalString;\n                    break;\n                case 29:\n                    newASN1Type = typeStore.CharacterString;\n                    break;\n                case 30:\n                    newASN1Type = typeStore.BmpString;\n                    break;\n                case 31:\n                    newASN1Type = typeStore.DATE;\n                    break;\n                case 32:\n                    newASN1Type = typeStore.TimeOfDay;\n                    break;\n                case 33:\n                    newASN1Type = typeStore.DateTime;\n                    break;\n                case 34:\n                    newASN1Type = typeStore.Duration;\n                    break;\n                default: {\n                    const newObject = returnObject.idBlock.isConstructed\n                        ? new typeStore.Constructed()\n                        : new typeStore.Primitive();\n                    newObject.idBlock = returnObject.idBlock;\n                    newObject.lenBlock = returnObject.lenBlock;\n                    newObject.warnings = returnObject.warnings;\n                    returnObject = newObject;\n                }\n            }\n            break;\n        case 2:\n        case 3:\n        case 4:\n        default: {\n            newASN1Type = returnObject.idBlock.isConstructed\n                ? typeStore.Constructed\n                : typeStore.Primitive;\n        }\n    }\n    returnObject = localChangeType(returnObject, newASN1Type);\n    resultOffset = returnObject.fromBER(inputBuffer, inputOffset, returnObject.lenBlock.isIndefiniteForm ? inputLength : returnObject.lenBlock.length);\n    returnObject.valueBeforeDecodeView = inputBuffer.subarray(incomingOffset, incomingOffset + returnObject.blockLength);\n    return {\n        offset: resultOffset,\n        result: returnObject,\n    };\n}\nfunction fromBER(inputBuffer) {\n    if (!inputBuffer.byteLength) {\n        const result = new BaseBlock({}, ValueBlock);\n        result.error = \"Input buffer has zero length\";\n        return {\n            offset: -1,\n            result,\n        };\n    }\n    return localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).slice(), 0, inputBuffer.byteLength);\n}\n\nfunction checkLen(indefiniteLength, length) {\n    if (indefiniteLength) {\n        return 1;\n    }\n    return length;\n}\nclass LocalConstructedValueBlock extends ValueBlock {\n    constructor({ value = [], isIndefiniteForm = false, ...parameters } = {}) {\n        super(parameters);\n        this.value = value;\n        this.isIndefiniteForm = isIndefiniteForm;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\n            return -1;\n        }\n        this.valueBeforeDecodeView = view.subarray(inputOffset, inputOffset + inputLength);\n        if (this.valueBeforeDecodeView.length === 0) {\n            this.warnings.push(\"Zero buffer length\");\n            return inputOffset;\n        }\n        let currentOffset = inputOffset;\n        while (checkLen(this.isIndefiniteForm, inputLength) > 0) {\n            const returnObject = localFromBER(view, currentOffset, inputLength);\n            if (returnObject.offset === -1) {\n                this.error = returnObject.result.error;\n                this.warnings.concat(returnObject.result.warnings);\n                return -1;\n            }\n            currentOffset = returnObject.offset;\n            this.blockLength += returnObject.result.blockLength;\n            inputLength -= returnObject.result.blockLength;\n            this.value.push(returnObject.result);\n            if (this.isIndefiniteForm && returnObject.result.constructor.NAME === END_OF_CONTENT_NAME) {\n                break;\n            }\n        }\n        if (this.isIndefiniteForm) {\n            if (this.value[this.value.length - 1].constructor.NAME === END_OF_CONTENT_NAME) {\n                this.value.pop();\n            }\n            else {\n                this.warnings.push(\"No EndOfContent block encoded\");\n            }\n        }\n        return currentOffset;\n    }\n    toBER(sizeOnly, writer) {\n        const _writer = writer || new ViewWriter();\n        for (let i = 0; i < this.value.length; i++) {\n            this.value[i].toBER(sizeOnly, _writer);\n        }\n        if (!writer) {\n            return _writer.final();\n        }\n        return EMPTY_BUFFER;\n    }\n    toJSON() {\n        const object = {\n            ...super.toJSON(),\n            isIndefiniteForm: this.isIndefiniteForm,\n            value: [],\n        };\n        for (const value of this.value) {\n            object.value.push(value.toJSON());\n        }\n        return object;\n    }\n}\nLocalConstructedValueBlock.NAME = \"ConstructedValueBlock\";\n\nvar _a$v;\nclass Constructed extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, LocalConstructedValueBlock);\n        this.idBlock.isConstructed = true;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\n        if (resultOffset === -1) {\n            this.error = this.valueBlock.error;\n            return resultOffset;\n        }\n        if (!this.idBlock.error.length)\n            this.blockLength += this.idBlock.blockLength;\n        if (!this.lenBlock.error.length)\n            this.blockLength += this.lenBlock.blockLength;\n        if (!this.valueBlock.error.length)\n            this.blockLength += this.valueBlock.blockLength;\n        return resultOffset;\n    }\n    onAsciiEncoding() {\n        const values = [];\n        for (const value of this.valueBlock.value) {\n            values.push(value.toString(\"ascii\").split(\"\\n\").map((o) => `  ${o}`).join(\"\\n\"));\n        }\n        const blockName = this.idBlock.tagClass === 3\n            ? `[${this.idBlock.tagNumber}]`\n            : this.constructor.NAME;\n        return values.length\n            ? `${blockName} :\\n${values.join(\"\\n\")}`\n            : `${blockName} :`;\n    }\n}\n_a$v = Constructed;\n(() => {\n    typeStore.Constructed = _a$v;\n})();\nConstructed.NAME = \"CONSTRUCTED\";\n\nclass LocalEndOfContentValueBlock extends ValueBlock {\n    fromBER(inputBuffer, inputOffset, _inputLength) {\n        return inputOffset;\n    }\n    toBER(_sizeOnly) {\n        return EMPTY_BUFFER;\n    }\n}\nLocalEndOfContentValueBlock.override = \"EndOfContentValueBlock\";\n\nvar _a$u;\nclass EndOfContent extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, LocalEndOfContentValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 0;\n    }\n}\n_a$u = EndOfContent;\n(() => {\n    typeStore.EndOfContent = _a$u;\n})();\nEndOfContent.NAME = END_OF_CONTENT_NAME;\n\nvar _a$t;\nclass Null extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, ValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 5;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        if (this.lenBlock.length > 0)\n            this.warnings.push(\"Non-zero length of value block for Null type\");\n        if (!this.idBlock.error.length)\n            this.blockLength += this.idBlock.blockLength;\n        if (!this.lenBlock.error.length)\n            this.blockLength += this.lenBlock.blockLength;\n        this.blockLength += inputLength;\n        if ((inputOffset + inputLength) > inputBuffer.byteLength) {\n            this.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\n            return -1;\n        }\n        return (inputOffset + inputLength);\n    }\n    toBER(sizeOnly, writer) {\n        const retBuf = new ArrayBuffer(2);\n        if (!sizeOnly) {\n            const retView = new Uint8Array(retBuf);\n            retView[0] = 0x05;\n            retView[1] = 0x00;\n        }\n        if (writer) {\n            writer.write(retBuf);\n        }\n        return retBuf;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME}`;\n    }\n}\n_a$t = Null;\n(() => {\n    typeStore.Null = _a$t;\n})();\nNull.NAME = \"NULL\";\n\nclass LocalBooleanValueBlock extends HexBlock(ValueBlock) {\n    get value() {\n        for (const octet of this.valueHexView) {\n            if (octet > 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n    set value(value) {\n        this.valueHexView[0] = value ? 0xFF : 0x00;\n    }\n    constructor({ value, ...parameters } = {}) {\n        super(parameters);\n        if (parameters.valueHex) {\n            this.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(parameters.valueHex);\n        }\n        else {\n            this.valueHexView = new Uint8Array(1);\n        }\n        if (value) {\n            this.value = value;\n        }\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n            return -1;\n        }\n        this.valueHexView = inputView.subarray(inputOffset, inputOffset + inputLength);\n        if (inputLength > 1)\n            this.warnings.push(\"Boolean value encoded in more then 1 octet\");\n        this.isHexOnly = true;\n        pvutils.utilDecodeTC.call(this);\n        this.blockLength = inputLength;\n        return (inputOffset + inputLength);\n    }\n    toBER() {\n        return this.valueHexView.slice();\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this.value,\n        };\n    }\n}\nLocalBooleanValueBlock.NAME = \"BooleanValueBlock\";\n\nvar _a$s;\nclass Boolean extends BaseBlock {\n    getValue() {\n        return this.valueBlock.value;\n    }\n    setValue(value) {\n        this.valueBlock.value = value;\n    }\n    constructor(parameters = {}) {\n        super(parameters, LocalBooleanValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 1;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.getValue}`;\n    }\n}\n_a$s = Boolean;\n(() => {\n    typeStore.Boolean = _a$s;\n})();\nBoolean.NAME = \"BOOLEAN\";\n\nclass LocalOctetStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\n    constructor({ isConstructed = false, ...parameters } = {}) {\n        super(parameters);\n        this.isConstructed = isConstructed;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        let resultOffset = 0;\n        if (this.isConstructed) {\n            this.isHexOnly = false;\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\n            if (resultOffset === -1)\n                return resultOffset;\n            for (let i = 0; i < this.value.length; i++) {\n                const currentBlockName = this.value[i].constructor.NAME;\n                if (currentBlockName === END_OF_CONTENT_NAME) {\n                    if (this.isIndefiniteForm)\n                        break;\n                    else {\n                        this.error = \"EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only\";\n                        return -1;\n                    }\n                }\n                if (currentBlockName !== OCTET_STRING_NAME) {\n                    this.error = \"OCTET STRING may consists of OCTET STRINGs only\";\n                    return -1;\n                }\n            }\n        }\n        else {\n            this.isHexOnly = true;\n            resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\n            this.blockLength = inputLength;\n        }\n        return resultOffset;\n    }\n    toBER(sizeOnly, writer) {\n        if (this.isConstructed)\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\n        return sizeOnly\n            ? new ArrayBuffer(this.valueHexView.byteLength)\n            : this.valueHexView.slice().buffer;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            isConstructed: this.isConstructed,\n        };\n    }\n}\nLocalOctetStringValueBlock.NAME = \"OctetStringValueBlock\";\n\nvar _a$r;\nclass OctetString extends BaseBlock {\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\n        var _b, _c;\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\n        super({\n            idBlock: {\n                isConstructed: parameters.isConstructed,\n                ...idBlock,\n            },\n            lenBlock: {\n                ...lenBlock,\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\n            },\n            ...parameters,\n        }, LocalOctetStringValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 4;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n        if (inputLength === 0) {\n            if (this.idBlock.error.length === 0)\n                this.blockLength += this.idBlock.blockLength;\n            if (this.lenBlock.error.length === 0)\n                this.blockLength += this.lenBlock.blockLength;\n            return inputOffset;\n        }\n        if (!this.valueBlock.isConstructed) {\n            const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\n            const buf = view.subarray(inputOffset, inputOffset + inputLength);\n            try {\n                if (buf.byteLength) {\n                    const asn = localFromBER(buf, 0, buf.byteLength);\n                    if (asn.offset !== -1 && asn.offset === inputLength) {\n                        this.valueBlock.value = [asn.result];\n                    }\n                }\n            }\n            catch {\n            }\n        }\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\n    }\n    onAsciiEncoding() {\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\n            return Constructed.prototype.onAsciiEncoding.call(this);\n        }\n        const name = this.constructor.NAME;\n        const value = pvtsutils.Convert.ToHex(this.valueBlock.valueHexView);\n        return `${name} : ${value}`;\n    }\n    getValue() {\n        if (!this.idBlock.isConstructed) {\n            return this.valueBlock.valueHexView.slice().buffer;\n        }\n        const array = [];\n        for (const content of this.valueBlock.value) {\n            if (content instanceof _a$r) {\n                array.push(content.valueBlock.valueHexView);\n            }\n        }\n        return pvtsutils.BufferSourceConverter.concat(array);\n    }\n}\n_a$r = OctetString;\n(() => {\n    typeStore.OctetString = _a$r;\n})();\nOctetString.NAME = OCTET_STRING_NAME;\n\nclass LocalBitStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\n    constructor({ unusedBits = 0, isConstructed = false, ...parameters } = {}) {\n        super(parameters);\n        this.unusedBits = unusedBits;\n        this.isConstructed = isConstructed;\n        this.blockLength = this.valueHexView.byteLength;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        if (!inputLength) {\n            return inputOffset;\n        }\n        let resultOffset = -1;\n        if (this.isConstructed) {\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\n            if (resultOffset === -1)\n                return resultOffset;\n            for (const value of this.value) {\n                const currentBlockName = value.constructor.NAME;\n                if (currentBlockName === END_OF_CONTENT_NAME) {\n                    if (this.isIndefiniteForm)\n                        break;\n                    else {\n                        this.error = \"EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only\";\n                        return -1;\n                    }\n                }\n                if (currentBlockName !== BIT_STRING_NAME) {\n                    this.error = \"BIT STRING may consists of BIT STRINGs only\";\n                    return -1;\n                }\n                const valueBlock = value.valueBlock;\n                if ((this.unusedBits > 0) && (valueBlock.unusedBits > 0)) {\n                    this.error = \"Using of \\\"unused bits\\\" inside constructive BIT STRING allowed for least one only\";\n                    return -1;\n                }\n                this.unusedBits = valueBlock.unusedBits;\n            }\n            return resultOffset;\n        }\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n            return -1;\n        }\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n        this.unusedBits = intBuffer[0];\n        if (this.unusedBits > 7) {\n            this.error = \"Unused bits for BitString must be in range 0-7\";\n            return -1;\n        }\n        if (!this.unusedBits) {\n            const buf = intBuffer.subarray(1);\n            try {\n                if (buf.byteLength) {\n                    const asn = localFromBER(buf, 0, buf.byteLength);\n                    if (asn.offset !== -1 && asn.offset === (inputLength - 1)) {\n                        this.value = [asn.result];\n                    }\n                }\n            }\n            catch {\n            }\n        }\n        this.valueHexView = intBuffer.subarray(1);\n        this.blockLength = intBuffer.length;\n        return (inputOffset + inputLength);\n    }\n    toBER(sizeOnly, writer) {\n        if (this.isConstructed) {\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\n        }\n        if (sizeOnly) {\n            return new ArrayBuffer(this.valueHexView.byteLength + 1);\n        }\n        if (!this.valueHexView.byteLength) {\n            return EMPTY_BUFFER;\n        }\n        const retView = new Uint8Array(this.valueHexView.length + 1);\n        retView[0] = this.unusedBits;\n        retView.set(this.valueHexView, 1);\n        return retView.buffer;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            unusedBits: this.unusedBits,\n            isConstructed: this.isConstructed,\n        };\n    }\n}\nLocalBitStringValueBlock.NAME = \"BitStringValueBlock\";\n\nvar _a$q;\nclass BitString extends BaseBlock {\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\n        var _b, _c;\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\n        super({\n            idBlock: {\n                isConstructed: parameters.isConstructed,\n                ...idBlock,\n            },\n            lenBlock: {\n                ...lenBlock,\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\n            },\n            ...parameters,\n        }, LocalBitStringValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 3;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\n    }\n    onAsciiEncoding() {\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\n            return Constructed.prototype.onAsciiEncoding.call(this);\n        }\n        else {\n            const bits = [];\n            const valueHex = this.valueBlock.valueHexView;\n            for (const byte of valueHex) {\n                bits.push(byte.toString(2).padStart(8, \"0\"));\n            }\n            const bitsStr = bits.join(\"\");\n            const name = this.constructor.NAME;\n            const value = bitsStr.substring(0, bitsStr.length - this.valueBlock.unusedBits);\n            return `${name} : ${value}`;\n        }\n    }\n}\n_a$q = BitString;\n(() => {\n    typeStore.BitString = _a$q;\n})();\nBitString.NAME = BIT_STRING_NAME;\n\nvar _a$p;\nfunction viewAdd(first, second) {\n    const c = new Uint8Array([0]);\n    const firstView = new Uint8Array(first);\n    const secondView = new Uint8Array(second);\n    let firstViewCopy = firstView.slice(0);\n    const firstViewCopyLength = firstViewCopy.length - 1;\n    const secondViewCopy = secondView.slice(0);\n    const secondViewCopyLength = secondViewCopy.length - 1;\n    let value = 0;\n    const max = (secondViewCopyLength < firstViewCopyLength) ? firstViewCopyLength : secondViewCopyLength;\n    let counter = 0;\n    for (let i = max; i >= 0; i--, counter++) {\n        switch (true) {\n            case (counter < secondViewCopy.length):\n                value = firstViewCopy[firstViewCopyLength - counter] + secondViewCopy[secondViewCopyLength - counter] + c[0];\n                break;\n            default:\n                value = firstViewCopy[firstViewCopyLength - counter] + c[0];\n        }\n        c[0] = value / 10;\n        switch (true) {\n            case (counter >= firstViewCopy.length):\n                firstViewCopy = pvutils.utilConcatView(new Uint8Array([value % 10]), firstViewCopy);\n                break;\n            default:\n                firstViewCopy[firstViewCopyLength - counter] = value % 10;\n        }\n    }\n    if (c[0] > 0)\n        firstViewCopy = pvutils.utilConcatView(c, firstViewCopy);\n    return firstViewCopy;\n}\nfunction power2(n) {\n    if (n >= powers2.length) {\n        for (let p = powers2.length; p <= n; p++) {\n            const c = new Uint8Array([0]);\n            let digits = (powers2[p - 1]).slice(0);\n            for (let i = (digits.length - 1); i >= 0; i--) {\n                const newValue = new Uint8Array([(digits[i] << 1) + c[0]]);\n                c[0] = newValue[0] / 10;\n                digits[i] = newValue[0] % 10;\n            }\n            if (c[0] > 0)\n                digits = pvutils.utilConcatView(c, digits);\n            powers2.push(digits);\n        }\n    }\n    return powers2[n];\n}\nfunction viewSub(first, second) {\n    let b = 0;\n    const firstView = new Uint8Array(first);\n    const secondView = new Uint8Array(second);\n    const firstViewCopy = firstView.slice(0);\n    const firstViewCopyLength = firstViewCopy.length - 1;\n    const secondViewCopy = secondView.slice(0);\n    const secondViewCopyLength = secondViewCopy.length - 1;\n    let value;\n    let counter = 0;\n    for (let i = secondViewCopyLength; i >= 0; i--, counter++) {\n        value = firstViewCopy[firstViewCopyLength - counter] - secondViewCopy[secondViewCopyLength - counter] - b;\n        switch (true) {\n            case (value < 0):\n                b = 1;\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\n                break;\n            default:\n                b = 0;\n                firstViewCopy[firstViewCopyLength - counter] = value;\n        }\n    }\n    if (b > 0) {\n        for (let i = (firstViewCopyLength - secondViewCopyLength + 1); i >= 0; i--, counter++) {\n            value = firstViewCopy[firstViewCopyLength - counter] - b;\n            if (value < 0) {\n                b = 1;\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\n            }\n            else {\n                b = 0;\n                firstViewCopy[firstViewCopyLength - counter] = value;\n                break;\n            }\n        }\n    }\n    return firstViewCopy.slice();\n}\nclass LocalIntegerValueBlock extends HexBlock(ValueBlock) {\n    setValueHex() {\n        if (this.valueHexView.length >= 4) {\n            this.warnings.push(\"Too big Integer for decoding, hex only\");\n            this.isHexOnly = true;\n            this._valueDec = 0;\n        }\n        else {\n            this.isHexOnly = false;\n            if (this.valueHexView.length > 0) {\n                this._valueDec = pvutils.utilDecodeTC.call(this);\n            }\n        }\n    }\n    constructor({ value, ...parameters } = {}) {\n        super(parameters);\n        this._valueDec = 0;\n        if (parameters.valueHex) {\n            this.setValueHex();\n        }\n        if (value !== undefined) {\n            this.valueDec = value;\n        }\n    }\n    set valueDec(v) {\n        this._valueDec = v;\n        this.isHexOnly = false;\n        this.valueHexView = new Uint8Array(pvutils.utilEncodeTC(v));\n    }\n    get valueDec() {\n        return this._valueDec;\n    }\n    fromDER(inputBuffer, inputOffset, inputLength, expectedLength = 0) {\n        const offset = this.fromBER(inputBuffer, inputOffset, inputLength);\n        if (offset === -1)\n            return offset;\n        const view = this.valueHexView;\n        if ((view[0] === 0x00) && ((view[1] & 0x80) !== 0)) {\n            this.valueHexView = view.subarray(1);\n        }\n        else {\n            if (expectedLength !== 0) {\n                if (view.length < expectedLength) {\n                    if ((expectedLength - view.length) > 1)\n                        expectedLength = view.length + 1;\n                    this.valueHexView = view.subarray(expectedLength - view.length);\n                }\n            }\n        }\n        return offset;\n    }\n    toDER(sizeOnly = false) {\n        const view = this.valueHexView;\n        switch (true) {\n            case ((view[0] & 0x80) !== 0):\n                {\n                    const updatedView = new Uint8Array(this.valueHexView.length + 1);\n                    updatedView[0] = 0x00;\n                    updatedView.set(view, 1);\n                    this.valueHexView = updatedView;\n                }\n                break;\n            case ((view[0] === 0x00) && ((view[1] & 0x80) === 0)):\n                {\n                    this.valueHexView = this.valueHexView.subarray(1);\n                }\n                break;\n        }\n        return this.toBER(sizeOnly);\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\n        if (resultOffset === -1) {\n            return resultOffset;\n        }\n        this.setValueHex();\n        return resultOffset;\n    }\n    toBER(sizeOnly) {\n        return sizeOnly\n            ? new ArrayBuffer(this.valueHexView.length)\n            : this.valueHexView.slice().buffer;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            valueDec: this.valueDec,\n        };\n    }\n    toString() {\n        const firstBit = (this.valueHexView.length * 8) - 1;\n        let digits = new Uint8Array((this.valueHexView.length * 8) / 3);\n        let bitNumber = 0;\n        let currentByte;\n        const asn1View = this.valueHexView;\n        let result = \"\";\n        let flag = false;\n        for (let byteNumber = (asn1View.byteLength - 1); byteNumber >= 0; byteNumber--) {\n            currentByte = asn1View[byteNumber];\n            for (let i = 0; i < 8; i++) {\n                if ((currentByte & 1) === 1) {\n                    switch (bitNumber) {\n                        case firstBit:\n                            digits = viewSub(power2(bitNumber), digits);\n                            result = \"-\";\n                            break;\n                        default:\n                            digits = viewAdd(digits, power2(bitNumber));\n                    }\n                }\n                bitNumber++;\n                currentByte >>= 1;\n            }\n        }\n        for (let i = 0; i < digits.length; i++) {\n            if (digits[i])\n                flag = true;\n            if (flag)\n                result += digitsString.charAt(digits[i]);\n        }\n        if (flag === false)\n            result += digitsString.charAt(0);\n        return result;\n    }\n}\n_a$p = LocalIntegerValueBlock;\nLocalIntegerValueBlock.NAME = \"IntegerValueBlock\";\n(() => {\n    Object.defineProperty(_a$p.prototype, \"valueHex\", {\n        set: function (v) {\n            this.valueHexView = new Uint8Array(v);\n            this.setValueHex();\n        },\n        get: function () {\n            return this.valueHexView.slice().buffer;\n        },\n    });\n})();\n\nvar _a$o;\nclass Integer extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, LocalIntegerValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 2;\n    }\n    toBigInt() {\n        assertBigInt();\n        return BigInt(this.valueBlock.toString());\n    }\n    static fromBigInt(value) {\n        assertBigInt();\n        const bigIntValue = BigInt(value);\n        const writer = new ViewWriter();\n        const hex = bigIntValue.toString(16).replace(/^-/, \"\");\n        const view = new Uint8Array(pvtsutils.Convert.FromHex(hex));\n        if (bigIntValue < 0) {\n            const first = new Uint8Array(view.length + (view[0] & 0x80 ? 1 : 0));\n            first[0] |= 0x80;\n            const firstInt = BigInt(`0x${pvtsutils.Convert.ToHex(first)}`);\n            const secondInt = firstInt + bigIntValue;\n            const second = pvtsutils.BufferSourceConverter.toUint8Array(pvtsutils.Convert.FromHex(secondInt.toString(16)));\n            second[0] |= 0x80;\n            writer.write(second);\n        }\n        else {\n            if (view[0] & 0x80) {\n                writer.write(new Uint8Array([0]));\n            }\n            writer.write(view);\n        }\n        const res = new _a$o({ valueHex: writer.final() });\n        return res;\n    }\n    convertToDER() {\n        const integer = new _a$o({ valueHex: this.valueBlock.valueHexView });\n        integer.valueBlock.toDER();\n        return integer;\n    }\n    convertFromDER() {\n        return new _a$o({\n            valueHex: this.valueBlock.valueHexView[0] === 0\n                ? this.valueBlock.valueHexView.subarray(1)\n                : this.valueBlock.valueHexView,\n        });\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.valueBlock.toString()}`;\n    }\n}\n_a$o = Integer;\n(() => {\n    typeStore.Integer = _a$o;\n})();\nInteger.NAME = \"INTEGER\";\n\nvar _a$n;\nclass Enumerated extends Integer {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 10;\n    }\n}\n_a$n = Enumerated;\n(() => {\n    typeStore.Enumerated = _a$n;\n})();\nEnumerated.NAME = \"ENUMERATED\";\n\nclass LocalSidValueBlock extends HexBlock(ValueBlock) {\n    constructor({ valueDec = -1, isFirstSid = false, ...parameters } = {}) {\n        super(parameters);\n        this.valueDec = valueDec;\n        this.isFirstSid = isFirstSid;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        if (!inputLength) {\n            return inputOffset;\n        }\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n            return -1;\n        }\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n        this.valueHexView = new Uint8Array(inputLength);\n        for (let i = 0; i < inputLength; i++) {\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\n            this.blockLength++;\n            if ((intBuffer[i] & 0x80) === 0x00)\n                break;\n        }\n        const tempView = new Uint8Array(this.blockLength);\n        for (let i = 0; i < this.blockLength; i++) {\n            tempView[i] = this.valueHexView[i];\n        }\n        this.valueHexView = tempView;\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\n            this.error = \"End of input reached before message was fully decoded\";\n            return -1;\n        }\n        if (this.valueHexView[0] === 0x00)\n            this.warnings.push(\"Needlessly long format of SID encoding\");\n        if (this.blockLength <= 8)\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\n        else {\n            this.isHexOnly = true;\n            this.warnings.push(\"Too big SID for decoding, hex only\");\n        }\n        return (inputOffset + this.blockLength);\n    }\n    set valueBigInt(value) {\n        assertBigInt();\n        let bits = BigInt(value).toString(2);\n        while (bits.length % 7) {\n            bits = \"0\" + bits;\n        }\n        const bytes = new Uint8Array(bits.length / 7);\n        for (let i = 0; i < bytes.length; i++) {\n            bytes[i] = parseInt(bits.slice(i * 7, i * 7 + 7), 2) + (i + 1 < bytes.length ? 0x80 : 0);\n        }\n        this.fromBER(bytes.buffer, 0, bytes.length);\n    }\n    toBER(sizeOnly) {\n        if (this.isHexOnly) {\n            if (sizeOnly)\n                return (new ArrayBuffer(this.valueHexView.byteLength));\n            const curView = this.valueHexView;\n            const retView = new Uint8Array(this.blockLength);\n            for (let i = 0; i < (this.blockLength - 1); i++)\n                retView[i] = curView[i] | 0x80;\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\n            return retView.buffer;\n        }\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\n        if (encodedBuf.byteLength === 0) {\n            this.error = \"Error during encoding SID value\";\n            return EMPTY_BUFFER;\n        }\n        const retView = new Uint8Array(encodedBuf.byteLength);\n        if (!sizeOnly) {\n            const encodedView = new Uint8Array(encodedBuf);\n            const len = encodedBuf.byteLength - 1;\n            for (let i = 0; i < len; i++)\n                retView[i] = encodedView[i] | 0x80;\n            retView[len] = encodedView[len];\n        }\n        return retView;\n    }\n    toString() {\n        let result = \"\";\n        if (this.isHexOnly)\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\n        else {\n            if (this.isFirstSid) {\n                let sidValue = this.valueDec;\n                if (this.valueDec <= 39)\n                    result = \"0.\";\n                else {\n                    if (this.valueDec <= 79) {\n                        result = \"1.\";\n                        sidValue -= 40;\n                    }\n                    else {\n                        result = \"2.\";\n                        sidValue -= 80;\n                    }\n                }\n                result += sidValue.toString();\n            }\n            else\n                result = this.valueDec.toString();\n        }\n        return result;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            valueDec: this.valueDec,\n            isFirstSid: this.isFirstSid,\n        };\n    }\n}\nLocalSidValueBlock.NAME = \"sidBlock\";\n\nclass LocalObjectIdentifierValueBlock extends ValueBlock {\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\n        super(parameters);\n        this.value = [];\n        if (value) {\n            this.fromString(value);\n        }\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        let resultOffset = inputOffset;\n        while (inputLength > 0) {\n            const sidBlock = new LocalSidValueBlock();\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\n            if (resultOffset === -1) {\n                this.blockLength = 0;\n                this.error = sidBlock.error;\n                return resultOffset;\n            }\n            if (this.value.length === 0)\n                sidBlock.isFirstSid = true;\n            this.blockLength += sidBlock.blockLength;\n            inputLength -= sidBlock.blockLength;\n            this.value.push(sidBlock);\n        }\n        return resultOffset;\n    }\n    toBER(sizeOnly) {\n        const retBuffers = [];\n        for (let i = 0; i < this.value.length; i++) {\n            const valueBuf = this.value[i].toBER(sizeOnly);\n            if (valueBuf.byteLength === 0) {\n                this.error = this.value[i].error;\n                return EMPTY_BUFFER;\n            }\n            retBuffers.push(valueBuf);\n        }\n        return concat(retBuffers);\n    }\n    fromString(string) {\n        this.value = [];\n        let pos1 = 0;\n        let pos2 = 0;\n        let sid = \"\";\n        let flag = false;\n        do {\n            pos2 = string.indexOf(\".\", pos1);\n            if (pos2 === -1)\n                sid = string.substring(pos1);\n            else\n                sid = string.substring(pos1, pos2);\n            pos1 = pos2 + 1;\n            if (flag) {\n                const sidBlock = this.value[0];\n                let plus = 0;\n                switch (sidBlock.valueDec) {\n                    case 0:\n                        break;\n                    case 1:\n                        plus = 40;\n                        break;\n                    case 2:\n                        plus = 80;\n                        break;\n                    default:\n                        this.value = [];\n                        return;\n                }\n                const parsedSID = parseInt(sid, 10);\n                if (isNaN(parsedSID))\n                    return;\n                sidBlock.valueDec = parsedSID + plus;\n                flag = false;\n            }\n            else {\n                const sidBlock = new LocalSidValueBlock();\n                if (sid > Number.MAX_SAFE_INTEGER) {\n                    assertBigInt();\n                    const sidValue = BigInt(sid);\n                    sidBlock.valueBigInt = sidValue;\n                }\n                else {\n                    sidBlock.valueDec = parseInt(sid, 10);\n                    if (isNaN(sidBlock.valueDec))\n                        return;\n                }\n                if (!this.value.length) {\n                    sidBlock.isFirstSid = true;\n                    flag = true;\n                }\n                this.value.push(sidBlock);\n            }\n        } while (pos2 !== -1);\n    }\n    toString() {\n        let result = \"\";\n        let isHexOnly = false;\n        for (let i = 0; i < this.value.length; i++) {\n            isHexOnly = this.value[i].isHexOnly;\n            let sidStr = this.value[i].toString();\n            if (i !== 0)\n                result = `${result}.`;\n            if (isHexOnly) {\n                sidStr = `{${sidStr}}`;\n                if (this.value[i].isFirstSid)\n                    result = `2.{${sidStr} - 80}`;\n                else\n                    result += sidStr;\n            }\n            else\n                result += sidStr;\n        }\n        return result;\n    }\n    toJSON() {\n        const object = {\n            ...super.toJSON(),\n            value: this.toString(),\n            sidArray: [],\n        };\n        for (let i = 0; i < this.value.length; i++) {\n            object.sidArray.push(this.value[i].toJSON());\n        }\n        return object;\n    }\n}\nLocalObjectIdentifierValueBlock.NAME = \"ObjectIdentifierValueBlock\";\n\nvar _a$m;\nclass ObjectIdentifier extends BaseBlock {\n    getValue() {\n        return this.valueBlock.toString();\n    }\n    setValue(value) {\n        this.valueBlock.fromString(value);\n    }\n    constructor(parameters = {}) {\n        super(parameters, LocalObjectIdentifierValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 6;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this.getValue(),\n        };\n    }\n}\n_a$m = ObjectIdentifier;\n(() => {\n    typeStore.ObjectIdentifier = _a$m;\n})();\nObjectIdentifier.NAME = \"OBJECT IDENTIFIER\";\n\nclass LocalRelativeSidValueBlock extends HexBlock(LocalBaseBlock) {\n    constructor({ valueDec = 0, ...parameters } = {}) {\n        super(parameters);\n        this.valueDec = valueDec;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        if (inputLength === 0)\n            return inputOffset;\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength))\n            return -1;\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n        this.valueHexView = new Uint8Array(inputLength);\n        for (let i = 0; i < inputLength; i++) {\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\n            this.blockLength++;\n            if ((intBuffer[i] & 0x80) === 0x00)\n                break;\n        }\n        const tempView = new Uint8Array(this.blockLength);\n        for (let i = 0; i < this.blockLength; i++)\n            tempView[i] = this.valueHexView[i];\n        this.valueHexView = tempView;\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\n            this.error = \"End of input reached before message was fully decoded\";\n            return -1;\n        }\n        if (this.valueHexView[0] === 0x00)\n            this.warnings.push(\"Needlessly long format of SID encoding\");\n        if (this.blockLength <= 8)\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\n        else {\n            this.isHexOnly = true;\n            this.warnings.push(\"Too big SID for decoding, hex only\");\n        }\n        return (inputOffset + this.blockLength);\n    }\n    toBER(sizeOnly) {\n        if (this.isHexOnly) {\n            if (sizeOnly)\n                return (new ArrayBuffer(this.valueHexView.byteLength));\n            const curView = this.valueHexView;\n            const retView = new Uint8Array(this.blockLength);\n            for (let i = 0; i < (this.blockLength - 1); i++)\n                retView[i] = curView[i] | 0x80;\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\n            return retView.buffer;\n        }\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\n        if (encodedBuf.byteLength === 0) {\n            this.error = \"Error during encoding SID value\";\n            return EMPTY_BUFFER;\n        }\n        const retView = new Uint8Array(encodedBuf.byteLength);\n        if (!sizeOnly) {\n            const encodedView = new Uint8Array(encodedBuf);\n            const len = encodedBuf.byteLength - 1;\n            for (let i = 0; i < len; i++)\n                retView[i] = encodedView[i] | 0x80;\n            retView[len] = encodedView[len];\n        }\n        return retView.buffer;\n    }\n    toString() {\n        let result = \"\";\n        if (this.isHexOnly)\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\n        else {\n            result = this.valueDec.toString();\n        }\n        return result;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            valueDec: this.valueDec,\n        };\n    }\n}\nLocalRelativeSidValueBlock.NAME = \"relativeSidBlock\";\n\nclass LocalRelativeObjectIdentifierValueBlock extends ValueBlock {\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\n        super(parameters);\n        this.value = [];\n        if (value) {\n            this.fromString(value);\n        }\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        let resultOffset = inputOffset;\n        while (inputLength > 0) {\n            const sidBlock = new LocalRelativeSidValueBlock();\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\n            if (resultOffset === -1) {\n                this.blockLength = 0;\n                this.error = sidBlock.error;\n                return resultOffset;\n            }\n            this.blockLength += sidBlock.blockLength;\n            inputLength -= sidBlock.blockLength;\n            this.value.push(sidBlock);\n        }\n        return resultOffset;\n    }\n    toBER(sizeOnly, _writer) {\n        const retBuffers = [];\n        for (let i = 0; i < this.value.length; i++) {\n            const valueBuf = this.value[i].toBER(sizeOnly);\n            if (valueBuf.byteLength === 0) {\n                this.error = this.value[i].error;\n                return EMPTY_BUFFER;\n            }\n            retBuffers.push(valueBuf);\n        }\n        return concat(retBuffers);\n    }\n    fromString(string) {\n        this.value = [];\n        let pos1 = 0;\n        let pos2 = 0;\n        let sid = \"\";\n        do {\n            pos2 = string.indexOf(\".\", pos1);\n            if (pos2 === -1)\n                sid = string.substring(pos1);\n            else\n                sid = string.substring(pos1, pos2);\n            pos1 = pos2 + 1;\n            const sidBlock = new LocalRelativeSidValueBlock();\n            sidBlock.valueDec = parseInt(sid, 10);\n            if (isNaN(sidBlock.valueDec))\n                return true;\n            this.value.push(sidBlock);\n        } while (pos2 !== -1);\n        return true;\n    }\n    toString() {\n        let result = \"\";\n        let isHexOnly = false;\n        for (let i = 0; i < this.value.length; i++) {\n            isHexOnly = this.value[i].isHexOnly;\n            let sidStr = this.value[i].toString();\n            if (i !== 0)\n                result = `${result}.`;\n            if (isHexOnly) {\n                sidStr = `{${sidStr}}`;\n                result += sidStr;\n            }\n            else\n                result += sidStr;\n        }\n        return result;\n    }\n    toJSON() {\n        const object = {\n            ...super.toJSON(),\n            value: this.toString(),\n            sidArray: [],\n        };\n        for (let i = 0; i < this.value.length; i++)\n            object.sidArray.push(this.value[i].toJSON());\n        return object;\n    }\n}\nLocalRelativeObjectIdentifierValueBlock.NAME = \"RelativeObjectIdentifierValueBlock\";\n\nvar _a$l;\nclass RelativeObjectIdentifier extends BaseBlock {\n    getValue() {\n        return this.valueBlock.toString();\n    }\n    setValue(value) {\n        this.valueBlock.fromString(value);\n    }\n    constructor(parameters = {}) {\n        super(parameters, LocalRelativeObjectIdentifierValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 13;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this.getValue(),\n        };\n    }\n}\n_a$l = RelativeObjectIdentifier;\n(() => {\n    typeStore.RelativeObjectIdentifier = _a$l;\n})();\nRelativeObjectIdentifier.NAME = \"RelativeObjectIdentifier\";\n\nvar _a$k;\nclass Sequence extends Constructed {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 16;\n    }\n}\n_a$k = Sequence;\n(() => {\n    typeStore.Sequence = _a$k;\n})();\nSequence.NAME = \"SEQUENCE\";\n\nvar _a$j;\nclass Set extends Constructed {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 17;\n    }\n}\n_a$j = Set;\n(() => {\n    typeStore.Set = _a$j;\n})();\nSet.NAME = \"SET\";\n\nclass LocalStringValueBlock extends HexBlock(ValueBlock) {\n    constructor({ ...parameters } = {}) {\n        super(parameters);\n        this.isHexOnly = true;\n        this.value = EMPTY_STRING;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this.value,\n        };\n    }\n}\nLocalStringValueBlock.NAME = \"StringValueBlock\";\n\nclass LocalSimpleStringValueBlock extends LocalStringValueBlock {\n}\nLocalSimpleStringValueBlock.NAME = \"SimpleStringValueBlock\";\n\nclass LocalSimpleStringBlock extends BaseStringBlock {\n    constructor({ ...parameters } = {}) {\n        super(parameters, LocalSimpleStringValueBlock);\n    }\n    fromBuffer(inputBuffer) {\n        this.valueBlock.value = String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\n    }\n    fromString(inputString) {\n        const strLen = inputString.length;\n        const view = this.valueBlock.valueHexView = new Uint8Array(strLen);\n        for (let i = 0; i < strLen; i++)\n            view[i] = inputString.charCodeAt(i);\n        this.valueBlock.value = inputString;\n    }\n}\nLocalSimpleStringBlock.NAME = \"SIMPLE STRING\";\n\nclass LocalUtf8StringValueBlock extends LocalSimpleStringBlock {\n    fromBuffer(inputBuffer) {\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        try {\n            this.valueBlock.value = pvtsutils.Convert.ToUtf8String(inputBuffer);\n        }\n        catch (ex) {\n            this.warnings.push(`Error during \"decodeURIComponent\": ${ex}, using raw string`);\n            this.valueBlock.value = pvtsutils.Convert.ToBinary(inputBuffer);\n        }\n    }\n    fromString(inputString) {\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf8String(inputString));\n        this.valueBlock.value = inputString;\n    }\n}\nLocalUtf8StringValueBlock.NAME = \"Utf8StringValueBlock\";\n\nvar _a$i;\nclass Utf8String extends LocalUtf8StringValueBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 12;\n    }\n}\n_a$i = Utf8String;\n(() => {\n    typeStore.Utf8String = _a$i;\n})();\nUtf8String.NAME = \"UTF8String\";\n\nclass LocalBmpStringValueBlock extends LocalSimpleStringBlock {\n    fromBuffer(inputBuffer) {\n        this.valueBlock.value = pvtsutils.Convert.ToUtf16String(inputBuffer);\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n    }\n    fromString(inputString) {\n        this.valueBlock.value = inputString;\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf16String(inputString));\n    }\n}\nLocalBmpStringValueBlock.NAME = \"BmpStringValueBlock\";\n\nvar _a$h;\nclass BmpString extends LocalBmpStringValueBlock {\n    constructor({ ...parameters } = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 30;\n    }\n}\n_a$h = BmpString;\n(() => {\n    typeStore.BmpString = _a$h;\n})();\nBmpString.NAME = \"BMPString\";\n\nclass LocalUniversalStringValueBlock extends LocalSimpleStringBlock {\n    fromBuffer(inputBuffer) {\n        const copyBuffer = ArrayBuffer.isView(inputBuffer) ? inputBuffer.slice().buffer : inputBuffer.slice(0);\n        const valueView = new Uint8Array(copyBuffer);\n        for (let i = 0; i < valueView.length; i += 4) {\n            valueView[i] = valueView[i + 3];\n            valueView[i + 1] = valueView[i + 2];\n            valueView[i + 2] = 0x00;\n            valueView[i + 3] = 0x00;\n        }\n        this.valueBlock.value = String.fromCharCode.apply(null, new Uint32Array(copyBuffer));\n    }\n    fromString(inputString) {\n        const strLength = inputString.length;\n        const valueHexView = this.valueBlock.valueHexView = new Uint8Array(strLength * 4);\n        for (let i = 0; i < strLength; i++) {\n            const codeBuf = pvutils.utilToBase(inputString.charCodeAt(i), 8);\n            const codeView = new Uint8Array(codeBuf);\n            if (codeView.length > 4)\n                continue;\n            const dif = 4 - codeView.length;\n            for (let j = (codeView.length - 1); j >= 0; j--)\n                valueHexView[i * 4 + j + dif] = codeView[j];\n        }\n        this.valueBlock.value = inputString;\n    }\n}\nLocalUniversalStringValueBlock.NAME = \"UniversalStringValueBlock\";\n\nvar _a$g;\nclass UniversalString extends LocalUniversalStringValueBlock {\n    constructor({ ...parameters } = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 28;\n    }\n}\n_a$g = UniversalString;\n(() => {\n    typeStore.UniversalString = _a$g;\n})();\nUniversalString.NAME = \"UniversalString\";\n\nvar _a$f;\nclass NumericString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 18;\n    }\n}\n_a$f = NumericString;\n(() => {\n    typeStore.NumericString = _a$f;\n})();\nNumericString.NAME = \"NumericString\";\n\nvar _a$e;\nclass PrintableString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 19;\n    }\n}\n_a$e = PrintableString;\n(() => {\n    typeStore.PrintableString = _a$e;\n})();\nPrintableString.NAME = \"PrintableString\";\n\nvar _a$d;\nclass TeletexString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 20;\n    }\n}\n_a$d = TeletexString;\n(() => {\n    typeStore.TeletexString = _a$d;\n})();\nTeletexString.NAME = \"TeletexString\";\n\nvar _a$c;\nclass VideotexString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 21;\n    }\n}\n_a$c = VideotexString;\n(() => {\n    typeStore.VideotexString = _a$c;\n})();\nVideotexString.NAME = \"VideotexString\";\n\nvar _a$b;\nclass IA5String extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 22;\n    }\n}\n_a$b = IA5String;\n(() => {\n    typeStore.IA5String = _a$b;\n})();\nIA5String.NAME = \"IA5String\";\n\nvar _a$a;\nclass GraphicString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 25;\n    }\n}\n_a$a = GraphicString;\n(() => {\n    typeStore.GraphicString = _a$a;\n})();\nGraphicString.NAME = \"GraphicString\";\n\nvar _a$9;\nclass VisibleString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 26;\n    }\n}\n_a$9 = VisibleString;\n(() => {\n    typeStore.VisibleString = _a$9;\n})();\nVisibleString.NAME = \"VisibleString\";\n\nvar _a$8;\nclass GeneralString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 27;\n    }\n}\n_a$8 = GeneralString;\n(() => {\n    typeStore.GeneralString = _a$8;\n})();\nGeneralString.NAME = \"GeneralString\";\n\nvar _a$7;\nclass CharacterString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 29;\n    }\n}\n_a$7 = CharacterString;\n(() => {\n    typeStore.CharacterString = _a$7;\n})();\nCharacterString.NAME = \"CharacterString\";\n\nvar _a$6;\nclass UTCTime extends VisibleString {\n    constructor({ value, valueDate, ...parameters } = {}) {\n        super(parameters);\n        this.year = 0;\n        this.month = 0;\n        this.day = 0;\n        this.hour = 0;\n        this.minute = 0;\n        this.second = 0;\n        if (value) {\n            this.fromString(value);\n            this.valueBlock.valueHexView = new Uint8Array(value.length);\n            for (let i = 0; i < value.length; i++)\n                this.valueBlock.valueHexView[i] = value.charCodeAt(i);\n        }\n        if (valueDate) {\n            this.fromDate(valueDate);\n            this.valueBlock.valueHexView = new Uint8Array(this.toBuffer());\n        }\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 23;\n    }\n    fromBuffer(inputBuffer) {\n        this.fromString(String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer)));\n    }\n    toBuffer() {\n        const str = this.toString();\n        const buffer = new ArrayBuffer(str.length);\n        const view = new Uint8Array(buffer);\n        for (let i = 0; i < str.length; i++)\n            view[i] = str.charCodeAt(i);\n        return buffer;\n    }\n    fromDate(inputDate) {\n        this.year = inputDate.getUTCFullYear();\n        this.month = inputDate.getUTCMonth() + 1;\n        this.day = inputDate.getUTCDate();\n        this.hour = inputDate.getUTCHours();\n        this.minute = inputDate.getUTCMinutes();\n        this.second = inputDate.getUTCSeconds();\n    }\n    toDate() {\n        return (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second)));\n    }\n    fromString(inputString) {\n        const parser = /(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})Z/ig;\n        const parserArray = parser.exec(inputString);\n        if (parserArray === null) {\n            this.error = \"Wrong input string for conversion\";\n            return;\n        }\n        const year = parseInt(parserArray[1], 10);\n        if (year >= 50)\n            this.year = 1900 + year;\n        else\n            this.year = 2000 + year;\n        this.month = parseInt(parserArray[2], 10);\n        this.day = parseInt(parserArray[3], 10);\n        this.hour = parseInt(parserArray[4], 10);\n        this.minute = parseInt(parserArray[5], 10);\n        this.second = parseInt(parserArray[6], 10);\n    }\n    toString(encoding = \"iso\") {\n        if (encoding === \"iso\") {\n            const outputArray = new Array(7);\n            outputArray[0] = pvutils.padNumber(((this.year < 2000) ? (this.year - 1900) : (this.year - 2000)), 2);\n            outputArray[1] = pvutils.padNumber(this.month, 2);\n            outputArray[2] = pvutils.padNumber(this.day, 2);\n            outputArray[3] = pvutils.padNumber(this.hour, 2);\n            outputArray[4] = pvutils.padNumber(this.minute, 2);\n            outputArray[5] = pvutils.padNumber(this.second, 2);\n            outputArray[6] = \"Z\";\n            return outputArray.join(\"\");\n        }\n        return super.toString(encoding);\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.toDate().toISOString()}`;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            year: this.year,\n            month: this.month,\n            day: this.day,\n            hour: this.hour,\n            minute: this.minute,\n            second: this.second,\n        };\n    }\n}\n_a$6 = UTCTime;\n(() => {\n    typeStore.UTCTime = _a$6;\n})();\nUTCTime.NAME = \"UTCTime\";\n\nvar _a$5;\nclass GeneralizedTime extends UTCTime {\n    constructor(parameters = {}) {\n        var _b;\n        super(parameters);\n        (_b = this.millisecond) !== null && _b !== void 0 ? _b : (this.millisecond = 0);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 24;\n    }\n    fromDate(inputDate) {\n        super.fromDate(inputDate);\n        this.millisecond = inputDate.getUTCMilliseconds();\n    }\n    toDate() {\n        const utcDate = Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond);\n        return (new Date(utcDate));\n    }\n    fromString(inputString) {\n        let isUTC = false;\n        let timeString = \"\";\n        let dateTimeString = \"\";\n        let fractionPart = 0;\n        let parser;\n        let hourDifference = 0;\n        let minuteDifference = 0;\n        if (inputString[inputString.length - 1] === \"Z\") {\n            timeString = inputString.substring(0, inputString.length - 1);\n            isUTC = true;\n        }\n        else {\n            const number = new Number(inputString[inputString.length - 1]);\n            if (isNaN(number.valueOf()))\n                throw new Error(\"Wrong input string for conversion\");\n            timeString = inputString;\n        }\n        if (isUTC) {\n            if (timeString.indexOf(\"+\") !== -1)\n                throw new Error(\"Wrong input string for conversion\");\n            if (timeString.indexOf(\"-\") !== -1)\n                throw new Error(\"Wrong input string for conversion\");\n        }\n        else {\n            let multiplier = 1;\n            let differencePosition = timeString.indexOf(\"+\");\n            let differenceString = \"\";\n            if (differencePosition === -1) {\n                differencePosition = timeString.indexOf(\"-\");\n                multiplier = -1;\n            }\n            if (differencePosition !== -1) {\n                differenceString = timeString.substring(differencePosition + 1);\n                timeString = timeString.substring(0, differencePosition);\n                if ((differenceString.length !== 2) && (differenceString.length !== 4))\n                    throw new Error(\"Wrong input string for conversion\");\n                let number = parseInt(differenceString.substring(0, 2), 10);\n                if (isNaN(number.valueOf()))\n                    throw new Error(\"Wrong input string for conversion\");\n                hourDifference = multiplier * number;\n                if (differenceString.length === 4) {\n                    number = parseInt(differenceString.substring(2, 4), 10);\n                    if (isNaN(number.valueOf()))\n                        throw new Error(\"Wrong input string for conversion\");\n                    minuteDifference = multiplier * number;\n                }\n            }\n        }\n        let fractionPointPosition = timeString.indexOf(\".\");\n        if (fractionPointPosition === -1)\n            fractionPointPosition = timeString.indexOf(\",\");\n        if (fractionPointPosition !== -1) {\n            const fractionPartCheck = new Number(`0${timeString.substring(fractionPointPosition)}`);\n            if (isNaN(fractionPartCheck.valueOf()))\n                throw new Error(\"Wrong input string for conversion\");\n            fractionPart = fractionPartCheck.valueOf();\n            dateTimeString = timeString.substring(0, fractionPointPosition);\n        }\n        else\n            dateTimeString = timeString;\n        switch (true) {\n            case (dateTimeString.length === 8):\n                parser = /(\\d{4})(\\d{2})(\\d{2})/ig;\n                if (fractionPointPosition !== -1)\n                    throw new Error(\"Wrong input string for conversion\");\n                break;\n            case (dateTimeString.length === 10):\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})/ig;\n                if (fractionPointPosition !== -1) {\n                    let fractionResult = 60 * fractionPart;\n                    this.minute = Math.floor(fractionResult);\n                    fractionResult = 60 * (fractionResult - this.minute);\n                    this.second = Math.floor(fractionResult);\n                    fractionResult = 1000 * (fractionResult - this.second);\n                    this.millisecond = Math.floor(fractionResult);\n                }\n                break;\n            case (dateTimeString.length === 12):\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\n                if (fractionPointPosition !== -1) {\n                    let fractionResult = 60 * fractionPart;\n                    this.second = Math.floor(fractionResult);\n                    fractionResult = 1000 * (fractionResult - this.second);\n                    this.millisecond = Math.floor(fractionResult);\n                }\n                break;\n            case (dateTimeString.length === 14):\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\n                if (fractionPointPosition !== -1) {\n                    const fractionResult = 1000 * fractionPart;\n                    this.millisecond = Math.floor(fractionResult);\n                }\n                break;\n            default:\n                throw new Error(\"Wrong input string for conversion\");\n        }\n        const parserArray = parser.exec(dateTimeString);\n        if (parserArray === null)\n            throw new Error(\"Wrong input string for conversion\");\n        for (let j = 1; j < parserArray.length; j++) {\n            switch (j) {\n                case 1:\n                    this.year = parseInt(parserArray[j], 10);\n                    break;\n                case 2:\n                    this.month = parseInt(parserArray[j], 10);\n                    break;\n                case 3:\n                    this.day = parseInt(parserArray[j], 10);\n                    break;\n                case 4:\n                    this.hour = parseInt(parserArray[j], 10) + hourDifference;\n                    break;\n                case 5:\n                    this.minute = parseInt(parserArray[j], 10) + minuteDifference;\n                    break;\n                case 6:\n                    this.second = parseInt(parserArray[j], 10);\n                    break;\n                default:\n                    throw new Error(\"Wrong input string for conversion\");\n            }\n        }\n        if (isUTC === false) {\n            const tempDate = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\n            this.year = tempDate.getUTCFullYear();\n            this.month = tempDate.getUTCMonth();\n            this.day = tempDate.getUTCDay();\n            this.hour = tempDate.getUTCHours();\n            this.minute = tempDate.getUTCMinutes();\n            this.second = tempDate.getUTCSeconds();\n            this.millisecond = tempDate.getUTCMilliseconds();\n        }\n    }\n    toString(encoding = \"iso\") {\n        if (encoding === \"iso\") {\n            const outputArray = [];\n            outputArray.push(pvutils.padNumber(this.year, 4));\n            outputArray.push(pvutils.padNumber(this.month, 2));\n            outputArray.push(pvutils.padNumber(this.day, 2));\n            outputArray.push(pvutils.padNumber(this.hour, 2));\n            outputArray.push(pvutils.padNumber(this.minute, 2));\n            outputArray.push(pvutils.padNumber(this.second, 2));\n            if (this.millisecond !== 0) {\n                outputArray.push(\".\");\n                outputArray.push(pvutils.padNumber(this.millisecond, 3));\n            }\n            outputArray.push(\"Z\");\n            return outputArray.join(\"\");\n        }\n        return super.toString(encoding);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            millisecond: this.millisecond,\n        };\n    }\n}\n_a$5 = GeneralizedTime;\n(() => {\n    typeStore.GeneralizedTime = _a$5;\n})();\nGeneralizedTime.NAME = \"GeneralizedTime\";\n\nvar _a$4;\nclass DATE extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 31;\n    }\n}\n_a$4 = DATE;\n(() => {\n    typeStore.DATE = _a$4;\n})();\nDATE.NAME = \"DATE\";\n\nvar _a$3;\nclass TimeOfDay extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 32;\n    }\n}\n_a$3 = TimeOfDay;\n(() => {\n    typeStore.TimeOfDay = _a$3;\n})();\nTimeOfDay.NAME = \"TimeOfDay\";\n\nvar _a$2;\nclass DateTime extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 33;\n    }\n}\n_a$2 = DateTime;\n(() => {\n    typeStore.DateTime = _a$2;\n})();\nDateTime.NAME = \"DateTime\";\n\nvar _a$1;\nclass Duration extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 34;\n    }\n}\n_a$1 = Duration;\n(() => {\n    typeStore.Duration = _a$1;\n})();\nDuration.NAME = \"Duration\";\n\nvar _a;\nclass TIME extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 14;\n    }\n}\n_a = TIME;\n(() => {\n    typeStore.TIME = _a;\n})();\nTIME.NAME = \"TIME\";\n\nclass Any {\n    constructor({ name = EMPTY_STRING, optional = false } = {}) {\n        this.name = name;\n        this.optional = optional;\n    }\n}\n\nclass Choice extends Any {\n    constructor({ value = [], ...parameters } = {}) {\n        super(parameters);\n        this.value = value;\n    }\n}\n\nclass Repeated extends Any {\n    constructor({ value = new Any(), local = false, ...parameters } = {}) {\n        super(parameters);\n        this.value = value;\n        this.local = local;\n    }\n}\n\nclass RawData {\n    get data() {\n        return this.dataView.slice().buffer;\n    }\n    set data(value) {\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(value);\n    }\n    constructor({ data = EMPTY_VIEW } = {}) {\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(data);\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const endLength = inputOffset + inputLength;\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).subarray(inputOffset, endLength);\n        return endLength;\n    }\n    toBER(_sizeOnly) {\n        return this.dataView.slice().buffer;\n    }\n}\n\nfunction compareSchema(root, inputData, inputSchema) {\n    if (inputSchema instanceof Choice) {\n        for (const element of inputSchema.value) {\n            const result = compareSchema(root, inputData, element);\n            if (result.verified) {\n                return {\n                    verified: true,\n                    result: root,\n                };\n            }\n        }\n        {\n            const _result = {\n                verified: false,\n                result: { error: \"Wrong values for Choice type\" },\n            };\n            if (inputSchema.hasOwnProperty(NAME))\n                _result.name = inputSchema.name;\n            return _result;\n        }\n    }\n    if (inputSchema instanceof Any) {\n        if (inputSchema.hasOwnProperty(NAME))\n            root[inputSchema.name] = inputData;\n        return {\n            verified: true,\n            result: root,\n        };\n    }\n    if ((root instanceof Object) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong root object\" },\n        };\n    }\n    if ((inputData instanceof Object) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 data\" },\n        };\n    }\n    if ((inputSchema instanceof Object) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if ((ID_BLOCK in inputSchema) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if ((FROM_BER in inputSchema.idBlock) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if ((TO_BER in inputSchema.idBlock) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    const encodedId = inputSchema.idBlock.toBER(false);\n    if (encodedId.byteLength === 0) {\n        return {\n            verified: false,\n            result: { error: \"Error encoding idBlock for ASN.1 schema\" },\n        };\n    }\n    const decodedOffset = inputSchema.idBlock.fromBER(encodedId, 0, encodedId.byteLength);\n    if (decodedOffset === -1) {\n        return {\n            verified: false,\n            result: { error: \"Error decoding idBlock for ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.hasOwnProperty(TAG_CLASS) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.tagClass !== inputData.idBlock.tagClass) {\n        return {\n            verified: false,\n            result: root,\n        };\n    }\n    if (inputSchema.idBlock.hasOwnProperty(TAG_NUMBER) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.tagNumber !== inputData.idBlock.tagNumber) {\n        return {\n            verified: false,\n            result: root,\n        };\n    }\n    if (inputSchema.idBlock.hasOwnProperty(IS_CONSTRUCTED) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.isConstructed !== inputData.idBlock.isConstructed) {\n        return {\n            verified: false,\n            result: root,\n        };\n    }\n    if (!(IS_HEX_ONLY in inputSchema.idBlock)) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.isHexOnly !== inputData.idBlock.isHexOnly) {\n        return {\n            verified: false,\n            result: root,\n        };\n    }\n    if (inputSchema.idBlock.isHexOnly) {\n        if ((VALUE_HEX_VIEW in inputSchema.idBlock) === false) {\n            return {\n                verified: false,\n                result: { error: \"Wrong ASN.1 schema\" },\n            };\n        }\n        const schemaView = inputSchema.idBlock.valueHexView;\n        const asn1View = inputData.idBlock.valueHexView;\n        if (schemaView.length !== asn1View.length) {\n            return {\n                verified: false,\n                result: root,\n            };\n        }\n        for (let i = 0; i < schemaView.length; i++) {\n            if (schemaView[i] !== asn1View[1]) {\n                return {\n                    verified: false,\n                    result: root,\n                };\n            }\n        }\n    }\n    if (inputSchema.name) {\n        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n        if (inputSchema.name)\n            root[inputSchema.name] = inputData;\n    }\n    if (inputSchema instanceof typeStore.Constructed) {\n        let admission = 0;\n        let result = {\n            verified: false,\n            result: { error: \"Unknown error\" },\n        };\n        let maxLength = inputSchema.valueBlock.value.length;\n        if (maxLength > 0) {\n            if (inputSchema.valueBlock.value[0] instanceof Repeated) {\n                maxLength = inputData.valueBlock.value.length;\n            }\n        }\n        if (maxLength === 0) {\n            return {\n                verified: true,\n                result: root,\n            };\n        }\n        if ((inputData.valueBlock.value.length === 0)\n            && (inputSchema.valueBlock.value.length !== 0)) {\n            let _optional = true;\n            for (let i = 0; i < inputSchema.valueBlock.value.length; i++)\n                _optional = _optional && (inputSchema.valueBlock.value[i].optional || false);\n            if (_optional) {\n                return {\n                    verified: true,\n                    result: root,\n                };\n            }\n            if (inputSchema.name) {\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                if (inputSchema.name)\n                    delete root[inputSchema.name];\n            }\n            root.error = \"Inconsistent object length\";\n            return {\n                verified: false,\n                result: root,\n            };\n        }\n        for (let i = 0; i < maxLength; i++) {\n            if ((i - admission) >= inputData.valueBlock.value.length) {\n                if (inputSchema.valueBlock.value[i].optional === false) {\n                    const _result = {\n                        verified: false,\n                        result: root,\n                    };\n                    root.error = \"Inconsistent length between ASN.1 data and schema\";\n                    if (inputSchema.name) {\n                        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                        if (inputSchema.name) {\n                            delete root[inputSchema.name];\n                            _result.name = inputSchema.name;\n                        }\n                    }\n                    return _result;\n                }\n            }\n            else {\n                if (inputSchema.valueBlock.value[0] instanceof Repeated) {\n                    result = compareSchema(root, inputData.valueBlock.value[i], inputSchema.valueBlock.value[0].value);\n                    if (result.verified === false) {\n                        if (inputSchema.valueBlock.value[0].optional)\n                            admission++;\n                        else {\n                            if (inputSchema.name) {\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                                if (inputSchema.name)\n                                    delete root[inputSchema.name];\n                            }\n                            return result;\n                        }\n                    }\n                    if ((NAME in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].name.length > 0)) {\n                        let arrayRoot = {};\n                        if ((LOCAL in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].local))\n                            arrayRoot = inputData;\n                        else\n                            arrayRoot = root;\n                        if (typeof arrayRoot[inputSchema.valueBlock.value[0].name] === \"undefined\")\n                            arrayRoot[inputSchema.valueBlock.value[0].name] = [];\n                        arrayRoot[inputSchema.valueBlock.value[0].name].push(inputData.valueBlock.value[i]);\n                    }\n                }\n                else {\n                    result = compareSchema(root, inputData.valueBlock.value[i - admission], inputSchema.valueBlock.value[i]);\n                    if (result.verified === false) {\n                        if (inputSchema.valueBlock.value[i].optional)\n                            admission++;\n                        else {\n                            if (inputSchema.name) {\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                                if (inputSchema.name)\n                                    delete root[inputSchema.name];\n                            }\n                            return result;\n                        }\n                    }\n                }\n            }\n        }\n        if (result.verified === false) {\n            const _result = {\n                verified: false,\n                result: root,\n            };\n            if (inputSchema.name) {\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                if (inputSchema.name) {\n                    delete root[inputSchema.name];\n                    _result.name = inputSchema.name;\n                }\n            }\n            return _result;\n        }\n        return {\n            verified: true,\n            result: root,\n        };\n    }\n    if (inputSchema.primitiveSchema\n        && (VALUE_HEX_VIEW in inputData.valueBlock)) {\n        const asn1 = localFromBER(inputData.valueBlock.valueHexView);\n        if (asn1.offset === -1) {\n            const _result = {\n                verified: false,\n                result: asn1.result,\n            };\n            if (inputSchema.name) {\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                if (inputSchema.name) {\n                    delete root[inputSchema.name];\n                    _result.name = inputSchema.name;\n                }\n            }\n            return _result;\n        }\n        return compareSchema(root, asn1.result, inputSchema.primitiveSchema);\n    }\n    return {\n        verified: true,\n        result: root,\n    };\n}\nfunction verifySchema(inputBuffer, inputSchema) {\n    if ((inputSchema instanceof Object) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema type\" },\n        };\n    }\n    const asn1 = localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\n    if (asn1.offset === -1) {\n        return {\n            verified: false,\n            result: asn1.result,\n        };\n    }\n    return compareSchema(asn1.result, asn1.result, inputSchema);\n}\n\nexport { Any, BaseBlock, BaseStringBlock, BitString, BmpString, Boolean, CharacterString, Choice, Constructed, DATE, DateTime, Duration, EndOfContent, Enumerated, GeneralString, GeneralizedTime, GraphicString, HexBlock, IA5String, Integer, Null, NumericString, ObjectIdentifier, OctetString, Primitive, PrintableString, RawData, RelativeObjectIdentifier, Repeated, Sequence, Set, TIME, TeletexString, TimeOfDay, UTCTime, UniversalString, Utf8String, ValueBlock, VideotexString, ViewWriter, VisibleString, compareSchema, fromBER, verifySchema };\n","export var AsnTypeTypes;\n(function (AsnTypeTypes) {\n    AsnTypeTypes[AsnTypeTypes[\"Sequence\"] = 0] = \"Sequence\";\n    AsnTypeTypes[AsnTypeTypes[\"Set\"] = 1] = \"Set\";\n    AsnTypeTypes[AsnTypeTypes[\"Choice\"] = 2] = \"Choice\";\n})(AsnTypeTypes || (AsnTypeTypes = {}));\nexport var AsnPropTypes;\n(function (AsnPropTypes) {\n    AsnPropTypes[AsnPropTypes[\"Any\"] = 1] = \"Any\";\n    AsnPropTypes[AsnPropTypes[\"Boolean\"] = 2] = \"Boolean\";\n    AsnPropTypes[AsnPropTypes[\"OctetString\"] = 3] = \"OctetString\";\n    AsnPropTypes[AsnPropTypes[\"BitString\"] = 4] = \"BitString\";\n    AsnPropTypes[AsnPropTypes[\"Integer\"] = 5] = \"Integer\";\n    AsnPropTypes[AsnPropTypes[\"Enumerated\"] = 6] = \"Enumerated\";\n    AsnPropTypes[AsnPropTypes[\"ObjectIdentifier\"] = 7] = \"ObjectIdentifier\";\n    AsnPropTypes[AsnPropTypes[\"Utf8String\"] = 8] = \"Utf8String\";\n    AsnPropTypes[AsnPropTypes[\"BmpString\"] = 9] = \"BmpString\";\n    AsnPropTypes[AsnPropTypes[\"UniversalString\"] = 10] = \"UniversalString\";\n    AsnPropTypes[AsnPropTypes[\"NumericString\"] = 11] = \"NumericString\";\n    AsnPropTypes[AsnPropTypes[\"PrintableString\"] = 12] = \"PrintableString\";\n    AsnPropTypes[AsnPropTypes[\"TeletexString\"] = 13] = \"TeletexString\";\n    AsnPropTypes[AsnPropTypes[\"VideotexString\"] = 14] = \"VideotexString\";\n    AsnPropTypes[AsnPropTypes[\"IA5String\"] = 15] = \"IA5String\";\n    AsnPropTypes[AsnPropTypes[\"GraphicString\"] = 16] = \"GraphicString\";\n    AsnPropTypes[AsnPropTypes[\"VisibleString\"] = 17] = \"VisibleString\";\n    AsnPropTypes[AsnPropTypes[\"GeneralString\"] = 18] = \"GeneralString\";\n    AsnPropTypes[AsnPropTypes[\"CharacterString\"] = 19] = \"CharacterString\";\n    AsnPropTypes[AsnPropTypes[\"UTCTime\"] = 20] = \"UTCTime\";\n    AsnPropTypes[AsnPropTypes[\"GeneralizedTime\"] = 21] = \"GeneralizedTime\";\n    AsnPropTypes[AsnPropTypes[\"DATE\"] = 22] = \"DATE\";\n    AsnPropTypes[AsnPropTypes[\"TimeOfDay\"] = 23] = \"TimeOfDay\";\n    AsnPropTypes[AsnPropTypes[\"DateTime\"] = 24] = \"DateTime\";\n    AsnPropTypes[AsnPropTypes[\"Duration\"] = 25] = \"Duration\";\n    AsnPropTypes[AsnPropTypes[\"TIME\"] = 26] = \"TIME\";\n    AsnPropTypes[AsnPropTypes[\"Null\"] = 27] = \"Null\";\n})(AsnPropTypes || (AsnPropTypes = {}));\n","import * as asn1js from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nexport class BitString {\n    constructor(params, unusedBits = 0) {\n        this.unusedBits = 0;\n        this.value = new ArrayBuffer(0);\n        if (params) {\n            if (typeof params === \"number\") {\n                this.fromNumber(params);\n            }\n            else if (BufferSourceConverter.isBufferSource(params)) {\n                this.unusedBits = unusedBits;\n                this.value = BufferSourceConverter.toArrayBuffer(params);\n            }\n            else {\n                throw TypeError(\"Unsupported type of 'params' argument for BitString\");\n            }\n        }\n    }\n    fromASN(asn) {\n        if (!(asn instanceof asn1js.BitString)) {\n            throw new TypeError(\"Argument 'asn' is not instance of ASN.1 BitString\");\n        }\n        this.unusedBits = asn.valueBlock.unusedBits;\n        this.value = asn.valueBlock.valueHex;\n        return this;\n    }\n    toASN() {\n        return new asn1js.BitString({ unusedBits: this.unusedBits, valueHex: this.value });\n    }\n    toSchema(name) {\n        return new asn1js.BitString({ name });\n    }\n    toNumber() {\n        let res = \"\";\n        const uintArray = new Uint8Array(this.value);\n        for (const octet of uintArray) {\n            res += octet.toString(2).padStart(8, \"0\");\n        }\n        res = res.split(\"\").reverse().join(\"\");\n        if (this.unusedBits) {\n            res = res.slice(this.unusedBits).padStart(this.unusedBits, \"0\");\n        }\n        return parseInt(res, 2);\n    }\n    fromNumber(value) {\n        let bits = value.toString(2);\n        const octetSize = (bits.length + 7) >> 3;\n        this.unusedBits = (octetSize << 3) - bits.length;\n        const octets = new Uint8Array(octetSize);\n        bits = bits\n            .padStart(octetSize << 3, \"0\")\n            .split(\"\")\n            .reverse()\n            .join(\"\");\n        let index = 0;\n        while (index < octetSize) {\n            octets[index] = parseInt(bits.slice(index << 3, (index << 3) + 8), 2);\n            index++;\n        }\n        this.value = octets.buffer;\n    }\n}\n","import * as asn1js from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nexport class OctetString {\n    get byteLength() {\n        return this.buffer.byteLength;\n    }\n    get byteOffset() {\n        return 0;\n    }\n    constructor(param) {\n        if (typeof param === \"number\") {\n            this.buffer = new ArrayBuffer(param);\n        }\n        else {\n            if (BufferSourceConverter.isBufferSource(param)) {\n                this.buffer = BufferSourceConverter.toArrayBuffer(param);\n            }\n            else if (Array.isArray(param)) {\n                this.buffer = new Uint8Array(param);\n            }\n            else {\n                this.buffer = new ArrayBuffer(0);\n            }\n        }\n    }\n    fromASN(asn) {\n        if (!(asn instanceof asn1js.OctetString)) {\n            throw new TypeError(\"Argument 'asn' is not instance of ASN.1 OctetString\");\n        }\n        this.buffer = asn.valueBlock.valueHex;\n        return this;\n    }\n    toASN() {\n        return new asn1js.OctetString({ valueHex: this.buffer });\n    }\n    toSchema(name) {\n        return new asn1js.OctetString({ name });\n    }\n}\n","import * as asn1js from \"asn1js\";\nimport { AsnPropTypes } from \"./enums\";\nimport { OctetString } from \"./types/index\";\nexport const AsnAnyConverter = {\n    fromASN: (value) => value instanceof asn1js.Null ? null : value.valueBeforeDecodeView,\n    toASN: (value) => {\n        if (value === null) {\n            return new asn1js.Null();\n        }\n        const schema = asn1js.fromBER(value);\n        if (schema.result.error) {\n            throw new Error(schema.result.error);\n        }\n        return schema.result;\n    },\n};\nexport const AsnIntegerConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView.byteLength >= 4\n        ? value.valueBlock.toString()\n        : value.valueBlock.valueDec,\n    toASN: (value) => new asn1js.Integer({ value: +value }),\n};\nexport const AsnEnumeratedConverter = {\n    fromASN: (value) => value.valueBlock.valueDec,\n    toASN: (value) => new asn1js.Enumerated({ value }),\n};\nexport const AsnIntegerArrayBufferConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.Integer({ valueHex: value }),\n};\nexport const AsnIntegerBigIntConverter = {\n    fromASN: (value) => value.toBigInt(),\n    toASN: (value) => asn1js.Integer.fromBigInt(value),\n};\nexport const AsnBitStringConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.BitString({ valueHex: value }),\n};\nexport const AsnObjectIdentifierConverter = {\n    fromASN: (value) => value.valueBlock.toString(),\n    toASN: (value) => new asn1js.ObjectIdentifier({ value }),\n};\nexport const AsnBooleanConverter = {\n    fromASN: (value) => value.valueBlock.value,\n    toASN: (value) => new asn1js.Boolean({ value }),\n};\nexport const AsnOctetStringConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.OctetString({ valueHex: value }),\n};\nexport const AsnConstructedOctetStringConverter = {\n    fromASN: (value) => new OctetString(value.getValue()),\n    toASN: (value) => value.toASN(),\n};\nfunction createStringConverter(Asn1Type) {\n    return {\n        fromASN: (value) => value.valueBlock.value,\n        toASN: (value) => new Asn1Type({ value }),\n    };\n}\nexport const AsnUtf8StringConverter = createStringConverter(asn1js.Utf8String);\nexport const AsnBmpStringConverter = createStringConverter(asn1js.BmpString);\nexport const AsnUniversalStringConverter = createStringConverter(asn1js.UniversalString);\nexport const AsnNumericStringConverter = createStringConverter(asn1js.NumericString);\nexport const AsnPrintableStringConverter = createStringConverter(asn1js.PrintableString);\nexport const AsnTeletexStringConverter = createStringConverter(asn1js.TeletexString);\nexport const AsnVideotexStringConverter = createStringConverter(asn1js.VideotexString);\nexport const AsnIA5StringConverter = createStringConverter(asn1js.IA5String);\nexport const AsnGraphicStringConverter = createStringConverter(asn1js.GraphicString);\nexport const AsnVisibleStringConverter = createStringConverter(asn1js.VisibleString);\nexport const AsnGeneralStringConverter = createStringConverter(asn1js.GeneralString);\nexport const AsnCharacterStringConverter = createStringConverter(asn1js.CharacterString);\nexport const AsnUTCTimeConverter = {\n    fromASN: (value) => value.toDate(),\n    toASN: (value) => new asn1js.UTCTime({ valueDate: value }),\n};\nexport const AsnGeneralizedTimeConverter = {\n    fromASN: (value) => value.toDate(),\n    toASN: (value) => new asn1js.GeneralizedTime({ valueDate: value }),\n};\nexport const AsnNullConverter = {\n    fromASN: () => null,\n    toASN: () => {\n        return new asn1js.Null();\n    },\n};\nexport function defaultConverter(type) {\n    switch (type) {\n        case AsnPropTypes.Any:\n            return AsnAnyConverter;\n        case AsnPropTypes.BitString:\n            return AsnBitStringConverter;\n        case AsnPropTypes.BmpString:\n            return AsnBmpStringConverter;\n        case AsnPropTypes.Boolean:\n            return AsnBooleanConverter;\n        case AsnPropTypes.CharacterString:\n            return AsnCharacterStringConverter;\n        case AsnPropTypes.Enumerated:\n            return AsnEnumeratedConverter;\n        case AsnPropTypes.GeneralString:\n            return AsnGeneralStringConverter;\n        case AsnPropTypes.GeneralizedTime:\n            return AsnGeneralizedTimeConverter;\n        case AsnPropTypes.GraphicString:\n            return AsnGraphicStringConverter;\n        case AsnPropTypes.IA5String:\n            return AsnIA5StringConverter;\n        case AsnPropTypes.Integer:\n            return AsnIntegerConverter;\n        case AsnPropTypes.Null:\n            return AsnNullConverter;\n        case AsnPropTypes.NumericString:\n            return AsnNumericStringConverter;\n        case AsnPropTypes.ObjectIdentifier:\n            return AsnObjectIdentifierConverter;\n        case AsnPropTypes.OctetString:\n            return AsnOctetStringConverter;\n        case AsnPropTypes.PrintableString:\n            return AsnPrintableStringConverter;\n        case AsnPropTypes.TeletexString:\n            return AsnTeletexStringConverter;\n        case AsnPropTypes.UTCTime:\n            return AsnUTCTimeConverter;\n        case AsnPropTypes.UniversalString:\n            return AsnUniversalStringConverter;\n        case AsnPropTypes.Utf8String:\n            return AsnUtf8StringConverter;\n        case AsnPropTypes.VideotexString:\n            return AsnVideotexStringConverter;\n        case AsnPropTypes.VisibleString:\n            return AsnVisibleStringConverter;\n        default:\n            return null;\n    }\n}\n","export function isConvertible(target) {\n    if (typeof target === \"function\" && target.prototype) {\n        if (target.prototype.toASN && target.prototype.fromASN) {\n            return true;\n        }\n        else {\n            return isConvertible(target.prototype);\n        }\n    }\n    else {\n        return !!(target && typeof target === \"object\" && \"toASN\" in target && \"fromASN\" in target);\n    }\n}\nexport function isTypeOfArray(target) {\n    var _a;\n    if (target) {\n        const proto = Object.getPrototypeOf(target);\n        if (((_a = proto === null || proto === void 0 ? void 0 : proto.prototype) === null || _a === void 0 ? void 0 : _a.constructor) === Array) {\n            return true;\n        }\n        return isTypeOfArray(proto);\n    }\n    return false;\n}\nexport function isArrayEqual(bytes1, bytes2) {\n    if (!(bytes1 && bytes2)) {\n        return false;\n    }\n    if (bytes1.byteLength !== bytes2.byteLength) {\n        return false;\n    }\n    const b1 = new Uint8Array(bytes1);\n    const b2 = new Uint8Array(bytes2);\n    for (let i = 0; i < bytes1.byteLength; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n","import * as asn1js from \"asn1js\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport { isConvertible } from \"./helper\";\nexport class AsnSchemaStorage {\n    constructor() {\n        this.items = new WeakMap();\n    }\n    has(target) {\n        return this.items.has(target);\n    }\n    get(target, checkSchema = false) {\n        const schema = this.items.get(target);\n        if (!schema) {\n            throw new Error(`Cannot get schema for '${target.prototype.constructor.name}' target`);\n        }\n        if (checkSchema && !schema.schema) {\n            throw new Error(`Schema '${target.prototype.constructor.name}' doesn't contain ASN.1 schema. Call 'AsnSchemaStorage.cache'.`);\n        }\n        return schema;\n    }\n    cache(target) {\n        const schema = this.get(target);\n        if (!schema.schema) {\n            schema.schema = this.create(target, true);\n        }\n    }\n    createDefault(target) {\n        const schema = {\n            type: AsnTypeTypes.Sequence,\n            items: {},\n        };\n        const parentSchema = this.findParentSchema(target);\n        if (parentSchema) {\n            Object.assign(schema, parentSchema);\n            schema.items = Object.assign({}, schema.items, parentSchema.items);\n        }\n        return schema;\n    }\n    create(target, useNames) {\n        const schema = this.items.get(target) || this.createDefault(target);\n        const asn1Value = [];\n        for (const key in schema.items) {\n            const item = schema.items[key];\n            const name = useNames ? key : \"\";\n            let asn1Item;\n            if (typeof item.type === \"number\") {\n                const Asn1TypeName = AsnPropTypes[item.type];\n                const Asn1Type = asn1js[Asn1TypeName];\n                if (!Asn1Type) {\n                    throw new Error(`Cannot get ASN1 class by name '${Asn1TypeName}'`);\n                }\n                asn1Item = new Asn1Type({ name });\n            }\n            else if (isConvertible(item.type)) {\n                const instance = new item.type();\n                asn1Item = instance.toSchema(name);\n            }\n            else if (item.optional) {\n                const itemSchema = this.get(item.type);\n                if (itemSchema.type === AsnTypeTypes.Choice) {\n                    asn1Item = new asn1js.Any({ name });\n                }\n                else {\n                    asn1Item = this.create(item.type, false);\n                    asn1Item.name = name;\n                }\n            }\n            else {\n                asn1Item = new asn1js.Any({ name });\n            }\n            const optional = !!item.optional || item.defaultValue !== undefined;\n            if (item.repeated) {\n                asn1Item.name = \"\";\n                const Container = item.repeated === \"set\" ? asn1js.Set : asn1js.Sequence;\n                asn1Item = new Container({\n                    name: \"\",\n                    value: [\n                        new asn1js.Repeated({\n                            name,\n                            value: asn1Item,\n                        }),\n                    ],\n                });\n            }\n            if (item.context !== null && item.context !== undefined) {\n                if (item.implicit) {\n                    if (typeof item.type === \"number\" || isConvertible(item.type)) {\n                        const Container = item.repeated ? asn1js.Constructed : asn1js.Primitive;\n                        asn1Value.push(new Container({\n                            name,\n                            optional,\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: item.context,\n                            },\n                        }));\n                    }\n                    else {\n                        this.cache(item.type);\n                        const isRepeated = !!item.repeated;\n                        let value = !isRepeated ? this.get(item.type, true).schema : asn1Item;\n                        value =\n                            \"valueBlock\" in value\n                                ? value.valueBlock.value\n                                : value.value;\n                        asn1Value.push(new asn1js.Constructed({\n                            name: !isRepeated ? name : \"\",\n                            optional,\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: item.context,\n                            },\n                            value: value,\n                        }));\n                    }\n                }\n                else {\n                    asn1Value.push(new asn1js.Constructed({\n                        optional,\n                        idBlock: {\n                            tagClass: 3,\n                            tagNumber: item.context,\n                        },\n                        value: [asn1Item],\n                    }));\n                }\n            }\n            else {\n                asn1Item.optional = optional;\n                asn1Value.push(asn1Item);\n            }\n        }\n        switch (schema.type) {\n            case AsnTypeTypes.Sequence:\n                return new asn1js.Sequence({ value: asn1Value, name: \"\" });\n            case AsnTypeTypes.Set:\n                return new asn1js.Set({ value: asn1Value, name: \"\" });\n            case AsnTypeTypes.Choice:\n                return new asn1js.Choice({ value: asn1Value, name: \"\" });\n            default:\n                throw new Error(`Unsupported ASN1 type in use`);\n        }\n    }\n    set(target, schema) {\n        this.items.set(target, schema);\n        return this;\n    }\n    findParentSchema(target) {\n        const parent = Object.getPrototypeOf(target);\n        if (parent) {\n            const schema = this.items.get(parent);\n            return schema || this.findParentSchema(parent);\n        }\n        return null;\n    }\n}\n","import { AsnSchemaStorage } from \"./schema\";\nexport const schemaStorage = new AsnSchemaStorage();\n","import * as converters from \"./converters\";\nimport { AsnTypeTypes } from \"./enums\";\nimport { schemaStorage } from \"./storage\";\nexport const AsnType = (options) => (target) => {\n    let schema;\n    if (!schemaStorage.has(target)) {\n        schema = schemaStorage.createDefault(target);\n        schemaStorage.set(target, schema);\n    }\n    else {\n        schema = schemaStorage.get(target);\n    }\n    Object.assign(schema, options);\n};\nexport const AsnChoiceType = () => AsnType({ type: AsnTypeTypes.Choice });\nexport const AsnSetType = (options) => AsnType({ type: AsnTypeTypes.Set, ...options });\nexport const AsnSequenceType = (options) => AsnType({ type: AsnTypeTypes.Sequence, ...options });\nexport const AsnProp = (options) => (target, propertyKey) => {\n    let schema;\n    if (!schemaStorage.has(target.constructor)) {\n        schema = schemaStorage.createDefault(target.constructor);\n        schemaStorage.set(target.constructor, schema);\n    }\n    else {\n        schema = schemaStorage.get(target.constructor);\n    }\n    const copyOptions = Object.assign({}, options);\n    if (typeof copyOptions.type === \"number\" && !copyOptions.converter) {\n        const defaultConverter = converters.defaultConverter(options.type);\n        if (!defaultConverter) {\n            throw new Error(`Cannot get default converter for property '${propertyKey}' of ${target.constructor.name}`);\n        }\n        copyOptions.converter = defaultConverter;\n    }\n    schema.items[propertyKey] = copyOptions;\n};\n","export class AsnSchemaValidationError extends Error {\n    constructor() {\n        super(...arguments);\n        this.schemas = [];\n    }\n}\n","import * as asn1js from \"asn1js\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport * as converters from \"./converters\";\nimport { AsnSchemaValidationError } from \"./errors\";\nimport { isConvertible, isTypeOfArray } from \"./helper\";\nimport { schemaStorage } from \"./storage\";\nexport class AsnParser {\n    static parse(data, target) {\n        const asn1Parsed = asn1js.fromBER(data);\n        if (asn1Parsed.result.error) {\n            throw new Error(asn1Parsed.result.error);\n        }\n        const res = this.fromASN(asn1Parsed.result, target);\n        return res;\n    }\n    static fromASN(asn1Schema, target) {\n        var _a;\n        try {\n            if (isConvertible(target)) {\n                const value = new target();\n                return value.fromASN(asn1Schema);\n            }\n            const schema = schemaStorage.get(target);\n            schemaStorage.cache(target);\n            let targetSchema = schema.schema;\n            if (asn1Schema.constructor === asn1js.Constructed && schema.type !== AsnTypeTypes.Choice) {\n                targetSchema = new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: asn1Schema.idBlock.tagNumber,\n                    },\n                    value: schema.schema.valueBlock.value,\n                });\n                for (const key in schema.items) {\n                    delete asn1Schema[key];\n                }\n            }\n            const asn1ComparedSchema = asn1js.compareSchema({}, asn1Schema, targetSchema);\n            if (!asn1ComparedSchema.verified) {\n                throw new AsnSchemaValidationError(`Data does not match to ${target.name} ASN1 schema. ${asn1ComparedSchema.result.error}`);\n            }\n            const res = new target();\n            if (isTypeOfArray(target)) {\n                if (!(\"value\" in asn1Schema.valueBlock && Array.isArray(asn1Schema.valueBlock.value))) {\n                    throw new Error(`Cannot get items from the ASN.1 parsed value. ASN.1 object is not constructed.`);\n                }\n                const itemType = schema.itemType;\n                if (typeof itemType === \"number\") {\n                    const converter = converters.defaultConverter(itemType);\n                    if (!converter) {\n                        throw new Error(`Cannot get default converter for array item of ${target.name} ASN1 schema`);\n                    }\n                    return target.from(asn1Schema.valueBlock.value, (element) => converter.fromASN(element));\n                }\n                else {\n                    return target.from(asn1Schema.valueBlock.value, (element) => this.fromASN(element, itemType));\n                }\n            }\n            for (const key in schema.items) {\n                const asn1SchemaValue = asn1ComparedSchema.result[key];\n                if (!asn1SchemaValue) {\n                    continue;\n                }\n                const schemaItem = schema.items[key];\n                const schemaItemType = schemaItem.type;\n                if (typeof schemaItemType === \"number\" || isConvertible(schemaItemType)) {\n                    const converter = (_a = schemaItem.converter) !== null && _a !== void 0 ? _a : (isConvertible(schemaItemType)\n                        ? new schemaItemType()\n                        : null);\n                    if (!converter) {\n                        throw new Error(\"Converter is empty\");\n                    }\n                    if (schemaItem.repeated) {\n                        if (schemaItem.implicit) {\n                            const Container = schemaItem.repeated === \"sequence\" ? asn1js.Sequence : asn1js.Set;\n                            const newItem = new Container();\n                            newItem.valueBlock = asn1SchemaValue.valueBlock;\n                            const newItemAsn = asn1js.fromBER(newItem.toBER(false));\n                            if (newItemAsn.offset === -1) {\n                                throw new Error(`Cannot parse the child item. ${newItemAsn.result.error}`);\n                            }\n                            if (!(\"value\" in newItemAsn.result.valueBlock &&\n                                Array.isArray(newItemAsn.result.valueBlock.value))) {\n                                throw new Error(\"Cannot get items from the ASN.1 parsed value. ASN.1 object is not constructed.\");\n                            }\n                            const value = newItemAsn.result.valueBlock.value;\n                            res[key] = Array.from(value, (element) => converter.fromASN(element));\n                        }\n                        else {\n                            res[key] = Array.from(asn1SchemaValue, (element) => converter.fromASN(element));\n                        }\n                    }\n                    else {\n                        let value = asn1SchemaValue;\n                        if (schemaItem.implicit) {\n                            let newItem;\n                            if (isConvertible(schemaItemType)) {\n                                newItem = new schemaItemType().toSchema(\"\");\n                            }\n                            else {\n                                const Asn1TypeName = AsnPropTypes[schemaItemType];\n                                const Asn1Type = asn1js[Asn1TypeName];\n                                if (!Asn1Type) {\n                                    throw new Error(`Cannot get '${Asn1TypeName}' class from asn1js module`);\n                                }\n                                newItem = new Asn1Type();\n                            }\n                            newItem.valueBlock = value.valueBlock;\n                            value = asn1js.fromBER(newItem.toBER(false)).result;\n                        }\n                        res[key] = converter.fromASN(value);\n                    }\n                }\n                else {\n                    if (schemaItem.repeated) {\n                        if (!Array.isArray(asn1SchemaValue)) {\n                            throw new Error(\"Cannot get list of items from the ASN.1 parsed value. ASN.1 value should be iterable.\");\n                        }\n                        res[key] = Array.from(asn1SchemaValue, (element) => this.fromASN(element, schemaItemType));\n                    }\n                    else {\n                        res[key] = this.fromASN(asn1SchemaValue, schemaItemType);\n                    }\n                }\n            }\n            return res;\n        }\n        catch (error) {\n            if (error instanceof AsnSchemaValidationError) {\n                error.schemas.push(target.name);\n            }\n            throw error;\n        }\n    }\n}\n","import * as asn1js from \"asn1js\";\nimport * as converters from \"./converters\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport { isConvertible, isArrayEqual } from \"./helper\";\nimport { schemaStorage } from \"./storage\";\nexport class AsnSerializer {\n    static serialize(obj) {\n        if (obj instanceof asn1js.BaseBlock) {\n            return obj.toBER(false);\n        }\n        return this.toASN(obj).toBER(false);\n    }\n    static toASN(obj) {\n        if (obj && typeof obj === \"object\" && isConvertible(obj)) {\n            return obj.toASN();\n        }\n        if (!(obj && typeof obj === \"object\")) {\n            throw new TypeError(\"Parameter 1 should be type of Object.\");\n        }\n        const target = obj.constructor;\n        const schema = schemaStorage.get(target);\n        schemaStorage.cache(target);\n        let asn1Value = [];\n        if (schema.itemType) {\n            if (!Array.isArray(obj)) {\n                throw new TypeError(\"Parameter 1 should be type of Array.\");\n            }\n            if (typeof schema.itemType === \"number\") {\n                const converter = converters.defaultConverter(schema.itemType);\n                if (!converter) {\n                    throw new Error(`Cannot get default converter for array item of ${target.name} ASN1 schema`);\n                }\n                asn1Value = obj.map((o) => converter.toASN(o));\n            }\n            else {\n                asn1Value = obj.map((o) => this.toAsnItem({ type: schema.itemType }, \"[]\", target, o));\n            }\n        }\n        else {\n            for (const key in schema.items) {\n                const schemaItem = schema.items[key];\n                const objProp = obj[key];\n                if (objProp === undefined ||\n                    schemaItem.defaultValue === objProp ||\n                    (typeof schemaItem.defaultValue === \"object\" &&\n                        typeof objProp === \"object\" &&\n                        isArrayEqual(this.serialize(schemaItem.defaultValue), this.serialize(objProp)))) {\n                    continue;\n                }\n                const asn1Item = AsnSerializer.toAsnItem(schemaItem, key, target, objProp);\n                if (typeof schemaItem.context === \"number\") {\n                    if (schemaItem.implicit) {\n                        if (!schemaItem.repeated &&\n                            (typeof schemaItem.type === \"number\" || isConvertible(schemaItem.type))) {\n                            const value = {};\n                            value.valueHex =\n                                asn1Item instanceof asn1js.Null\n                                    ? asn1Item.valueBeforeDecodeView\n                                    : asn1Item.valueBlock.toBER();\n                            asn1Value.push(new asn1js.Primitive({\n                                optional: schemaItem.optional,\n                                idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: schemaItem.context,\n                                },\n                                ...value,\n                            }));\n                        }\n                        else {\n                            asn1Value.push(new asn1js.Constructed({\n                                optional: schemaItem.optional,\n                                idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: schemaItem.context,\n                                },\n                                value: asn1Item.valueBlock.value,\n                            }));\n                        }\n                    }\n                    else {\n                        asn1Value.push(new asn1js.Constructed({\n                            optional: schemaItem.optional,\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: schemaItem.context,\n                            },\n                            value: [asn1Item],\n                        }));\n                    }\n                }\n                else if (schemaItem.repeated) {\n                    asn1Value = asn1Value.concat(asn1Item);\n                }\n                else {\n                    asn1Value.push(asn1Item);\n                }\n            }\n        }\n        let asnSchema;\n        switch (schema.type) {\n            case AsnTypeTypes.Sequence:\n                asnSchema = new asn1js.Sequence({ value: asn1Value });\n                break;\n            case AsnTypeTypes.Set:\n                asnSchema = new asn1js.Set({ value: asn1Value });\n                break;\n            case AsnTypeTypes.Choice:\n                if (!asn1Value[0]) {\n                    throw new Error(`Schema '${target.name}' has wrong data. Choice cannot be empty.`);\n                }\n                asnSchema = asn1Value[0];\n                break;\n        }\n        return asnSchema;\n    }\n    static toAsnItem(schemaItem, key, target, objProp) {\n        let asn1Item;\n        if (typeof schemaItem.type === \"number\") {\n            const converter = schemaItem.converter;\n            if (!converter) {\n                throw new Error(`Property '${key}' doesn't have converter for type ${AsnPropTypes[schemaItem.type]} in schema '${target.name}'`);\n            }\n            if (schemaItem.repeated) {\n                if (!Array.isArray(objProp)) {\n                    throw new TypeError(\"Parameter 'objProp' should be type of Array.\");\n                }\n                const items = Array.from(objProp, (element) => converter.toASN(element));\n                const Container = schemaItem.repeated === \"sequence\" ? asn1js.Sequence : asn1js.Set;\n                asn1Item = new Container({\n                    value: items,\n                });\n            }\n            else {\n                asn1Item = converter.toASN(objProp);\n            }\n        }\n        else {\n            if (schemaItem.repeated) {\n                if (!Array.isArray(objProp)) {\n                    throw new TypeError(\"Parameter 'objProp' should be type of Array.\");\n                }\n                const items = Array.from(objProp, (element) => this.toASN(element));\n                const Container = schemaItem.repeated === \"sequence\" ? asn1js.Sequence : asn1js.Set;\n                asn1Item = new Container({\n                    value: items,\n                });\n            }\n            else {\n                asn1Item = this.toASN(objProp);\n            }\n        }\n        return asn1Item;\n    }\n}\n","export class AsnArray extends Array {\n    constructor(items = []) {\n        if (typeof items === \"number\") {\n            super(items);\n        }\n        else {\n            super();\n            for (const item of items) {\n                this.push(item);\n            }\n        }\n    }\n}\n","import * as asn1js from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nimport { AsnParser } from \"./parser\";\nimport { AsnSerializer } from \"./serializer\";\nexport class AsnConvert {\n    static serialize(obj) {\n        return AsnSerializer.serialize(obj);\n    }\n    static parse(data, target) {\n        return AsnParser.parse(data, target);\n    }\n    static toString(data) {\n        const buf = BufferSourceConverter.isBufferSource(data)\n            ? BufferSourceConverter.toArrayBuffer(data)\n            : AsnConvert.serialize(data);\n        const asn = asn1js.fromBER(buf);\n        if (asn.offset === -1) {\n            throw new Error(`Cannot decode ASN.1 data. ${asn.result.error}`);\n        }\n        return asn.result.toString();\n    }\n}\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","import { Convert } from \"pvtsutils\";\nexport class IpConverter {\n    static isIPv4(ip) {\n        return /^(\\d{1,3}\\.){3}\\d{1,3}$/.test(ip);\n    }\n    static parseIPv4(ip) {\n        const parts = ip.split(\".\");\n        if (parts.length !== 4) {\n            throw new Error(\"Invalid IPv4 address\");\n        }\n        return parts.map((part) => {\n            const num = parseInt(part, 10);\n            if (isNaN(num) || num < 0 || num > 255) {\n                throw new Error(\"Invalid IPv4 address part\");\n            }\n            return num;\n        });\n    }\n    static parseIPv6(ip) {\n        const expandedIP = this.expandIPv6(ip);\n        const parts = expandedIP.split(\":\");\n        if (parts.length !== 8) {\n            throw new Error(\"Invalid IPv6 address\");\n        }\n        return parts.reduce((bytes, part) => {\n            const num = parseInt(part, 16);\n            if (isNaN(num) || num < 0 || num > 0xffff) {\n                throw new Error(\"Invalid IPv6 address part\");\n            }\n            bytes.push((num >> 8) & 0xff);\n            bytes.push(num & 0xff);\n            return bytes;\n        }, []);\n    }\n    static expandIPv6(ip) {\n        if (!ip.includes(\"::\")) {\n            return ip;\n        }\n        const parts = ip.split(\"::\");\n        if (parts.length > 2) {\n            throw new Error(\"Invalid IPv6 address\");\n        }\n        const left = parts[0] ? parts[0].split(\":\") : [];\n        const right = parts[1] ? parts[1].split(\":\") : [];\n        const missing = 8 - (left.length + right.length);\n        if (missing < 0) {\n            throw new Error(\"Invalid IPv6 address\");\n        }\n        return [...left, ...Array(missing).fill(\"0\"), ...right].join(\":\");\n    }\n    static formatIPv6(bytes) {\n        const parts = [];\n        for (let i = 0; i < 16; i += 2) {\n            parts.push(((bytes[i] << 8) | bytes[i + 1]).toString(16));\n        }\n        return this.compressIPv6(parts.join(\":\"));\n    }\n    static compressIPv6(ip) {\n        const parts = ip.split(\":\");\n        let longestZeroStart = -1;\n        let longestZeroLength = 0;\n        let currentZeroStart = -1;\n        let currentZeroLength = 0;\n        for (let i = 0; i < parts.length; i++) {\n            if (parts[i] === \"0\") {\n                if (currentZeroStart === -1) {\n                    currentZeroStart = i;\n                }\n                currentZeroLength++;\n            }\n            else {\n                if (currentZeroLength > longestZeroLength) {\n                    longestZeroStart = currentZeroStart;\n                    longestZeroLength = currentZeroLength;\n                }\n                currentZeroStart = -1;\n                currentZeroLength = 0;\n            }\n        }\n        if (currentZeroLength > longestZeroLength) {\n            longestZeroStart = currentZeroStart;\n            longestZeroLength = currentZeroLength;\n        }\n        if (longestZeroLength > 1) {\n            const before = parts.slice(0, longestZeroStart).join(\":\");\n            const after = parts.slice(longestZeroStart + longestZeroLength).join(\":\");\n            return `${before}::${after}`;\n        }\n        return ip;\n    }\n    static parseCIDR(text) {\n        const [addr, prefixStr] = text.split(\"/\");\n        const prefix = parseInt(prefixStr, 10);\n        if (this.isIPv4(addr)) {\n            if (prefix < 0 || prefix > 32) {\n                throw new Error(\"Invalid IPv4 prefix length\");\n            }\n            return [this.parseIPv4(addr), prefix];\n        }\n        else {\n            if (prefix < 0 || prefix > 128) {\n                throw new Error(\"Invalid IPv6 prefix length\");\n            }\n            return [this.parseIPv6(addr), prefix];\n        }\n    }\n    static decodeIP(value) {\n        if (value.length === 64 && parseInt(value, 16) === 0) {\n            return \"::/0\";\n        }\n        if (value.length !== 16) {\n            return value;\n        }\n        const mask = parseInt(value.slice(8), 16)\n            .toString(2)\n            .split(\"\")\n            .reduce((a, k) => a + +k, 0);\n        let ip = value.slice(0, 8).replace(/(.{2})/g, (match) => `${parseInt(match, 16)}.`);\n        ip = ip.slice(0, -1);\n        return `${ip}/${mask}`;\n    }\n    static toString(buf) {\n        const uint8 = new Uint8Array(buf);\n        if (uint8.length === 4) {\n            return Array.from(uint8).join(\".\");\n        }\n        if (uint8.length === 16) {\n            return this.formatIPv6(uint8);\n        }\n        if (uint8.length === 8 || uint8.length === 32) {\n            const half = uint8.length / 2;\n            const addrBytes = uint8.slice(0, half);\n            const maskBytes = uint8.slice(half);\n            const isAllZeros = uint8.every((byte) => byte === 0);\n            if (isAllZeros) {\n                return uint8.length === 8 ? \"0.0.0.0/0\" : \"::/0\";\n            }\n            const prefixLen = maskBytes.reduce((a, b) => a + (b.toString(2).match(/1/g) || []).length, 0);\n            if (uint8.length === 8) {\n                const addrStr = Array.from(addrBytes).join(\".\");\n                return `${addrStr}/${prefixLen}`;\n            }\n            else {\n                const addrStr = this.formatIPv6(addrBytes);\n                return `${addrStr}/${prefixLen}`;\n            }\n        }\n        return this.decodeIP(Convert.ToHex(buf));\n    }\n    static fromString(text) {\n        if (text.includes(\"/\")) {\n            const [addr, prefix] = this.parseCIDR(text);\n            const maskBytes = new Uint8Array(addr.length);\n            let bitsLeft = prefix;\n            for (let i = 0; i < maskBytes.length; i++) {\n                if (bitsLeft >= 8) {\n                    maskBytes[i] = 0xff;\n                    bitsLeft -= 8;\n                }\n                else if (bitsLeft > 0) {\n                    maskBytes[i] = 0xff << (8 - bitsLeft);\n                    bitsLeft = 0;\n                }\n            }\n            const out = new Uint8Array(addr.length * 2);\n            out.set(addr, 0);\n            out.set(maskBytes, addr.length);\n            return out.buffer;\n        }\n        const bytes = this.isIPv4(text) ? this.parseIPv4(text) : this.parseIPv6(text);\n        return new Uint8Array(bytes).buffer;\n    }\n}\n","var RelativeDistinguishedName_1, RDNSequence_1, Name_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { Convert } from \"pvtsutils\";\nlet DirectoryString = class DirectoryString {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n    toString() {\n        return (this.bmpString ||\n            this.printableString ||\n            this.teletexString ||\n            this.universalString ||\n            this.utf8String ||\n            \"\");\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.TeletexString })\n], DirectoryString.prototype, \"teletexString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.PrintableString })\n], DirectoryString.prototype, \"printableString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.UniversalString })\n], DirectoryString.prototype, \"universalString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Utf8String })\n], DirectoryString.prototype, \"utf8String\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BmpString })\n], DirectoryString.prototype, \"bmpString\", void 0);\nDirectoryString = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DirectoryString);\nexport { DirectoryString };\nlet AttributeValue = class AttributeValue extends DirectoryString {\n    constructor(params = {}) {\n        super(params);\n        Object.assign(this, params);\n    }\n    toString() {\n        return this.ia5String || (this.anyValue ? Convert.ToHex(this.anyValue) : super.toString());\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], AttributeValue.prototype, \"ia5String\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], AttributeValue.prototype, \"anyValue\", void 0);\nAttributeValue = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], AttributeValue);\nexport { AttributeValue };\nexport class AttributeTypeAndValue {\n    constructor(params = {}) {\n        this.type = \"\";\n        this.value = new AttributeValue();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], AttributeTypeAndValue.prototype, \"type\", void 0);\n__decorate([\n    AsnProp({ type: AttributeValue })\n], AttributeTypeAndValue.prototype, \"value\", void 0);\nlet RelativeDistinguishedName = RelativeDistinguishedName_1 = class RelativeDistinguishedName extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RelativeDistinguishedName_1.prototype);\n    }\n};\nRelativeDistinguishedName = RelativeDistinguishedName_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: AttributeTypeAndValue })\n], RelativeDistinguishedName);\nexport { RelativeDistinguishedName };\nlet RDNSequence = RDNSequence_1 = class RDNSequence extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RDNSequence_1.prototype);\n    }\n};\nRDNSequence = RDNSequence_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: RelativeDistinguishedName })\n], RDNSequence);\nexport { RDNSequence };\nlet Name = Name_1 = class Name extends RDNSequence {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Name_1.prototype);\n    }\n};\nName = Name_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], Name);\nexport { Name };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnOctetStringConverter, } from \"@peculiar/asn1-schema\";\nimport { IpConverter } from \"./ip_converter\";\nimport { DirectoryString, Name } from \"./name\";\nexport const AsnIpConverter = {\n    fromASN: (value) => IpConverter.toString(AsnOctetStringConverter.fromASN(value)),\n    toASN: (value) => AsnOctetStringConverter.toASN(IpConverter.fromString(value)),\n};\nexport class OtherName {\n    constructor(params = {}) {\n        this.typeId = \"\";\n        this.value = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], OtherName.prototype, \"typeId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], OtherName.prototype, \"value\", void 0);\nexport class EDIPartyName {\n    constructor(params = {}) {\n        this.partyName = new DirectoryString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DirectoryString, optional: true, context: 0, implicit: true })\n], EDIPartyName.prototype, \"nameAssigner\", void 0);\n__decorate([\n    AsnProp({ type: DirectoryString, context: 1, implicit: true })\n], EDIPartyName.prototype, \"partyName\", void 0);\nlet GeneralName = class GeneralName {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: OtherName, context: 0, implicit: true })\n], GeneralName.prototype, \"otherName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String, context: 1, implicit: true })\n], GeneralName.prototype, \"rfc822Name\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String, context: 2, implicit: true })\n], GeneralName.prototype, \"dNSName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 3, implicit: true })\n], GeneralName.prototype, \"x400Address\", void 0);\n__decorate([\n    AsnProp({ type: Name, context: 4, implicit: false })\n], GeneralName.prototype, \"directoryName\", void 0);\n__decorate([\n    AsnProp({ type: EDIPartyName, context: 5 })\n], GeneralName.prototype, \"ediPartyName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String, context: 6, implicit: true })\n], GeneralName.prototype, \"uniformResourceIdentifier\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.OctetString,\n        context: 7,\n        implicit: true,\n        converter: AsnIpConverter,\n    })\n], GeneralName.prototype, \"iPAddress\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier, context: 8, implicit: true })\n], GeneralName.prototype, \"registeredID\", void 0);\nGeneralName = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], GeneralName);\nexport { GeneralName };\n","export const id_pkix = \"1.3.6.1.5.5.7\";\nexport const id_pe = `${id_pkix}.1`;\nexport const id_qt = `${id_pkix}.2`;\nexport const id_kp = `${id_pkix}.3`;\nexport const id_ad = `${id_pkix}.48`;\nexport const id_qt_csp = `${id_qt}.1`;\nexport const id_qt_unotice = `${id_qt}.2`;\nexport const id_ad_ocsp = `${id_ad}.1`;\nexport const id_ad_caIssuers = `${id_ad}.2`;\nexport const id_ad_timeStamping = `${id_ad}.3`;\nexport const id_ad_caRepository = `${id_ad}.5`;\nexport const id_ce = \"2.5.29\";\n","var AuthorityInfoAccessSyntax_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_pe } from \"../object_identifiers\";\nexport const id_pe_authorityInfoAccess = `${id_pe}.1`;\nexport class AccessDescription {\n    constructor(params = {}) {\n        this.accessMethod = \"\";\n        this.accessLocation = new GeneralName();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], AccessDescription.prototype, \"accessMethod\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName })\n], AccessDescription.prototype, \"accessLocation\", void 0);\nlet AuthorityInfoAccessSyntax = AuthorityInfoAccessSyntax_1 = class AuthorityInfoAccessSyntax extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, AuthorityInfoAccessSyntax_1.prototype);\n    }\n};\nAuthorityInfoAccessSyntax = AuthorityInfoAccessSyntax_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AccessDescription })\n], AuthorityInfoAccessSyntax);\nexport { AuthorityInfoAccessSyntax };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter, OctetString, } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_authorityKeyIdentifier = `${id_ce}.35`;\nexport class KeyIdentifier extends OctetString {\n}\nexport class AuthorityKeyIdentifier {\n    constructor(params = {}) {\n        if (params) {\n            Object.assign(this, params);\n        }\n    }\n}\n__decorate([\n    AsnProp({ type: KeyIdentifier, context: 0, optional: true, implicit: true })\n], AuthorityKeyIdentifier.prototype, \"keyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, context: 1, optional: true, implicit: true, repeated: \"sequence\" })\n], AuthorityKeyIdentifier.prototype, \"authorityCertIssuer\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 2,\n        optional: true,\n        implicit: true,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], AuthorityKeyIdentifier.prototype, \"authorityCertSerialNumber\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_basicConstraints = `${id_ce}.19`;\nexport class BasicConstraints {\n    constructor(params = {}) {\n        this.cA = false;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Boolean, defaultValue: false })\n], BasicConstraints.prototype, \"cA\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], BasicConstraints.prototype, \"pathLenConstraint\", void 0);\n","var GeneralNames_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"./general_name\";\nimport { AsnArray } from \"@peculiar/asn1-schema\";\nlet GeneralNames = GeneralNames_1 = class GeneralNames extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, GeneralNames_1.prototype);\n    }\n};\nGeneralNames = GeneralNames_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: GeneralName })\n], GeneralNames);\nexport { GeneralNames };\n","var CertificateIssuer_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"../general_names\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_certificateIssuer = `${id_ce}.29`;\nlet CertificateIssuer = CertificateIssuer_1 = class CertificateIssuer extends GeneralNames {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CertificateIssuer_1.prototype);\n    }\n};\nCertificateIssuer = CertificateIssuer_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], CertificateIssuer);\nexport { CertificateIssuer };\n","var CertificatePolicies_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_certificatePolicies = `${id_ce}.32`;\nexport const id_ce_certificatePolicies_anyPolicy = `${id_ce_certificatePolicies}.0`;\nlet DisplayText = class DisplayText {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n    toString() {\n        return this.ia5String || this.visibleString || this.bmpString || this.utf8String || \"\";\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], DisplayText.prototype, \"ia5String\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.VisibleString })\n], DisplayText.prototype, \"visibleString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BmpString })\n], DisplayText.prototype, \"bmpString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Utf8String })\n], DisplayText.prototype, \"utf8String\", void 0);\nDisplayText = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DisplayText);\nexport { DisplayText };\nexport class NoticeReference {\n    constructor(params = {}) {\n        this.organization = new DisplayText();\n        this.noticeNumbers = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DisplayText })\n], NoticeReference.prototype, \"organization\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, repeated: \"sequence\" })\n], NoticeReference.prototype, \"noticeNumbers\", void 0);\nexport class UserNotice {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: NoticeReference, optional: true })\n], UserNotice.prototype, \"noticeRef\", void 0);\n__decorate([\n    AsnProp({ type: DisplayText, optional: true })\n], UserNotice.prototype, \"explicitText\", void 0);\nlet Qualifier = class Qualifier {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], Qualifier.prototype, \"cPSuri\", void 0);\n__decorate([\n    AsnProp({ type: UserNotice })\n], Qualifier.prototype, \"userNotice\", void 0);\nQualifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Qualifier);\nexport { Qualifier };\nexport class PolicyQualifierInfo {\n    constructor(params = {}) {\n        this.policyQualifierId = \"\";\n        this.qualifier = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyQualifierInfo.prototype, \"policyQualifierId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], PolicyQualifierInfo.prototype, \"qualifier\", void 0);\nexport class PolicyInformation {\n    constructor(params = {}) {\n        this.policyIdentifier = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyInformation.prototype, \"policyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: PolicyQualifierInfo, repeated: \"sequence\", optional: true })\n], PolicyInformation.prototype, \"policyQualifiers\", void 0);\nlet CertificatePolicies = CertificatePolicies_1 = class CertificatePolicies extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CertificatePolicies_1.prototype);\n    }\n};\nCertificatePolicies = CertificatePolicies_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: PolicyInformation })\n], CertificatePolicies);\nexport { CertificatePolicies };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_cRLNumber = `${id_ce}.20`;\nlet CRLNumber = class CRLNumber {\n    constructor(value = 0) {\n        this.value = value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], CRLNumber.prototype, \"value\", void 0);\nCRLNumber = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CRLNumber);\nexport { CRLNumber };\n","import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nimport { CRLNumber } from \"./crl_number\";\nexport const id_ce_deltaCRLIndicator = `${id_ce}.27`;\nlet BaseCRLNumber = class BaseCRLNumber extends CRLNumber {\n};\nBaseCRLNumber = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], BaseCRLNumber);\nexport { BaseCRLNumber };\n","var CRLDistributionPoints_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnType, AsnTypeTypes, AsnArray, BitString } from \"@peculiar/asn1-schema\";\nimport { RelativeDistinguishedName } from \"../name\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_cRLDistributionPoints = `${id_ce}.31`;\nexport var ReasonFlags;\n(function (ReasonFlags) {\n    ReasonFlags[ReasonFlags[\"unused\"] = 1] = \"unused\";\n    ReasonFlags[ReasonFlags[\"keyCompromise\"] = 2] = \"keyCompromise\";\n    ReasonFlags[ReasonFlags[\"cACompromise\"] = 4] = \"cACompromise\";\n    ReasonFlags[ReasonFlags[\"affiliationChanged\"] = 8] = \"affiliationChanged\";\n    ReasonFlags[ReasonFlags[\"superseded\"] = 16] = \"superseded\";\n    ReasonFlags[ReasonFlags[\"cessationOfOperation\"] = 32] = \"cessationOfOperation\";\n    ReasonFlags[ReasonFlags[\"certificateHold\"] = 64] = \"certificateHold\";\n    ReasonFlags[ReasonFlags[\"privilegeWithdrawn\"] = 128] = \"privilegeWithdrawn\";\n    ReasonFlags[ReasonFlags[\"aACompromise\"] = 256] = \"aACompromise\";\n})(ReasonFlags || (ReasonFlags = {}));\nexport class Reason extends BitString {\n    toJSON() {\n        const res = [];\n        const flags = this.toNumber();\n        if (flags & ReasonFlags.aACompromise) {\n            res.push(\"aACompromise\");\n        }\n        if (flags & ReasonFlags.affiliationChanged) {\n            res.push(\"affiliationChanged\");\n        }\n        if (flags & ReasonFlags.cACompromise) {\n            res.push(\"cACompromise\");\n        }\n        if (flags & ReasonFlags.certificateHold) {\n            res.push(\"certificateHold\");\n        }\n        if (flags & ReasonFlags.cessationOfOperation) {\n            res.push(\"cessationOfOperation\");\n        }\n        if (flags & ReasonFlags.keyCompromise) {\n            res.push(\"keyCompromise\");\n        }\n        if (flags & ReasonFlags.privilegeWithdrawn) {\n            res.push(\"privilegeWithdrawn\");\n        }\n        if (flags & ReasonFlags.superseded) {\n            res.push(\"superseded\");\n        }\n        if (flags & ReasonFlags.unused) {\n            res.push(\"unused\");\n        }\n        return res;\n    }\n    toString() {\n        return `[${this.toJSON().join(\", \")}]`;\n    }\n}\nlet DistributionPointName = class DistributionPointName {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: GeneralName, context: 0, repeated: \"sequence\", implicit: true })\n], DistributionPointName.prototype, \"fullName\", void 0);\n__decorate([\n    AsnProp({ type: RelativeDistinguishedName, context: 1, implicit: true })\n], DistributionPointName.prototype, \"nameRelativeToCRLIssuer\", void 0);\nDistributionPointName = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DistributionPointName);\nexport { DistributionPointName };\nexport class DistributionPoint {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DistributionPointName, context: 0, optional: true })\n], DistributionPoint.prototype, \"distributionPoint\", void 0);\n__decorate([\n    AsnProp({ type: Reason, context: 1, optional: true, implicit: true })\n], DistributionPoint.prototype, \"reasons\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, context: 2, optional: true, repeated: \"sequence\", implicit: true })\n], DistributionPoint.prototype, \"cRLIssuer\", void 0);\nlet CRLDistributionPoints = CRLDistributionPoints_1 = class CRLDistributionPoints extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CRLDistributionPoints_1.prototype);\n    }\n};\nCRLDistributionPoints = CRLDistributionPoints_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: DistributionPoint })\n], CRLDistributionPoints);\nexport { CRLDistributionPoints };\n","var FreshestCRL_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nimport { CRLDistributionPoints, DistributionPoint } from \"./crl_distribution_points\";\nexport const id_ce_freshestCRL = `${id_ce}.46`;\nlet FreshestCRL = FreshestCRL_1 = class FreshestCRL extends CRLDistributionPoints {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, FreshestCRL_1.prototype);\n    }\n};\nFreshestCRL = FreshestCRL_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: DistributionPoint })\n], FreshestCRL);\nexport { FreshestCRL };\n","import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { DistributionPointName, Reason } from \"./crl_distribution_points\";\nimport { id_ce } from \"../object_identifiers\";\nimport { AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport const id_ce_issuingDistributionPoint = `${id_ce}.28`;\nexport class IssuingDistributionPoint {\n    constructor(params = {}) {\n        this.onlyContainsUserCerts = IssuingDistributionPoint.ONLY;\n        this.onlyContainsCACerts = IssuingDistributionPoint.ONLY;\n        this.indirectCRL = IssuingDistributionPoint.ONLY;\n        this.onlyContainsAttributeCerts = IssuingDistributionPoint.ONLY;\n        Object.assign(this, params);\n    }\n}\nIssuingDistributionPoint.ONLY = false;\n__decorate([\n    AsnProp({ type: DistributionPointName, context: 0, optional: true })\n], IssuingDistributionPoint.prototype, \"distributionPoint\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        context: 1,\n        defaultValue: IssuingDistributionPoint.ONLY,\n        implicit: true,\n    })\n], IssuingDistributionPoint.prototype, \"onlyContainsUserCerts\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        context: 2,\n        defaultValue: IssuingDistributionPoint.ONLY,\n        implicit: true,\n    })\n], IssuingDistributionPoint.prototype, \"onlyContainsCACerts\", void 0);\n__decorate([\n    AsnProp({ type: Reason, context: 3, optional: true, implicit: true })\n], IssuingDistributionPoint.prototype, \"onlySomeReasons\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        context: 4,\n        defaultValue: IssuingDistributionPoint.ONLY,\n        implicit: true,\n    })\n], IssuingDistributionPoint.prototype, \"indirectCRL\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        context: 5,\n        defaultValue: IssuingDistributionPoint.ONLY,\n        implicit: true,\n    })\n], IssuingDistributionPoint.prototype, \"onlyContainsAttributeCerts\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_cRLReasons = `${id_ce}.21`;\nexport var CRLReasons;\n(function (CRLReasons) {\n    CRLReasons[CRLReasons[\"unspecified\"] = 0] = \"unspecified\";\n    CRLReasons[CRLReasons[\"keyCompromise\"] = 1] = \"keyCompromise\";\n    CRLReasons[CRLReasons[\"cACompromise\"] = 2] = \"cACompromise\";\n    CRLReasons[CRLReasons[\"affiliationChanged\"] = 3] = \"affiliationChanged\";\n    CRLReasons[CRLReasons[\"superseded\"] = 4] = \"superseded\";\n    CRLReasons[CRLReasons[\"cessationOfOperation\"] = 5] = \"cessationOfOperation\";\n    CRLReasons[CRLReasons[\"certificateHold\"] = 6] = \"certificateHold\";\n    CRLReasons[CRLReasons[\"removeFromCRL\"] = 8] = \"removeFromCRL\";\n    CRLReasons[CRLReasons[\"privilegeWithdrawn\"] = 9] = \"privilegeWithdrawn\";\n    CRLReasons[CRLReasons[\"aACompromise\"] = 10] = \"aACompromise\";\n})(CRLReasons || (CRLReasons = {}));\nlet CRLReason = class CRLReason {\n    constructor(reason = CRLReasons.unspecified) {\n        this.reason = CRLReasons.unspecified;\n        this.reason = reason;\n    }\n    toJSON() {\n        return CRLReasons[this.reason];\n    }\n    toString() {\n        return this.toJSON();\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], CRLReason.prototype, \"reason\", void 0);\nCRLReason = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CRLReason);\nexport { CRLReason };\n","var ExtendedKeyUsage_1;\nimport { __decorate } from \"tslib\";\nimport { AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce, id_kp } from \"../object_identifiers\";\nexport const id_ce_extKeyUsage = `${id_ce}.37`;\nlet ExtendedKeyUsage = ExtendedKeyUsage_1 = class ExtendedKeyUsage extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, ExtendedKeyUsage_1.prototype);\n    }\n};\nExtendedKeyUsage = ExtendedKeyUsage_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AsnPropTypes.ObjectIdentifier })\n], ExtendedKeyUsage);\nexport { ExtendedKeyUsage };\nexport const anyExtendedKeyUsage = `${id_ce_extKeyUsage}.0`;\nexport const id_kp_serverAuth = `${id_kp}.1`;\nexport const id_kp_clientAuth = `${id_kp}.2`;\nexport const id_kp_codeSigning = `${id_kp}.3`;\nexport const id_kp_emailProtection = `${id_kp}.4`;\nexport const id_kp_timeStamping = `${id_kp}.8`;\nexport const id_kp_OCSPSigning = `${id_kp}.9`;\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnIntegerArrayBufferConverter, } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_inhibitAnyPolicy = `${id_ce}.54`;\nlet InhibitAnyPolicy = class InhibitAnyPolicy {\n    constructor(value = new ArrayBuffer(0)) {\n        this.value = value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], InhibitAnyPolicy.prototype, \"value\", void 0);\nInhibitAnyPolicy = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], InhibitAnyPolicy);\nexport { InhibitAnyPolicy };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_invalidityDate = `${id_ce}.24`;\nlet InvalidityDate = class InvalidityDate {\n    constructor(value) {\n        this.value = new Date();\n        if (value) {\n            this.value = value;\n        }\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime })\n], InvalidityDate.prototype, \"value\", void 0);\nInvalidityDate = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], InvalidityDate);\nexport { InvalidityDate };\n","var IssueAlternativeName_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"../general_names\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_issuerAltName = `${id_ce}.18`;\nlet IssueAlternativeName = IssueAlternativeName_1 = class IssueAlternativeName extends GeneralNames {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, IssueAlternativeName_1.prototype);\n    }\n};\nIssueAlternativeName = IssueAlternativeName_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], IssueAlternativeName);\nexport { IssueAlternativeName };\n","import { BitString } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_keyUsage = `${id_ce}.15`;\nexport var KeyUsageFlags;\n(function (KeyUsageFlags) {\n    KeyUsageFlags[KeyUsageFlags[\"digitalSignature\"] = 1] = \"digitalSignature\";\n    KeyUsageFlags[KeyUsageFlags[\"nonRepudiation\"] = 2] = \"nonRepudiation\";\n    KeyUsageFlags[KeyUsageFlags[\"keyEncipherment\"] = 4] = \"keyEncipherment\";\n    KeyUsageFlags[KeyUsageFlags[\"dataEncipherment\"] = 8] = \"dataEncipherment\";\n    KeyUsageFlags[KeyUsageFlags[\"keyAgreement\"] = 16] = \"keyAgreement\";\n    KeyUsageFlags[KeyUsageFlags[\"keyCertSign\"] = 32] = \"keyCertSign\";\n    KeyUsageFlags[KeyUsageFlags[\"cRLSign\"] = 64] = \"cRLSign\";\n    KeyUsageFlags[KeyUsageFlags[\"encipherOnly\"] = 128] = \"encipherOnly\";\n    KeyUsageFlags[KeyUsageFlags[\"decipherOnly\"] = 256] = \"decipherOnly\";\n})(KeyUsageFlags || (KeyUsageFlags = {}));\nexport class KeyUsage extends BitString {\n    toJSON() {\n        const flag = this.toNumber();\n        const res = [];\n        if (flag & KeyUsageFlags.cRLSign) {\n            res.push(\"crlSign\");\n        }\n        if (flag & KeyUsageFlags.dataEncipherment) {\n            res.push(\"dataEncipherment\");\n        }\n        if (flag & KeyUsageFlags.decipherOnly) {\n            res.push(\"decipherOnly\");\n        }\n        if (flag & KeyUsageFlags.digitalSignature) {\n            res.push(\"digitalSignature\");\n        }\n        if (flag & KeyUsageFlags.encipherOnly) {\n            res.push(\"encipherOnly\");\n        }\n        if (flag & KeyUsageFlags.keyAgreement) {\n            res.push(\"keyAgreement\");\n        }\n        if (flag & KeyUsageFlags.keyCertSign) {\n            res.push(\"keyCertSign\");\n        }\n        if (flag & KeyUsageFlags.keyEncipherment) {\n            res.push(\"keyEncipherment\");\n        }\n        if (flag & KeyUsageFlags.nonRepudiation) {\n            res.push(\"nonRepudiation\");\n        }\n        return res;\n    }\n    toString() {\n        return `[${this.toJSON().join(\", \")}]`;\n    }\n}\n","var GeneralSubtrees_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_nameConstraints = `${id_ce}.30`;\nexport class GeneralSubtree {\n    constructor(params = {}) {\n        this.base = new GeneralName();\n        this.minimum = 0;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralName })\n], GeneralSubtree.prototype, \"base\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 0, defaultValue: 0, implicit: true })\n], GeneralSubtree.prototype, \"minimum\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 1, optional: true, implicit: true })\n], GeneralSubtree.prototype, \"maximum\", void 0);\nlet GeneralSubtrees = GeneralSubtrees_1 = class GeneralSubtrees extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, GeneralSubtrees_1.prototype);\n    }\n};\nGeneralSubtrees = GeneralSubtrees_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: GeneralSubtree })\n], GeneralSubtrees);\nexport { GeneralSubtrees };\nexport class NameConstraints {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralSubtrees, context: 0, optional: true, implicit: true })\n], NameConstraints.prototype, \"permittedSubtrees\", void 0);\n__decorate([\n    AsnProp({ type: GeneralSubtrees, context: 1, optional: true, implicit: true })\n], NameConstraints.prototype, \"excludedSubtrees\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_policyConstraints = `${id_ce}.36`;\nexport class PolicyConstraints {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 0,\n        implicit: true,\n        optional: true,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], PolicyConstraints.prototype, \"requireExplicitPolicy\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 1,\n        implicit: true,\n        optional: true,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], PolicyConstraints.prototype, \"inhibitPolicyMapping\", void 0);\n","var PolicyMappings_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_policyMappings = `${id_ce}.33`;\nexport class PolicyMapping {\n    constructor(params = {}) {\n        this.issuerDomainPolicy = \"\";\n        this.subjectDomainPolicy = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyMapping.prototype, \"issuerDomainPolicy\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyMapping.prototype, \"subjectDomainPolicy\", void 0);\nlet PolicyMappings = PolicyMappings_1 = class PolicyMappings extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, PolicyMappings_1.prototype);\n    }\n};\nPolicyMappings = PolicyMappings_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: PolicyMapping })\n], PolicyMappings);\nexport { PolicyMappings };\n","var SubjectAlternativeName_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"../general_names\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_subjectAltName = `${id_ce}.17`;\nlet SubjectAlternativeName = SubjectAlternativeName_1 = class SubjectAlternativeName extends GeneralNames {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SubjectAlternativeName_1.prototype);\n    }\n};\nSubjectAlternativeName = SubjectAlternativeName_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], SubjectAlternativeName);\nexport { SubjectAlternativeName };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class Attribute {\n    constructor(params = {}) {\n        this.type = \"\";\n        this.values = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], Attribute.prototype, \"type\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, repeated: \"set\" })\n], Attribute.prototype, \"values\", void 0);\n","var SubjectDirectoryAttributes_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { Attribute } from \"../attribute\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_subjectDirectoryAttributes = `${id_ce}.9`;\nlet SubjectDirectoryAttributes = SubjectDirectoryAttributes_1 = class SubjectDirectoryAttributes extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SubjectDirectoryAttributes_1.prototype);\n    }\n};\nSubjectDirectoryAttributes = SubjectDirectoryAttributes_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Attribute })\n], SubjectDirectoryAttributes);\nexport { SubjectDirectoryAttributes };\n","import { id_ce } from \"../object_identifiers\";\nimport { KeyIdentifier } from \"./authority_key_identifier\";\nexport const id_ce_subjectKeyIdentifier = `${id_ce}.14`;\nexport class SubjectKeyIdentifier extends KeyIdentifier {\n}\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_privateKeyUsagePeriod = `${id_ce}.16`;\nexport class PrivateKeyUsagePeriod {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime, context: 0, implicit: true, optional: true })\n], PrivateKeyUsagePeriod.prototype, \"notBefore\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime, context: 1, implicit: true, optional: true })\n], PrivateKeyUsagePeriod.prototype, \"notAfter\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, BitString } from \"@peculiar/asn1-schema\";\nexport const id_entrust_entrustVersInfo = \"1.2.840.113533.7.65.0\";\nexport var EntrustInfoFlags;\n(function (EntrustInfoFlags) {\n    EntrustInfoFlags[EntrustInfoFlags[\"keyUpdateAllowed\"] = 1] = \"keyUpdateAllowed\";\n    EntrustInfoFlags[EntrustInfoFlags[\"newExtensions\"] = 2] = \"newExtensions\";\n    EntrustInfoFlags[EntrustInfoFlags[\"pKIXCertificate\"] = 4] = \"pKIXCertificate\";\n})(EntrustInfoFlags || (EntrustInfoFlags = {}));\nexport class EntrustInfo extends BitString {\n    toJSON() {\n        const res = [];\n        const flags = this.toNumber();\n        if (flags & EntrustInfoFlags.pKIXCertificate) {\n            res.push(\"pKIXCertificate\");\n        }\n        if (flags & EntrustInfoFlags.newExtensions) {\n            res.push(\"newExtensions\");\n        }\n        if (flags & EntrustInfoFlags.keyUpdateAllowed) {\n            res.push(\"keyUpdateAllowed\");\n        }\n        return res;\n    }\n    toString() {\n        return `[${this.toJSON().join(\", \")}]`;\n    }\n}\nexport class EntrustVersionInfo {\n    constructor(params = {}) {\n        this.entrustVers = \"\";\n        this.entrustInfoFlags = new EntrustInfo();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralString })\n], EntrustVersionInfo.prototype, \"entrustVers\", void 0);\n__decorate([\n    AsnProp({ type: EntrustInfo })\n], EntrustVersionInfo.prototype, \"entrustInfoFlags\", void 0);\n","var SubjectInfoAccessSyntax_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_pe } from \"../object_identifiers\";\nimport { AccessDescription } from \"./authority_information_access\";\nexport const id_pe_subjectInfoAccess = `${id_pe}.11`;\nlet SubjectInfoAccessSyntax = SubjectInfoAccessSyntax_1 = class SubjectInfoAccessSyntax extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SubjectInfoAccessSyntax_1.prototype);\n    }\n};\nSubjectInfoAccessSyntax = SubjectInfoAccessSyntax_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AccessDescription })\n], SubjectInfoAccessSyntax);\nexport { SubjectInfoAccessSyntax };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport * as pvtsutils from \"pvtsutils\";\nexport class AlgorithmIdentifier {\n    constructor(params = {}) {\n        this.algorithm = \"\";\n        Object.assign(this, params);\n    }\n    isEqual(data) {\n        return (data instanceof AlgorithmIdentifier &&\n            data.algorithm == this.algorithm &&\n            ((data.parameters &&\n                this.parameters &&\n                pvtsutils.isEqual(data.parameters, this.parameters)) ||\n                data.parameters === this.parameters));\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.ObjectIdentifier,\n    })\n], AlgorithmIdentifier.prototype, \"algorithm\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Any,\n        optional: true,\n    })\n], AlgorithmIdentifier.prototype, \"parameters\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nexport class SubjectPublicKeyInfo {\n    constructor(params = {}) {\n        this.algorithm = new AlgorithmIdentifier();\n        this.subjectPublicKey = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], SubjectPublicKeyInfo.prototype, \"algorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], SubjectPublicKeyInfo.prototype, \"subjectPublicKey\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nlet Time = class Time {\n    constructor(time) {\n        if (time) {\n            if (typeof time === \"string\" || typeof time === \"number\" || time instanceof Date) {\n                const date = new Date(time);\n                if (date.getUTCFullYear() > 2049) {\n                    this.generalTime = date;\n                }\n                else {\n                    this.utcTime = date;\n                }\n            }\n            else {\n                Object.assign(this, time);\n            }\n        }\n    }\n    getTime() {\n        const time = this.utcTime || this.generalTime;\n        if (!time) {\n            throw new Error(\"Cannot get time from CHOICE object\");\n        }\n        return time;\n    }\n};\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.UTCTime,\n    })\n], Time.prototype, \"utcTime\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.GeneralizedTime,\n    })\n], Time.prototype, \"generalTime\", void 0);\nTime = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Time);\nexport { Time };\n","import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { Time } from \"./time\";\nexport class Validity {\n    constructor(params) {\n        this.notBefore = new Time(new Date());\n        this.notAfter = new Time(new Date());\n        if (params) {\n            this.notBefore = new Time(params.notBefore);\n            this.notAfter = new Time(params.notAfter);\n        }\n    }\n}\n__decorate([\n    AsnProp({ type: Time })\n], Validity.prototype, \"notBefore\", void 0);\n__decorate([\n    AsnProp({ type: Time })\n], Validity.prototype, \"notAfter\", void 0);\n","var Extensions_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString, } from \"@peculiar/asn1-schema\";\nexport class Extension {\n    constructor(params = {}) {\n        this.extnID = \"\";\n        this.critical = Extension.CRITICAL;\n        this.extnValue = new OctetString();\n        Object.assign(this, params);\n    }\n}\nExtension.CRITICAL = false;\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], Extension.prototype, \"extnID\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        defaultValue: Extension.CRITICAL,\n    })\n], Extension.prototype, \"critical\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], Extension.prototype, \"extnValue\", void 0);\nlet Extensions = Extensions_1 = class Extensions extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Extensions_1.prototype);\n    }\n};\nExtensions = Extensions_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Extension })\n], Extensions);\nexport { Extensions };\n","export var Version;\n(function (Version) {\n    Version[Version[\"v1\"] = 0] = \"v1\";\n    Version[Version[\"v2\"] = 1] = \"v2\";\n    Version[Version[\"v3\"] = 2] = \"v3\";\n})(Version || (Version = {}));\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { Name } from \"./name\";\nimport { SubjectPublicKeyInfo } from \"./subject_public_key_info\";\nimport { Validity } from \"./validity\";\nimport { Extensions } from \"./extension\";\nimport { Version } from \"./types\";\nexport class TBSCertificate {\n    constructor(params = {}) {\n        this.version = Version.v1;\n        this.serialNumber = new ArrayBuffer(0);\n        this.signature = new AlgorithmIdentifier();\n        this.issuer = new Name();\n        this.validity = new Validity();\n        this.subject = new Name();\n        this.subjectPublicKeyInfo = new SubjectPublicKeyInfo();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 0,\n        defaultValue: Version.v1,\n    })\n], TBSCertificate.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], TBSCertificate.prototype, \"serialNumber\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], TBSCertificate.prototype, \"signature\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], TBSCertificate.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: Validity })\n], TBSCertificate.prototype, \"validity\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], TBSCertificate.prototype, \"subject\", void 0);\n__decorate([\n    AsnProp({ type: SubjectPublicKeyInfo })\n], TBSCertificate.prototype, \"subjectPublicKeyInfo\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.BitString,\n        context: 1,\n        implicit: true,\n        optional: true,\n    })\n], TBSCertificate.prototype, \"issuerUniqueID\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, context: 2, implicit: true, optional: true })\n], TBSCertificate.prototype, \"subjectUniqueID\", void 0);\n__decorate([\n    AsnProp({ type: Extensions, context: 3, optional: true })\n], TBSCertificate.prototype, \"extensions\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { TBSCertificate } from \"./tbs_certificate\";\nexport class Certificate {\n    constructor(params = {}) {\n        this.tbsCertificate = new TBSCertificate();\n        this.signatureAlgorithm = new AlgorithmIdentifier();\n        this.signatureValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: TBSCertificate })\n], Certificate.prototype, \"tbsCertificate\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], Certificate.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], Certificate.prototype, \"signatureValue\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { Name } from \"./name\";\nimport { Time } from \"./time\";\nimport { Extension } from \"./extension\";\nexport class RevokedCertificate {\n    constructor(params = {}) {\n        this.userCertificate = new ArrayBuffer(0);\n        this.revocationDate = new Time();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RevokedCertificate.prototype, \"userCertificate\", void 0);\n__decorate([\n    AsnProp({ type: Time })\n], RevokedCertificate.prototype, \"revocationDate\", void 0);\n__decorate([\n    AsnProp({ type: Extension, optional: true, repeated: \"sequence\" })\n], RevokedCertificate.prototype, \"crlEntryExtensions\", void 0);\nexport class TBSCertList {\n    constructor(params = {}) {\n        this.signature = new AlgorithmIdentifier();\n        this.issuer = new Name();\n        this.thisUpdate = new Time();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], TBSCertList.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], TBSCertList.prototype, \"signature\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], TBSCertList.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: Time })\n], TBSCertList.prototype, \"thisUpdate\", void 0);\n__decorate([\n    AsnProp({ type: Time, optional: true })\n], TBSCertList.prototype, \"nextUpdate\", void 0);\n__decorate([\n    AsnProp({ type: RevokedCertificate, repeated: \"sequence\", optional: true })\n], TBSCertList.prototype, \"revokedCertificates\", void 0);\n__decorate([\n    AsnProp({ type: Extension, optional: true, context: 0, repeated: \"sequence\" })\n], TBSCertList.prototype, \"crlExtensions\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { TBSCertList } from \"./tbs_cert_list\";\nexport class CertificateList {\n    constructor(params = {}) {\n        this.tbsCertList = new TBSCertList();\n        this.signatureAlgorithm = new AlgorithmIdentifier();\n        this.signature = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: TBSCertList })\n], CertificateList.prototype, \"tbsCertList\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], CertificateList.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], CertificateList.prototype, \"signature\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { Name } from \"@peculiar/asn1-x509\";\nexport class IssuerAndSerialNumber {\n    constructor(params = {}) {\n        this.issuer = new Name();\n        this.serialNumber = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: Name })\n], IssuerAndSerialNumber.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], IssuerAndSerialNumber.prototype, \"serialNumber\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { IssuerAndSerialNumber } from \"./issuer_and_serial_number\";\nimport { SubjectKeyIdentifier } from \"@peculiar/asn1-x509\";\nlet SignerIdentifier = class SignerIdentifier {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: SubjectKeyIdentifier, context: 0, implicit: true })\n], SignerIdentifier.prototype, \"subjectKeyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: IssuerAndSerialNumber })\n], SignerIdentifier.prototype, \"issuerAndSerialNumber\", void 0);\nSignerIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], SignerIdentifier);\nexport { SignerIdentifier };\n","import { __decorate } from \"tslib\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { AsnTypeTypes, AsnType } from \"@peculiar/asn1-schema\";\nexport var CMSVersion;\n(function (CMSVersion) {\n    CMSVersion[CMSVersion[\"v0\"] = 0] = \"v0\";\n    CMSVersion[CMSVersion[\"v1\"] = 1] = \"v1\";\n    CMSVersion[CMSVersion[\"v2\"] = 2] = \"v2\";\n    CMSVersion[CMSVersion[\"v3\"] = 3] = \"v3\";\n    CMSVersion[CMSVersion[\"v4\"] = 4] = \"v4\";\n    CMSVersion[CMSVersion[\"v5\"] = 5] = \"v5\";\n})(CMSVersion || (CMSVersion = {}));\nlet DigestAlgorithmIdentifier = class DigestAlgorithmIdentifier extends AlgorithmIdentifier {\n};\nDigestAlgorithmIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], DigestAlgorithmIdentifier);\nexport { DigestAlgorithmIdentifier };\nlet SignatureAlgorithmIdentifier = class SignatureAlgorithmIdentifier extends AlgorithmIdentifier {\n};\nSignatureAlgorithmIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], SignatureAlgorithmIdentifier);\nexport { SignatureAlgorithmIdentifier };\nlet KeyEncryptionAlgorithmIdentifier = class KeyEncryptionAlgorithmIdentifier extends AlgorithmIdentifier {\n};\nKeyEncryptionAlgorithmIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], KeyEncryptionAlgorithmIdentifier);\nexport { KeyEncryptionAlgorithmIdentifier };\nlet ContentEncryptionAlgorithmIdentifier = class ContentEncryptionAlgorithmIdentifier extends AlgorithmIdentifier {\n};\nContentEncryptionAlgorithmIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], ContentEncryptionAlgorithmIdentifier);\nexport { ContentEncryptionAlgorithmIdentifier };\nlet MessageAuthenticationCodeAlgorithm = class MessageAuthenticationCodeAlgorithm extends AlgorithmIdentifier {\n};\nMessageAuthenticationCodeAlgorithm = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], MessageAuthenticationCodeAlgorithm);\nexport { MessageAuthenticationCodeAlgorithm };\nlet KeyDerivationAlgorithmIdentifier = class KeyDerivationAlgorithmIdentifier extends AlgorithmIdentifier {\n};\nKeyDerivationAlgorithmIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], KeyDerivationAlgorithmIdentifier);\nexport { KeyDerivationAlgorithmIdentifier };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class Attribute {\n    constructor(params = {}) {\n        this.attrType = \"\";\n        this.attrValues = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], Attribute.prototype, \"attrType\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, repeated: \"set\" })\n], Attribute.prototype, \"attrValues\", void 0);\n","var SignerInfos_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString, } from \"@peculiar/asn1-schema\";\nimport { SignerIdentifier } from \"./signer_identifier\";\nimport { CMSVersion, SignatureAlgorithmIdentifier, DigestAlgorithmIdentifier } from \"./types\";\nimport { Attribute } from \"./attribute\";\nexport class SignerInfo {\n    constructor(params = {}) {\n        this.version = CMSVersion.v0;\n        this.sid = new SignerIdentifier();\n        this.digestAlgorithm = new DigestAlgorithmIdentifier();\n        this.signatureAlgorithm = new SignatureAlgorithmIdentifier();\n        this.signature = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], SignerInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: SignerIdentifier })\n], SignerInfo.prototype, \"sid\", void 0);\n__decorate([\n    AsnProp({ type: DigestAlgorithmIdentifier })\n], SignerInfo.prototype, \"digestAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: Attribute, repeated: \"set\", context: 0, implicit: true, optional: true })\n], SignerInfo.prototype, \"signedAttrs\", void 0);\n__decorate([\n    AsnProp({ type: SignatureAlgorithmIdentifier })\n], SignerInfo.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], SignerInfo.prototype, \"signature\", void 0);\n__decorate([\n    AsnProp({ type: Attribute, repeated: \"set\", context: 1, implicit: true, optional: true })\n], SignerInfo.prototype, \"unsignedAttrs\", void 0);\nlet SignerInfos = SignerInfos_1 = class SignerInfos extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SignerInfos_1.prototype);\n    }\n};\nSignerInfos = SignerInfos_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: SignerInfo })\n], SignerInfos);\nexport { SignerInfos };\n","import { __decorate } from \"tslib\";\nimport { AsnTypeTypes, AsnType } from \"@peculiar/asn1-schema\";\nimport { Time } from \"@peculiar/asn1-x509\";\nimport { SignerInfo } from \"./signer_info\";\nlet SigningTime = class SigningTime extends Time {\n};\nSigningTime = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], SigningTime);\nexport { SigningTime };\nlet CounterSignature = class CounterSignature extends SignerInfo {\n};\nCounterSignature = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], CounterSignature);\nexport { CounterSignature };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName, Attribute } from \"@peculiar/asn1-x509\";\nexport class ACClearAttrs {\n    constructor(params = {}) {\n        this.acIssuer = new GeneralName();\n        this.acSerial = 0;\n        this.attrs = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralName })\n], ACClearAttrs.prototype, \"acIssuer\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], ACClearAttrs.prototype, \"acSerial\", void 0);\n__decorate([\n    AsnProp({ type: Attribute, repeated: \"sequence\" })\n], ACClearAttrs.prototype, \"attrs\", void 0);\n","var AttrSpec_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnPropTypes, AsnArray } from \"@peculiar/asn1-schema\";\nlet AttrSpec = AttrSpec_1 = class AttrSpec extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, AttrSpec_1.prototype);\n    }\n};\nAttrSpec = AttrSpec_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AsnPropTypes.ObjectIdentifier })\n], AttrSpec);\nexport { AttrSpec };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AttrSpec } from \"./attr_spec\";\nexport class AAControls {\n    constructor(params = {}) {\n        this.permitUnSpecified = true;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], AAControls.prototype, \"pathLenConstraint\", void 0);\n__decorate([\n    AsnProp({ type: AttrSpec, implicit: true, context: 0, optional: true })\n], AAControls.prototype, \"permittedAttrs\", void 0);\n__decorate([\n    AsnProp({ type: AttrSpec, implicit: true, context: 1, optional: true })\n], AAControls.prototype, \"excludedAttrs\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Boolean, defaultValue: true })\n], AAControls.prototype, \"permitUnSpecified\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"@peculiar/asn1-x509\";\nexport class IssuerSerial {\n    constructor(params = {}) {\n        this.issuer = new GeneralNames();\n        this.serial = new ArrayBuffer(0);\n        this.issuerUID = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralNames })\n], IssuerSerial.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], IssuerSerial.prototype, \"serial\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, optional: true })\n], IssuerSerial.prototype, \"issuerUID\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nexport var DigestedObjectType;\n(function (DigestedObjectType) {\n    DigestedObjectType[DigestedObjectType[\"publicKey\"] = 0] = \"publicKey\";\n    DigestedObjectType[DigestedObjectType[\"publicKeyCert\"] = 1] = \"publicKeyCert\";\n    DigestedObjectType[DigestedObjectType[\"otherObjectTypes\"] = 2] = \"otherObjectTypes\";\n})(DigestedObjectType || (DigestedObjectType = {}));\nexport class ObjectDigestInfo {\n    constructor(params = {}) {\n        this.digestedObjectType = DigestedObjectType.publicKey;\n        this.digestAlgorithm = new AlgorithmIdentifier();\n        this.objectDigest = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], ObjectDigestInfo.prototype, \"digestedObjectType\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier, optional: true })\n], ObjectDigestInfo.prototype, \"otherObjectTypeID\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], ObjectDigestInfo.prototype, \"digestAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], ObjectDigestInfo.prototype, \"objectDigest\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"@peculiar/asn1-x509\";\nimport { IssuerSerial } from \"./issuer_serial\";\nimport { ObjectDigestInfo } from \"./object_digest_info\";\nexport class V2Form {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralNames, optional: true })\n], V2Form.prototype, \"issuerName\", void 0);\n__decorate([\n    AsnProp({ type: IssuerSerial, context: 0, implicit: true, optional: true })\n], V2Form.prototype, \"baseCertificateID\", void 0);\n__decorate([\n    AsnProp({ type: ObjectDigestInfo, context: 1, implicit: true, optional: true })\n], V2Form.prototype, \"objectDigestInfo\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnProp } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"@peculiar/asn1-x509\";\nimport { V2Form } from \"./v2_form\";\nlet AttCertIssuer = class AttCertIssuer {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: GeneralName, repeated: \"sequence\" })\n], AttCertIssuer.prototype, \"v1Form\", void 0);\n__decorate([\n    AsnProp({ type: V2Form, context: 0, implicit: true })\n], AttCertIssuer.prototype, \"v2Form\", void 0);\nAttCertIssuer = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], AttCertIssuer);\nexport { AttCertIssuer };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class AttCertValidityPeriod {\n    constructor(params = {}) {\n        this.notBeforeTime = new Date();\n        this.notAfterTime = new Date();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime })\n], AttCertValidityPeriod.prototype, \"notBeforeTime\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime })\n], AttCertValidityPeriod.prototype, \"notAfterTime\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { IssuerSerial } from \"./issuer_serial\";\nimport { GeneralNames } from \"@peculiar/asn1-x509\";\nimport { ObjectDigestInfo } from \"./object_digest_info\";\nexport class Holder {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: IssuerSerial, implicit: true, context: 0, optional: true })\n], Holder.prototype, \"baseCertificateID\", void 0);\n__decorate([\n    AsnProp({ type: GeneralNames, implicit: true, context: 1, optional: true })\n], Holder.prototype, \"entityName\", void 0);\n__decorate([\n    AsnProp({ type: ObjectDigestInfo, implicit: true, context: 2, optional: true })\n], Holder.prototype, \"objectDigestInfo\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier, Attribute, Extensions, } from \"@peculiar/asn1-x509\";\nimport { Holder } from \"./holder\";\nimport { AttCertIssuer } from \"./attr_cert_issuer\";\nimport { AttCertValidityPeriod } from \"./attr_cert_validity_period\";\nexport var AttCertVersion;\n(function (AttCertVersion) {\n    AttCertVersion[AttCertVersion[\"v2\"] = 1] = \"v2\";\n})(AttCertVersion || (AttCertVersion = {}));\nexport class AttributeCertificateInfo {\n    constructor(params = {}) {\n        this.version = AttCertVersion.v2;\n        this.holder = new Holder();\n        this.issuer = new AttCertIssuer();\n        this.signature = new AlgorithmIdentifier();\n        this.serialNumber = new ArrayBuffer(0);\n        this.attrCertValidityPeriod = new AttCertValidityPeriod();\n        this.attributes = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], AttributeCertificateInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: Holder })\n], AttributeCertificateInfo.prototype, \"holder\", void 0);\n__decorate([\n    AsnProp({ type: AttCertIssuer })\n], AttributeCertificateInfo.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], AttributeCertificateInfo.prototype, \"signature\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], AttributeCertificateInfo.prototype, \"serialNumber\", void 0);\n__decorate([\n    AsnProp({ type: AttCertValidityPeriod })\n], AttributeCertificateInfo.prototype, \"attrCertValidityPeriod\", void 0);\n__decorate([\n    AsnProp({ type: Attribute, repeated: \"sequence\" })\n], AttributeCertificateInfo.prototype, \"attributes\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, optional: true })\n], AttributeCertificateInfo.prototype, \"issuerUniqueID\", void 0);\n__decorate([\n    AsnProp({ type: Extensions, optional: true })\n], AttributeCertificateInfo.prototype, \"extensions\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { AttributeCertificateInfo } from \"./attribute_certificate_info\";\nexport class AttributeCertificate {\n    constructor(params = {}) {\n        this.acinfo = new AttributeCertificateInfo();\n        this.signatureAlgorithm = new AlgorithmIdentifier();\n        this.signatureValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AttributeCertificateInfo })\n], AttributeCertificate.prototype, \"acinfo\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], AttributeCertificate.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], AttributeCertificate.prototype, \"signatureValue\", void 0);\n","import { BitString } from \"@peculiar/asn1-schema\";\nexport var ClassListFlags;\n(function (ClassListFlags) {\n    ClassListFlags[ClassListFlags[\"unmarked\"] = 1] = \"unmarked\";\n    ClassListFlags[ClassListFlags[\"unclassified\"] = 2] = \"unclassified\";\n    ClassListFlags[ClassListFlags[\"restricted\"] = 4] = \"restricted\";\n    ClassListFlags[ClassListFlags[\"confidential\"] = 8] = \"confidential\";\n    ClassListFlags[ClassListFlags[\"secret\"] = 16] = \"secret\";\n    ClassListFlags[ClassListFlags[\"topSecret\"] = 32] = \"topSecret\";\n})(ClassListFlags || (ClassListFlags = {}));\nexport class ClassList extends BitString {\n}\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class SecurityCategory {\n    constructor(params = {}) {\n        this.type = \"\";\n        this.value = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier, implicit: true, context: 0 })\n], SecurityCategory.prototype, \"type\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, implicit: true, context: 1 })\n], SecurityCategory.prototype, \"value\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { ClassList, ClassListFlags } from \"./class_list\";\nimport { SecurityCategory } from \"./security_category\";\nexport class Clearance {\n    constructor(params = {}) {\n        this.policyId = \"\";\n        this.classList = new ClassList(ClassListFlags.unclassified);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], Clearance.prototype, \"policyId\", void 0);\n__decorate([\n    AsnProp({ type: ClassList, defaultValue: new ClassList(ClassListFlags.unclassified) })\n], Clearance.prototype, \"classList\", void 0);\n__decorate([\n    AsnProp({ type: SecurityCategory, repeated: \"set\" })\n], Clearance.prototype, \"securityCategories\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, OctetString, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"@peculiar/asn1-x509\";\nexport class IetfAttrSyntaxValueChoices {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: OctetString })\n], IetfAttrSyntaxValueChoices.prototype, \"cotets\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], IetfAttrSyntaxValueChoices.prototype, \"oid\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Utf8String })\n], IetfAttrSyntaxValueChoices.prototype, \"string\", void 0);\nexport class IetfAttrSyntax {\n    constructor(params = {}) {\n        this.values = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralNames, implicit: true, context: 0, optional: true })\n], IetfAttrSyntax.prototype, \"policyAuthority\", void 0);\n__decorate([\n    AsnProp({ type: IetfAttrSyntaxValueChoices, repeated: \"sequence\" })\n], IetfAttrSyntax.prototype, \"values\", void 0);\n","var Targets_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"@peculiar/asn1-x509\";\nimport { IssuerSerial } from \"./issuer_serial\";\nimport { ObjectDigestInfo } from \"./object_digest_info\";\nexport class TargetCert {\n    constructor(params = {}) {\n        this.targetCertificate = new IssuerSerial();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: IssuerSerial })\n], TargetCert.prototype, \"targetCertificate\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, optional: true })\n], TargetCert.prototype, \"targetName\", void 0);\n__decorate([\n    AsnProp({ type: ObjectDigestInfo, optional: true })\n], TargetCert.prototype, \"certDigestInfo\", void 0);\nlet Target = class Target {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: GeneralName, context: 0, implicit: true })\n], Target.prototype, \"targetName\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, context: 1, implicit: true })\n], Target.prototype, \"targetGroup\", void 0);\n__decorate([\n    AsnProp({ type: TargetCert, context: 2, implicit: true })\n], Target.prototype, \"targetCert\", void 0);\nTarget = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Target);\nexport { Target };\nlet Targets = Targets_1 = class Targets extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Targets_1.prototype);\n    }\n};\nTargets = Targets_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Target })\n], Targets);\nexport { Targets };\n","var ProxyInfo_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { Targets } from \"./target\";\nlet ProxyInfo = ProxyInfo_1 = class ProxyInfo extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, ProxyInfo_1.prototype);\n    }\n};\nProxyInfo = ProxyInfo_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Targets })\n], ProxyInfo);\nexport { ProxyInfo };\n","import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { GeneralNames, GeneralName } from \"@peculiar/asn1-x509\";\nexport class RoleSyntax {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralNames, implicit: true, context: 0, optional: true })\n], RoleSyntax.prototype, \"roleAuthority\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, implicit: true, context: 1 })\n], RoleSyntax.prototype, \"roleName\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, OctetString } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"@peculiar/asn1-x509\";\nexport class SvceAuthInfo {\n    constructor(params = {}) {\n        this.service = new GeneralName();\n        this.ident = new GeneralName();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralName })\n], SvceAuthInfo.prototype, \"service\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName })\n], SvceAuthInfo.prototype, \"ident\", void 0);\n__decorate([\n    AsnProp({ type: OctetString, optional: true })\n], SvceAuthInfo.prototype, \"authInfo\", void 0);\n","var CertificateSet_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnProp, AsnPropTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { Certificate } from \"@peculiar/asn1-x509\";\nimport { AttributeCertificate } from \"@peculiar/asn1-x509-attr\";\nexport class OtherCertificateFormat {\n    constructor(params = {}) {\n        this.otherCertFormat = \"\";\n        this.otherCert = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], OtherCertificateFormat.prototype, \"otherCertFormat\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], OtherCertificateFormat.prototype, \"otherCert\", void 0);\nlet CertificateChoices = class CertificateChoices {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: Certificate })\n], CertificateChoices.prototype, \"certificate\", void 0);\n__decorate([\n    AsnProp({ type: AttributeCertificate, context: 2, implicit: true })\n], CertificateChoices.prototype, \"v2AttrCert\", void 0);\n__decorate([\n    AsnProp({ type: OtherCertificateFormat, context: 3, implicit: true })\n], CertificateChoices.prototype, \"other\", void 0);\nCertificateChoices = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CertificateChoices);\nexport { CertificateChoices };\nlet CertificateSet = CertificateSet_1 = class CertificateSet extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CertificateSet_1.prototype);\n    }\n};\nCertificateSet = CertificateSet_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: CertificateChoices })\n], CertificateSet);\nexport { CertificateSet };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class ContentInfo {\n    constructor(params = {}) {\n        this.contentType = \"\";\n        this.content = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], ContentInfo.prototype, \"contentType\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], ContentInfo.prototype, \"content\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, OctetString } from \"@peculiar/asn1-schema\";\nlet EncapsulatedContent = class EncapsulatedContent {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: OctetString })\n], EncapsulatedContent.prototype, \"single\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], EncapsulatedContent.prototype, \"any\", void 0);\nEncapsulatedContent = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], EncapsulatedContent);\nexport { EncapsulatedContent };\nexport class EncapsulatedContentInfo {\n    constructor(params = {}) {\n        this.eContentType = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], EncapsulatedContentInfo.prototype, \"eContentType\", void 0);\n__decorate([\n    AsnProp({ type: EncapsulatedContent, context: 0, optional: true })\n], EncapsulatedContentInfo.prototype, \"eContent\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnConstructedOctetStringConverter, AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, OctetString, } from \"@peculiar/asn1-schema\";\nimport { ContentEncryptionAlgorithmIdentifier } from \"./types\";\nlet EncryptedContent = class EncryptedContent {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: OctetString, context: 0, implicit: true, optional: true })\n], EncryptedContent.prototype, \"value\", void 0);\n__decorate([\n    AsnProp({\n        type: OctetString,\n        converter: AsnConstructedOctetStringConverter,\n        context: 0,\n        implicit: true,\n        optional: true,\n        repeated: \"sequence\",\n    })\n], EncryptedContent.prototype, \"constructedValue\", void 0);\nEncryptedContent = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], EncryptedContent);\nexport { EncryptedContent };\nexport class EncryptedContentInfo {\n    constructor(params = {}) {\n        this.contentType = \"\";\n        this.contentEncryptionAlgorithm = new ContentEncryptionAlgorithmIdentifier();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], EncryptedContentInfo.prototype, \"contentType\", void 0);\n__decorate([\n    AsnProp({ type: ContentEncryptionAlgorithmIdentifier })\n], EncryptedContentInfo.prototype, \"contentEncryptionAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: EncryptedContent, optional: true })\n], EncryptedContentInfo.prototype, \"encryptedContent\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class OtherKeyAttribute {\n    constructor(params = {}) {\n        this.keyAttrId = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], OtherKeyAttribute.prototype, \"keyAttrId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, optional: true })\n], OtherKeyAttribute.prototype, \"keyAttr\", void 0);\n","var RecipientEncryptedKeys_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString, } from \"@peculiar/asn1-schema\";\nimport { CMSVersion, KeyEncryptionAlgorithmIdentifier } from \"./types\";\nimport { IssuerAndSerialNumber } from \"./issuer_and_serial_number\";\nimport { AlgorithmIdentifier, SubjectKeyIdentifier } from \"@peculiar/asn1-x509\";\nimport { OtherKeyAttribute } from \"./other_key_attribute\";\nexport class RecipientKeyIdentifier {\n    constructor(params = {}) {\n        this.subjectKeyIdentifier = new SubjectKeyIdentifier();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: SubjectKeyIdentifier })\n], RecipientKeyIdentifier.prototype, \"subjectKeyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime, optional: true })\n], RecipientKeyIdentifier.prototype, \"date\", void 0);\n__decorate([\n    AsnProp({ type: OtherKeyAttribute, optional: true })\n], RecipientKeyIdentifier.prototype, \"other\", void 0);\nlet KeyAgreeRecipientIdentifier = class KeyAgreeRecipientIdentifier {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: RecipientKeyIdentifier, context: 0, implicit: true, optional: true })\n], KeyAgreeRecipientIdentifier.prototype, \"rKeyId\", void 0);\n__decorate([\n    AsnProp({ type: IssuerAndSerialNumber, optional: true })\n], KeyAgreeRecipientIdentifier.prototype, \"issuerAndSerialNumber\", void 0);\nKeyAgreeRecipientIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], KeyAgreeRecipientIdentifier);\nexport { KeyAgreeRecipientIdentifier };\nexport class RecipientEncryptedKey {\n    constructor(params = {}) {\n        this.rid = new KeyAgreeRecipientIdentifier();\n        this.encryptedKey = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: KeyAgreeRecipientIdentifier })\n], RecipientEncryptedKey.prototype, \"rid\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], RecipientEncryptedKey.prototype, \"encryptedKey\", void 0);\nlet RecipientEncryptedKeys = RecipientEncryptedKeys_1 = class RecipientEncryptedKeys extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RecipientEncryptedKeys_1.prototype);\n    }\n};\nRecipientEncryptedKeys = RecipientEncryptedKeys_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: RecipientEncryptedKey })\n], RecipientEncryptedKeys);\nexport { RecipientEncryptedKeys };\nexport class OriginatorPublicKey {\n    constructor(params = {}) {\n        this.algorithm = new AlgorithmIdentifier();\n        this.publicKey = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], OriginatorPublicKey.prototype, \"algorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], OriginatorPublicKey.prototype, \"publicKey\", void 0);\nlet OriginatorIdentifierOrKey = class OriginatorIdentifierOrKey {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: SubjectKeyIdentifier, context: 0, implicit: true, optional: true })\n], OriginatorIdentifierOrKey.prototype, \"subjectKeyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: OriginatorPublicKey, context: 1, implicit: true, optional: true })\n], OriginatorIdentifierOrKey.prototype, \"originatorKey\", void 0);\n__decorate([\n    AsnProp({ type: IssuerAndSerialNumber, optional: true })\n], OriginatorIdentifierOrKey.prototype, \"issuerAndSerialNumber\", void 0);\nOriginatorIdentifierOrKey = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], OriginatorIdentifierOrKey);\nexport { OriginatorIdentifierOrKey };\nexport class KeyAgreeRecipientInfo {\n    constructor(params = {}) {\n        this.version = CMSVersion.v3;\n        this.originator = new OriginatorIdentifierOrKey();\n        this.keyEncryptionAlgorithm = new KeyEncryptionAlgorithmIdentifier();\n        this.recipientEncryptedKeys = new RecipientEncryptedKeys();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], KeyAgreeRecipientInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: OriginatorIdentifierOrKey, context: 0 })\n], KeyAgreeRecipientInfo.prototype, \"originator\", void 0);\n__decorate([\n    AsnProp({ type: OctetString, context: 1, optional: true })\n], KeyAgreeRecipientInfo.prototype, \"ukm\", void 0);\n__decorate([\n    AsnProp({ type: KeyEncryptionAlgorithmIdentifier })\n], KeyAgreeRecipientInfo.prototype, \"keyEncryptionAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: RecipientEncryptedKeys })\n], KeyAgreeRecipientInfo.prototype, \"recipientEncryptedKeys\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, OctetString } from \"@peculiar/asn1-schema\";\nimport { CMSVersion, KeyEncryptionAlgorithmIdentifier } from \"./types\";\nimport { IssuerAndSerialNumber } from \"./issuer_and_serial_number\";\nimport { SubjectKeyIdentifier } from \"@peculiar/asn1-x509\";\nlet RecipientIdentifier = class RecipientIdentifier {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: SubjectKeyIdentifier, context: 0, implicit: true })\n], RecipientIdentifier.prototype, \"subjectKeyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: IssuerAndSerialNumber })\n], RecipientIdentifier.prototype, \"issuerAndSerialNumber\", void 0);\nRecipientIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], RecipientIdentifier);\nexport { RecipientIdentifier };\nexport class KeyTransRecipientInfo {\n    constructor(params = {}) {\n        this.version = CMSVersion.v0;\n        this.rid = new RecipientIdentifier();\n        this.keyEncryptionAlgorithm = new KeyEncryptionAlgorithmIdentifier();\n        this.encryptedKey = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], KeyTransRecipientInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: RecipientIdentifier })\n], KeyTransRecipientInfo.prototype, \"rid\", void 0);\n__decorate([\n    AsnProp({ type: KeyEncryptionAlgorithmIdentifier })\n], KeyTransRecipientInfo.prototype, \"keyEncryptionAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], KeyTransRecipientInfo.prototype, \"encryptedKey\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, OctetString } from \"@peculiar/asn1-schema\";\nimport { OtherKeyAttribute } from \"./other_key_attribute\";\nimport { CMSVersion, KeyEncryptionAlgorithmIdentifier } from \"./types\";\nexport class KEKIdentifier {\n    constructor(params = {}) {\n        this.keyIdentifier = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: OctetString })\n], KEKIdentifier.prototype, \"keyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime, optional: true })\n], KEKIdentifier.prototype, \"date\", void 0);\n__decorate([\n    AsnProp({ type: OtherKeyAttribute, optional: true })\n], KEKIdentifier.prototype, \"other\", void 0);\nexport class KEKRecipientInfo {\n    constructor(params = {}) {\n        this.version = CMSVersion.v4;\n        this.kekid = new KEKIdentifier();\n        this.keyEncryptionAlgorithm = new KeyEncryptionAlgorithmIdentifier();\n        this.encryptedKey = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], KEKRecipientInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: KEKIdentifier })\n], KEKRecipientInfo.prototype, \"kekid\", void 0);\n__decorate([\n    AsnProp({ type: KeyEncryptionAlgorithmIdentifier })\n], KEKRecipientInfo.prototype, \"keyEncryptionAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], KEKRecipientInfo.prototype, \"encryptedKey\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, OctetString } from \"@peculiar/asn1-schema\";\nimport { CMSVersion, KeyDerivationAlgorithmIdentifier, KeyEncryptionAlgorithmIdentifier, } from \"./types\";\nexport class PasswordRecipientInfo {\n    constructor(params = {}) {\n        this.version = CMSVersion.v0;\n        this.keyEncryptionAlgorithm = new KeyEncryptionAlgorithmIdentifier();\n        this.encryptedKey = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], PasswordRecipientInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: KeyDerivationAlgorithmIdentifier, context: 0, optional: true })\n], PasswordRecipientInfo.prototype, \"keyDerivationAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: KeyEncryptionAlgorithmIdentifier })\n], PasswordRecipientInfo.prototype, \"keyEncryptionAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], PasswordRecipientInfo.prototype, \"encryptedKey\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { KeyAgreeRecipientInfo } from \"./key_agree_recipient_info\";\nimport { KeyTransRecipientInfo } from \"./key_trans_recipient_info\";\nimport { KEKRecipientInfo } from \"./kek_recipient_info\";\nimport { PasswordRecipientInfo } from \"./password_recipient_info\";\nexport class OtherRecipientInfo {\n    constructor(params = {}) {\n        this.oriType = \"\";\n        this.oriValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], OtherRecipientInfo.prototype, \"oriType\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], OtherRecipientInfo.prototype, \"oriValue\", void 0);\nlet RecipientInfo = class RecipientInfo {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: KeyTransRecipientInfo, optional: true })\n], RecipientInfo.prototype, \"ktri\", void 0);\n__decorate([\n    AsnProp({ type: KeyAgreeRecipientInfo, context: 1, implicit: true, optional: true })\n], RecipientInfo.prototype, \"kari\", void 0);\n__decorate([\n    AsnProp({ type: KEKRecipientInfo, context: 2, implicit: true, optional: true })\n], RecipientInfo.prototype, \"kekri\", void 0);\n__decorate([\n    AsnProp({ type: PasswordRecipientInfo, context: 3, implicit: true, optional: true })\n], RecipientInfo.prototype, \"pwri\", void 0);\n__decorate([\n    AsnProp({ type: OtherRecipientInfo, context: 4, implicit: true, optional: true })\n], RecipientInfo.prototype, \"ori\", void 0);\nRecipientInfo = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], RecipientInfo);\nexport { RecipientInfo };\n","var RecipientInfos_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { RecipientInfo } from \"./recipient_info\";\nlet RecipientInfos = RecipientInfos_1 = class RecipientInfos extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RecipientInfos_1.prototype);\n    }\n};\nRecipientInfos = RecipientInfos_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: RecipientInfo })\n], RecipientInfos);\nexport { RecipientInfos };\n","var RevocationInfoChoices_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { id_pkix } from \"@peculiar/asn1-x509\";\nexport const id_ri = `${id_pkix}.16`;\nexport const id_ri_ocsp_response = `${id_ri}.2`;\nexport const id_ri_scvp = `${id_ri}.4`;\nexport class OtherRevocationInfoFormat {\n    constructor(params = {}) {\n        this.otherRevInfoFormat = \"\";\n        this.otherRevInfo = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], OtherRevocationInfoFormat.prototype, \"otherRevInfoFormat\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], OtherRevocationInfoFormat.prototype, \"otherRevInfo\", void 0);\nlet RevocationInfoChoice = class RevocationInfoChoice {\n    constructor(params = {}) {\n        this.other = new OtherRevocationInfoFormat();\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: OtherRevocationInfoFormat, context: 1, implicit: true })\n], RevocationInfoChoice.prototype, \"other\", void 0);\nRevocationInfoChoice = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], RevocationInfoChoice);\nexport { RevocationInfoChoice };\nlet RevocationInfoChoices = RevocationInfoChoices_1 = class RevocationInfoChoices extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RevocationInfoChoices_1.prototype);\n    }\n};\nRevocationInfoChoices = RevocationInfoChoices_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: RevocationInfoChoice })\n], RevocationInfoChoices);\nexport { RevocationInfoChoices };\n","import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { CertificateSet } from \"./certificate_choices\";\nimport { RevocationInfoChoices } from \"./revocation_info_choice\";\nexport class OriginatorInfo {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: CertificateSet, context: 0, implicit: true, optional: true })\n], OriginatorInfo.prototype, \"certs\", void 0);\n__decorate([\n    AsnProp({ type: RevocationInfoChoices, context: 1, implicit: true, optional: true })\n], OriginatorInfo.prototype, \"crls\", void 0);\n","var UnprotectedAttributes_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { CMSVersion } from \"./types\";\nimport { Attribute } from \"./attribute\";\nimport { RecipientInfos } from \"./recipient_infos\";\nimport { OriginatorInfo } from \"./originator_info\";\nimport { EncryptedContentInfo } from \"./encrypted_content_info\";\nlet UnprotectedAttributes = UnprotectedAttributes_1 = class UnprotectedAttributes extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, UnprotectedAttributes_1.prototype);\n    }\n};\nUnprotectedAttributes = UnprotectedAttributes_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: Attribute })\n], UnprotectedAttributes);\nexport { UnprotectedAttributes };\nexport class EnvelopedData {\n    constructor(params = {}) {\n        this.version = CMSVersion.v0;\n        this.recipientInfos = new RecipientInfos();\n        this.encryptedContentInfo = new EncryptedContentInfo();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], EnvelopedData.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: OriginatorInfo, context: 0, implicit: true, optional: true })\n], EnvelopedData.prototype, \"originatorInfo\", void 0);\n__decorate([\n    AsnProp({ type: RecipientInfos })\n], EnvelopedData.prototype, \"recipientInfos\", void 0);\n__decorate([\n    AsnProp({ type: EncryptedContentInfo })\n], EnvelopedData.prototype, \"encryptedContentInfo\", void 0);\n__decorate([\n    AsnProp({ type: UnprotectedAttributes, context: 1, implicit: true, optional: true })\n], EnvelopedData.prototype, \"unprotectedAttrs\", void 0);\n","export const id_ct_contentInfo = \"1.2.840.113549.1.9.16.1.6\";\nexport const id_data = \"1.2.840.113549.1.7.1\";\nexport const id_signedData = \"1.2.840.113549.1.7.2\";\nexport const id_envelopedData = \"1.2.840.113549.1.7.3\";\nexport const id_digestedData = \"1.2.840.113549.1.7.5\";\nexport const id_encryptedData = \"1.2.840.113549.1.7.6\";\nexport const id_authData = \"1.2.840.113549.1.9.16.1.2\";\n","var DigestAlgorithmIdentifiers_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { CertificateSet } from \"./certificate_choices\";\nimport { CMSVersion, DigestAlgorithmIdentifier } from \"./types\";\nimport { EncapsulatedContentInfo } from \"./encapsulated_content_info\";\nimport { RevocationInfoChoices } from \"./revocation_info_choice\";\nimport { SignerInfos } from \"./signer_info\";\nlet DigestAlgorithmIdentifiers = DigestAlgorithmIdentifiers_1 = class DigestAlgorithmIdentifiers extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, DigestAlgorithmIdentifiers_1.prototype);\n    }\n};\nDigestAlgorithmIdentifiers = DigestAlgorithmIdentifiers_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: DigestAlgorithmIdentifier })\n], DigestAlgorithmIdentifiers);\nexport { DigestAlgorithmIdentifiers };\nexport class SignedData {\n    constructor(params = {}) {\n        this.version = CMSVersion.v0;\n        this.digestAlgorithms = new DigestAlgorithmIdentifiers();\n        this.encapContentInfo = new EncapsulatedContentInfo();\n        this.signerInfos = new SignerInfos();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], SignedData.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: DigestAlgorithmIdentifiers })\n], SignedData.prototype, \"digestAlgorithms\", void 0);\n__decorate([\n    AsnProp({ type: EncapsulatedContentInfo })\n], SignedData.prototype, \"encapContentInfo\", void 0);\n__decorate([\n    AsnProp({ type: CertificateSet, context: 0, implicit: true, optional: true })\n], SignedData.prototype, \"certificates\", void 0);\n__decorate([\n    AsnProp({ type: RevocationInfoChoices, context: 1, implicit: true, optional: true })\n], SignedData.prototype, \"crls\", void 0);\n__decorate([\n    AsnProp({ type: SignerInfos })\n], SignedData.prototype, \"signerInfos\", void 0);\n","export const id_ecPublicKey = \"1.2.840.10045.2.1\";\nexport const id_ecDH = \"1.3.132.1.12\";\nexport const id_ecMQV = \"1.3.132.1.13\";\nexport const id_ecdsaWithSHA1 = \"1.2.840.10045.4.1\";\nexport const id_ecdsaWithSHA224 = \"1.2.840.10045.4.3.1\";\nexport const id_ecdsaWithSHA256 = \"1.2.840.10045.4.3.2\";\nexport const id_ecdsaWithSHA384 = \"1.2.840.10045.4.3.3\";\nexport const id_ecdsaWithSHA512 = \"1.2.840.10045.4.3.4\";\nexport const id_secp192r1 = \"1.2.840.10045.3.1.1\";\nexport const id_sect163k1 = \"1.3.132.0.1\";\nexport const id_sect163r2 = \"1.3.132.0.15\";\nexport const id_secp224r1 = \"1.3.132.0.33\";\nexport const id_sect233k1 = \"1.3.132.0.26\";\nexport const id_sect233r1 = \"1.3.132.0.27\";\nexport const id_secp256r1 = \"1.2.840.10045.3.1.7\";\nexport const id_sect283k1 = \"1.3.132.0.16\";\nexport const id_sect283r1 = \"1.3.132.0.17\";\nexport const id_secp384r1 = \"1.3.132.0.34\";\nexport const id_sect409k1 = \"1.3.132.0.36\";\nexport const id_sect409r1 = \"1.3.132.0.37\";\nexport const id_secp521r1 = \"1.3.132.0.35\";\nexport const id_sect571k1 = \"1.3.132.0.38\";\nexport const id_sect571r1 = \"1.3.132.0.39\";\n","import { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport * as oid from \"./object_identifiers\";\nfunction create(algorithm) {\n    return new AlgorithmIdentifier({ algorithm });\n}\nexport const ecdsaWithSHA1 = create(oid.id_ecdsaWithSHA1);\nexport const ecdsaWithSHA224 = create(oid.id_ecdsaWithSHA224);\nexport const ecdsaWithSHA256 = create(oid.id_ecdsaWithSHA256);\nexport const ecdsaWithSHA384 = create(oid.id_ecdsaWithSHA384);\nexport const ecdsaWithSHA512 = create(oid.id_ecdsaWithSHA512);\n","import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnProp, AsnPropTypes, OctetString, AsnIntegerArrayBufferConverter, } from \"@peculiar/asn1-schema\";\nlet FieldID = class FieldID {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], FieldID.prototype, \"fieldType\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], FieldID.prototype, \"parameters\", void 0);\nFieldID = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], FieldID);\nexport { FieldID };\nexport class ECPoint extends OctetString {\n}\nexport class FieldElement extends OctetString {\n}\nlet Curve = class Curve {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], Curve.prototype, \"a\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], Curve.prototype, \"b\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, optional: true })\n], Curve.prototype, \"seed\", void 0);\nCurve = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], Curve);\nexport { Curve };\nexport var ECPVer;\n(function (ECPVer) {\n    ECPVer[ECPVer[\"ecpVer1\"] = 1] = \"ecpVer1\";\n})(ECPVer || (ECPVer = {}));\nlet SpecifiedECDomain = class SpecifiedECDomain {\n    constructor(params = {}) {\n        this.version = ECPVer.ecpVer1;\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], SpecifiedECDomain.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: FieldID })\n], SpecifiedECDomain.prototype, \"fieldID\", void 0);\n__decorate([\n    AsnProp({ type: Curve })\n], SpecifiedECDomain.prototype, \"curve\", void 0);\n__decorate([\n    AsnProp({ type: ECPoint })\n], SpecifiedECDomain.prototype, \"base\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], SpecifiedECDomain.prototype, \"order\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], SpecifiedECDomain.prototype, \"cofactor\", void 0);\nSpecifiedECDomain = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], SpecifiedECDomain);\nexport { SpecifiedECDomain };\n","import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { SpecifiedECDomain } from \"./rfc3279\";\nlet ECParameters = class ECParameters {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], ECParameters.prototype, \"namedCurve\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Null })\n], ECParameters.prototype, \"implicitCurve\", void 0);\n__decorate([\n    AsnProp({ type: SpecifiedECDomain })\n], ECParameters.prototype, \"specifiedCurve\", void 0);\nECParameters = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], ECParameters);\nexport { ECParameters };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, OctetString } from \"@peculiar/asn1-schema\";\nimport { ECParameters } from \"./ec_parameters\";\nexport class ECPrivateKey {\n    constructor(params = {}) {\n        this.version = 1;\n        this.privateKey = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], ECPrivateKey.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], ECPrivateKey.prototype, \"privateKey\", void 0);\n__decorate([\n    AsnProp({ type: ECParameters, context: 0, optional: true })\n], ECPrivateKey.prototype, \"parameters\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, context: 1, optional: true })\n], ECPrivateKey.prototype, \"publicKey\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nexport class ECDSASigValue {\n    constructor(params = {}) {\n        this.r = new ArrayBuffer(0);\n        this.s = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], ECDSASigValue.prototype, \"r\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], ECDSASigValue.prototype, \"s\", void 0);\n","export const id_pkcs_1 = \"1.2.840.113549.1.1\";\nexport const id_rsaEncryption = `${id_pkcs_1}.1`;\nexport const id_RSAES_OAEP = `${id_pkcs_1}.7`;\nexport const id_pSpecified = `${id_pkcs_1}.9`;\nexport const id_RSASSA_PSS = `${id_pkcs_1}.10`;\nexport const id_md2WithRSAEncryption = `${id_pkcs_1}.2`;\nexport const id_md5WithRSAEncryption = `${id_pkcs_1}.4`;\nexport const id_sha1WithRSAEncryption = `${id_pkcs_1}.5`;\nexport const id_sha224WithRSAEncryption = `${id_pkcs_1}.14`;\nexport const id_ssha224WithRSAEncryption = id_sha224WithRSAEncryption;\nexport const id_sha256WithRSAEncryption = `${id_pkcs_1}.11`;\nexport const id_sha384WithRSAEncryption = `${id_pkcs_1}.12`;\nexport const id_sha512WithRSAEncryption = `${id_pkcs_1}.13`;\nexport const id_sha512_224WithRSAEncryption = `${id_pkcs_1}.15`;\nexport const id_sha512_256WithRSAEncryption = `${id_pkcs_1}.16`;\nexport const id_sha1 = \"1.3.14.3.2.26\";\nexport const id_sha224 = \"2.16.840.1.101.3.4.2.4\";\nexport const id_sha256 = \"2.16.840.1.101.3.4.2.1\";\nexport const id_sha384 = \"2.16.840.1.101.3.4.2.2\";\nexport const id_sha512 = \"2.16.840.1.101.3.4.2.3\";\nexport const id_sha512_224 = \"2.16.840.1.101.3.4.2.5\";\nexport const id_sha512_256 = \"2.16.840.1.101.3.4.2.6\";\nexport const id_md2 = \"1.2.840.113549.2.2\";\nexport const id_md5 = \"1.2.840.113549.2.5\";\nexport const id_mgf1 = `${id_pkcs_1}.8`;\n","import { AsnConvert, AsnOctetStringConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport * as oid from \"./object_identifiers\";\nfunction create(algorithm) {\n    return new AlgorithmIdentifier({ algorithm, parameters: null });\n}\nexport const md2 = create(oid.id_md2);\nexport const md4 = create(oid.id_md5);\nexport const sha1 = create(oid.id_sha1);\nexport const sha224 = create(oid.id_sha224);\nexport const sha256 = create(oid.id_sha256);\nexport const sha384 = create(oid.id_sha384);\nexport const sha512 = create(oid.id_sha512);\nexport const sha512_224 = create(oid.id_sha512_224);\nexport const sha512_256 = create(oid.id_sha512_256);\nexport const mgf1SHA1 = new AlgorithmIdentifier({\n    algorithm: oid.id_mgf1,\n    parameters: AsnConvert.serialize(sha1),\n});\nexport const pSpecifiedEmpty = new AlgorithmIdentifier({\n    algorithm: oid.id_pSpecified,\n    parameters: AsnConvert.serialize(AsnOctetStringConverter.toASN(new Uint8Array([\n        0xda, 0x39, 0xa3, 0xee, 0x5e, 0x6b, 0x4b, 0x0d, 0x32, 0x55, 0xbf, 0xef, 0x95, 0x60, 0x18,\n        0x90, 0xaf, 0xd8, 0x07, 0x09,\n    ]).buffer)),\n});\nexport const rsaEncryption = create(oid.id_rsaEncryption);\nexport const md2WithRSAEncryption = create(oid.id_md2WithRSAEncryption);\nexport const md5WithRSAEncryption = create(oid.id_md5WithRSAEncryption);\nexport const sha1WithRSAEncryption = create(oid.id_sha1WithRSAEncryption);\nexport const sha224WithRSAEncryption = create(oid.id_sha512_224WithRSAEncryption);\nexport const sha256WithRSAEncryption = create(oid.id_sha512_256WithRSAEncryption);\nexport const sha384WithRSAEncryption = create(oid.id_sha384WithRSAEncryption);\nexport const sha512WithRSAEncryption = create(oid.id_sha512WithRSAEncryption);\nexport const sha512_224WithRSAEncryption = create(oid.id_sha512_224WithRSAEncryption);\nexport const sha512_256WithRSAEncryption = create(oid.id_sha512_256WithRSAEncryption);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnConvert } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { id_mgf1, id_RSAES_OAEP } from \"../object_identifiers\";\nimport { sha1, mgf1SHA1, pSpecifiedEmpty } from \"../algorithms\";\nexport class RsaEsOaepParams {\n    constructor(params = {}) {\n        this.hashAlgorithm = new AlgorithmIdentifier(sha1);\n        this.maskGenAlgorithm = new AlgorithmIdentifier({\n            algorithm: id_mgf1,\n            parameters: AsnConvert.serialize(sha1),\n        });\n        this.pSourceAlgorithm = new AlgorithmIdentifier(pSpecifiedEmpty);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 0, defaultValue: sha1 })\n], RsaEsOaepParams.prototype, \"hashAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 1, defaultValue: mgf1SHA1 })\n], RsaEsOaepParams.prototype, \"maskGenAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 2, defaultValue: pSpecifiedEmpty })\n], RsaEsOaepParams.prototype, \"pSourceAlgorithm\", void 0);\nexport const RSAES_OAEP = new AlgorithmIdentifier({\n    algorithm: id_RSAES_OAEP,\n    parameters: AsnConvert.serialize(new RsaEsOaepParams()),\n});\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnConvert, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { id_mgf1, id_RSASSA_PSS } from \"../object_identifiers\";\nimport { sha1, mgf1SHA1 } from \"../algorithms\";\nexport class RsaSaPssParams {\n    constructor(params = {}) {\n        this.hashAlgorithm = new AlgorithmIdentifier(sha1);\n        this.maskGenAlgorithm = new AlgorithmIdentifier({\n            algorithm: id_mgf1,\n            parameters: AsnConvert.serialize(sha1),\n        });\n        this.saltLength = 20;\n        this.trailerField = 1;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 0, defaultValue: sha1 })\n], RsaSaPssParams.prototype, \"hashAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 1, defaultValue: mgf1SHA1 })\n], RsaSaPssParams.prototype, \"maskGenAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 2, defaultValue: 20 })\n], RsaSaPssParams.prototype, \"saltLength\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 3, defaultValue: 1 })\n], RsaSaPssParams.prototype, \"trailerField\", void 0);\nexport const RSASSA_PSS = new AlgorithmIdentifier({\n    algorithm: id_RSASSA_PSS,\n    parameters: AsnConvert.serialize(new RsaSaPssParams()),\n});\n","import { __decorate } from \"tslib\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { AsnProp, OctetString } from \"@peculiar/asn1-schema\";\nexport class DigestInfo {\n    constructor(params = {}) {\n        this.digestAlgorithm = new AlgorithmIdentifier();\n        this.digest = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], DigestInfo.prototype, \"digestAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], DigestInfo.prototype, \"digest\", void 0);\n","var OtherPrimeInfos_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter, AsnArray, AsnType, AsnTypeTypes, } from \"@peculiar/asn1-schema\";\nexport class OtherPrimeInfo {\n    constructor(params = {}) {\n        this.prime = new ArrayBuffer(0);\n        this.exponent = new ArrayBuffer(0);\n        this.coefficient = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], OtherPrimeInfo.prototype, \"prime\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], OtherPrimeInfo.prototype, \"exponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], OtherPrimeInfo.prototype, \"coefficient\", void 0);\nlet OtherPrimeInfos = OtherPrimeInfos_1 = class OtherPrimeInfos extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, OtherPrimeInfos_1.prototype);\n    }\n};\nOtherPrimeInfos = OtherPrimeInfos_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: OtherPrimeInfo })\n], OtherPrimeInfos);\nexport { OtherPrimeInfos };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { OtherPrimeInfos } from \"./other_prime_info\";\nexport class RSAPrivateKey {\n    constructor(params = {}) {\n        this.version = 0;\n        this.modulus = new ArrayBuffer(0);\n        this.publicExponent = new ArrayBuffer(0);\n        this.privateExponent = new ArrayBuffer(0);\n        this.prime1 = new ArrayBuffer(0);\n        this.prime2 = new ArrayBuffer(0);\n        this.exponent1 = new ArrayBuffer(0);\n        this.exponent2 = new ArrayBuffer(0);\n        this.coefficient = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], RSAPrivateKey.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"modulus\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"publicExponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"privateExponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"prime1\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"prime2\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"exponent1\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"exponent2\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"coefficient\", void 0);\n__decorate([\n    AsnProp({ type: OtherPrimeInfos, optional: true })\n], RSAPrivateKey.prototype, \"otherPrimeInfos\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nexport class RSAPublicKey {\n    constructor(params = {}) {\n        this.modulus = new ArrayBuffer(0);\n        this.publicExponent = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPublicKey.prototype, \"modulus\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPublicKey.prototype, \"publicExponent\", void 0);\n","var Lifecycle;\n(function (Lifecycle) {\n    Lifecycle[Lifecycle[\"Transient\"] = 0] = \"Transient\";\n    Lifecycle[Lifecycle[\"Singleton\"] = 1] = \"Singleton\";\n    Lifecycle[Lifecycle[\"ResolutionScoped\"] = 2] = \"ResolutionScoped\";\n    Lifecycle[Lifecycle[\"ContainerScoped\"] = 3] = \"ContainerScoped\";\n})(Lifecycle || (Lifecycle = {}));\nexport default Lifecycle;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export var INJECTION_TOKEN_METADATA_KEY = \"injectionTokens\";\nexport function getParamInfo(target) {\n    var params = Reflect.getMetadata(\"design:paramtypes\", target) || [];\n    var injectionTokens = Reflect.getOwnMetadata(INJECTION_TOKEN_METADATA_KEY, target) || {};\n    Object.keys(injectionTokens).forEach(function (key) {\n        params[+key] = injectionTokens[key];\n    });\n    return params;\n}\nexport function defineInjectionTokenMetadata(data, transform) {\n    return function (target, _propertyKey, parameterIndex) {\n        var descriptors = Reflect.getOwnMetadata(INJECTION_TOKEN_METADATA_KEY, target) || {};\n        descriptors[parameterIndex] = transform\n            ? {\n                token: data,\n                transform: transform.transformToken,\n                transformArgs: transform.args || []\n            }\n            : data;\n        Reflect.defineMetadata(INJECTION_TOKEN_METADATA_KEY, descriptors, target);\n    };\n}\n","export function isClassProvider(provider) {\n    return !!provider.useClass;\n}\n","export function isFactoryProvider(provider) {\n    return !!provider.useFactory;\n}\n","import { __read, __spread } from \"tslib\";\nvar DelayedConstructor = (function () {\n    function DelayedConstructor(wrap) {\n        this.wrap = wrap;\n        this.reflectMethods = [\n            \"get\",\n            \"getPrototypeOf\",\n            \"setPrototypeOf\",\n            \"getOwnPropertyDescriptor\",\n            \"defineProperty\",\n            \"has\",\n            \"set\",\n            \"deleteProperty\",\n            \"apply\",\n            \"construct\",\n            \"ownKeys\"\n        ];\n    }\n    DelayedConstructor.prototype.createProxy = function (createObject) {\n        var _this = this;\n        var target = {};\n        var init = false;\n        var value;\n        var delayedObject = function () {\n            if (!init) {\n                value = createObject(_this.wrap());\n                init = true;\n            }\n            return value;\n        };\n        return new Proxy(target, this.createHandler(delayedObject));\n    };\n    DelayedConstructor.prototype.createHandler = function (delayedObject) {\n        var handler = {};\n        var install = function (name) {\n            handler[name] = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                args[0] = delayedObject();\n                var method = Reflect[name];\n                return method.apply(void 0, __spread(args));\n            };\n        };\n        this.reflectMethods.forEach(install);\n        return handler;\n    };\n    return DelayedConstructor;\n}());\nexport { DelayedConstructor };\nexport function delay(wrappedConstructor) {\n    if (typeof wrappedConstructor === \"undefined\") {\n        throw new Error(\"Attempt to `delay` undefined. Constructor must be wrapped in a callback\");\n    }\n    return new DelayedConstructor(wrappedConstructor);\n}\n","import { DelayedConstructor } from \"../lazy-helpers\";\nexport function isNormalToken(token) {\n    return typeof token === \"string\" || typeof token === \"symbol\";\n}\nexport function isTokenDescriptor(descriptor) {\n    return (typeof descriptor === \"object\" &&\n        \"token\" in descriptor &&\n        \"multiple\" in descriptor);\n}\nexport function isTransformDescriptor(descriptor) {\n    return (typeof descriptor === \"object\" &&\n        \"token\" in descriptor &&\n        \"transform\" in descriptor);\n}\nexport function isConstructorToken(token) {\n    return typeof token === \"function\" || token instanceof DelayedConstructor;\n}\n","export function isTokenProvider(provider) {\n    return !!provider.useToken;\n}\n","export function isValueProvider(provider) {\n    return provider.useValue != undefined;\n}\n","import { isClassProvider } from \"./class-provider\";\nimport { isValueProvider } from \"./value-provider\";\nimport { isTokenProvider } from \"./token-provider\";\nimport { isFactoryProvider } from \"./factory-provider\";\nexport function isProvider(provider) {\n    return (isClassProvider(provider) ||\n        isValueProvider(provider) ||\n        isTokenProvider(provider) ||\n        isFactoryProvider(provider));\n}\n","var RegistryBase = (function () {\n    function RegistryBase() {\n        this._registryMap = new Map();\n    }\n    RegistryBase.prototype.entries = function () {\n        return this._registryMap.entries();\n    };\n    RegistryBase.prototype.getAll = function (key) {\n        this.ensure(key);\n        return this._registryMap.get(key);\n    };\n    RegistryBase.prototype.get = function (key) {\n        this.ensure(key);\n        var value = this._registryMap.get(key);\n        return value[value.length - 1] || null;\n    };\n    RegistryBase.prototype.set = function (key, value) {\n        this.ensure(key);\n        this._registryMap.get(key).push(value);\n    };\n    RegistryBase.prototype.setAll = function (key, value) {\n        this._registryMap.set(key, value);\n    };\n    RegistryBase.prototype.has = function (key) {\n        this.ensure(key);\n        return this._registryMap.get(key).length > 0;\n    };\n    RegistryBase.prototype.clear = function () {\n        this._registryMap.clear();\n    };\n    RegistryBase.prototype.ensure = function (key) {\n        if (!this._registryMap.has(key)) {\n            this._registryMap.set(key, []);\n        }\n    };\n    return RegistryBase;\n}());\nexport default RegistryBase;\n","import { __extends } from \"tslib\";\nimport RegistryBase from \"./registry-base\";\nvar Registry = (function (_super) {\n    __extends(Registry, _super);\n    function Registry() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Registry;\n}(RegistryBase));\nexport default Registry;\n","var ResolutionContext = (function () {\n    function ResolutionContext() {\n        this.scopedResolutions = new Map();\n    }\n    return ResolutionContext;\n}());\nexport default ResolutionContext;\n","import { __read, __spread } from \"tslib\";\nfunction formatDependency(params, idx) {\n    if (params === null) {\n        return \"at position #\" + idx;\n    }\n    var argName = params.split(\",\")[idx].trim();\n    return \"\\\"\" + argName + \"\\\" at position #\" + idx;\n}\nfunction composeErrorMessage(msg, e, indent) {\n    if (indent === void 0) { indent = \"    \"; }\n    return __spread([msg], e.message.split(\"\\n\").map(function (l) { return indent + l; })).join(\"\\n\");\n}\nexport function formatErrorCtor(ctor, paramIdx, error) {\n    var _a = __read(ctor.toString().match(/constructor\\(([\\w, ]+)\\)/) || [], 2), _b = _a[1], params = _b === void 0 ? null : _b;\n    var dep = formatDependency(params, paramIdx);\n    return composeErrorMessage(\"Cannot inject the dependency \" + dep + \" of \\\"\" + ctor.name + \"\\\" constructor. Reason:\", error);\n}\n","export function isDisposable(value) {\n    if (typeof value.dispose !== \"function\")\n        return false;\n    var disposeFun = value.dispose;\n    if (disposeFun.length > 0) {\n        return false;\n    }\n    return true;\n}\n","import { __extends } from \"tslib\";\nimport RegistryBase from \"./registry-base\";\nvar PreResolutionInterceptors = (function (_super) {\n    __extends(PreResolutionInterceptors, _super);\n    function PreResolutionInterceptors() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PreResolutionInterceptors;\n}(RegistryBase));\nexport { PreResolutionInterceptors };\nvar PostResolutionInterceptors = (function (_super) {\n    __extends(PostResolutionInterceptors, _super);\n    function PostResolutionInterceptors() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PostResolutionInterceptors;\n}(RegistryBase));\nexport { PostResolutionInterceptors };\nvar Interceptors = (function () {\n    function Interceptors() {\n        this.preResolution = new PreResolutionInterceptors();\n        this.postResolution = new PostResolutionInterceptors();\n    }\n    return Interceptors;\n}());\nexport default Interceptors;\n","import { __awaiter, __generator, __read, __spread, __values } from \"tslib\";\nimport { isClassProvider, isFactoryProvider, isNormalToken, isTokenProvider, isValueProvider } from \"./providers\";\nimport { isProvider } from \"./providers/provider\";\nimport { isConstructorToken, isTokenDescriptor, isTransformDescriptor } from \"./providers/injection-token\";\nimport Registry from \"./registry\";\nimport Lifecycle from \"./types/lifecycle\";\nimport ResolutionContext from \"./resolution-context\";\nimport { formatErrorCtor } from \"./error-helpers\";\nimport { DelayedConstructor } from \"./lazy-helpers\";\nimport { isDisposable } from \"./types/disposable\";\nimport Interceptors from \"./interceptors\";\nexport var typeInfo = new Map();\nvar InternalDependencyContainer = (function () {\n    function InternalDependencyContainer(parent) {\n        this.parent = parent;\n        this._registry = new Registry();\n        this.interceptors = new Interceptors();\n        this.disposed = false;\n        this.disposables = new Set();\n    }\n    InternalDependencyContainer.prototype.register = function (token, providerOrConstructor, options) {\n        if (options === void 0) { options = { lifecycle: Lifecycle.Transient }; }\n        this.ensureNotDisposed();\n        var provider;\n        if (!isProvider(providerOrConstructor)) {\n            provider = { useClass: providerOrConstructor };\n        }\n        else {\n            provider = providerOrConstructor;\n        }\n        if (isTokenProvider(provider)) {\n            var path = [token];\n            var tokenProvider = provider;\n            while (tokenProvider != null) {\n                var currentToken = tokenProvider.useToken;\n                if (path.includes(currentToken)) {\n                    throw new Error(\"Token registration cycle detected! \" + __spread(path, [currentToken]).join(\" -> \"));\n                }\n                path.push(currentToken);\n                var registration = this._registry.get(currentToken);\n                if (registration && isTokenProvider(registration.provider)) {\n                    tokenProvider = registration.provider;\n                }\n                else {\n                    tokenProvider = null;\n                }\n            }\n        }\n        if (options.lifecycle === Lifecycle.Singleton ||\n            options.lifecycle == Lifecycle.ContainerScoped ||\n            options.lifecycle == Lifecycle.ResolutionScoped) {\n            if (isValueProvider(provider) || isFactoryProvider(provider)) {\n                throw new Error(\"Cannot use lifecycle \\\"\" + Lifecycle[options.lifecycle] + \"\\\" with ValueProviders or FactoryProviders\");\n            }\n        }\n        this._registry.set(token, { provider: provider, options: options });\n        return this;\n    };\n    InternalDependencyContainer.prototype.registerType = function (from, to) {\n        this.ensureNotDisposed();\n        if (isNormalToken(to)) {\n            return this.register(from, {\n                useToken: to\n            });\n        }\n        return this.register(from, {\n            useClass: to\n        });\n    };\n    InternalDependencyContainer.prototype.registerInstance = function (token, instance) {\n        this.ensureNotDisposed();\n        return this.register(token, {\n            useValue: instance\n        });\n    };\n    InternalDependencyContainer.prototype.registerSingleton = function (from, to) {\n        this.ensureNotDisposed();\n        if (isNormalToken(from)) {\n            if (isNormalToken(to)) {\n                return this.register(from, {\n                    useToken: to\n                }, { lifecycle: Lifecycle.Singleton });\n            }\n            else if (to) {\n                return this.register(from, {\n                    useClass: to\n                }, { lifecycle: Lifecycle.Singleton });\n            }\n            throw new Error('Cannot register a type name as a singleton without a \"to\" token');\n        }\n        var useClass = from;\n        if (to && !isNormalToken(to)) {\n            useClass = to;\n        }\n        return this.register(from, {\n            useClass: useClass\n        }, { lifecycle: Lifecycle.Singleton });\n    };\n    InternalDependencyContainer.prototype.resolve = function (token, context, isOptional) {\n        if (context === void 0) { context = new ResolutionContext(); }\n        if (isOptional === void 0) { isOptional = false; }\n        this.ensureNotDisposed();\n        var registration = this.getRegistration(token);\n        if (!registration && isNormalToken(token)) {\n            if (isOptional) {\n                return undefined;\n            }\n            throw new Error(\"Attempted to resolve unregistered dependency token: \\\"\" + token.toString() + \"\\\"\");\n        }\n        this.executePreResolutionInterceptor(token, \"Single\");\n        if (registration) {\n            var result = this.resolveRegistration(registration, context);\n            this.executePostResolutionInterceptor(token, result, \"Single\");\n            return result;\n        }\n        if (isConstructorToken(token)) {\n            var result = this.construct(token, context);\n            this.executePostResolutionInterceptor(token, result, \"Single\");\n            return result;\n        }\n        throw new Error(\"Attempted to construct an undefined constructor. Could mean a circular dependency problem. Try using `delay` function.\");\n    };\n    InternalDependencyContainer.prototype.executePreResolutionInterceptor = function (token, resolutionType) {\n        var e_1, _a;\n        if (this.interceptors.preResolution.has(token)) {\n            var remainingInterceptors = [];\n            try {\n                for (var _b = __values(this.interceptors.preResolution.getAll(token)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var interceptor = _c.value;\n                    if (interceptor.options.frequency != \"Once\") {\n                        remainingInterceptors.push(interceptor);\n                    }\n                    interceptor.callback(token, resolutionType);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this.interceptors.preResolution.setAll(token, remainingInterceptors);\n        }\n    };\n    InternalDependencyContainer.prototype.executePostResolutionInterceptor = function (token, result, resolutionType) {\n        var e_2, _a;\n        if (this.interceptors.postResolution.has(token)) {\n            var remainingInterceptors = [];\n            try {\n                for (var _b = __values(this.interceptors.postResolution.getAll(token)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var interceptor = _c.value;\n                    if (interceptor.options.frequency != \"Once\") {\n                        remainingInterceptors.push(interceptor);\n                    }\n                    interceptor.callback(token, result, resolutionType);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            this.interceptors.postResolution.setAll(token, remainingInterceptors);\n        }\n    };\n    InternalDependencyContainer.prototype.resolveRegistration = function (registration, context) {\n        this.ensureNotDisposed();\n        if (registration.options.lifecycle === Lifecycle.ResolutionScoped &&\n            context.scopedResolutions.has(registration)) {\n            return context.scopedResolutions.get(registration);\n        }\n        var isSingleton = registration.options.lifecycle === Lifecycle.Singleton;\n        var isContainerScoped = registration.options.lifecycle === Lifecycle.ContainerScoped;\n        var returnInstance = isSingleton || isContainerScoped;\n        var resolved;\n        if (isValueProvider(registration.provider)) {\n            resolved = registration.provider.useValue;\n        }\n        else if (isTokenProvider(registration.provider)) {\n            resolved = returnInstance\n                ? registration.instance ||\n                    (registration.instance = this.resolve(registration.provider.useToken, context))\n                : this.resolve(registration.provider.useToken, context);\n        }\n        else if (isClassProvider(registration.provider)) {\n            resolved = returnInstance\n                ? registration.instance ||\n                    (registration.instance = this.construct(registration.provider.useClass, context))\n                : this.construct(registration.provider.useClass, context);\n        }\n        else if (isFactoryProvider(registration.provider)) {\n            resolved = registration.provider.useFactory(this);\n        }\n        else {\n            resolved = this.construct(registration.provider, context);\n        }\n        if (registration.options.lifecycle === Lifecycle.ResolutionScoped) {\n            context.scopedResolutions.set(registration, resolved);\n        }\n        return resolved;\n    };\n    InternalDependencyContainer.prototype.resolveAll = function (token, context, isOptional) {\n        var _this = this;\n        if (context === void 0) { context = new ResolutionContext(); }\n        if (isOptional === void 0) { isOptional = false; }\n        this.ensureNotDisposed();\n        var registrations = this.getAllRegistrations(token);\n        if (!registrations && isNormalToken(token)) {\n            if (isOptional) {\n                return [];\n            }\n            throw new Error(\"Attempted to resolve unregistered dependency token: \\\"\" + token.toString() + \"\\\"\");\n        }\n        this.executePreResolutionInterceptor(token, \"All\");\n        if (registrations) {\n            var result_1 = registrations.map(function (item) {\n                return _this.resolveRegistration(item, context);\n            });\n            this.executePostResolutionInterceptor(token, result_1, \"All\");\n            return result_1;\n        }\n        var result = [this.construct(token, context)];\n        this.executePostResolutionInterceptor(token, result, \"All\");\n        return result;\n    };\n    InternalDependencyContainer.prototype.isRegistered = function (token, recursive) {\n        if (recursive === void 0) { recursive = false; }\n        this.ensureNotDisposed();\n        return (this._registry.has(token) ||\n            (recursive &&\n                (this.parent || false) &&\n                this.parent.isRegistered(token, true)));\n    };\n    InternalDependencyContainer.prototype.reset = function () {\n        this.ensureNotDisposed();\n        this._registry.clear();\n        this.interceptors.preResolution.clear();\n        this.interceptors.postResolution.clear();\n    };\n    InternalDependencyContainer.prototype.clearInstances = function () {\n        var e_3, _a;\n        this.ensureNotDisposed();\n        try {\n            for (var _b = __values(this._registry.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), token = _d[0], registrations = _d[1];\n                this._registry.setAll(token, registrations\n                    .filter(function (registration) { return !isValueProvider(registration.provider); })\n                    .map(function (registration) {\n                    registration.instance = undefined;\n                    return registration;\n                }));\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    InternalDependencyContainer.prototype.createChildContainer = function () {\n        var e_4, _a;\n        this.ensureNotDisposed();\n        var childContainer = new InternalDependencyContainer(this);\n        try {\n            for (var _b = __values(this._registry.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), token = _d[0], registrations = _d[1];\n                if (registrations.some(function (_a) {\n                    var options = _a.options;\n                    return options.lifecycle === Lifecycle.ContainerScoped;\n                })) {\n                    childContainer._registry.setAll(token, registrations.map(function (registration) {\n                        if (registration.options.lifecycle === Lifecycle.ContainerScoped) {\n                            return {\n                                provider: registration.provider,\n                                options: registration.options\n                            };\n                        }\n                        return registration;\n                    }));\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return childContainer;\n    };\n    InternalDependencyContainer.prototype.beforeResolution = function (token, callback, options) {\n        if (options === void 0) { options = { frequency: \"Always\" }; }\n        this.interceptors.preResolution.set(token, {\n            callback: callback,\n            options: options\n        });\n    };\n    InternalDependencyContainer.prototype.afterResolution = function (token, callback, options) {\n        if (options === void 0) { options = { frequency: \"Always\" }; }\n        this.interceptors.postResolution.set(token, {\n            callback: callback,\n            options: options\n        });\n    };\n    InternalDependencyContainer.prototype.dispose = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.disposed = true;\n                        promises = [];\n                        this.disposables.forEach(function (disposable) {\n                            var maybePromise = disposable.dispose();\n                            if (maybePromise) {\n                                promises.push(maybePromise);\n                            }\n                        });\n                        return [4, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2];\n                }\n            });\n        });\n    };\n    InternalDependencyContainer.prototype.getRegistration = function (token) {\n        if (this.isRegistered(token)) {\n            return this._registry.get(token);\n        }\n        if (this.parent) {\n            return this.parent.getRegistration(token);\n        }\n        return null;\n    };\n    InternalDependencyContainer.prototype.getAllRegistrations = function (token) {\n        if (this.isRegistered(token)) {\n            return this._registry.getAll(token);\n        }\n        if (this.parent) {\n            return this.parent.getAllRegistrations(token);\n        }\n        return null;\n    };\n    InternalDependencyContainer.prototype.construct = function (ctor, context) {\n        var _this = this;\n        if (ctor instanceof DelayedConstructor) {\n            return ctor.createProxy(function (target) {\n                return _this.resolve(target, context);\n            });\n        }\n        var instance = (function () {\n            var paramInfo = typeInfo.get(ctor);\n            if (!paramInfo || paramInfo.length === 0) {\n                if (ctor.length === 0) {\n                    return new ctor();\n                }\n                else {\n                    throw new Error(\"TypeInfo not known for \\\"\" + ctor.name + \"\\\"\");\n                }\n            }\n            var params = paramInfo.map(_this.resolveParams(context, ctor));\n            return new (ctor.bind.apply(ctor, __spread([void 0], params)))();\n        })();\n        if (isDisposable(instance)) {\n            this.disposables.add(instance);\n        }\n        return instance;\n    };\n    InternalDependencyContainer.prototype.resolveParams = function (context, ctor) {\n        var _this = this;\n        return function (param, idx) {\n            var _a, _b, _c;\n            try {\n                if (isTokenDescriptor(param)) {\n                    if (isTransformDescriptor(param)) {\n                        return param.multiple\n                            ? (_a = _this.resolve(param.transform)).transform.apply(_a, __spread([_this.resolveAll(param.token, new ResolutionContext(), param.isOptional)], param.transformArgs)) : (_b = _this.resolve(param.transform)).transform.apply(_b, __spread([_this.resolve(param.token, context, param.isOptional)], param.transformArgs));\n                    }\n                    else {\n                        return param.multiple\n                            ? _this.resolveAll(param.token, new ResolutionContext(), param.isOptional)\n                            : _this.resolve(param.token, context, param.isOptional);\n                    }\n                }\n                else if (isTransformDescriptor(param)) {\n                    return (_c = _this.resolve(param.transform, context)).transform.apply(_c, __spread([_this.resolve(param.token, context)], param.transformArgs));\n                }\n                return _this.resolve(param, context);\n            }\n            catch (e) {\n                throw new Error(formatErrorCtor(ctor, idx, e));\n            }\n        };\n    };\n    InternalDependencyContainer.prototype.ensureNotDisposed = function () {\n        if (this.disposed) {\n            throw new Error(\"This container has been disposed, you cannot interact with a disposed container\");\n        }\n    };\n    return InternalDependencyContainer;\n}());\nexport var instance = new InternalDependencyContainer();\nexport default instance;\n","import { getParamInfo } from \"../reflection-helpers\";\nimport { typeInfo } from \"../dependency-container\";\nimport { instance as globalContainer } from \"../dependency-container\";\nfunction injectable(options) {\n    return function (target) {\n        typeInfo.set(target, getParamInfo(target));\n        if (options && options.token) {\n            if (!Array.isArray(options.token)) {\n                globalContainer.register(options.token, target);\n            }\n            else {\n                options.token.forEach(function (token) {\n                    globalContainer.register(token, target);\n                });\n            }\n        }\n    };\n}\nexport default injectable;\n","if (typeof Reflect === \"undefined\" || !Reflect.getMetadata) {\n    throw new Error(\"tsyringe requires a reflect polyfill. Please add 'import \\\"reflect-metadata\\\"' to the top of your entry point.\");\n}\nexport { Lifecycle } from \"./types\";\nexport * from \"./decorators\";\nexport * from \"./factories\";\nexport * from \"./providers\";\nexport { delay } from \"./lazy-helpers\";\nexport { instance as container } from \"./dependency-container\";\n","var PKCS12AttrSet_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nexport class PKCS12Attribute {\n    constructor(params = {}) {\n        this.attrId = \"\";\n        this.attrValues = [];\n        Object.assign(params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PKCS12Attribute.prototype, \"attrId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, repeated: \"set\" })\n], PKCS12Attribute.prototype, \"attrValues\", void 0);\nlet PKCS12AttrSet = PKCS12AttrSet_1 = class PKCS12AttrSet extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, PKCS12AttrSet_1.prototype);\n    }\n};\nPKCS12AttrSet = PKCS12AttrSet_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: PKCS12Attribute })\n], PKCS12AttrSet);\nexport { PKCS12AttrSet };\n","var AuthenticatedSafe_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { ContentInfo } from \"@peculiar/asn1-cms\";\nlet AuthenticatedSafe = AuthenticatedSafe_1 = class AuthenticatedSafe extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, AuthenticatedSafe_1.prototype);\n    }\n};\nAuthenticatedSafe = AuthenticatedSafe_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: ContentInfo })\n], AuthenticatedSafe);\nexport { AuthenticatedSafe };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_pkcs_9 } from \"./types\";\nexport class CertBag {\n    constructor(params = {}) {\n        this.certId = \"\";\n        this.certValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], CertBag.prototype, \"certId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], CertBag.prototype, \"certValue\", void 0);\nexport const id_certTypes = `${id_pkcs_9}.22`;\nexport const id_x509Certificate = `${id_certTypes}.1`;\nexport const id_sdsiCertificate = `${id_certTypes}.2`;\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_pkcs_9 } from \"./types\";\nexport class CRLBag {\n    constructor(params = {}) {\n        this.crlId = \"\";\n        this.crltValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], CRLBag.prototype, \"crlId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], CRLBag.prototype, \"crltValue\", void 0);\nexport const id_crlTypes = `${id_pkcs_9}.23`;\nexport const id_x509CRL = `${id_crlTypes}.1`;\n","import { __decorate } from \"tslib\";\nimport { AsnProp, OctetString } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nexport class EncryptedData extends OctetString {\n}\nexport class EncryptedPrivateKeyInfo {\n    constructor(params = {}) {\n        this.encryptionAlgorithm = new AlgorithmIdentifier();\n        this.encryptedData = new EncryptedData();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], EncryptedPrivateKeyInfo.prototype, \"encryptionAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: EncryptedData })\n], EncryptedPrivateKeyInfo.prototype, \"encryptedData\", void 0);\n","var Attributes_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString, } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier, Attribute } from \"@peculiar/asn1-x509\";\nexport var Version;\n(function (Version) {\n    Version[Version[\"v1\"] = 0] = \"v1\";\n})(Version || (Version = {}));\nexport class PrivateKey extends OctetString {\n}\nlet Attributes = Attributes_1 = class Attributes extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Attributes_1.prototype);\n    }\n};\nAttributes = Attributes_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Attribute })\n], Attributes);\nexport { Attributes };\nexport class PrivateKeyInfo {\n    constructor(params = {}) {\n        this.version = Version.v1;\n        this.privateKeyAlgorithm = new AlgorithmIdentifier();\n        this.privateKey = new PrivateKey();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], PrivateKeyInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], PrivateKeyInfo.prototype, \"privateKeyAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: PrivateKey })\n], PrivateKeyInfo.prototype, \"privateKey\", void 0);\n__decorate([\n    AsnProp({ type: Attributes, implicit: true, context: 0, optional: true })\n], PrivateKeyInfo.prototype, \"attributes\", void 0);\n","import { __decorate } from \"tslib\";\nimport { PrivateKeyInfo } from \"@peculiar/asn1-pkcs8\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nlet KeyBag = class KeyBag extends PrivateKeyInfo {\n};\nKeyBag = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], KeyBag);\nexport { KeyBag };\n","import { __decorate } from \"tslib\";\nimport { EncryptedPrivateKeyInfo } from \"@peculiar/asn1-pkcs8\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nlet PKCS8ShroudedKeyBag = class PKCS8ShroudedKeyBag extends EncryptedPrivateKeyInfo {\n};\nPKCS8ShroudedKeyBag = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], PKCS8ShroudedKeyBag);\nexport { PKCS8ShroudedKeyBag };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class SecretBag {\n    constructor(params = {}) {\n        this.secretTypeId = \"\";\n        this.secretValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], SecretBag.prototype, \"secretTypeId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], SecretBag.prototype, \"secretValue\", void 0);\n","import { __decorate } from \"tslib\";\nimport { DigestInfo } from \"@peculiar/asn1-rsa\";\nimport { AsnProp, AsnPropTypes, OctetString } from \"@peculiar/asn1-schema\";\nexport class MacData {\n    constructor(params = {}) {\n        this.mac = new DigestInfo();\n        this.macSalt = new OctetString();\n        this.iterations = 1;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DigestInfo })\n], MacData.prototype, \"mac\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], MacData.prototype, \"macSalt\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, defaultValue: 1 })\n], MacData.prototype, \"iterations\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { ContentInfo } from \"@peculiar/asn1-cms\";\nimport { MacData } from \"./mac_data\";\nexport class PFX {\n    constructor(params = {}) {\n        this.version = 3;\n        this.authSafe = new ContentInfo();\n        this.macData = new MacData();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], PFX.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: ContentInfo })\n], PFX.prototype, \"authSafe\", void 0);\n__decorate([\n    AsnProp({ type: MacData, optional: true })\n], PFX.prototype, \"macData\", void 0);\n","var SafeContents_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes, AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { PKCS12Attribute } from \"./attribute\";\nexport class SafeBag {\n    constructor(params = {}) {\n        this.bagId = \"\";\n        this.bagValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], SafeBag.prototype, \"bagId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], SafeBag.prototype, \"bagValue\", void 0);\n__decorate([\n    AsnProp({ type: PKCS12Attribute, repeated: \"set\", optional: true })\n], SafeBag.prototype, \"bagAttributes\", void 0);\nlet SafeContents = SafeContents_1 = class SafeContents extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SafeContents_1.prototype);\n    }\n};\nSafeContents = SafeContents_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: SafeBag })\n], SafeContents);\nexport { SafeContents };\n","var ExtensionRequest_1, ExtendedCertificateAttributes_1, SMIMECapabilities_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnPropTypes, AsnProp, OctetString, AsnArray, } from \"@peculiar/asn1-schema\";\nimport * as cms from \"@peculiar/asn1-cms\";\nimport * as pfx from \"@peculiar/asn1-pfx\";\nimport * as pkcs8 from \"@peculiar/asn1-pkcs8\";\nimport * as x509 from \"@peculiar/asn1-x509\";\nimport * as attr from \"@peculiar/asn1-x509-attr\";\nexport const id_pkcs9 = \"1.2.840.113549.1.9\";\nexport const id_pkcs9_mo = `${id_pkcs9}.0`;\nexport const id_pkcs9_oc = `${id_pkcs9}.24`;\nexport const id_pkcs9_at = `${id_pkcs9}.25`;\nexport const id_pkcs9_sx = `${id_pkcs9}.26`;\nexport const id_pkcs9_mr = `${id_pkcs9}.27`;\nexport const id_pkcs9_oc_pkcsEntity = `${id_pkcs9_oc}.1`;\nexport const id_pkcs9_oc_naturalPerson = `${id_pkcs9_oc}.2`;\nexport const id_pkcs9_at_emailAddress = `${id_pkcs9}.1`;\nexport const id_pkcs9_at_unstructuredName = `${id_pkcs9}.2`;\nexport const id_pkcs9_at_contentType = `${id_pkcs9}.3`;\nexport const id_pkcs9_at_messageDigest = `${id_pkcs9}.4`;\nexport const id_pkcs9_at_signingTime = `${id_pkcs9}.5`;\nexport const id_pkcs9_at_counterSignature = `${id_pkcs9}.6`;\nexport const id_pkcs9_at_challengePassword = `${id_pkcs9}.7`;\nexport const id_pkcs9_at_unstructuredAddress = `${id_pkcs9}.8`;\nexport const id_pkcs9_at_extendedCertificateAttributes = `${id_pkcs9}.9`;\nexport const id_pkcs9_at_signingDescription = `${id_pkcs9}.13`;\nexport const id_pkcs9_at_extensionRequest = `${id_pkcs9}.14`;\nexport const id_pkcs9_at_smimeCapabilities = `${id_pkcs9}.15`;\nexport const id_pkcs9_at_friendlyName = `${id_pkcs9}.20`;\nexport const id_pkcs9_at_localKeyId = `${id_pkcs9}.21`;\nexport const id_pkcs9_at_userPKCS12 = `2.16.840.1.113730.3.1.216`;\nexport const id_pkcs9_at_pkcs15Token = `${id_pkcs9_at}.1`;\nexport const id_pkcs9_at_encryptedPrivateKeyInfo = `${id_pkcs9_at}.2`;\nexport const id_pkcs9_at_randomNonce = `${id_pkcs9_at}.3`;\nexport const id_pkcs9_at_sequenceNumber = `${id_pkcs9_at}.4`;\nexport const id_pkcs9_at_pkcs7PDU = `${id_pkcs9_at}.5`;\nexport const id_ietf_at = `1.3.6.1.5.5.7.9`;\nexport const id_pkcs9_at_dateOfBirth = `${id_ietf_at}.1`;\nexport const id_pkcs9_at_placeOfBirth = `${id_ietf_at}.2`;\nexport const id_pkcs9_at_gender = `${id_ietf_at}.3`;\nexport const id_pkcs9_at_countryOfCitizenship = `${id_ietf_at}.4`;\nexport const id_pkcs9_at_countryOfResidence = `${id_ietf_at}.5`;\nexport const id_pkcs9_sx_pkcs9String = `${id_pkcs9_sx}.1`;\nexport const id_pkcs9_sx_signingTime = `${id_pkcs9_sx}.2`;\nexport const id_pkcs9_mr_caseIgnoreMatch = `${id_pkcs9_mr}.1`;\nexport const id_pkcs9_mr_signingTimeMatch = `${id_pkcs9_mr}.2`;\nexport const id_smime = `${id_pkcs9}.16`;\nexport const id_certTypes = `${id_pkcs9}.22`;\nexport const crlTypes = `${id_pkcs9}.23`;\nexport const id_at_pseudonym = `${attr.id_at}.65`;\nlet PKCS9String = class PKCS9String extends x509.DirectoryString {\n    constructor(params = {}) {\n        super(params);\n    }\n    toString() {\n        const o = {};\n        o.toString();\n        return this.ia5String || super.toString();\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], PKCS9String.prototype, \"ia5String\", void 0);\nPKCS9String = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], PKCS9String);\nexport { PKCS9String };\nlet Pkcs7PDU = class Pkcs7PDU extends cms.ContentInfo {\n};\nPkcs7PDU = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], Pkcs7PDU);\nexport { Pkcs7PDU };\nlet UserPKCS12 = class UserPKCS12 extends pfx.PFX {\n};\nUserPKCS12 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], UserPKCS12);\nexport { UserPKCS12 };\nlet EncryptedPrivateKeyInfo = class EncryptedPrivateKeyInfo extends pkcs8.EncryptedPrivateKeyInfo {\n};\nEncryptedPrivateKeyInfo = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], EncryptedPrivateKeyInfo);\nexport { EncryptedPrivateKeyInfo };\nlet EmailAddress = class EmailAddress {\n    constructor(value = \"\") {\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], EmailAddress.prototype, \"value\", void 0);\nEmailAddress = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], EmailAddress);\nexport { EmailAddress };\nlet UnstructuredName = class UnstructuredName extends PKCS9String {\n};\nUnstructuredName = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], UnstructuredName);\nexport { UnstructuredName };\nlet UnstructuredAddress = class UnstructuredAddress extends x509.DirectoryString {\n};\nUnstructuredAddress = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], UnstructuredAddress);\nexport { UnstructuredAddress };\nlet DateOfBirth = class DateOfBirth {\n    constructor(value = new Date()) {\n        this.value = value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime })\n], DateOfBirth.prototype, \"value\", void 0);\nDateOfBirth = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DateOfBirth);\nexport { DateOfBirth };\nlet PlaceOfBirth = class PlaceOfBirth extends x509.DirectoryString {\n};\nPlaceOfBirth = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], PlaceOfBirth);\nexport { PlaceOfBirth };\nlet Gender = class Gender {\n    constructor(value = \"M\") {\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.PrintableString })\n], Gender.prototype, \"value\", void 0);\nGender = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Gender);\nexport { Gender };\nlet CountryOfCitizenship = class CountryOfCitizenship {\n    constructor(value = \"\") {\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.PrintableString })\n], CountryOfCitizenship.prototype, \"value\", void 0);\nCountryOfCitizenship = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CountryOfCitizenship);\nexport { CountryOfCitizenship };\nlet CountryOfResidence = class CountryOfResidence extends CountryOfCitizenship {\n};\nCountryOfResidence = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CountryOfResidence);\nexport { CountryOfResidence };\nlet Pseudonym = class Pseudonym extends x509.DirectoryString {\n};\nPseudonym = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Pseudonym);\nexport { Pseudonym };\nlet ContentType = class ContentType {\n    constructor(value = \"\") {\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], ContentType.prototype, \"value\", void 0);\nContentType = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], ContentType);\nexport { ContentType };\nexport class MessageDigest extends OctetString {\n}\nlet SigningTime = class SigningTime extends x509.Time {\n};\nSigningTime = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], SigningTime);\nexport { SigningTime };\nexport class RandomNonce extends OctetString {\n}\nlet SequenceNumber = class SequenceNumber {\n    constructor(value = 0) {\n        this.value = value;\n    }\n    toString() {\n        return this.value.toString();\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], SequenceNumber.prototype, \"value\", void 0);\nSequenceNumber = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], SequenceNumber);\nexport { SequenceNumber };\nlet CounterSignature = class CounterSignature extends cms.SignerInfo {\n};\nCounterSignature = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], CounterSignature);\nexport { CounterSignature };\nlet ChallengePassword = class ChallengePassword extends x509.DirectoryString {\n};\nChallengePassword = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], ChallengePassword);\nexport { ChallengePassword };\nlet ExtensionRequest = ExtensionRequest_1 = class ExtensionRequest extends x509.Extensions {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, ExtensionRequest_1.prototype);\n    }\n};\nExtensionRequest = ExtensionRequest_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], ExtensionRequest);\nexport { ExtensionRequest };\nlet ExtendedCertificateAttributes = ExtendedCertificateAttributes_1 = class ExtendedCertificateAttributes extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, ExtendedCertificateAttributes_1.prototype);\n    }\n};\nExtendedCertificateAttributes = ExtendedCertificateAttributes_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: cms.Attribute })\n], ExtendedCertificateAttributes);\nexport { ExtendedCertificateAttributes };\nlet FriendlyName = class FriendlyName {\n    constructor(value = \"\") {\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.BmpString })\n], FriendlyName.prototype, \"value\", void 0);\nFriendlyName = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], FriendlyName);\nexport { FriendlyName };\nexport class LocalKeyId extends OctetString {\n}\nexport class SigningDescription extends x509.DirectoryString {\n}\nlet SMIMECapability = class SMIMECapability extends x509.AlgorithmIdentifier {\n};\nSMIMECapability = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], SMIMECapability);\nexport { SMIMECapability };\nlet SMIMECapabilities = SMIMECapabilities_1 = class SMIMECapabilities extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SMIMECapabilities_1.prototype);\n    }\n};\nSMIMECapabilities = SMIMECapabilities_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: SMIMECapability })\n], SMIMECapabilities);\nexport { SMIMECapabilities };\n","var Attributes_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { Attribute } from \"@peculiar/asn1-x509\";\nlet Attributes = Attributes_1 = class Attributes extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Attributes_1.prototype);\n    }\n};\nAttributes = Attributes_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Attribute })\n], Attributes);\nexport { Attributes };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { Name, SubjectPublicKeyInfo } from \"@peculiar/asn1-x509\";\nimport { Attributes } from \"./attributes\";\nexport class CertificationRequestInfo {\n    constructor(params = {}) {\n        this.version = 0;\n        this.subject = new Name();\n        this.subjectPKInfo = new SubjectPublicKeyInfo();\n        this.attributes = new Attributes();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], CertificationRequestInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], CertificationRequestInfo.prototype, \"subject\", void 0);\n__decorate([\n    AsnProp({ type: SubjectPublicKeyInfo })\n], CertificationRequestInfo.prototype, \"subjectPKInfo\", void 0);\n__decorate([\n    AsnProp({ type: Attributes, implicit: true, context: 0 })\n], CertificationRequestInfo.prototype, \"attributes\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { CertificationRequestInfo } from \"./certification_request_info\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nexport class CertificationRequest {\n    constructor(params = {}) {\n        this.certificationRequestInfo = new CertificationRequestInfo();\n        this.signatureAlgorithm = new AlgorithmIdentifier();\n        this.signature = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: CertificationRequestInfo })\n], CertificationRequest.prototype, \"certificationRequestInfo\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], CertificationRequest.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], CertificationRequest.prototype, \"signature\", void 0);\n","/*!\n * MIT License\n * \n * Copyright (c) Peculiar Ventures. All rights reserved.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n */\nimport 'reflect-metadata';\nimport { AsnConvert, OctetString, AsnUtf8StringConverter } from '@peculiar/asn1-schema';\nimport * as asn1X509 from '@peculiar/asn1-x509';\nimport { AlgorithmIdentifier, Extension as Extension$1, Name as Name$1, RelativeDistinguishedName, AttributeTypeAndValue, SubjectPublicKeyInfo, BasicConstraints, id_ce_basicConstraints, KeyUsage, id_ce_keyUsage, Attribute as Attribute$1, Version, Extensions, Certificate, RevokedCertificate, Time, id_ce_invalidityDate, InvalidityDate, id_ce_cRLReasons, CRLReason, CertificateList } from '@peculiar/asn1-x509';\nimport { BufferSourceConverter, isEqual, Convert, combine } from 'pvtsutils';\nimport * as asn1Cms from '@peculiar/asn1-cms';\nimport * as asn1Ecc from '@peculiar/asn1-ecc';\nimport { id_ecPublicKey, ECDSASigValue } from '@peculiar/asn1-ecc';\nimport * as asn1Rsa from '@peculiar/asn1-rsa';\nimport { id_RSASSA_PSS, id_rsaEncryption, RSAPublicKey, id_sha512, id_sha384, id_sha256, id_sha1 } from '@peculiar/asn1-rsa';\nimport { __decorate } from 'tslib';\nimport { container, injectable } from 'tsyringe';\nimport * as asnPkcs9 from '@peculiar/asn1-pkcs9';\nimport { id_pkcs9_at_extensionRequest } from '@peculiar/asn1-pkcs9';\nimport { CertificationRequest, CertificationRequestInfo } from '@peculiar/asn1-csr';\n\nconst diAlgorithm = \"crypto.algorithm\";\nclass AlgorithmProvider {\n    getAlgorithms() {\n        return container.resolveAll(diAlgorithm);\n    }\n    toAsnAlgorithm(alg) {\n        ({ ...alg });\n        for (const algorithm of this.getAlgorithms()) {\n            const res = algorithm.toAsnAlgorithm(alg);\n            if (res) {\n                return res;\n            }\n        }\n        if (/^[0-9.]+$/.test(alg.name)) {\n            const res = new AlgorithmIdentifier({\n                algorithm: alg.name,\n            });\n            if (\"parameters\" in alg) {\n                const unknown = alg;\n                res.parameters = unknown.parameters;\n            }\n            return res;\n        }\n        throw new Error(\"Cannot convert WebCrypto algorithm to ASN.1 algorithm\");\n    }\n    toWebAlgorithm(alg) {\n        for (const algorithm of this.getAlgorithms()) {\n            const res = algorithm.toWebAlgorithm(alg);\n            if (res) {\n                return res;\n            }\n        }\n        const unknown = {\n            name: alg.algorithm,\n            parameters: alg.parameters,\n        };\n        return unknown;\n    }\n}\nconst diAlgorithmProvider = \"crypto.algorithmProvider\";\ncontainer.registerSingleton(diAlgorithmProvider, AlgorithmProvider);\n\nvar EcAlgorithm_1;\nconst idVersionOne = \"1.3.36.3.3.2.8.1.1\";\nconst idBrainpoolP160r1 = `${idVersionOne}.1`;\nconst idBrainpoolP160t1 = `${idVersionOne}.2`;\nconst idBrainpoolP192r1 = `${idVersionOne}.3`;\nconst idBrainpoolP192t1 = `${idVersionOne}.4`;\nconst idBrainpoolP224r1 = `${idVersionOne}.5`;\nconst idBrainpoolP224t1 = `${idVersionOne}.6`;\nconst idBrainpoolP256r1 = `${idVersionOne}.7`;\nconst idBrainpoolP256t1 = `${idVersionOne}.8`;\nconst idBrainpoolP320r1 = `${idVersionOne}.9`;\nconst idBrainpoolP320t1 = `${idVersionOne}.10`;\nconst idBrainpoolP384r1 = `${idVersionOne}.11`;\nconst idBrainpoolP384t1 = `${idVersionOne}.12`;\nconst idBrainpoolP512r1 = `${idVersionOne}.13`;\nconst idBrainpoolP512t1 = `${idVersionOne}.14`;\nconst brainpoolP160r1 = \"brainpoolP160r1\";\nconst brainpoolP160t1 = \"brainpoolP160t1\";\nconst brainpoolP192r1 = \"brainpoolP192r1\";\nconst brainpoolP192t1 = \"brainpoolP192t1\";\nconst brainpoolP224r1 = \"brainpoolP224r1\";\nconst brainpoolP224t1 = \"brainpoolP224t1\";\nconst brainpoolP256r1 = \"brainpoolP256r1\";\nconst brainpoolP256t1 = \"brainpoolP256t1\";\nconst brainpoolP320r1 = \"brainpoolP320r1\";\nconst brainpoolP320t1 = \"brainpoolP320t1\";\nconst brainpoolP384r1 = \"brainpoolP384r1\";\nconst brainpoolP384t1 = \"brainpoolP384t1\";\nconst brainpoolP512r1 = \"brainpoolP512r1\";\nconst brainpoolP512t1 = \"brainpoolP512t1\";\nconst ECDSA = \"ECDSA\";\nlet EcAlgorithm = EcAlgorithm_1 = class EcAlgorithm {\n    toAsnAlgorithm(alg) {\n        switch (alg.name.toLowerCase()) {\n            case ECDSA.toLowerCase():\n                if (\"hash\" in alg) {\n                    const hash = typeof alg.hash === \"string\" ? alg.hash : alg.hash.name;\n                    switch (hash.toLowerCase()) {\n                        case \"sha-1\":\n                            return asn1Ecc.ecdsaWithSHA1;\n                        case \"sha-256\":\n                            return asn1Ecc.ecdsaWithSHA256;\n                        case \"sha-384\":\n                            return asn1Ecc.ecdsaWithSHA384;\n                        case \"sha-512\":\n                            return asn1Ecc.ecdsaWithSHA512;\n                    }\n                }\n                else if (\"namedCurve\" in alg) {\n                    let parameters = \"\";\n                    switch (alg.namedCurve) {\n                        case \"P-256\":\n                            parameters = asn1Ecc.id_secp256r1;\n                            break;\n                        case \"K-256\":\n                            parameters = EcAlgorithm_1.SECP256K1;\n                            break;\n                        case \"P-384\":\n                            parameters = asn1Ecc.id_secp384r1;\n                            break;\n                        case \"P-521\":\n                            parameters = asn1Ecc.id_secp521r1;\n                            break;\n                        case brainpoolP160r1:\n                            parameters = idBrainpoolP160r1;\n                            break;\n                        case brainpoolP160t1:\n                            parameters = idBrainpoolP160t1;\n                            break;\n                        case brainpoolP192r1:\n                            parameters = idBrainpoolP192r1;\n                            break;\n                        case brainpoolP192t1:\n                            parameters = idBrainpoolP192t1;\n                            break;\n                        case brainpoolP224r1:\n                            parameters = idBrainpoolP224r1;\n                            break;\n                        case brainpoolP224t1:\n                            parameters = idBrainpoolP224t1;\n                            break;\n                        case brainpoolP256r1:\n                            parameters = idBrainpoolP256r1;\n                            break;\n                        case brainpoolP256t1:\n                            parameters = idBrainpoolP256t1;\n                            break;\n                        case brainpoolP320r1:\n                            parameters = idBrainpoolP320r1;\n                            break;\n                        case brainpoolP320t1:\n                            parameters = idBrainpoolP320t1;\n                            break;\n                        case brainpoolP384r1:\n                            parameters = idBrainpoolP384r1;\n                            break;\n                        case brainpoolP384t1:\n                            parameters = idBrainpoolP384t1;\n                            break;\n                        case brainpoolP512r1:\n                            parameters = idBrainpoolP512r1;\n                            break;\n                        case brainpoolP512t1:\n                            parameters = idBrainpoolP512t1;\n                            break;\n                    }\n                    if (parameters) {\n                        return new AlgorithmIdentifier({\n                            algorithm: asn1Ecc.id_ecPublicKey,\n                            parameters: AsnConvert.serialize(new asn1Ecc.ECParameters({ namedCurve: parameters })),\n                        });\n                    }\n                }\n        }\n        return null;\n    }\n    toWebAlgorithm(alg) {\n        switch (alg.algorithm) {\n            case asn1Ecc.id_ecdsaWithSHA1:\n                return { name: ECDSA, hash: { name: \"SHA-1\" } };\n            case asn1Ecc.id_ecdsaWithSHA256:\n                return { name: ECDSA, hash: { name: \"SHA-256\" } };\n            case asn1Ecc.id_ecdsaWithSHA384:\n                return { name: ECDSA, hash: { name: \"SHA-384\" } };\n            case asn1Ecc.id_ecdsaWithSHA512:\n                return { name: ECDSA, hash: { name: \"SHA-512\" } };\n            case asn1Ecc.id_ecPublicKey: {\n                if (!alg.parameters) {\n                    throw new TypeError(\"Cannot get required parameters from EC algorithm\");\n                }\n                const parameters = AsnConvert.parse(alg.parameters, asn1Ecc.ECParameters);\n                switch (parameters.namedCurve) {\n                    case asn1Ecc.id_secp256r1:\n                        return { name: ECDSA, namedCurve: \"P-256\" };\n                    case EcAlgorithm_1.SECP256K1:\n                        return { name: ECDSA, namedCurve: \"K-256\" };\n                    case asn1Ecc.id_secp384r1:\n                        return { name: ECDSA, namedCurve: \"P-384\" };\n                    case asn1Ecc.id_secp521r1:\n                        return { name: ECDSA, namedCurve: \"P-521\" };\n                    case idBrainpoolP160r1:\n                        return { name: ECDSA, namedCurve: brainpoolP160r1 };\n                    case idBrainpoolP160t1:\n                        return { name: ECDSA, namedCurve: brainpoolP160t1 };\n                    case idBrainpoolP192r1:\n                        return { name: ECDSA, namedCurve: brainpoolP192r1 };\n                    case idBrainpoolP192t1:\n                        return { name: ECDSA, namedCurve: brainpoolP192t1 };\n                    case idBrainpoolP224r1:\n                        return { name: ECDSA, namedCurve: brainpoolP224r1 };\n                    case idBrainpoolP224t1:\n                        return { name: ECDSA, namedCurve: brainpoolP224t1 };\n                    case idBrainpoolP256r1:\n                        return { name: ECDSA, namedCurve: brainpoolP256r1 };\n                    case idBrainpoolP256t1:\n                        return { name: ECDSA, namedCurve: brainpoolP256t1 };\n                    case idBrainpoolP320r1:\n                        return { name: ECDSA, namedCurve: brainpoolP320r1 };\n                    case idBrainpoolP320t1:\n                        return { name: ECDSA, namedCurve: brainpoolP320t1 };\n                    case idBrainpoolP384r1:\n                        return { name: ECDSA, namedCurve: brainpoolP384r1 };\n                    case idBrainpoolP384t1:\n                        return { name: ECDSA, namedCurve: brainpoolP384t1 };\n                    case idBrainpoolP512r1:\n                        return { name: ECDSA, namedCurve: brainpoolP512r1 };\n                    case idBrainpoolP512t1:\n                        return { name: ECDSA, namedCurve: brainpoolP512t1 };\n                }\n            }\n        }\n        return null;\n    }\n};\nEcAlgorithm.SECP256K1 = \"1.3.132.0.10\";\nEcAlgorithm = EcAlgorithm_1 = __decorate([\n    injectable()\n], EcAlgorithm);\ncontainer.registerSingleton(diAlgorithm, EcAlgorithm);\n\nconst NAME = Symbol(\"name\");\nconst VALUE = Symbol(\"value\");\nclass TextObject {\n    constructor(name, items = {}, value = \"\") {\n        this[NAME] = name;\n        this[VALUE] = value;\n        for (const key in items) {\n            this[key] = items[key];\n        }\n    }\n}\nTextObject.NAME = NAME;\nTextObject.VALUE = VALUE;\nclass DefaultAlgorithmSerializer {\n    static toTextObject(alg) {\n        const obj = new TextObject(\"Algorithm Identifier\", {}, OidSerializer.toString(alg.algorithm));\n        if (alg.parameters) {\n            switch (alg.algorithm) {\n                case asn1Ecc.id_ecPublicKey: {\n                    const ecAlg = new EcAlgorithm().toWebAlgorithm(alg);\n                    if (ecAlg && \"namedCurve\" in ecAlg) {\n                        obj[\"Named Curve\"] = ecAlg.namedCurve;\n                    }\n                    else {\n                        obj[\"Parameters\"] = alg.parameters;\n                    }\n                    break;\n                }\n                default:\n                    obj[\"Parameters\"] = alg.parameters;\n            }\n        }\n        return obj;\n    }\n}\nclass OidSerializer {\n    static toString(oid) {\n        const name = this.items[oid];\n        if (name) {\n            return name;\n        }\n        return oid;\n    }\n}\nOidSerializer.items = {\n    [asn1Rsa.id_sha1]: \"sha1\",\n    [asn1Rsa.id_sha224]: \"sha224\",\n    [asn1Rsa.id_sha256]: \"sha256\",\n    [asn1Rsa.id_sha384]: \"sha384\",\n    [asn1Rsa.id_sha512]: \"sha512\",\n    [asn1Rsa.id_rsaEncryption]: \"rsaEncryption\",\n    [asn1Rsa.id_sha1WithRSAEncryption]: \"sha1WithRSAEncryption\",\n    [asn1Rsa.id_sha224WithRSAEncryption]: \"sha224WithRSAEncryption\",\n    [asn1Rsa.id_sha256WithRSAEncryption]: \"sha256WithRSAEncryption\",\n    [asn1Rsa.id_sha384WithRSAEncryption]: \"sha384WithRSAEncryption\",\n    [asn1Rsa.id_sha512WithRSAEncryption]: \"sha512WithRSAEncryption\",\n    [asn1Ecc.id_ecPublicKey]: \"ecPublicKey\",\n    [asn1Ecc.id_ecdsaWithSHA1]: \"ecdsaWithSHA1\",\n    [asn1Ecc.id_ecdsaWithSHA224]: \"ecdsaWithSHA224\",\n    [asn1Ecc.id_ecdsaWithSHA256]: \"ecdsaWithSHA256\",\n    [asn1Ecc.id_ecdsaWithSHA384]: \"ecdsaWithSHA384\",\n    [asn1Ecc.id_ecdsaWithSHA512]: \"ecdsaWithSHA512\",\n    [asn1X509.id_kp_serverAuth]: \"TLS WWW server authentication\",\n    [asn1X509.id_kp_clientAuth]: \"TLS WWW client authentication\",\n    [asn1X509.id_kp_codeSigning]: \"Code Signing\",\n    [asn1X509.id_kp_emailProtection]: \"E-mail Protection\",\n    [asn1X509.id_kp_timeStamping]: \"Time Stamping\",\n    [asn1X509.id_kp_OCSPSigning]: \"OCSP Signing\",\n    [asn1Cms.id_signedData]: \"Signed Data\",\n};\nclass TextConverter {\n    static serialize(obj) {\n        return this.serializeObj(obj).join(\"\\n\");\n    }\n    static pad(deep = 0) {\n        return \"\".padStart(2 * deep, \" \");\n    }\n    static serializeObj(obj, deep = 0) {\n        const res = [];\n        let pad = this.pad(deep++);\n        let value = \"\";\n        const objValue = obj[TextObject.VALUE];\n        if (objValue) {\n            value = ` ${objValue}`;\n        }\n        res.push(`${pad}${obj[TextObject.NAME]}:${value}`);\n        pad = this.pad(deep);\n        for (const key in obj) {\n            if (typeof key === \"symbol\") {\n                continue;\n            }\n            const value = obj[key];\n            const keyValue = key ? `${key}: ` : \"\";\n            if (typeof value === \"string\" ||\n                typeof value === \"number\" ||\n                typeof value === \"boolean\") {\n                res.push(`${pad}${keyValue}${value}`);\n            }\n            else if (value instanceof Date) {\n                res.push(`${pad}${keyValue}${value.toUTCString()}`);\n            }\n            else if (Array.isArray(value)) {\n                for (const obj of value) {\n                    obj[TextObject.NAME] = key;\n                    res.push(...this.serializeObj(obj, deep));\n                }\n            }\n            else if (value instanceof TextObject) {\n                value[TextObject.NAME] = key;\n                res.push(...this.serializeObj(value, deep));\n            }\n            else if (BufferSourceConverter.isBufferSource(value)) {\n                if (key) {\n                    res.push(`${pad}${keyValue}`);\n                    res.push(...this.serializeBufferSource(value, deep + 1));\n                }\n                else {\n                    res.push(...this.serializeBufferSource(value, deep));\n                }\n            }\n            else if (\"toTextObject\" in value) {\n                const obj = value.toTextObject();\n                obj[TextObject.NAME] = key;\n                res.push(...this.serializeObj(obj, deep));\n            }\n            else {\n                throw new TypeError(\"Cannot serialize data in text format. Unsupported type.\");\n            }\n        }\n        return res;\n    }\n    static serializeBufferSource(buffer, deep = 0) {\n        const pad = this.pad(deep);\n        const view = BufferSourceConverter.toUint8Array(buffer);\n        const res = [];\n        for (let i = 0; i < view.length;) {\n            const row = [];\n            for (let j = 0; j < 16 && i < view.length; j++) {\n                if (j === 8) {\n                    row.push(\"\");\n                }\n                const hex = view[i++].toString(16).padStart(2, \"0\");\n                row.push(hex);\n            }\n            res.push(`${pad}${row.join(\" \")}`);\n        }\n        return res;\n    }\n    static serializeAlgorithm(alg) {\n        return this.algorithmSerializer.toTextObject(alg);\n    }\n}\nTextConverter.oidSerializer = OidSerializer;\nTextConverter.algorithmSerializer = DefaultAlgorithmSerializer;\n\nclass AsnData {\n    constructor(...args) {\n        if (args.length === 1) {\n            const asn = args[0];\n            this.rawData = AsnConvert.serialize(asn);\n            this.onInit(asn);\n        }\n        else {\n            const asn = AsnConvert.parse(args[0], args[1]);\n            this.rawData = BufferSourceConverter.toArrayBuffer(args[0]);\n            this.onInit(asn);\n        }\n    }\n    equal(data) {\n        if (data instanceof AsnData) {\n            return isEqual(data.rawData, this.rawData);\n        }\n        return false;\n    }\n    toString(format = \"text\") {\n        switch (format) {\n            case \"asn\":\n                return AsnConvert.toString(this.rawData);\n            case \"text\":\n                return TextConverter.serialize(this.toTextObject());\n            case \"hex\":\n                return Convert.ToHex(this.rawData);\n            case \"base64\":\n                return Convert.ToBase64(this.rawData);\n            case \"base64url\":\n                return Convert.ToBase64Url(this.rawData);\n            default:\n                throw TypeError(\"Argument 'format' is unsupported value\");\n        }\n    }\n    getTextName() {\n        const constructor = this.constructor;\n        return constructor.NAME;\n    }\n    toTextObject() {\n        const obj = this.toTextObjectEmpty();\n        obj[\"\"] = this.rawData;\n        return obj;\n    }\n    toTextObjectEmpty(value) {\n        return new TextObject(this.getTextName(), {}, value);\n    }\n}\nAsnData.NAME = \"ASN\";\n\nclass Extension extends AsnData {\n    constructor(...args) {\n        let raw;\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            raw = BufferSourceConverter.toArrayBuffer(args[0]);\n        }\n        else {\n            raw = AsnConvert.serialize(new Extension$1({\n                extnID: args[0],\n                critical: args[1],\n                extnValue: new OctetString(BufferSourceConverter.toArrayBuffer(args[2])),\n            }));\n        }\n        super(raw, Extension$1);\n    }\n    onInit(asn) {\n        this.type = asn.extnID;\n        this.critical = asn.critical;\n        this.value = asn.extnValue.buffer;\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        obj[\"\"] = this.value;\n        return obj;\n    }\n    toTextObjectWithoutValue() {\n        const obj = this.toTextObjectEmpty(this.critical ? \"critical\" : undefined);\n        if (obj[TextObject.NAME] === Extension.NAME) {\n            obj[TextObject.NAME] = OidSerializer.toString(this.type);\n        }\n        return obj;\n    }\n}\n\nvar _a;\nclass CryptoProvider {\n    static isCryptoKeyPair(data) {\n        return data && data.privateKey && data.publicKey;\n    }\n    static isCryptoKey(data) {\n        return data && data.usages && data.type && data.algorithm && data.extractable !== undefined;\n    }\n    constructor() {\n        this.items = new Map();\n        this[_a] = \"CryptoProvider\";\n        if (typeof self !== \"undefined\" && typeof crypto !== \"undefined\") {\n            this.set(CryptoProvider.DEFAULT, crypto);\n        }\n        else if (typeof global !== \"undefined\" && global.crypto && global.crypto.subtle) {\n            this.set(CryptoProvider.DEFAULT, global.crypto);\n        }\n    }\n    clear() {\n        this.items.clear();\n    }\n    delete(key) {\n        return this.items.delete(key);\n    }\n    forEach(callbackfn, thisArg) {\n        return this.items.forEach(callbackfn, thisArg);\n    }\n    has(key) {\n        return this.items.has(key);\n    }\n    get size() {\n        return this.items.size;\n    }\n    entries() {\n        return this.items.entries();\n    }\n    keys() {\n        return this.items.keys();\n    }\n    values() {\n        return this.items.values();\n    }\n    [Symbol.iterator]() {\n        return this.items[Symbol.iterator]();\n    }\n    get(key = CryptoProvider.DEFAULT) {\n        const crypto = this.items.get(key.toLowerCase());\n        if (!crypto) {\n            throw new Error(`Cannot get Crypto by name '${key}'`);\n        }\n        return crypto;\n    }\n    set(key, value) {\n        if (typeof key === \"string\") {\n            if (!value) {\n                throw new TypeError(\"Argument 'value' is required\");\n            }\n            this.items.set(key.toLowerCase(), value);\n        }\n        else {\n            this.items.set(CryptoProvider.DEFAULT, key);\n        }\n        return this;\n    }\n}\n_a = Symbol.toStringTag;\nCryptoProvider.DEFAULT = \"default\";\nconst cryptoProvider = new CryptoProvider();\n\nconst OID_REGEX = /^[0-2](?:\\.[1-9][0-9]*)+$/;\nfunction isOID(id) {\n    return new RegExp(OID_REGEX).test(id);\n}\nclass NameIdentifier {\n    constructor(names = {}) {\n        this.items = {};\n        for (const id in names) {\n            this.register(id, names[id]);\n        }\n    }\n    get(idOrName) {\n        return this.items[idOrName] || null;\n    }\n    findId(idOrName) {\n        if (!isOID(idOrName)) {\n            return this.get(idOrName);\n        }\n        return idOrName;\n    }\n    register(id, name) {\n        this.items[id] = name;\n        this.items[name] = id;\n    }\n}\nconst names = new NameIdentifier();\nnames.register(\"CN\", \"2.5.4.3\");\nnames.register(\"L\", \"2.5.4.7\");\nnames.register(\"ST\", \"2.5.4.8\");\nnames.register(\"O\", \"2.5.4.10\");\nnames.register(\"OU\", \"2.5.4.11\");\nnames.register(\"C\", \"2.5.4.6\");\nnames.register(\"DC\", \"0.9.2342.19200300.100.1.25\");\nnames.register(\"E\", \"1.2.840.113549.1.9.1\");\nnames.register(\"G\", \"2.5.4.42\");\nnames.register(\"I\", \"2.5.4.43\");\nnames.register(\"SN\", \"2.5.4.4\");\nnames.register(\"T\", \"2.5.4.12\");\nfunction replaceUnknownCharacter(text, char) {\n    return `\\\\${Convert.ToHex(Convert.FromUtf8String(char)).toUpperCase()}`;\n}\nfunction escape(data) {\n    return data\n        .replace(/([,+\"\\\\<>;])/g, \"\\\\$1\")\n        .replace(/^([ #])/, \"\\\\$1\")\n        .replace(/([ ]$)/, \"\\\\$1\")\n        .replace(/([\\r\\n\\t])/, replaceUnknownCharacter);\n}\nclass Name {\n    static isASCII(text) {\n        for (let i = 0; i < text.length; i++) {\n            const code = text.charCodeAt(i);\n            if (code > 0xFF) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static isPrintableString(text) {\n        return /^[A-Za-z0-9 '()+,-./:=?]*$/g.test(text);\n    }\n    constructor(data, extraNames = {}) {\n        this.extraNames = new NameIdentifier();\n        this.asn = new Name$1();\n        for (const key in extraNames) {\n            if (Object.prototype.hasOwnProperty.call(extraNames, key)) {\n                const value = extraNames[key];\n                this.extraNames.register(key, value);\n            }\n        }\n        if (typeof data === \"string\") {\n            this.asn = this.fromString(data);\n        }\n        else if (data instanceof Name$1) {\n            this.asn = data;\n        }\n        else if (BufferSourceConverter.isBufferSource(data)) {\n            this.asn = AsnConvert.parse(data, Name$1);\n        }\n        else {\n            this.asn = this.fromJSON(data);\n        }\n    }\n    getField(idOrName) {\n        const id = this.extraNames.findId(idOrName) || names.findId(idOrName);\n        const res = [];\n        for (const name of this.asn) {\n            for (const rdn of name) {\n                if (rdn.type === id) {\n                    res.push(rdn.value.toString());\n                }\n            }\n        }\n        return res;\n    }\n    getName(idOrName) {\n        return this.extraNames.get(idOrName) || names.get(idOrName);\n    }\n    toString() {\n        return this.asn.map(rdn => rdn.map(o => {\n            const type = this.getName(o.type) || o.type;\n            const value = o.value.anyValue\n                ? `#${Convert.ToHex(o.value.anyValue)}`\n                : escape(o.value.toString());\n            return `${type}=${value}`;\n        })\n            .join(\"+\"))\n            .join(\", \");\n    }\n    toJSON() {\n        var _a;\n        const json = [];\n        for (const rdn of this.asn) {\n            const jsonItem = {};\n            for (const attr of rdn) {\n                const type = this.getName(attr.type) || attr.type;\n                (_a = jsonItem[type]) !== null && _a !== void 0 ? _a : (jsonItem[type] = []);\n                jsonItem[type].push(attr.value.anyValue ? `#${Convert.ToHex(attr.value.anyValue)}` : attr.value.toString());\n            }\n            json.push(jsonItem);\n        }\n        return json;\n    }\n    fromString(data) {\n        const asn = new Name$1();\n        const regex = /(\\d\\.[\\d.]*\\d|[A-Za-z]+)=((?:\"\")|(?:\".*?[^\\\\]\")|(?:[^,+\"\\\\](?=[,+]|$))|(?:[^,+].*?(?:[^\\\\][,+]))|(?:))([,+])?/g;\n        let matches = null;\n        let level = \",\";\n        while (matches = regex.exec(`${data},`)) {\n            let [, type, value] = matches;\n            const lastChar = value[value.length - 1];\n            if (lastChar === \",\" || lastChar === \"+\") {\n                value = value.slice(0, value.length - 1);\n                matches[3] = lastChar;\n            }\n            const next = matches[3];\n            type = this.getTypeOid(type);\n            const attr = this.createAttribute(type, value);\n            if (level === \"+\") {\n                asn[asn.length - 1].push(attr);\n            }\n            else {\n                asn.push(new RelativeDistinguishedName([attr]));\n            }\n            level = next;\n        }\n        return asn;\n    }\n    fromJSON(data) {\n        const asn = new Name$1();\n        for (const item of data) {\n            const asnRdn = new RelativeDistinguishedName();\n            for (const type in item) {\n                const typeId = this.getTypeOid(type);\n                const values = item[type];\n                for (const value of values) {\n                    const asnAttr = this.createAttribute(typeId, value);\n                    asnRdn.push(asnAttr);\n                }\n            }\n            asn.push(asnRdn);\n        }\n        return asn;\n    }\n    getTypeOid(type) {\n        if (!/[\\d.]+/.test(type)) {\n            type = this.getName(type) || \"\";\n        }\n        if (!type) {\n            throw new Error(`Cannot get OID for name type '${type}'`);\n        }\n        return type;\n    }\n    createAttribute(type, value) {\n        const attr = new AttributeTypeAndValue({ type });\n        if (typeof value === \"object\") {\n            for (const key in value) {\n                switch (key) {\n                    case \"ia5String\":\n                        attr.value.ia5String = value[key];\n                        break;\n                    case \"utf8String\":\n                        attr.value.utf8String = value[key];\n                        break;\n                    case \"universalString\":\n                        attr.value.universalString = value[key];\n                        break;\n                    case \"bmpString\":\n                        attr.value.bmpString = value[key];\n                        break;\n                    case \"printableString\":\n                        attr.value.printableString = value[key];\n                        break;\n                }\n            }\n        }\n        else if (value[0] === \"#\") {\n            attr.value.anyValue = Convert.FromHex(value.slice(1));\n        }\n        else {\n            const processedValue = this.processStringValue(value);\n            if (type === this.getName(\"E\") || type === this.getName(\"DC\")) {\n                attr.value.ia5String = processedValue;\n            }\n            else {\n                if (Name.isPrintableString(processedValue)) {\n                    attr.value.printableString = processedValue;\n                }\n                else {\n                    attr.value.utf8String = processedValue;\n                }\n            }\n        }\n        return attr;\n    }\n    processStringValue(value) {\n        const quotedMatches = /\"(.*?[^\\\\])?\"/.exec(value);\n        if (quotedMatches) {\n            value = quotedMatches[1];\n        }\n        return value\n            .replace(/\\\\0a/ig, \"\\n\")\n            .replace(/\\\\0d/ig, \"\\r\")\n            .replace(/\\\\0g/ig, \"\\t\")\n            .replace(/\\\\(.)/g, \"$1\");\n    }\n    toArrayBuffer() {\n        return AsnConvert.serialize(this.asn);\n    }\n    async getThumbprint(...args) {\n        var _a;\n        let crypto;\n        let algorithm = \"SHA-1\";\n        if (args.length >= 1 && !((_a = args[0]) === null || _a === void 0 ? void 0 : _a.subtle)) {\n            algorithm = args[0] || algorithm;\n            crypto = args[1] || cryptoProvider.get();\n        }\n        else {\n            crypto = args[0] || cryptoProvider.get();\n        }\n        return await crypto.subtle.digest(algorithm, this.toArrayBuffer());\n    }\n}\n\nconst ERR_GN_CONSTRUCTOR = \"Cannot initialize GeneralName from ASN.1 data.\";\nconst ERR_GN_STRING_FORMAT = `${ERR_GN_CONSTRUCTOR} Unsupported string format in use.`;\nconst ERR_GUID = `${ERR_GN_CONSTRUCTOR} Value doesn't match to GUID regular expression.`;\nconst GUID_REGEX = /^([0-9a-f]{8})-?([0-9a-f]{4})-?([0-9a-f]{4})-?([0-9a-f]{4})-?([0-9a-f]{12})$/i;\nconst id_GUID = \"1.3.6.1.4.1.311.25.1\";\nconst id_UPN = \"1.3.6.1.4.1.311.20.2.3\";\nconst DNS = \"dns\";\nconst DN = \"dn\";\nconst EMAIL = \"email\";\nconst IP = \"ip\";\nconst URL = \"url\";\nconst GUID = \"guid\";\nconst UPN = \"upn\";\nconst REGISTERED_ID = \"id\";\nclass GeneralName extends AsnData {\n    constructor(...args) {\n        let name;\n        if (args.length === 2) {\n            switch (args[0]) {\n                case DN: {\n                    const derName = new Name(args[1]).toArrayBuffer();\n                    const asnName = AsnConvert.parse(derName, asn1X509.Name);\n                    name = new asn1X509.GeneralName({ directoryName: asnName });\n                    break;\n                }\n                case DNS:\n                    name = new asn1X509.GeneralName({ dNSName: args[1] });\n                    break;\n                case EMAIL:\n                    name = new asn1X509.GeneralName({ rfc822Name: args[1] });\n                    break;\n                case GUID: {\n                    const matches = new RegExp(GUID_REGEX, \"i\").exec(args[1]);\n                    if (!matches) {\n                        throw new Error(\"Cannot parse GUID value. Value doesn't match to regular expression\");\n                    }\n                    const hex = matches\n                        .slice(1)\n                        .map((o, i) => {\n                        if (i < 3) {\n                            return Convert.ToHex(new Uint8Array(Convert.FromHex(o)).reverse());\n                        }\n                        return o;\n                    })\n                        .join(\"\");\n                    name = new asn1X509.GeneralName({\n                        otherName: new asn1X509.OtherName({\n                            typeId: id_GUID,\n                            value: AsnConvert.serialize(new OctetString(Convert.FromHex(hex))),\n                        }),\n                    });\n                    break;\n                }\n                case IP:\n                    name = new asn1X509.GeneralName({ iPAddress: args[1] });\n                    break;\n                case REGISTERED_ID:\n                    name = new asn1X509.GeneralName({ registeredID: args[1] });\n                    break;\n                case UPN: {\n                    name = new asn1X509.GeneralName({\n                        otherName: new asn1X509.OtherName({\n                            typeId: id_UPN,\n                            value: AsnConvert.serialize(AsnUtf8StringConverter.toASN(args[1])),\n                        })\n                    });\n                    break;\n                }\n                case URL:\n                    name = new asn1X509.GeneralName({ uniformResourceIdentifier: args[1] });\n                    break;\n                default:\n                    throw new Error(\"Cannot create GeneralName. Unsupported type of the name\");\n            }\n        }\n        else if (BufferSourceConverter.isBufferSource(args[0])) {\n            name = AsnConvert.parse(args[0], asn1X509.GeneralName);\n        }\n        else {\n            name = args[0];\n        }\n        super(name);\n    }\n    onInit(asn) {\n        if (asn.dNSName != undefined) {\n            this.type = DNS;\n            this.value = asn.dNSName;\n        }\n        else if (asn.rfc822Name != undefined) {\n            this.type = EMAIL;\n            this.value = asn.rfc822Name;\n        }\n        else if (asn.iPAddress != undefined) {\n            this.type = IP;\n            this.value = asn.iPAddress;\n        }\n        else if (asn.uniformResourceIdentifier != undefined) {\n            this.type = URL;\n            this.value = asn.uniformResourceIdentifier;\n        }\n        else if (asn.registeredID != undefined) {\n            this.type = REGISTERED_ID;\n            this.value = asn.registeredID;\n        }\n        else if (asn.directoryName != undefined) {\n            this.type = DN;\n            this.value = new Name(asn.directoryName).toString();\n        }\n        else if (asn.otherName != undefined) {\n            if (asn.otherName.typeId === id_GUID) {\n                this.type = GUID;\n                const guid = AsnConvert.parse(asn.otherName.value, OctetString);\n                const matches = new RegExp(GUID_REGEX, \"i\").exec(Convert.ToHex(guid));\n                if (!matches) {\n                    throw new Error(ERR_GUID);\n                }\n                this.value = matches\n                    .slice(1)\n                    .map((o, i) => {\n                    if (i < 3) {\n                        return Convert.ToHex(new Uint8Array(Convert.FromHex(o)).reverse());\n                    }\n                    return o;\n                })\n                    .join(\"-\");\n            }\n            else if (asn.otherName.typeId === id_UPN) {\n                this.type = UPN;\n                this.value = AsnConvert.parse(asn.otherName.value, asn1X509.DirectoryString).toString();\n            }\n            else {\n                throw new Error(ERR_GN_STRING_FORMAT);\n            }\n        }\n        else {\n            throw new Error(ERR_GN_STRING_FORMAT);\n        }\n    }\n    toJSON() {\n        return {\n            type: this.type,\n            value: this.value,\n        };\n    }\n    toTextObject() {\n        let type;\n        switch (this.type) {\n            case DN:\n            case DNS:\n            case GUID:\n            case IP:\n            case REGISTERED_ID:\n            case UPN:\n            case URL:\n                type = this.type.toUpperCase();\n                break;\n            case EMAIL:\n                type = \"Email\";\n                break;\n            default:\n                throw new Error(\"Unsupported GeneralName type\");\n        }\n        let value = this.value;\n        if (this.type === REGISTERED_ID) {\n            value = OidSerializer.toString(value);\n        }\n        return new TextObject(type, undefined, value);\n    }\n}\nclass GeneralNames extends AsnData {\n    constructor(params) {\n        let names;\n        if (params instanceof asn1X509.GeneralNames) {\n            names = params;\n        }\n        else if (Array.isArray(params)) {\n            const items = [];\n            for (const name of params) {\n                if (name instanceof asn1X509.GeneralName) {\n                    items.push(name);\n                }\n                else {\n                    const asnName = AsnConvert.parse(new GeneralName(name.type, name.value).rawData, asn1X509.GeneralName);\n                    items.push(asnName);\n                }\n            }\n            names = new asn1X509.GeneralNames(items);\n        }\n        else if (BufferSourceConverter.isBufferSource(params)) {\n            names = AsnConvert.parse(params, asn1X509.GeneralNames);\n        }\n        else {\n            throw new Error(\"Cannot initialize GeneralNames. Incorrect incoming arguments\");\n        }\n        super(names);\n    }\n    onInit(asn) {\n        const items = [];\n        for (const asnName of asn) {\n            let name = null;\n            try {\n                name = new GeneralName(asnName);\n            }\n            catch {\n                continue;\n            }\n            items.push(name);\n        }\n        this.items = items;\n    }\n    toJSON() {\n        return this.items.map(o => o.toJSON());\n    }\n    toTextObject() {\n        const res = super.toTextObjectEmpty();\n        for (const name of this.items) {\n            const nameObj = name.toTextObject();\n            let field = res[nameObj[TextObject.NAME]];\n            if (!Array.isArray(field)) {\n                field = [];\n                res[nameObj[TextObject.NAME]] = field;\n            }\n            field.push(nameObj);\n        }\n        return res;\n    }\n}\nGeneralNames.NAME = \"GeneralNames\";\n\nconst rPaddingTag = \"-{5}\";\nconst rEolChars = \"\\\\n\";\nconst rNameTag = `[^${rEolChars}]+`;\nconst rBeginTag = `${rPaddingTag}BEGIN (${rNameTag}(?=${rPaddingTag}))${rPaddingTag}`;\nconst rEndTag = `${rPaddingTag}END \\\\1${rPaddingTag}`;\nconst rEolGroup = \"\\\\n\";\nconst rHeaderKey = `[^:${rEolChars}]+`;\nconst rHeaderValue = `(?:[^${rEolChars}]+${rEolGroup}(?: +[^${rEolChars}]+${rEolGroup})*)`;\nconst rBase64Chars = \"[a-zA-Z0-9=+/]+\";\nconst rBase64 = `(?:${rBase64Chars}${rEolGroup})+`;\nconst rPem = `${rBeginTag}${rEolGroup}(?:((?:${rHeaderKey}: ${rHeaderValue})+))?${rEolGroup}?(${rBase64})${rEndTag}`;\nclass PemConverter {\n    static isPem(data) {\n        return typeof data === \"string\"\n            && new RegExp(rPem, \"g\").test(data.replace(/\\r/g, \"\"));\n    }\n    static decodeWithHeaders(pem) {\n        pem = pem.replace(/\\r/g, \"\");\n        const pattern = new RegExp(rPem, \"g\");\n        const res = [];\n        let matches = null;\n        while (matches = pattern.exec(pem)) {\n            const base64 = matches[3]\n                .replace(new RegExp(`[${rEolChars}]+`, \"g\"), \"\");\n            const pemStruct = {\n                type: matches[1],\n                headers: [],\n                rawData: Convert.FromBase64(base64),\n            };\n            const headersString = matches[2];\n            if (headersString) {\n                const headers = headersString.split(new RegExp(rEolGroup, \"g\"));\n                let lastHeader = null;\n                for (const header of headers) {\n                    const [key, value] = header.split(/:(.*)/);\n                    if (value === undefined) {\n                        if (!lastHeader) {\n                            throw new Error(\"Cannot parse PEM string. Incorrect header value\");\n                        }\n                        lastHeader.value += key.trim();\n                    }\n                    else {\n                        if (lastHeader) {\n                            pemStruct.headers.push(lastHeader);\n                        }\n                        lastHeader = { key, value: value.trim() };\n                    }\n                }\n                if (lastHeader) {\n                    pemStruct.headers.push(lastHeader);\n                }\n            }\n            res.push(pemStruct);\n        }\n        return res;\n    }\n    static decode(pem) {\n        const blocks = this.decodeWithHeaders(pem);\n        return blocks.map(o => o.rawData);\n    }\n    static decodeFirst(pem) {\n        const items = this.decode(pem);\n        if (!items.length) {\n            throw new RangeError(\"PEM string doesn't contain any objects\");\n        }\n        return items[0];\n    }\n    static encode(rawData, tag) {\n        if (Array.isArray(rawData)) {\n            const raws = new Array();\n            if (tag) {\n                rawData.forEach(element => {\n                    if (!BufferSourceConverter.isBufferSource(element)) {\n                        throw new TypeError(\"Cannot encode array of BufferSource in PEM format. Not all items of the array are BufferSource\");\n                    }\n                    raws.push(this.encodeStruct({\n                        type: tag,\n                        rawData: BufferSourceConverter.toArrayBuffer(element),\n                    }));\n                });\n            }\n            else {\n                rawData.forEach(element => {\n                    if (!(\"type\" in element)) {\n                        throw new TypeError(\"Cannot encode array of PemStruct in PEM format. Not all items of the array are PemStrut\");\n                    }\n                    raws.push(this.encodeStruct(element));\n                });\n            }\n            return raws.join(\"\\n\");\n        }\n        else {\n            if (!tag) {\n                throw new Error(\"Required argument 'tag' is missed\");\n            }\n            return this.encodeStruct({\n                type: tag,\n                rawData: BufferSourceConverter.toArrayBuffer(rawData),\n            });\n        }\n    }\n    static encodeStruct(pem) {\n        var _a;\n        const upperCaseType = pem.type.toLocaleUpperCase();\n        const res = [];\n        res.push(`-----BEGIN ${upperCaseType}-----`);\n        if ((_a = pem.headers) === null || _a === void 0 ? void 0 : _a.length) {\n            for (const header of pem.headers) {\n                res.push(`${header.key}: ${header.value}`);\n            }\n            res.push(\"\");\n        }\n        const base64 = Convert.ToBase64(pem.rawData);\n        let sliced;\n        let offset = 0;\n        const rows = Array();\n        while (offset < base64.length) {\n            if (base64.length - offset < 64) {\n                sliced = base64.substring(offset);\n            }\n            else {\n                sliced = base64.substring(offset, offset + 64);\n                offset += 64;\n            }\n            if (sliced.length !== 0) {\n                rows.push(sliced);\n                if (sliced.length < 64) {\n                    break;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        res.push(...rows);\n        res.push(`-----END ${upperCaseType}-----`);\n        return res.join(\"\\n\");\n    }\n}\nPemConverter.CertificateTag = \"CERTIFICATE\";\nPemConverter.CrlTag = \"CRL\";\nPemConverter.CertificateRequestTag = \"CERTIFICATE REQUEST\";\nPemConverter.PublicKeyTag = \"PUBLIC KEY\";\nPemConverter.PrivateKeyTag = \"PRIVATE KEY\";\n\nclass PemData extends AsnData {\n    static isAsnEncoded(data) {\n        return BufferSourceConverter.isBufferSource(data) || typeof data === \"string\";\n    }\n    static toArrayBuffer(raw) {\n        if (typeof raw === \"string\") {\n            if (PemConverter.isPem(raw)) {\n                return PemConverter.decode(raw)[0];\n            }\n            else if (Convert.isHex(raw)) {\n                return Convert.FromHex(raw);\n            }\n            else if (Convert.isBase64(raw)) {\n                return Convert.FromBase64(raw);\n            }\n            else if (Convert.isBase64Url(raw)) {\n                return Convert.FromBase64Url(raw);\n            }\n            else {\n                throw new TypeError(\"Unsupported format of 'raw' argument. Must be one of DER, PEM, HEX, Base64, or Base4Url\");\n            }\n        }\n        else {\n            const stringRaw = Convert.ToBinary(raw);\n            if (PemConverter.isPem(stringRaw)) {\n                return PemConverter.decode(stringRaw)[0];\n            }\n            else if (Convert.isHex(stringRaw)) {\n                return Convert.FromHex(stringRaw);\n            }\n            else if (Convert.isBase64(stringRaw)) {\n                return Convert.FromBase64(stringRaw);\n            }\n            else if (Convert.isBase64Url(stringRaw)) {\n                return Convert.FromBase64Url(stringRaw);\n            }\n            return BufferSourceConverter.toArrayBuffer(raw);\n        }\n    }\n    constructor(...args) {\n        if (PemData.isAsnEncoded(args[0])) {\n            super(PemData.toArrayBuffer(args[0]), args[1]);\n        }\n        else {\n            super(args[0]);\n        }\n    }\n    toString(format = \"pem\") {\n        switch (format) {\n            case \"pem\":\n                return PemConverter.encode(this.rawData, this.tag);\n            default:\n                return super.toString(format);\n        }\n    }\n}\n\nclass PublicKey extends PemData {\n    static async create(data, crypto = cryptoProvider.get()) {\n        if (data instanceof PublicKey) {\n            return data;\n        }\n        else if (CryptoProvider.isCryptoKey(data)) {\n            if (data.type !== \"public\") {\n                throw new TypeError(\"Public key is required\");\n            }\n            const spki = await crypto.subtle.exportKey(\"spki\", data);\n            return new PublicKey(spki);\n        }\n        else if (data.publicKey) {\n            return data.publicKey;\n        }\n        else if (BufferSourceConverter.isBufferSource(data)) {\n            return new PublicKey(data);\n        }\n        else {\n            throw new TypeError(\"Unsupported PublicKeyType\");\n        }\n    }\n    constructor(param) {\n        if (PemData.isAsnEncoded(param)) {\n            super(param, SubjectPublicKeyInfo);\n        }\n        else {\n            super(param);\n        }\n        this.tag = PemConverter.PublicKeyTag;\n    }\n    async export(...args) {\n        let crypto;\n        let keyUsages = [\"verify\"];\n        let algorithm = { hash: \"SHA-256\", ...this.algorithm };\n        if (args.length > 1) {\n            algorithm = args[0] || algorithm;\n            keyUsages = args[1] || keyUsages;\n            crypto = args[2] || cryptoProvider.get();\n        }\n        else {\n            crypto = args[0] || cryptoProvider.get();\n        }\n        let raw = this.rawData;\n        const asnSpki = AsnConvert.parse(this.rawData, SubjectPublicKeyInfo);\n        if (asnSpki.algorithm.algorithm === id_RSASSA_PSS) {\n            raw = convertSpkiToRsaPkcs1(asnSpki, raw);\n        }\n        return crypto.subtle.importKey(\"spki\", raw, algorithm, true, keyUsages);\n    }\n    onInit(asn) {\n        const algProv = container.resolve(diAlgorithmProvider);\n        const algorithm = this.algorithm = algProv.toWebAlgorithm(asn.algorithm);\n        switch (asn.algorithm.algorithm) {\n            case id_rsaEncryption:\n                {\n                    const rsaPublicKey = AsnConvert.parse(asn.subjectPublicKey, RSAPublicKey);\n                    const modulus = BufferSourceConverter.toUint8Array(rsaPublicKey.modulus);\n                    algorithm.publicExponent = BufferSourceConverter.toUint8Array(rsaPublicKey.publicExponent);\n                    algorithm.modulusLength = (!modulus[0] ? modulus.slice(1) : modulus).byteLength << 3;\n                    break;\n                }\n        }\n    }\n    async getThumbprint(...args) {\n        var _a;\n        let crypto;\n        let algorithm = \"SHA-1\";\n        if (args.length >= 1 && !((_a = args[0]) === null || _a === void 0 ? void 0 : _a.subtle)) {\n            algorithm = args[0] || algorithm;\n            crypto = args[1] || cryptoProvider.get();\n        }\n        else {\n            crypto = args[0] || cryptoProvider.get();\n        }\n        return await crypto.subtle.digest(algorithm, this.rawData);\n    }\n    async getKeyIdentifier(...args) {\n        let crypto;\n        let algorithm = \"SHA-1\";\n        if (args.length === 1) {\n            if (typeof args[0] === \"string\") {\n                algorithm = args[0];\n                crypto = cryptoProvider.get();\n            }\n            else {\n                crypto = args[0];\n            }\n        }\n        else if (args.length === 2) {\n            algorithm = args[0];\n            crypto = args[1];\n        }\n        else {\n            crypto = cryptoProvider.get();\n        }\n        const asn = AsnConvert.parse(this.rawData, SubjectPublicKeyInfo);\n        return await crypto.subtle.digest(algorithm, asn.subjectPublicKey);\n    }\n    toTextObject() {\n        const obj = this.toTextObjectEmpty();\n        const asn = AsnConvert.parse(this.rawData, SubjectPublicKeyInfo);\n        obj[\"Algorithm\"] = TextConverter.serializeAlgorithm(asn.algorithm);\n        switch (asn.algorithm.algorithm) {\n            case id_ecPublicKey:\n                obj[\"EC Point\"] = asn.subjectPublicKey;\n                break;\n            case id_rsaEncryption:\n            default:\n                obj[\"Raw Data\"] = asn.subjectPublicKey;\n        }\n        return obj;\n    }\n}\nfunction convertSpkiToRsaPkcs1(asnSpki, raw) {\n    asnSpki.algorithm = new AlgorithmIdentifier({\n        algorithm: id_rsaEncryption,\n        parameters: null,\n    });\n    raw = AsnConvert.serialize(asnSpki);\n    return raw;\n}\n\nclass AuthorityKeyIdentifierExtension extends Extension {\n    static async create(param, critical = false, crypto = cryptoProvider.get()) {\n        if (\"name\" in param && \"serialNumber\" in param) {\n            return new AuthorityKeyIdentifierExtension(param, critical);\n        }\n        const key = await PublicKey.create(param, crypto);\n        const id = await key.getKeyIdentifier(crypto);\n        return new AuthorityKeyIdentifierExtension(Convert.ToHex(id), critical);\n    }\n    constructor(...args) {\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n        }\n        else if (typeof args[0] === \"string\") {\n            const value = new asn1X509.AuthorityKeyIdentifier({ keyIdentifier: new asn1X509.KeyIdentifier(Convert.FromHex(args[0])) });\n            super(asn1X509.id_ce_authorityKeyIdentifier, args[1], AsnConvert.serialize(value));\n        }\n        else {\n            const certId = args[0];\n            const certIdName = certId.name instanceof GeneralNames\n                ? AsnConvert.parse(certId.name.rawData, asn1X509.GeneralNames)\n                : certId.name;\n            const value = new asn1X509.AuthorityKeyIdentifier({\n                authorityCertIssuer: certIdName,\n                authorityCertSerialNumber: Convert.FromHex(certId.serialNumber),\n            });\n            super(asn1X509.id_ce_authorityKeyIdentifier, args[1], AsnConvert.serialize(value));\n        }\n    }\n    onInit(asn) {\n        super.onInit(asn);\n        const aki = AsnConvert.parse(asn.extnValue, asn1X509.AuthorityKeyIdentifier);\n        if (aki.keyIdentifier) {\n            this.keyId = Convert.ToHex(aki.keyIdentifier);\n        }\n        if (aki.authorityCertIssuer || aki.authorityCertSerialNumber) {\n            this.certId = {\n                name: aki.authorityCertIssuer || [],\n                serialNumber: aki.authorityCertSerialNumber ? Convert.ToHex(aki.authorityCertSerialNumber) : \"\",\n            };\n        }\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        const asn = AsnConvert.parse(this.value, asn1X509.AuthorityKeyIdentifier);\n        if (asn.authorityCertIssuer) {\n            obj[\"Authority Issuer\"] = new GeneralNames(asn.authorityCertIssuer).toTextObject();\n        }\n        if (asn.authorityCertSerialNumber) {\n            obj[\"Authority Serial Number\"] = asn.authorityCertSerialNumber;\n        }\n        if (asn.keyIdentifier) {\n            obj[\"\"] = asn.keyIdentifier;\n        }\n        return obj;\n    }\n}\nAuthorityKeyIdentifierExtension.NAME = \"Authority Key Identifier\";\n\nclass BasicConstraintsExtension extends Extension {\n    constructor(...args) {\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n            const value = AsnConvert.parse(this.value, BasicConstraints);\n            this.ca = value.cA;\n            this.pathLength = value.pathLenConstraint;\n        }\n        else {\n            const value = new BasicConstraints({\n                cA: args[0],\n                pathLenConstraint: args[1],\n            });\n            super(id_ce_basicConstraints, args[2], AsnConvert.serialize(value));\n            this.ca = args[0];\n            this.pathLength = args[1];\n        }\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        if (this.ca) {\n            obj[\"CA\"] = this.ca;\n        }\n        if (this.pathLength !== undefined) {\n            obj[\"Path Length\"] = this.pathLength;\n        }\n        return obj;\n    }\n}\nBasicConstraintsExtension.NAME = \"Basic Constraints\";\n\nvar ExtendedKeyUsage;\n(function (ExtendedKeyUsage) {\n    ExtendedKeyUsage[\"serverAuth\"] = \"1.3.6.1.5.5.7.3.1\";\n    ExtendedKeyUsage[\"clientAuth\"] = \"1.3.6.1.5.5.7.3.2\";\n    ExtendedKeyUsage[\"codeSigning\"] = \"1.3.6.1.5.5.7.3.3\";\n    ExtendedKeyUsage[\"emailProtection\"] = \"1.3.6.1.5.5.7.3.4\";\n    ExtendedKeyUsage[\"timeStamping\"] = \"1.3.6.1.5.5.7.3.8\";\n    ExtendedKeyUsage[\"ocspSigning\"] = \"1.3.6.1.5.5.7.3.9\";\n})(ExtendedKeyUsage || (ExtendedKeyUsage = {}));\nclass ExtendedKeyUsageExtension extends Extension {\n    constructor(...args) {\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n            const value = AsnConvert.parse(this.value, asn1X509.ExtendedKeyUsage);\n            this.usages = value.map(o => o);\n        }\n        else {\n            const value = new asn1X509.ExtendedKeyUsage(args[0]);\n            super(asn1X509.id_ce_extKeyUsage, args[1], AsnConvert.serialize(value));\n            this.usages = args[0];\n        }\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        obj[\"\"] = this.usages.map(o => OidSerializer.toString(o)).join(\", \");\n        return obj;\n    }\n}\nExtendedKeyUsageExtension.NAME = \"Extended Key Usages\";\n\nvar KeyUsageFlags;\n(function (KeyUsageFlags) {\n    KeyUsageFlags[KeyUsageFlags[\"digitalSignature\"] = 1] = \"digitalSignature\";\n    KeyUsageFlags[KeyUsageFlags[\"nonRepudiation\"] = 2] = \"nonRepudiation\";\n    KeyUsageFlags[KeyUsageFlags[\"keyEncipherment\"] = 4] = \"keyEncipherment\";\n    KeyUsageFlags[KeyUsageFlags[\"dataEncipherment\"] = 8] = \"dataEncipherment\";\n    KeyUsageFlags[KeyUsageFlags[\"keyAgreement\"] = 16] = \"keyAgreement\";\n    KeyUsageFlags[KeyUsageFlags[\"keyCertSign\"] = 32] = \"keyCertSign\";\n    KeyUsageFlags[KeyUsageFlags[\"cRLSign\"] = 64] = \"cRLSign\";\n    KeyUsageFlags[KeyUsageFlags[\"encipherOnly\"] = 128] = \"encipherOnly\";\n    KeyUsageFlags[KeyUsageFlags[\"decipherOnly\"] = 256] = \"decipherOnly\";\n})(KeyUsageFlags || (KeyUsageFlags = {}));\nclass KeyUsagesExtension extends Extension {\n    constructor(...args) {\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n            const value = AsnConvert.parse(this.value, KeyUsage);\n            this.usages = value.toNumber();\n        }\n        else {\n            const value = new KeyUsage(args[0]);\n            super(id_ce_keyUsage, args[1], AsnConvert.serialize(value));\n            this.usages = args[0];\n        }\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        const asn = AsnConvert.parse(this.value, KeyUsage);\n        obj[\"\"] = asn.toJSON().join(\", \");\n        return obj;\n    }\n}\nKeyUsagesExtension.NAME = \"Key Usages\";\n\nclass SubjectKeyIdentifierExtension extends Extension {\n    static async create(publicKey, critical = false, crypto = cryptoProvider.get()) {\n        const key = await PublicKey.create(publicKey, crypto);\n        const id = await key.getKeyIdentifier(crypto);\n        return new SubjectKeyIdentifierExtension(Convert.ToHex(id), critical);\n    }\n    constructor(...args) {\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n            const value = AsnConvert.parse(this.value, asn1X509.SubjectKeyIdentifier);\n            this.keyId = Convert.ToHex(value);\n        }\n        else {\n            const identifier = typeof args[0] === \"string\"\n                ? Convert.FromHex(args[0])\n                : args[0];\n            const value = new asn1X509.SubjectKeyIdentifier(identifier);\n            super(asn1X509.id_ce_subjectKeyIdentifier, args[1], AsnConvert.serialize(value));\n            this.keyId = Convert.ToHex(identifier);\n        }\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        const asn = AsnConvert.parse(this.value, asn1X509.SubjectKeyIdentifier);\n        obj[\"\"] = asn;\n        return obj;\n    }\n}\nSubjectKeyIdentifierExtension.NAME = \"Subject Key Identifier\";\n\nclass SubjectAlternativeNameExtension extends Extension {\n    constructor(...args) {\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n        }\n        else {\n            super(asn1X509.id_ce_subjectAltName, args[1], new GeneralNames(args[0] || []).rawData);\n        }\n    }\n    onInit(asn) {\n        super.onInit(asn);\n        const value = AsnConvert.parse(asn.extnValue, asn1X509.SubjectAlternativeName);\n        this.names = new GeneralNames(value);\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        const namesObj = this.names.toTextObject();\n        for (const key in namesObj) {\n            obj[key] = namesObj[key];\n        }\n        return obj;\n    }\n}\nSubjectAlternativeNameExtension.NAME = \"Subject Alternative Name\";\n\nclass ExtensionFactory {\n    static register(id, type) {\n        this.items.set(id, type);\n    }\n    static create(data) {\n        const extension = new Extension(data);\n        const Type = this.items.get(extension.type);\n        if (Type) {\n            return new Type(data);\n        }\n        return extension;\n    }\n}\nExtensionFactory.items = new Map();\n\nclass CertificatePolicyExtension extends Extension {\n    constructor(...args) {\n        var _a;\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n            const asnPolicies = AsnConvert.parse(this.value, asn1X509.CertificatePolicies);\n            this.policies = asnPolicies.map(o => o.policyIdentifier);\n        }\n        else {\n            const policies = args[0];\n            const critical = (_a = args[1]) !== null && _a !== void 0 ? _a : false;\n            const value = new asn1X509.CertificatePolicies(policies.map(o => (new asn1X509.PolicyInformation({\n                policyIdentifier: o,\n            }))));\n            super(asn1X509.id_ce_certificatePolicies, critical, AsnConvert.serialize(value));\n            this.policies = policies;\n        }\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        obj[\"Policy\"] = this.policies.map(o => new TextObject(\"\", {}, OidSerializer.toString(o)));\n        return obj;\n    }\n}\nCertificatePolicyExtension.NAME = \"Certificate Policies\";\nExtensionFactory.register(asn1X509.id_ce_certificatePolicies, CertificatePolicyExtension);\n\nclass CRLDistributionPointsExtension extends Extension {\n    constructor(...args) {\n        var _a;\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n        }\n        else if (Array.isArray(args[0]) && typeof args[0][0] === \"string\") {\n            const urls = args[0];\n            const dps = urls.map(url => {\n                return new asn1X509.DistributionPoint({\n                    distributionPoint: new asn1X509.DistributionPointName({\n                        fullName: [new asn1X509.GeneralName({ uniformResourceIdentifier: url })],\n                    }),\n                });\n            });\n            const value = new asn1X509.CRLDistributionPoints(dps);\n            super(asn1X509.id_ce_cRLDistributionPoints, args[1], AsnConvert.serialize(value));\n        }\n        else {\n            const value = new asn1X509.CRLDistributionPoints(args[0]);\n            super(asn1X509.id_ce_cRLDistributionPoints, args[1], AsnConvert.serialize(value));\n        }\n        (_a = this.distributionPoints) !== null && _a !== void 0 ? _a : (this.distributionPoints = []);\n    }\n    onInit(asn) {\n        super.onInit(asn);\n        const crlExt = AsnConvert.parse(asn.extnValue, asn1X509.CRLDistributionPoints);\n        this.distributionPoints = crlExt;\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        obj[\"Distribution Point\"] = this.distributionPoints.map(dp => {\n            var _a;\n            const dpObj = {};\n            if (dp.distributionPoint) {\n                dpObj[\"\"] = (_a = dp.distributionPoint.fullName) === null || _a === void 0 ? void 0 : _a.map(name => new GeneralName(name).toString()).join(\", \");\n            }\n            if (dp.reasons) {\n                dpObj[\"Reasons\"] = dp.reasons.toString();\n            }\n            if (dp.cRLIssuer) {\n                dpObj[\"CRL Issuer\"] = dp.cRLIssuer.map(issuer => issuer.toString()).join(\", \");\n            }\n            return dpObj;\n        });\n        return obj;\n    }\n}\nCRLDistributionPointsExtension.NAME = \"CRL Distribution Points\";\n\nclass AuthorityInfoAccessExtension extends Extension {\n    constructor(...args) {\n        var _a, _b, _c, _d;\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n        }\n        else if (args[0] instanceof asn1X509.AuthorityInfoAccessSyntax) {\n            const value = new asn1X509.AuthorityInfoAccessSyntax(args[0]);\n            super(asn1X509.id_pe_authorityInfoAccess, args[1], AsnConvert.serialize(value));\n        }\n        else {\n            const params = args[0];\n            const value = new asn1X509.AuthorityInfoAccessSyntax();\n            addAccessDescriptions(value, params, asn1X509.id_ad_ocsp, \"ocsp\");\n            addAccessDescriptions(value, params, asn1X509.id_ad_caIssuers, \"caIssuers\");\n            addAccessDescriptions(value, params, asn1X509.id_ad_timeStamping, \"timeStamping\");\n            addAccessDescriptions(value, params, asn1X509.id_ad_caRepository, \"caRepository\");\n            super(asn1X509.id_pe_authorityInfoAccess, args[1], AsnConvert.serialize(value));\n        }\n        (_a = this.ocsp) !== null && _a !== void 0 ? _a : (this.ocsp = []);\n        (_b = this.caIssuers) !== null && _b !== void 0 ? _b : (this.caIssuers = []);\n        (_c = this.timeStamping) !== null && _c !== void 0 ? _c : (this.timeStamping = []);\n        (_d = this.caRepository) !== null && _d !== void 0 ? _d : (this.caRepository = []);\n    }\n    onInit(asn) {\n        super.onInit(asn);\n        this.ocsp = [];\n        this.caIssuers = [];\n        this.timeStamping = [];\n        this.caRepository = [];\n        const aia = AsnConvert.parse(asn.extnValue, asn1X509.AuthorityInfoAccessSyntax);\n        aia.forEach(accessDescription => {\n            switch (accessDescription.accessMethod) {\n                case asn1X509.id_ad_ocsp:\n                    this.ocsp.push(new GeneralName(accessDescription.accessLocation));\n                    break;\n                case asn1X509.id_ad_caIssuers:\n                    this.caIssuers.push(new GeneralName(accessDescription.accessLocation));\n                    break;\n                case asn1X509.id_ad_timeStamping:\n                    this.timeStamping.push(new GeneralName(accessDescription.accessLocation));\n                    break;\n                case asn1X509.id_ad_caRepository:\n                    this.caRepository.push(new GeneralName(accessDescription.accessLocation));\n                    break;\n            }\n        });\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        if (this.ocsp.length) {\n            addUrlsToObject(obj, \"OCSP\", this.ocsp);\n        }\n        if (this.caIssuers.length) {\n            addUrlsToObject(obj, \"CA Issuers\", this.caIssuers);\n        }\n        if (this.timeStamping.length) {\n            addUrlsToObject(obj, \"Time Stamping\", this.timeStamping);\n        }\n        if (this.caRepository.length) {\n            addUrlsToObject(obj, \"CA Repository\", this.caRepository);\n        }\n        return obj;\n    }\n}\nAuthorityInfoAccessExtension.NAME = \"Authority Info Access\";\nfunction addUrlsToObject(obj, key, urls) {\n    if (urls.length === 1) {\n        obj[key] = urls[0].toTextObject();\n    }\n    else {\n        const names = new TextObject(\"\");\n        urls.forEach((name, index) => {\n            const nameObj = name.toTextObject();\n            const indexedKey = `${nameObj[TextObject.NAME]} ${index + 1}`;\n            let field = names[indexedKey];\n            if (!Array.isArray(field)) {\n                field = [];\n                names[indexedKey] = field;\n            }\n            field.push(nameObj);\n        });\n        obj[key] = names;\n    }\n}\nfunction addAccessDescriptions(value, params, method, key) {\n    const items = params[key];\n    if (items) {\n        const array = Array.isArray(items) ? items : [items];\n        array.forEach(url => {\n            if (typeof url === \"string\") {\n                url = new GeneralName(\"url\", url);\n            }\n            value.push(new asn1X509.AccessDescription({\n                accessMethod: method,\n                accessLocation: AsnConvert.parse(url.rawData, asn1X509.GeneralName),\n            }));\n        });\n    }\n}\n\nclass Attribute extends AsnData {\n    constructor(...args) {\n        let raw;\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            raw = BufferSourceConverter.toArrayBuffer(args[0]);\n        }\n        else {\n            const type = args[0];\n            const values = Array.isArray(args[1]) ? args[1].map(o => BufferSourceConverter.toArrayBuffer(o)) : [];\n            raw = AsnConvert.serialize(new Attribute$1({ type, values }));\n        }\n        super(raw, Attribute$1);\n    }\n    onInit(asn) {\n        this.type = asn.type;\n        this.values = asn.values;\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        obj[\"Value\"] = this.values.map(o => new TextObject(\"\", { \"\": o }));\n        return obj;\n    }\n    toTextObjectWithoutValue() {\n        const obj = this.toTextObjectEmpty();\n        if (obj[TextObject.NAME] === Attribute.NAME) {\n            obj[TextObject.NAME] = OidSerializer.toString(this.type);\n        }\n        return obj;\n    }\n}\nAttribute.NAME = \"Attribute\";\n\nclass ChallengePasswordAttribute extends Attribute {\n    constructor(...args) {\n        var _a;\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n        }\n        else {\n            const value = new asnPkcs9.ChallengePassword({\n                printableString: args[0],\n            });\n            super(asnPkcs9.id_pkcs9_at_challengePassword, [AsnConvert.serialize(value)]);\n        }\n        (_a = this.password) !== null && _a !== void 0 ? _a : (this.password = \"\");\n    }\n    onInit(asn) {\n        super.onInit(asn);\n        if (this.values[0]) {\n            const value = AsnConvert.parse(this.values[0], asnPkcs9.ChallengePassword);\n            this.password = value.toString();\n        }\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        obj[TextObject.VALUE] = this.password;\n        return obj;\n    }\n}\nChallengePasswordAttribute.NAME = \"Challenge Password\";\n\nclass ExtensionsAttribute extends Attribute {\n    constructor(...args) {\n        var _a;\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n        }\n        else {\n            const extensions = args[0];\n            const value = new asn1X509.Extensions();\n            for (const extension of extensions) {\n                value.push(AsnConvert.parse(extension.rawData, asn1X509.Extension));\n            }\n            super(asnPkcs9.id_pkcs9_at_extensionRequest, [AsnConvert.serialize(value)]);\n        }\n        (_a = this.items) !== null && _a !== void 0 ? _a : (this.items = []);\n    }\n    onInit(asn) {\n        super.onInit(asn);\n        if (this.values[0]) {\n            const value = AsnConvert.parse(this.values[0], asn1X509.Extensions);\n            this.items = value.map(o => ExtensionFactory.create(AsnConvert.serialize(o)));\n        }\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        const extensions = this.items.map(o => o.toTextObject());\n        for (const extension of extensions) {\n            obj[extension[TextObject.NAME]] = extension;\n        }\n        return obj;\n    }\n}\nExtensionsAttribute.NAME = \"Extensions\";\n\nclass AttributeFactory {\n    static register(id, type) {\n        this.items.set(id, type);\n    }\n    static create(data) {\n        const attribute = new Attribute(data);\n        const Type = this.items.get(attribute.type);\n        if (Type) {\n            return new Type(data);\n        }\n        return attribute;\n    }\n}\nAttributeFactory.items = new Map();\n\nconst diAsnSignatureFormatter = \"crypto.signatureFormatter\";\nclass AsnDefaultSignatureFormatter {\n    toAsnSignature(algorithm, signature) {\n        return BufferSourceConverter.toArrayBuffer(signature);\n    }\n    toWebSignature(algorithm, signature) {\n        return BufferSourceConverter.toArrayBuffer(signature);\n    }\n}\n\nvar RsaAlgorithm_1;\nlet RsaAlgorithm = RsaAlgorithm_1 = class RsaAlgorithm {\n    static createPssParams(hash, saltLength) {\n        const hashAlgorithm = RsaAlgorithm_1.getHashAlgorithm(hash);\n        if (!hashAlgorithm) {\n            return null;\n        }\n        return new asn1Rsa.RsaSaPssParams({\n            hashAlgorithm,\n            maskGenAlgorithm: new AlgorithmIdentifier({\n                algorithm: asn1Rsa.id_mgf1,\n                parameters: AsnConvert.serialize(hashAlgorithm),\n            }),\n            saltLength,\n        });\n    }\n    static getHashAlgorithm(alg) {\n        const algProv = container.resolve(diAlgorithmProvider);\n        if (typeof alg === \"string\") {\n            return algProv.toAsnAlgorithm({ name: alg });\n        }\n        if (typeof alg === \"object\" && alg && \"name\" in alg) {\n            return algProv.toAsnAlgorithm(alg);\n        }\n        return null;\n    }\n    toAsnAlgorithm(alg) {\n        switch (alg.name.toLowerCase()) {\n            case \"rsassa-pkcs1-v1_5\":\n                if (\"hash\" in alg) {\n                    let hash;\n                    if (typeof alg.hash === \"string\") {\n                        hash = alg.hash;\n                    }\n                    else if (alg.hash && typeof alg.hash === \"object\"\n                        && \"name\" in alg.hash && typeof alg.hash.name === \"string\") {\n                        hash = alg.hash.name.toUpperCase();\n                    }\n                    else {\n                        throw new Error(\"Cannot get hash algorithm name\");\n                    }\n                    switch (hash.toLowerCase()) {\n                        case \"sha-1\":\n                            return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_sha1WithRSAEncryption, parameters: null });\n                        case \"sha-256\":\n                            return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_sha256WithRSAEncryption, parameters: null });\n                        case \"sha-384\":\n                            return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_sha384WithRSAEncryption, parameters: null });\n                        case \"sha-512\":\n                            return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_sha512WithRSAEncryption, parameters: null });\n                    }\n                }\n                else {\n                    return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_rsaEncryption, parameters: null });\n                }\n                break;\n            case \"rsa-pss\":\n                if (\"hash\" in alg) {\n                    if (!(\"saltLength\" in alg && typeof alg.saltLength === \"number\")) {\n                        throw new Error(\"Cannot get 'saltLength' from 'alg' argument\");\n                    }\n                    const pssParams = RsaAlgorithm_1.createPssParams(alg.hash, alg.saltLength);\n                    if (!pssParams) {\n                        throw new Error(\"Cannot create PSS parameters\");\n                    }\n                    return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_RSASSA_PSS, parameters: AsnConvert.serialize(pssParams) });\n                }\n                else {\n                    return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_RSASSA_PSS, parameters: null });\n                }\n        }\n        return null;\n    }\n    toWebAlgorithm(alg) {\n        switch (alg.algorithm) {\n            case asn1Rsa.id_rsaEncryption:\n                return { name: \"RSASSA-PKCS1-v1_5\" };\n            case asn1Rsa.id_sha1WithRSAEncryption:\n                return { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-1\" } };\n            case asn1Rsa.id_sha256WithRSAEncryption:\n                return { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-256\" } };\n            case asn1Rsa.id_sha384WithRSAEncryption:\n                return { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-384\" } };\n            case asn1Rsa.id_sha512WithRSAEncryption:\n                return { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-512\" } };\n            case asn1Rsa.id_RSASSA_PSS:\n                if (alg.parameters) {\n                    const pssParams = AsnConvert.parse(alg.parameters, asn1Rsa.RsaSaPssParams);\n                    const algProv = container.resolve(diAlgorithmProvider);\n                    const hashAlg = algProv.toWebAlgorithm(pssParams.hashAlgorithm);\n                    return {\n                        name: \"RSA-PSS\",\n                        hash: hashAlg,\n                        saltLength: pssParams.saltLength,\n                    };\n                }\n                else {\n                    return { name: \"RSA-PSS\" };\n                }\n        }\n        return null;\n    }\n};\nRsaAlgorithm = RsaAlgorithm_1 = __decorate([\n    injectable()\n], RsaAlgorithm);\ncontainer.registerSingleton(diAlgorithm, RsaAlgorithm);\n\nlet ShaAlgorithm = class ShaAlgorithm {\n    toAsnAlgorithm(alg) {\n        switch (alg.name.toLowerCase()) {\n            case \"sha-1\":\n                return new AlgorithmIdentifier({ algorithm: id_sha1 });\n            case \"sha-256\":\n                return new AlgorithmIdentifier({ algorithm: id_sha256 });\n            case \"sha-384\":\n                return new AlgorithmIdentifier({ algorithm: id_sha384 });\n            case \"sha-512\":\n                return new AlgorithmIdentifier({ algorithm: id_sha512 });\n        }\n        return null;\n    }\n    toWebAlgorithm(alg) {\n        switch (alg.algorithm) {\n            case id_sha1:\n                return { name: \"SHA-1\" };\n            case id_sha256:\n                return { name: \"SHA-256\" };\n            case id_sha384:\n                return { name: \"SHA-384\" };\n            case id_sha512:\n                return { name: \"SHA-512\" };\n        }\n        return null;\n    }\n};\nShaAlgorithm = __decorate([\n    injectable()\n], ShaAlgorithm);\ncontainer.registerSingleton(diAlgorithm, ShaAlgorithm);\n\nclass AsnEcSignatureFormatter {\n    addPadding(pointSize, data) {\n        const bytes = BufferSourceConverter.toUint8Array(data);\n        const res = new Uint8Array(pointSize);\n        res.set(bytes, pointSize - bytes.length);\n        return res;\n    }\n    removePadding(data, positive = false) {\n        let bytes = BufferSourceConverter.toUint8Array(data);\n        for (let i = 0; i < bytes.length; i++) {\n            if (!bytes[i]) {\n                continue;\n            }\n            bytes = bytes.slice(i);\n            break;\n        }\n        if (positive && bytes[0] > 127) {\n            const result = new Uint8Array(bytes.length + 1);\n            result.set(bytes, 1);\n            return result.buffer;\n        }\n        return bytes.buffer;\n    }\n    toAsnSignature(algorithm, signature) {\n        if (algorithm.name === \"ECDSA\") {\n            const namedCurve = algorithm.namedCurve;\n            const pointSize = AsnEcSignatureFormatter.namedCurveSize.get(namedCurve) || AsnEcSignatureFormatter.defaultNamedCurveSize;\n            const ecSignature = new ECDSASigValue();\n            const uint8Signature = BufferSourceConverter.toUint8Array(signature);\n            ecSignature.r = this.removePadding(uint8Signature.slice(0, pointSize), true);\n            ecSignature.s = this.removePadding(uint8Signature.slice(pointSize, pointSize + pointSize), true);\n            return AsnConvert.serialize(ecSignature);\n        }\n        return null;\n    }\n    toWebSignature(algorithm, signature) {\n        if (algorithm.name === \"ECDSA\") {\n            const ecSigValue = AsnConvert.parse(signature, ECDSASigValue);\n            const namedCurve = algorithm.namedCurve;\n            const pointSize = AsnEcSignatureFormatter.namedCurveSize.get(namedCurve) || AsnEcSignatureFormatter.defaultNamedCurveSize;\n            const r = this.addPadding(pointSize, this.removePadding(ecSigValue.r));\n            const s = this.addPadding(pointSize, this.removePadding(ecSigValue.s));\n            return combine(r, s);\n        }\n        return null;\n    }\n}\nAsnEcSignatureFormatter.namedCurveSize = new Map();\nAsnEcSignatureFormatter.defaultNamedCurveSize = 32;\n\nconst idX25519 = \"1.3.101.110\";\nconst idX448 = \"1.3.101.111\";\nconst idEd25519 = \"1.3.101.112\";\nconst idEd448 = \"1.3.101.113\";\nlet EdAlgorithm = class EdAlgorithm {\n    toAsnAlgorithm(alg) {\n        let algorithm = null;\n        switch (alg.name.toLowerCase()) {\n            case \"ed25519\":\n                algorithm = idEd25519;\n                break;\n            case \"x25519\":\n                algorithm = idX25519;\n                break;\n            case \"eddsa\":\n                switch (alg.namedCurve.toLowerCase()) {\n                    case \"ed25519\":\n                        algorithm = idEd25519;\n                        break;\n                    case \"ed448\":\n                        algorithm = idEd448;\n                        break;\n                }\n                break;\n            case \"ecdh-es\":\n                switch (alg.namedCurve.toLowerCase()) {\n                    case \"x25519\":\n                        algorithm = idX25519;\n                        break;\n                    case \"x448\":\n                        algorithm = idX448;\n                        break;\n                }\n        }\n        if (algorithm) {\n            return new AlgorithmIdentifier({\n                algorithm,\n            });\n        }\n        return null;\n    }\n    toWebAlgorithm(alg) {\n        switch (alg.algorithm) {\n            case idEd25519:\n                return { name: \"Ed25519\" };\n            case idEd448:\n                return { name: \"EdDSA\", namedCurve: \"Ed448\" };\n            case idX25519:\n                return { name: \"X25519\" };\n            case idX448:\n                return { name: \"ECDH-ES\", namedCurve: \"X448\" };\n        }\n        return null;\n    }\n};\nEdAlgorithm = __decorate([\n    injectable()\n], EdAlgorithm);\ncontainer.registerSingleton(diAlgorithm, EdAlgorithm);\n\nclass Pkcs10CertificateRequest extends PemData {\n    constructor(param) {\n        if (PemData.isAsnEncoded(param)) {\n            super(param, CertificationRequest);\n        }\n        else {\n            super(param);\n        }\n        this.tag = PemConverter.CertificateRequestTag;\n    }\n    onInit(asn) {\n        this.tbs = AsnConvert.serialize(asn.certificationRequestInfo);\n        this.publicKey = new PublicKey(asn.certificationRequestInfo.subjectPKInfo);\n        const algProv = container.resolve(diAlgorithmProvider);\n        this.signatureAlgorithm = algProv.toWebAlgorithm(asn.signatureAlgorithm);\n        this.signature = asn.signature;\n        this.attributes = asn.certificationRequestInfo.attributes\n            .map(o => AttributeFactory.create(AsnConvert.serialize(o)));\n        const extensions = this.getAttribute(id_pkcs9_at_extensionRequest);\n        this.extensions = [];\n        if (extensions instanceof ExtensionsAttribute) {\n            this.extensions = extensions.items;\n        }\n        this.subjectName = new Name(asn.certificationRequestInfo.subject);\n        this.subject = this.subjectName.toString();\n    }\n    getAttribute(type) {\n        for (const attr of this.attributes) {\n            if (attr.type === type) {\n                return attr;\n            }\n        }\n        return null;\n    }\n    getAttributes(type) {\n        return this.attributes.filter(o => o.type === type);\n    }\n    getExtension(type) {\n        for (const ext of this.extensions) {\n            if (ext.type === type) {\n                return ext;\n            }\n        }\n        return null;\n    }\n    getExtensions(type) {\n        return this.extensions.filter(o => o.type === type);\n    }\n    async verify(crypto = cryptoProvider.get()) {\n        const algorithm = { ...this.publicKey.algorithm, ...this.signatureAlgorithm };\n        const publicKey = await this.publicKey.export(algorithm, [\"verify\"], crypto);\n        const signatureFormatters = container.resolveAll(diAsnSignatureFormatter).reverse();\n        let signature = null;\n        for (const signatureFormatter of signatureFormatters) {\n            signature = signatureFormatter.toWebSignature(algorithm, this.signature);\n            if (signature) {\n                break;\n            }\n        }\n        if (!signature) {\n            throw Error(\"Cannot convert WebCrypto signature value to ASN.1 format\");\n        }\n        const ok = await crypto.subtle.verify(this.signatureAlgorithm, publicKey, signature, this.tbs);\n        return ok;\n    }\n    toTextObject() {\n        const obj = this.toTextObjectEmpty();\n        const req = AsnConvert.parse(this.rawData, CertificationRequest);\n        const tbs = req.certificationRequestInfo;\n        const data = new TextObject(\"\", {\n            \"Version\": `${Version[tbs.version]} (${tbs.version})`,\n            \"Subject\": this.subject,\n            \"Subject Public Key Info\": this.publicKey,\n        });\n        if (this.attributes.length) {\n            const attrs = new TextObject(\"\");\n            for (const ext of this.attributes) {\n                const attrObj = ext.toTextObject();\n                attrs[attrObj[TextObject.NAME]] = attrObj;\n            }\n            data[\"Attributes\"] = attrs;\n        }\n        obj[\"Data\"] = data;\n        obj[\"Signature\"] = new TextObject(\"\", {\n            \"Algorithm\": TextConverter.serializeAlgorithm(req.signatureAlgorithm),\n            \"\": req.signature,\n        });\n        return obj;\n    }\n}\nPkcs10CertificateRequest.NAME = \"PKCS#10 Certificate Request\";\n\nclass Pkcs10CertificateRequestGenerator {\n    static async create(params, crypto = cryptoProvider.get()) {\n        if (!params.keys.privateKey) {\n            throw new Error(\"Bad field 'keys' in 'params' argument. 'privateKey' is empty\");\n        }\n        if (!params.keys.publicKey) {\n            throw new Error(\"Bad field 'keys' in 'params' argument. 'publicKey' is empty\");\n        }\n        const spki = await crypto.subtle.exportKey(\"spki\", params.keys.publicKey);\n        const asnReq = new CertificationRequest({\n            certificationRequestInfo: new CertificationRequestInfo({\n                subjectPKInfo: AsnConvert.parse(spki, SubjectPublicKeyInfo),\n            }),\n        });\n        if (params.name) {\n            const name = params.name instanceof Name\n                ? params.name\n                : new Name(params.name);\n            asnReq.certificationRequestInfo.subject = AsnConvert.parse(name.toArrayBuffer(), Name$1);\n        }\n        if (params.attributes) {\n            for (const o of params.attributes) {\n                asnReq.certificationRequestInfo.attributes.push(AsnConvert.parse(o.rawData, Attribute$1));\n            }\n        }\n        if (params.extensions && params.extensions.length) {\n            const attr = new Attribute$1({ type: id_pkcs9_at_extensionRequest });\n            const extensions = new Extensions();\n            for (const o of params.extensions) {\n                extensions.push(AsnConvert.parse(o.rawData, Extension$1));\n            }\n            attr.values.push(AsnConvert.serialize(extensions));\n            asnReq.certificationRequestInfo.attributes.push(attr);\n        }\n        const signingAlgorithm = { ...params.signingAlgorithm, ...params.keys.privateKey.algorithm };\n        const algProv = container.resolve(diAlgorithmProvider);\n        asnReq.signatureAlgorithm = algProv.toAsnAlgorithm(signingAlgorithm);\n        const tbs = AsnConvert.serialize(asnReq.certificationRequestInfo);\n        const signature = await crypto.subtle.sign(signingAlgorithm, params.keys.privateKey, tbs);\n        const signatureFormatters = container.resolveAll(diAsnSignatureFormatter).reverse();\n        let asnSignature = null;\n        for (const signatureFormatter of signatureFormatters) {\n            asnSignature = signatureFormatter.toAsnSignature(signingAlgorithm, signature);\n            if (asnSignature) {\n                break;\n            }\n        }\n        if (!asnSignature) {\n            throw Error(\"Cannot convert WebCrypto signature value to ASN.1 format\");\n        }\n        asnReq.signature = asnSignature;\n        return new Pkcs10CertificateRequest(AsnConvert.serialize(asnReq));\n    }\n}\n\nclass X509Certificate extends PemData {\n    constructor(param) {\n        if (PemData.isAsnEncoded(param)) {\n            super(param, Certificate);\n        }\n        else {\n            super(param);\n        }\n        this.tag = PemConverter.CertificateTag;\n    }\n    onInit(asn) {\n        const tbs = asn.tbsCertificate;\n        this.tbs = AsnConvert.serialize(tbs);\n        let serialNumberBytes = new Uint8Array(tbs.serialNumber);\n        if (serialNumberBytes.length > 1 && serialNumberBytes[0] === 0x00 && serialNumberBytes[1] > 0x7F) {\n            serialNumberBytes = serialNumberBytes.slice(1);\n        }\n        this.serialNumber = Convert.ToHex(serialNumberBytes);\n        this.subjectName = new Name(tbs.subject);\n        this.subject = new Name(tbs.subject).toString();\n        this.issuerName = new Name(tbs.issuer);\n        this.issuer = this.issuerName.toString();\n        const algProv = container.resolve(diAlgorithmProvider);\n        this.signatureAlgorithm = algProv.toWebAlgorithm(asn.signatureAlgorithm);\n        this.signature = asn.signatureValue;\n        const notBefore = tbs.validity.notBefore.utcTime || tbs.validity.notBefore.generalTime;\n        if (!notBefore) {\n            throw new Error(\"Cannot get 'notBefore' value\");\n        }\n        this.notBefore = notBefore;\n        const notAfter = tbs.validity.notAfter.utcTime || tbs.validity.notAfter.generalTime;\n        if (!notAfter) {\n            throw new Error(\"Cannot get 'notAfter' value\");\n        }\n        this.notAfter = notAfter;\n        this.extensions = [];\n        if (tbs.extensions) {\n            this.extensions = tbs.extensions.map(o => ExtensionFactory.create(AsnConvert.serialize(o)));\n        }\n        this.publicKey = new PublicKey(tbs.subjectPublicKeyInfo);\n    }\n    getExtension(type) {\n        for (const ext of this.extensions) {\n            if (typeof type === \"string\") {\n                if (ext.type === type) {\n                    return ext;\n                }\n            }\n            else {\n                if (ext instanceof type) {\n                    return ext;\n                }\n            }\n        }\n        return null;\n    }\n    getExtensions(type) {\n        return this.extensions.filter(o => {\n            if (typeof type === \"string\") {\n                return o.type === type;\n            }\n            else {\n                return o instanceof type;\n            }\n        });\n    }\n    async verify(params = {}, crypto = cryptoProvider.get()) {\n        let keyAlgorithm;\n        let publicKey;\n        const paramsKey = params.publicKey;\n        try {\n            if (!paramsKey) {\n                keyAlgorithm = { ...this.publicKey.algorithm, ...this.signatureAlgorithm };\n                publicKey = await this.publicKey.export(keyAlgorithm, [\"verify\"], crypto);\n            }\n            else if (\"publicKey\" in paramsKey) {\n                keyAlgorithm = { ...paramsKey.publicKey.algorithm, ...this.signatureAlgorithm };\n                publicKey = await paramsKey.publicKey.export(keyAlgorithm, [\"verify\"], crypto);\n            }\n            else if (paramsKey instanceof PublicKey) {\n                keyAlgorithm = { ...paramsKey.algorithm, ...this.signatureAlgorithm };\n                publicKey = await paramsKey.export(keyAlgorithm, [\"verify\"], crypto);\n            }\n            else if (BufferSourceConverter.isBufferSource(paramsKey)) {\n                const key = new PublicKey(paramsKey);\n                keyAlgorithm = { ...key.algorithm, ...this.signatureAlgorithm };\n                publicKey = await key.export(keyAlgorithm, [\"verify\"], crypto);\n            }\n            else {\n                keyAlgorithm = { ...paramsKey.algorithm, ...this.signatureAlgorithm };\n                publicKey = paramsKey;\n            }\n        }\n        catch (_e) {\n            return false;\n        }\n        const signatureFormatters = container.resolveAll(diAsnSignatureFormatter).reverse();\n        let signature = null;\n        for (const signatureFormatter of signatureFormatters) {\n            signature = signatureFormatter.toWebSignature(keyAlgorithm, this.signature);\n            if (signature) {\n                break;\n            }\n        }\n        if (!signature) {\n            throw Error(\"Cannot convert ASN.1 signature value to WebCrypto format\");\n        }\n        const ok = await crypto.subtle.verify(this.signatureAlgorithm, publicKey, signature, this.tbs);\n        if (params.signatureOnly) {\n            return ok;\n        }\n        else {\n            const date = params.date || new Date();\n            const time = date.getTime();\n            return ok && this.notBefore.getTime() < time && time < this.notAfter.getTime();\n        }\n    }\n    async getThumbprint(...args) {\n        let crypto;\n        let algorithm = \"SHA-1\";\n        if (args[0]) {\n            if (!args[0].subtle) {\n                algorithm = args[0] || algorithm;\n                crypto = args[1];\n            }\n            else {\n                crypto = args[0];\n            }\n        }\n        crypto !== null && crypto !== void 0 ? crypto : (crypto = cryptoProvider.get());\n        return await crypto.subtle.digest(algorithm, this.rawData);\n    }\n    async isSelfSigned(crypto = cryptoProvider.get()) {\n        return this.subject === this.issuer && await this.verify({ signatureOnly: true }, crypto);\n    }\n    toTextObject() {\n        const obj = this.toTextObjectEmpty();\n        const cert = AsnConvert.parse(this.rawData, Certificate);\n        const tbs = cert.tbsCertificate;\n        const data = new TextObject(\"\", {\n            \"Version\": `${Version[tbs.version]} (${tbs.version})`,\n            \"Serial Number\": tbs.serialNumber,\n            \"Signature Algorithm\": TextConverter.serializeAlgorithm(tbs.signature),\n            \"Issuer\": this.issuer,\n            \"Validity\": new TextObject(\"\", {\n                \"Not Before\": tbs.validity.notBefore.getTime(),\n                \"Not After\": tbs.validity.notAfter.getTime(),\n            }),\n            \"Subject\": this.subject,\n            \"Subject Public Key Info\": this.publicKey,\n        });\n        if (tbs.issuerUniqueID) {\n            data[\"Issuer Unique ID\"] = tbs.issuerUniqueID;\n        }\n        if (tbs.subjectUniqueID) {\n            data[\"Subject Unique ID\"] = tbs.subjectUniqueID;\n        }\n        if (this.extensions.length) {\n            const extensions = new TextObject(\"\");\n            for (const ext of this.extensions) {\n                const extObj = ext.toTextObject();\n                extensions[extObj[TextObject.NAME]] = extObj;\n            }\n            data[\"Extensions\"] = extensions;\n        }\n        obj[\"Data\"] = data;\n        obj[\"Signature\"] = new TextObject(\"\", {\n            \"Algorithm\": TextConverter.serializeAlgorithm(cert.signatureAlgorithm),\n            \"\": cert.signatureValue,\n        });\n        return obj;\n    }\n}\nX509Certificate.NAME = \"Certificate\";\n\nclass X509Certificates extends Array {\n    constructor(param) {\n        super();\n        if (PemData.isAsnEncoded(param)) {\n            this.import(param);\n        }\n        else if (param instanceof X509Certificate) {\n            this.push(param);\n        }\n        else if (Array.isArray(param)) {\n            for (const item of param) {\n                this.push(item);\n            }\n        }\n    }\n    export(format) {\n        const signedData = new asn1Cms.SignedData();\n        signedData.version = 1;\n        signedData.encapContentInfo.eContentType = asn1Cms.id_data;\n        signedData.encapContentInfo.eContent = new asn1Cms.EncapsulatedContent({\n            single: new OctetString(),\n        });\n        signedData.certificates = new asn1Cms.CertificateSet(this.map(o => new asn1Cms.CertificateChoices({\n            certificate: AsnConvert.parse(o.rawData, Certificate)\n        })));\n        const cms = new asn1Cms.ContentInfo({\n            contentType: asn1Cms.id_signedData,\n            content: AsnConvert.serialize(signedData),\n        });\n        const raw = AsnConvert.serialize(cms);\n        if (format === \"raw\") {\n            return raw;\n        }\n        return this.toString(format);\n    }\n    import(data) {\n        const raw = PemData.toArrayBuffer(data);\n        const cms = AsnConvert.parse(raw, asn1Cms.ContentInfo);\n        if (cms.contentType !== asn1Cms.id_signedData) {\n            throw new TypeError(\"Cannot parse CMS package. Incoming data is not a SignedData object.\");\n        }\n        const signedData = AsnConvert.parse(cms.content, asn1Cms.SignedData);\n        this.clear();\n        for (const item of signedData.certificates || []) {\n            if (item.certificate) {\n                this.push(new X509Certificate(item.certificate));\n            }\n        }\n    }\n    clear() {\n        while (this.pop()) {\n        }\n    }\n    toString(format = \"pem\") {\n        const raw = this.export(\"raw\");\n        switch (format) {\n            case \"pem\":\n                return PemConverter.encode(raw, \"CMS\");\n            case \"pem-chain\":\n                return this\n                    .map(o => o.toString(\"pem\"))\n                    .join(\"\\n\");\n            case \"asn\":\n                return AsnConvert.toString(raw);\n            case \"hex\":\n                return Convert.ToHex(raw);\n            case \"base64\":\n                return Convert.ToBase64(raw);\n            case \"base64url\":\n                return Convert.ToBase64Url(raw);\n            case \"text\":\n                return TextConverter.serialize(this.toTextObject());\n            default:\n                throw TypeError(\"Argument 'format' is unsupported value\");\n        }\n    }\n    toTextObject() {\n        const contentInfo = AsnConvert.parse(this.export(\"raw\"), asn1Cms.ContentInfo);\n        const signedData = AsnConvert.parse(contentInfo.content, asn1Cms.SignedData);\n        const obj = new TextObject(\"X509Certificates\", {\n            \"Content Type\": OidSerializer.toString(contentInfo.contentType),\n            \"Content\": new TextObject(\"\", {\n                \"Version\": `${asn1Cms.CMSVersion[signedData.version]} (${signedData.version})`,\n                \"Certificates\": new TextObject(\"\", { \"Certificate\": this.map(o => o.toTextObject()) }),\n            }),\n        });\n        return obj;\n    }\n}\n\nclass X509ChainBuilder {\n    constructor(params = {}) {\n        this.certificates = [];\n        if (params.certificates) {\n            this.certificates = params.certificates;\n        }\n    }\n    async build(cert, crypto = cryptoProvider.get()) {\n        const chain = new X509Certificates(cert);\n        let current = cert;\n        while (current = await this.findIssuer(current, crypto)) {\n            const thumbprint = await current.getThumbprint(crypto);\n            for (const item of chain) {\n                const thumbprint2 = await item.getThumbprint(crypto);\n                if (isEqual(thumbprint, thumbprint2)) {\n                    throw new Error(\"Cannot build a certificate chain. Circular dependency.\");\n                }\n            }\n            chain.push(current);\n        }\n        return chain;\n    }\n    async findIssuer(cert, crypto = cryptoProvider.get()) {\n        if (!await cert.isSelfSigned(crypto)) {\n            const akiExt = cert.getExtension(asn1X509.id_ce_authorityKeyIdentifier);\n            for (const item of this.certificates) {\n                if (item.subject !== cert.issuer) {\n                    continue;\n                }\n                if (akiExt) {\n                    if (akiExt.keyId) {\n                        const skiExt = item.getExtension(asn1X509.id_ce_subjectKeyIdentifier);\n                        if (skiExt && skiExt.keyId !== akiExt.keyId) {\n                            continue;\n                        }\n                    }\n                    else if (akiExt.certId) {\n                        const sanExt = item.getExtension(asn1X509.id_ce_subjectAltName);\n                        if (sanExt &&\n                            !(akiExt.certId.serialNumber === item.serialNumber && isEqual(AsnConvert.serialize(akiExt.certId.name), AsnConvert.serialize(sanExt)))) {\n                            continue;\n                        }\n                    }\n                }\n                try {\n                    const algorithm = { ...item.publicKey.algorithm, ...cert.signatureAlgorithm };\n                    const publicKey = await item.publicKey.export(algorithm, [\"verify\"], crypto);\n                    const ok = await cert.verify({ publicKey, signatureOnly: true }, crypto);\n                    if (!ok) {\n                        continue;\n                    }\n                }\n                catch (_e) {\n                    continue;\n                }\n                return item;\n            }\n        }\n        return null;\n    }\n}\n\nclass X509CertificateGenerator {\n    static async createSelfSigned(params, crypto = cryptoProvider.get()) {\n        if (!params.keys.privateKey) {\n            throw new Error(\"Bad field 'keys' in 'params' argument. 'privateKey' is empty\");\n        }\n        if (!params.keys.publicKey) {\n            throw new Error(\"Bad field 'keys' in 'params' argument. 'publicKey' is empty\");\n        }\n        return this.create({\n            serialNumber: params.serialNumber,\n            subject: params.name,\n            issuer: params.name,\n            notBefore: params.notBefore,\n            notAfter: params.notAfter,\n            publicKey: params.keys.publicKey,\n            signingKey: params.keys.privateKey,\n            signingAlgorithm: params.signingAlgorithm,\n            extensions: params.extensions,\n        }, crypto);\n    }\n    static async create(params, crypto = cryptoProvider.get()) {\n        var _a;\n        let spki;\n        if (params.publicKey instanceof PublicKey) {\n            spki = params.publicKey.rawData;\n        }\n        else if (\"publicKey\" in params.publicKey) {\n            spki = params.publicKey.publicKey.rawData;\n        }\n        else if (BufferSourceConverter.isBufferSource(params.publicKey)) {\n            spki = params.publicKey;\n        }\n        else {\n            spki = await crypto.subtle.exportKey(\"spki\", params.publicKey);\n        }\n        let serialNumber = params.serialNumber\n            ? BufferSourceConverter.toUint8Array(Convert.FromHex(params.serialNumber))\n            : crypto.getRandomValues(new Uint8Array(16));\n        if (serialNumber[0] > 0x7F) {\n            const newSerialNumber = new Uint8Array(serialNumber.length + 1);\n            newSerialNumber[0] = 0x00;\n            newSerialNumber.set(serialNumber, 1);\n            serialNumber = newSerialNumber;\n        }\n        const notBefore = params.notBefore || new Date();\n        const notAfter = params.notAfter || new Date(notBefore.getTime() + 31536000000);\n        const asnX509 = new asn1X509.Certificate({\n            tbsCertificate: new asn1X509.TBSCertificate({\n                version: asn1X509.Version.v3,\n                serialNumber: serialNumber,\n                validity: new asn1X509.Validity({\n                    notBefore,\n                    notAfter,\n                }),\n                extensions: new asn1X509.Extensions(((_a = params.extensions) === null || _a === void 0 ? void 0 : _a.map(o => AsnConvert.parse(o.rawData, asn1X509.Extension))) || []),\n                subjectPublicKeyInfo: AsnConvert.parse(spki, asn1X509.SubjectPublicKeyInfo),\n            }),\n        });\n        if (params.subject) {\n            const name = params.subject instanceof Name\n                ? params.subject\n                : new Name(params.subject);\n            asnX509.tbsCertificate.subject = AsnConvert.parse(name.toArrayBuffer(), asn1X509.Name);\n        }\n        if (params.issuer) {\n            const name = params.issuer instanceof Name\n                ? params.issuer\n                : new Name(params.issuer);\n            asnX509.tbsCertificate.issuer = AsnConvert.parse(name.toArrayBuffer(), asn1X509.Name);\n        }\n        const defaultSigningAlgorithm = {\n            hash: \"SHA-256\",\n        };\n        const signatureAlgorithm = (\"signingKey\" in params)\n            ? { ...defaultSigningAlgorithm, ...params.signingAlgorithm, ...params.signingKey.algorithm }\n            : { ...defaultSigningAlgorithm, ...params.signingAlgorithm };\n        const algProv = container.resolve(diAlgorithmProvider);\n        asnX509.tbsCertificate.signature = asnX509.signatureAlgorithm = algProv.toAsnAlgorithm(signatureAlgorithm);\n        const tbs = AsnConvert.serialize(asnX509.tbsCertificate);\n        const signatureValue = (\"signingKey\" in params)\n            ? await crypto.subtle.sign(signatureAlgorithm, params.signingKey, tbs)\n            : params.signature;\n        const signatureFormatters = container.resolveAll(diAsnSignatureFormatter).reverse();\n        let asnSignature = null;\n        for (const signatureFormatter of signatureFormatters) {\n            asnSignature = signatureFormatter.toAsnSignature(signatureAlgorithm, signatureValue);\n            if (asnSignature) {\n                break;\n            }\n        }\n        if (!asnSignature) {\n            throw Error(\"Cannot convert ASN.1 signature value to WebCrypto format\");\n        }\n        asnX509.signatureValue = asnSignature;\n        return new X509Certificate(AsnConvert.serialize(asnX509));\n    }\n}\n\nvar X509CrlReason;\n(function (X509CrlReason) {\n    X509CrlReason[X509CrlReason[\"unspecified\"] = 0] = \"unspecified\";\n    X509CrlReason[X509CrlReason[\"keyCompromise\"] = 1] = \"keyCompromise\";\n    X509CrlReason[X509CrlReason[\"cACompromise\"] = 2] = \"cACompromise\";\n    X509CrlReason[X509CrlReason[\"affiliationChanged\"] = 3] = \"affiliationChanged\";\n    X509CrlReason[X509CrlReason[\"superseded\"] = 4] = \"superseded\";\n    X509CrlReason[X509CrlReason[\"cessationOfOperation\"] = 5] = \"cessationOfOperation\";\n    X509CrlReason[X509CrlReason[\"certificateHold\"] = 6] = \"certificateHold\";\n    X509CrlReason[X509CrlReason[\"removeFromCRL\"] = 8] = \"removeFromCRL\";\n    X509CrlReason[X509CrlReason[\"privilegeWithdrawn\"] = 9] = \"privilegeWithdrawn\";\n    X509CrlReason[X509CrlReason[\"aACompromise\"] = 10] = \"aACompromise\";\n})(X509CrlReason || (X509CrlReason = {}));\nclass X509CrlEntry extends AsnData {\n    constructor(...args) {\n        let raw;\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            raw = BufferSourceConverter.toArrayBuffer(args[0]);\n        }\n        else {\n            raw = AsnConvert.serialize(new RevokedCertificate({\n                userCertificate: args[0],\n                revocationDate: new Time(args[1]),\n                crlEntryExtensions: args[2],\n            }));\n        }\n        super(raw, RevokedCertificate);\n    }\n    onInit(asn) {\n        this.serialNumber = Convert.ToHex(asn.userCertificate);\n        this.revocationDate = asn.revocationDate.getTime();\n        this.extensions = [];\n        if (asn.crlEntryExtensions) {\n            this.extensions = asn.crlEntryExtensions.map((o) => {\n                const extension = ExtensionFactory.create(AsnConvert.serialize(o));\n                switch (extension.type) {\n                    case id_ce_cRLReasons:\n                        this.reason = AsnConvert.parse(extension.value, CRLReason).reason;\n                        break;\n                    case id_ce_invalidityDate:\n                        this.invalidity = AsnConvert.parse(extension.value, InvalidityDate).value;\n                        break;\n                }\n                return extension;\n            });\n        }\n    }\n}\n\nclass X509Crl extends PemData {\n    constructor(param) {\n        if (PemData.isAsnEncoded(param)) {\n            super(param, CertificateList);\n        }\n        else {\n            super(param);\n        }\n        this.tag = PemConverter.CrlTag;\n    }\n    onInit(asn) {\n        var _a, _b;\n        const tbs = asn.tbsCertList;\n        this.tbs = AsnConvert.serialize(tbs);\n        this.version = tbs.version;\n        const algProv = container.resolve(diAlgorithmProvider);\n        this.signatureAlgorithm = algProv.toWebAlgorithm(asn.signatureAlgorithm);\n        this.tbsCertListSignatureAlgorithm = tbs.signature;\n        this.certListSignatureAlgorithm = asn.signatureAlgorithm;\n        this.signature = asn.signature;\n        this.issuerName = new Name(tbs.issuer);\n        this.issuer = this.issuerName.toString();\n        const thisUpdate = tbs.thisUpdate.getTime();\n        if (!thisUpdate) {\n            throw new Error(\"Cannot get 'thisUpdate' value\");\n        }\n        this.thisUpdate = thisUpdate;\n        const nextUpdate = (_a = tbs.nextUpdate) === null || _a === void 0 ? void 0 : _a.getTime();\n        this.nextUpdate = nextUpdate;\n        this.entries = ((_b = tbs.revokedCertificates) === null || _b === void 0 ? void 0 : _b.map(o => new X509CrlEntry(AsnConvert.serialize(o)))) || [];\n        this.extensions = [];\n        if (tbs.crlExtensions) {\n            this.extensions = tbs.crlExtensions.map((o) => ExtensionFactory.create(AsnConvert.serialize(o)));\n        }\n    }\n    getExtension(type) {\n        for (const ext of this.extensions) {\n            if (typeof type === \"string\") {\n                if (ext.type === type) {\n                    return ext;\n                }\n            }\n            else {\n                if (ext instanceof type) {\n                    return ext;\n                }\n            }\n        }\n        return null;\n    }\n    getExtensions(type) {\n        return this.extensions.filter((o) => {\n            if (typeof type === \"string\") {\n                return o.type === type;\n            }\n            else {\n                return o instanceof type;\n            }\n        });\n    }\n    async verify(params, crypto = cryptoProvider.get()) {\n        if (!this.certListSignatureAlgorithm.isEqual(this.tbsCertListSignatureAlgorithm)) {\n            throw new Error(\"algorithm identifier in the sequence tbsCertList and CertificateList mismatch\");\n        }\n        let keyAlgorithm;\n        let publicKey;\n        const paramsKey = params.publicKey;\n        try {\n            if (paramsKey instanceof X509Certificate) {\n                keyAlgorithm = {\n                    ...paramsKey.publicKey.algorithm,\n                    ...paramsKey.signatureAlgorithm,\n                };\n                publicKey = await paramsKey.publicKey.export(keyAlgorithm, [\"verify\"]);\n            }\n            else if (paramsKey instanceof PublicKey) {\n                keyAlgorithm = { ...paramsKey.algorithm, ...this.signature };\n                publicKey = await paramsKey.export(keyAlgorithm, [\"verify\"]);\n            }\n            else {\n                keyAlgorithm = { ...paramsKey.algorithm, ...this.signature };\n                publicKey = paramsKey;\n            }\n        }\n        catch (_e) {\n            return false;\n        }\n        const signatureFormatters = container.resolveAll(diAsnSignatureFormatter).reverse();\n        let signature = null;\n        for (const signatureFormatter of signatureFormatters) {\n            signature = signatureFormatter.toWebSignature(keyAlgorithm, this.signature);\n            if (signature) {\n                break;\n            }\n        }\n        if (!signature) {\n            throw Error(\"Cannot convert ASN.1 signature value to WebCrypto format\");\n        }\n        return await crypto.subtle.verify(this.signatureAlgorithm, publicKey, signature, this.tbs);\n    }\n    async getThumbprint(...args) {\n        let crypto;\n        let algorithm = \"SHA-1\";\n        if (args[0]) {\n            if (!args[0].subtle) {\n                algorithm = args[0] || algorithm;\n                crypto = args[1];\n            }\n            else {\n                crypto = args[0];\n            }\n        }\n        crypto !== null && crypto !== void 0 ? crypto : (crypto = cryptoProvider.get());\n        return await crypto.subtle.digest(algorithm, this.rawData);\n    }\n    findRevoked(certOrSerialNumber) {\n        const serialNumber = typeof certOrSerialNumber === \"string\" ? certOrSerialNumber : certOrSerialNumber.serialNumber;\n        for (const entry of this.entries) {\n            if (entry.serialNumber === serialNumber) {\n                return entry;\n            }\n        }\n        return null;\n    }\n}\n\nclass X509CrlGenerator {\n    static async create(params, crypto = cryptoProvider.get()) {\n        var _a;\n        const name = params.issuer instanceof Name\n            ? params.issuer\n            : new Name(params.issuer);\n        const asnX509Crl = new asn1X509.CertificateList({\n            tbsCertList: new asn1X509.TBSCertList({\n                version: asn1X509.Version.v2,\n                issuer: AsnConvert.parse(name.toArrayBuffer(), asn1X509.Name),\n                thisUpdate: new Time(params.thisUpdate || new Date()),\n            }),\n        });\n        if (params.nextUpdate) {\n            asnX509Crl.tbsCertList.nextUpdate = new Time(params.nextUpdate);\n        }\n        if (params.extensions && params.extensions.length) {\n            asnX509Crl.tbsCertList.crlExtensions = new asn1X509.Extensions(params.extensions.map(o => AsnConvert.parse(o.rawData, asn1X509.Extension)) || []);\n        }\n        if (params.entries && params.entries.length) {\n            asnX509Crl.tbsCertList.revokedCertificates = [];\n            for (const entry of params.entries) {\n                const userCertificate = PemData.toArrayBuffer(entry.serialNumber);\n                const index = asnX509Crl.tbsCertList.revokedCertificates.findIndex(cert => isEqual(cert.userCertificate, userCertificate));\n                if (index > -1) {\n                    throw new Error(`Certificate serial number ${entry.serialNumber} already exists in tbsCertList`);\n                }\n                const revokedCert = new RevokedCertificate({\n                    userCertificate: userCertificate,\n                    revocationDate: new Time(entry.revocationDate || new Date())\n                });\n                if (\"extensions\" in entry && ((_a = entry.extensions) === null || _a === void 0 ? void 0 : _a.length)) {\n                    revokedCert.crlEntryExtensions = entry.extensions.map(o => AsnConvert.parse(o.rawData, asn1X509.Extension));\n                }\n                else {\n                    revokedCert.crlEntryExtensions = [];\n                }\n                if (!(entry instanceof X509CrlEntry)) {\n                    if (entry.reason) {\n                        revokedCert.crlEntryExtensions.push(new asn1X509.Extension({\n                            extnID: asn1X509.id_ce_cRLReasons,\n                            critical: false,\n                            extnValue: new OctetString(AsnConvert.serialize(new asn1X509.CRLReason(entry.reason))),\n                        }));\n                    }\n                    if (entry.invalidity) {\n                        revokedCert.crlEntryExtensions.push(new asn1X509.Extension({\n                            extnID: asn1X509.id_ce_invalidityDate,\n                            critical: false,\n                            extnValue: new OctetString(AsnConvert.serialize(new asn1X509.InvalidityDate(entry.invalidity))),\n                        }));\n                    }\n                    if (entry.issuer) {\n                        const name = params.issuer instanceof Name\n                            ? params.issuer\n                            : new Name(params.issuer);\n                        revokedCert.crlEntryExtensions.push(new asn1X509.Extension({\n                            extnID: asn1X509.id_ce_certificateIssuer,\n                            critical: false,\n                            extnValue: new OctetString(AsnConvert.serialize(AsnConvert.parse(name.toArrayBuffer(), asn1X509.Name))),\n                        }));\n                    }\n                }\n                asnX509Crl.tbsCertList.revokedCertificates.push(revokedCert);\n            }\n        }\n        const signingAlgorithm = { ...params.signingAlgorithm, ...params.signingKey.algorithm };\n        const algProv = container.resolve(diAlgorithmProvider);\n        asnX509Crl.tbsCertList.signature = asnX509Crl.signatureAlgorithm = algProv.toAsnAlgorithm(signingAlgorithm);\n        const tbs = AsnConvert.serialize(asnX509Crl.tbsCertList);\n        const signature = await crypto.subtle.sign(signingAlgorithm, params.signingKey, tbs);\n        const signatureFormatters = container.resolveAll(diAsnSignatureFormatter).reverse();\n        let asnSignature = null;\n        for (const signatureFormatter of signatureFormatters) {\n            asnSignature = signatureFormatter.toAsnSignature(signingAlgorithm, signature);\n            if (asnSignature) {\n                break;\n            }\n        }\n        if (!asnSignature) {\n            throw Error(\"Cannot convert ASN.1 signature value to WebCrypto format\");\n        }\n        asnX509Crl.signature = asnSignature;\n        return new X509Crl(AsnConvert.serialize(asnX509Crl));\n    }\n}\n\nExtensionFactory.register(asn1X509.id_ce_basicConstraints, BasicConstraintsExtension);\nExtensionFactory.register(asn1X509.id_ce_extKeyUsage, ExtendedKeyUsageExtension);\nExtensionFactory.register(asn1X509.id_ce_keyUsage, KeyUsagesExtension);\nExtensionFactory.register(asn1X509.id_ce_subjectKeyIdentifier, SubjectKeyIdentifierExtension);\nExtensionFactory.register(asn1X509.id_ce_authorityKeyIdentifier, AuthorityKeyIdentifierExtension);\nExtensionFactory.register(asn1X509.id_ce_subjectAltName, SubjectAlternativeNameExtension);\nExtensionFactory.register(asn1X509.id_ce_cRLDistributionPoints, CRLDistributionPointsExtension);\nExtensionFactory.register(asn1X509.id_pe_authorityInfoAccess, AuthorityInfoAccessExtension);\nAttributeFactory.register(asnPkcs9.id_pkcs9_at_challengePassword, ChallengePasswordAttribute);\nAttributeFactory.register(asnPkcs9.id_pkcs9_at_extensionRequest, ExtensionsAttribute);\ncontainer.registerSingleton(diAsnSignatureFormatter, AsnDefaultSignatureFormatter);\ncontainer.registerSingleton(diAsnSignatureFormatter, AsnEcSignatureFormatter);\nAsnEcSignatureFormatter.namedCurveSize.set(\"P-256\", 32);\nAsnEcSignatureFormatter.namedCurveSize.set(\"K-256\", 32);\nAsnEcSignatureFormatter.namedCurveSize.set(\"P-384\", 48);\nAsnEcSignatureFormatter.namedCurveSize.set(\"P-521\", 66);\n\nexport { AlgorithmProvider, AsnData, AsnDefaultSignatureFormatter, AsnEcSignatureFormatter, Attribute, AttributeFactory, AuthorityInfoAccessExtension, AuthorityKeyIdentifierExtension, BasicConstraintsExtension, CRLDistributionPointsExtension, CertificatePolicyExtension, ChallengePasswordAttribute, CryptoProvider, DefaultAlgorithmSerializer, EcAlgorithm, EdAlgorithm, ExtendedKeyUsage, ExtendedKeyUsageExtension, Extension, ExtensionFactory, ExtensionsAttribute, GeneralName, GeneralNames, KeyUsageFlags, KeyUsagesExtension, Name, NameIdentifier, OidSerializer, PemConverter, PemData, Pkcs10CertificateRequest, Pkcs10CertificateRequestGenerator, PublicKey, RsaAlgorithm, ShaAlgorithm, SubjectAlternativeNameExtension, SubjectKeyIdentifierExtension, TextConverter, TextObject, X509Certificate, X509CertificateGenerator, X509Certificates, X509ChainBuilder, X509Crl, X509CrlEntry, X509CrlGenerator, X509CrlReason, cryptoProvider, diAlgorithm, diAlgorithmProvider, diAsnSignatureFormatter, idEd25519, idEd448, idX25519, idX448 };\n","/**\n * A map that has a type for its keys and values\n */\nexport class TypedMap {\n    #map = new Map();\n    constructor(entries) {\n        if (entries) {\n            for (const [key, value] of entries) {\n                this.#map.set(key, value);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        // @ts-ignore\n        return this.#map[Symbol.iterator]();\n    }\n    /**\n     *\n     * Sets the value for the key in the map\n     *\n     * @param key - The key to set the value for\n     * @param value - The value to set\n     */\n    set(key, value) {\n        this.#map.set(key, value);\n    }\n    /**\n     *\n     * Returns the value associated to the key, or undefined if there is none\n     *\n     * @param key - The key to get the value for\n     * @returns - The value associated to the key, or undefined if there is none\n     */\n    get(key) {\n        return this.#map.get(key);\n    }\n    /**\n     * Returns an iterable of key, value pairs for every entry in the map.\n     *\n     * @returns - An iterable of key, value pairs for every entry in the map\n     */\n    entries() {\n        //@ts-ignore\n        return this.#map.entries();\n    }\n    /**\n     * Returns an iterable of keys in the map\n     *\n     * @returns - An iterable of keys in the map\n     */\n    keys() {\n        return this.#map.keys();\n    }\n    /**\n     * Returns an iterable of values in the map\n     *\n     * @returns - An iterable of values in the map\n     */\n    values() {\n        return this.#map.values();\n    }\n    /**\n     * Clears the map\n     */\n    clear() {\n        this.#map.clear();\n    }\n    /**\n     * Deletes the entry for the given key\n     *\n     * @param key - The key to delete\n     * @returns Whether the key was deleted\n     */\n    delete(key) {\n        return this.#map.delete(key);\n    }\n    /**\n     *\n     * Checks if the map has an entry for the given key\n     *\n     * @param key - The key to check for\n     * @returns Whether the map has an entry for the given key\n     */\n    has(key) {\n        return this.#map.has(key);\n    }\n    /**\n     * Returns the number of entries in the map\n     */\n    get size() {\n        return this.#map.size;\n    }\n    /**\n     * Returns the internal ES map\n     */\n    get esMap() {\n        return this.#map;\n    }\n    static wrap(map) {\n        if (typeof map === 'undefined') {\n            return new TypedMap();\n        }\n        if (map instanceof TypedMap) {\n            return map;\n        }\n        return new TypedMap(map);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')](depth, options, inspect) {\n        const className = this.constructor.name;\n        if (depth !== null && depth < 0) {\n            return options.stylize(`[${className}]`, 'special');\n        }\n        const newOptions = Object.assign({}, options, {\n            depth: options.depth === null ? null : options.depth - 1,\n        });\n        const padding = ' '.repeat(className.length + 2);\n        const inner = inspect(this.esMap, newOptions)\n            .replace(/\\n/g, `\\n${padding}`);\n        return `${options.stylize(className, 'special')}< ${inner} >`;\n    }\n}\n;\n//# sourceMappingURL=index.js.map","import { Encoder, addExtension as addExtInt } from 'cbor-x';\nexport const encoder = new Encoder({\n    tagUint8Array: false,\n    useRecords: false,\n    mapsAsObjects: false,\n    useTag259ForMaps: false,\n});\nexport const addExtension = addExtInt;\n","import { TypedMap } from \"@jfromaniello/typedmap\";\nimport { encoder } from \"./cbor.js\";\nexport var Headers;\n(function (Headers) {\n    Headers[Headers[\"Algorithm\"] = 1] = \"Algorithm\";\n    Headers[Headers[\"Critical\"] = 2] = \"Critical\";\n    Headers[Headers[\"ContentType\"] = 3] = \"ContentType\";\n    Headers[Headers[\"KeyID\"] = 4] = \"KeyID\";\n    Headers[Headers[\"IV\"] = 5] = \"IV\";\n    Headers[Headers[\"PartialIV\"] = 6] = \"PartialIV\";\n    Headers[Headers[\"CounterSignature\"] = 7] = \"CounterSignature\";\n    Headers[Headers[\"CounterSignature0\"] = 9] = \"CounterSignature0\";\n    Headers[Headers[\"CounterSignatureV2\"] = 11] = \"CounterSignatureV2\";\n    Headers[Headers[\"CounterSignature0V2\"] = 12] = \"CounterSignature0V2\";\n    Headers[Headers[\"X5Bag\"] = 32] = \"X5Bag\";\n    Headers[Headers[\"X5Chain\"] = 33] = \"X5Chain\";\n    Headers[Headers[\"X5T\"] = 34] = \"X5T\";\n    Headers[Headers[\"X5U\"] = 35] = \"X5U\";\n})(Headers || (Headers = {}));\nexport var Algorithms;\n(function (Algorithms) {\n    Algorithms[Algorithms[\"EdDSA\"] = -8] = \"EdDSA\";\n    Algorithms[Algorithms[\"ES256\"] = -7] = \"ES256\";\n    Algorithms[Algorithms[\"ES384\"] = -35] = \"ES384\";\n    Algorithms[Algorithms[\"ES512\"] = -36] = \"ES512\";\n    Algorithms[Algorithms[\"PS256\"] = -37] = \"PS256\";\n    Algorithms[Algorithms[\"PS384\"] = -38] = \"PS384\";\n    Algorithms[Algorithms[\"PS512\"] = -39] = \"PS512\";\n    Algorithms[Algorithms[\"RS256\"] = -257] = \"RS256\";\n    Algorithms[Algorithms[\"RS384\"] = -258] = \"RS384\";\n    Algorithms[Algorithms[\"RS512\"] = -259] = \"RS512\";\n})(Algorithms || (Algorithms = {}));\nexport var MacAlgorithms;\n(function (MacAlgorithms) {\n    MacAlgorithms[MacAlgorithms[\"HS256\"] = 5] = \"HS256\";\n    MacAlgorithms[MacAlgorithms[\"HS384\"] = 6] = \"HS384\";\n    MacAlgorithms[MacAlgorithms[\"HS512\"] = 7] = \"HS512\";\n})(MacAlgorithms || (MacAlgorithms = {}));\nexport var EncryptionAlgorithms;\n(function (EncryptionAlgorithms) {\n    EncryptionAlgorithms[EncryptionAlgorithms[\"A128GCM\"] = 1] = \"A128GCM\";\n    EncryptionAlgorithms[EncryptionAlgorithms[\"A192GCM\"] = 2] = \"A192GCM\";\n    EncryptionAlgorithms[EncryptionAlgorithms[\"A256GCM\"] = 3] = \"A256GCM\";\n    EncryptionAlgorithms[EncryptionAlgorithms[\"Direct\"] = -6] = \"Direct\";\n})(EncryptionAlgorithms || (EncryptionAlgorithms = {}));\nexport const EncryptionAlgorithmNames = new Map([\n    [EncryptionAlgorithms.A128GCM, 'A128GCM'],\n    [EncryptionAlgorithms.A192GCM, 'A192GCM'],\n    [EncryptionAlgorithms.A256GCM, 'A256GCM']\n]);\nexport const MacAlgorithmNames = new Map([\n    [MacAlgorithms.HS256, 'HS256'],\n    [MacAlgorithms.HS384, 'HS384'],\n    [MacAlgorithms.HS512, 'HS512']\n]);\nexport const AlgorithmNames = new Map([\n    [Algorithms.EdDSA, 'EdDSA'],\n    [Algorithms.ES256, 'ES256'],\n    [Algorithms.ES384, 'ES384'],\n    [Algorithms.ES512, 'ES512'],\n    [Algorithms.PS256, 'PS256'],\n    [Algorithms.PS384, 'PS384'],\n    [Algorithms.PS512, 'PS512'],\n    [Algorithms.RS256, 'RS256'],\n    [Algorithms.RS384, 'RS384'],\n    [Algorithms.RS512, 'RS512']\n]);\nexport class ProtectedHeaders extends TypedMap {\n    static from(headers) {\n        if (headers instanceof ProtectedHeaders) {\n            return headers;\n        }\n        return new ProtectedHeaders(headers);\n    }\n    encode() {\n        return encoder.encode(this.esMap);\n    }\n}\nexport class EncryptProtectedHeaders extends TypedMap {\n    static from(headers) {\n        if (headers instanceof EncryptProtectedHeaders) {\n            return headers;\n        }\n        return new MacProtectedHeaders(headers);\n    }\n}\nexport class MacProtectedHeaders extends TypedMap {\n    static from(headers) {\n        if (headers instanceof MacProtectedHeaders) {\n            return headers;\n        }\n        return new MacProtectedHeaders(headers);\n    }\n}\nexport class UnprotectedHeaders extends TypedMap {\n    static from(headers) {\n        if (headers instanceof UnprotectedHeaders) {\n            return headers;\n        }\n        return new UnprotectedHeaders(headers);\n    }\n}\n","export class COSEError extends Error {\n    static get code() {\n        return 'ERR_COSE_GENERIC';\n    }\n    constructor(message) {\n        var _a;\n        super(message);\n        this.code = 'ERR_COSE_GENERIC';\n        this.name = this.constructor.name;\n        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);\n    }\n}\nexport class COSEAlgNotAllowed extends COSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_COSE_ALG_NOT_ALLOWED';\n    }\n    static get code() {\n        return 'ERR_COSE_ALG_NOT_ALLOWED';\n    }\n}\nexport class COSENotSupported extends COSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_COSE_NOT_SUPPORTED';\n    }\n    static get code() {\n        return 'ERR_COSE_NOT_SUPPORTED';\n    }\n}\nexport class JWKSInvalid extends COSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n}\nexport class JWKSNoMatchingKey extends COSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nexport class JWKSMultipleMatchingKeys extends COSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nexport class X509NoMatchingCertificate extends COSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_X509_NO_MATCHING_CERTIFICATE';\n        this.message = 'no applicable certificate found in the COSE headers';\n    }\n    static get code() {\n        return 'ERR_X509_NO_MATCHING_CERTIFICATE';\n    }\n}\nexport class X509InvalidCertificateChain extends COSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_X509_INVALID_CERTIFICATE_CHAIN';\n    }\n    static get code() {\n        return 'ERR_X509_INVALID_CERTIFICATE_CHAIN';\n    }\n}\nexport class COSEDecryptionFailed extends COSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_COSE_DECRYPTION_FAILED';\n        this.message = 'decryption operation failed';\n    }\n    static get code() {\n        return 'ERR_COSE_DECRYPTION_FAILED';\n    }\n}\nexport class COSEEncryptedInvalid extends COSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_COSE_ENCRYPTED_INVALID';\n    }\n    static get code() {\n        return 'ERR_COSE_ENCRYPTED_INVALID';\n    }\n}\nexport class COSEInvalid extends COSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_COSE_INVALID';\n    }\n    static get code() {\n        return 'ERR_COSE_INVALID';\n    }\n}\nexport class COSESignatureVerificationFailed extends COSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_COSE_SIGNATURE_VERIFICATION_FAILED';\n        this.message = 'signature verification failed';\n    }\n    static get code() {\n        return 'ERR_COSE_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\n","import { COSENotSupported } from '../../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'EdDSA':\n            return { name: algorithm.name };\n        default:\n            throw new COSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n","export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n","function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n","function message(msg, actual, ...types) {\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n","import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    return isCryptoKey(key);\n};\nexport const types = ['CryptoKey'];\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../../lib/crypto_key.js';\nimport invalidKeyInput from '../../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport default function getCryptoKey(alg, key, usage) {\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getSignKey from './get_sign_verify_key.js';\nconst sign = async (alg, key, data) => {\n    const cryptoKey = await getSignKey(alg, key, 'sign');\n    checkKeyLength(alg, cryptoKey);\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\n    return new Uint8Array(signature);\n};\nexport default sign;\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch (_a) {\n        return false;\n    }\n};\nexport default verify;\n","export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n","import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer) => {\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n","import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch (_a) {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n","export class JOSEError extends Error {\n    static get code() {\n        return 'ERR_JOSE_GENERIC';\n    }\n    constructor(message) {\n        var _a;\n        super(message);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_EXPIRED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n    static get code() {\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n    static get code() {\n        return 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n        this.message = 'decryption operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nexport class JWEDecompressionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECOMPRESSION_FAILED';\n        this.message = 'decompression operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECOMPRESSION_FAILED';\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWE_INVALID';\n    }\n}\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWS_INVALID';\n    }\n}\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWT_INVALID';\n    }\n}\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWK_INVALID';\n    }\n}\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nexport class JWKSTimeout extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_TIMEOUT';\n        this.message = 'request timed out';\n    }\n    static get code() {\n        return 'ERR_JWKS_TIMEOUT';\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n        this.message = 'signature verification failed';\n    }\n    static get code() {\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\n","function message(msg, actual, ...types) {\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n","import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    return isCryptoKey(key);\n};\nexport const types = ['CryptoKey'];\n","function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n","export default (b64, descriptor) => {\n    const newlined = (b64.match(/.{1,64}/g) || []).join('\\n');\n    return `-----BEGIN ${descriptor}-----\\n${newlined}\\n-----END ${descriptor}-----`;\n};\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encodeBase64, decodeBase64 } from './base64url.js';\nimport formatPEM from '../lib/format_pem.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nconst genericExport = async (keyType, keyFormat, key) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    if (!key.extractable) {\n        throw new TypeError('CryptoKey is not extractable');\n    }\n    if (key.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return formatPEM(encodeBase64(new Uint8Array(await crypto.subtle.exportKey(keyFormat, key))), `${keyType.toUpperCase()} KEY`);\n};\nexport const toSPKI = (key) => {\n    return genericExport('public', 'spki', key);\n};\nexport const toPKCS8 = (key) => {\n    return genericExport('private', 'pkcs8', key);\n};\nconst findOid = (keyData, oid, from = 0) => {\n    if (from === 0) {\n        oid.unshift(oid.length);\n        oid.unshift(0x06);\n    }\n    let i = keyData.indexOf(oid[0], from);\n    if (i === -1)\n        return false;\n    const sub = keyData.subarray(i, i + oid.length);\n    if (sub.length !== oid.length)\n        return false;\n    return sub.every((value, index) => value === oid[index]) || findOid(keyData, oid, i + 1);\n};\nconst getNamedCurve = (keyData) => {\n    switch (true) {\n        case findOid(keyData, [0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07]):\n            return 'P-256';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x22]):\n            return 'P-384';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x23]):\n            return 'P-521';\n        case findOid(keyData, [0x2b, 0x65, 0x6e]):\n            return 'X25519';\n        case findOid(keyData, [0x2b, 0x65, 0x6f]):\n            return 'X448';\n        case findOid(keyData, [0x2b, 0x65, 0x70]):\n            return 'Ed25519';\n        case findOid(keyData, [0x2b, 0x65, 0x71]):\n            return 'Ed448';\n        default:\n            throw new JOSENotSupported('Invalid or unsupported EC Key Curve or OKP Key Sub Type');\n    }\n};\nconst genericImport = async (replace, keyFormat, pem, alg, options) => {\n    var _a;\n    let algorithm;\n    let keyUsages;\n    const keyData = new Uint8Array(atob(pem.replace(replace, ''))\n        .split('')\n        .map((c) => c.charCodeAt(0)));\n    const isPublic = keyFormat === 'spki';\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = { name: 'RSA-PSS', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n            };\n            keyUsages = isPublic ? ['encrypt', 'wrapKey'] : ['decrypt', 'unwrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            const namedCurve = getNamedCurve(keyData);\n            algorithm = namedCurve.startsWith('P-') ? { name: 'ECDH', namedCurve } : { name: namedCurve };\n            keyUsages = isPublic ? [] : ['deriveBits'];\n            break;\n        }\n        case 'EdDSA':\n            algorithm = { name: getNamedCurve(keyData) };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (Algorithm) value');\n    }\n    return crypto.subtle.importKey(keyFormat, keyData, algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n};\nexport const fromPKCS8 = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, 'pkcs8', pem, alg, options);\n};\nexport const fromSPKI = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, 'spki', pem, alg, options);\n};\nfunction getElement(seq) {\n    let result = [];\n    let next = 0;\n    while (next < seq.length) {\n        let nextPart = parseElement(seq.subarray(next));\n        result.push(nextPart);\n        next += nextPart.byteLength;\n    }\n    return result;\n}\nfunction parseElement(bytes) {\n    let position = 0;\n    let tag = bytes[0] & 0x1f;\n    position++;\n    if (tag === 0x1f) {\n        tag = 0;\n        while (bytes[position] >= 0x80) {\n            tag = tag * 128 + bytes[position] - 0x80;\n            position++;\n        }\n        tag = tag * 128 + bytes[position] - 0x80;\n        position++;\n    }\n    let length = 0;\n    if (bytes[position] < 0x80) {\n        length = bytes[position];\n        position++;\n    }\n    else if (length === 0x80) {\n        length = 0;\n        while (bytes[position + length] !== 0 || bytes[position + length + 1] !== 0) {\n            if (length > bytes.byteLength) {\n                throw new TypeError('invalid indefinite form length');\n            }\n            length++;\n        }\n        const byteLength = position + length + 2;\n        return {\n            byteLength,\n            contents: bytes.subarray(position, position + length),\n            raw: bytes.subarray(0, byteLength),\n        };\n    }\n    else {\n        let numberOfDigits = bytes[position] & 0x7f;\n        position++;\n        length = 0;\n        for (let i = 0; i < numberOfDigits; i++) {\n            length = length * 256 + bytes[position];\n            position++;\n        }\n    }\n    const byteLength = position + length;\n    return {\n        byteLength,\n        contents: bytes.subarray(position, byteLength),\n        raw: bytes.subarray(0, byteLength),\n    };\n}\nfunction spkiFromX509(buf) {\n    const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);\n    return encodeBase64(tbsCertificate[tbsCertificate[0].raw[0] === 0xa0 ? 6 : 5].raw);\n}\nfunction getSPKI(x509) {\n    const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, '');\n    const raw = decodeBase64(pem);\n    return formatPEM(spkiFromX509(raw), 'PUBLIC KEY');\n}\nexport const fromX509 = (pem, alg, options) => {\n    let spki;\n    try {\n        spki = getSPKI(pem);\n    }\n    catch (cause) {\n        throw new TypeError('Failed to parse the X.509 certificate', { cause });\n    }\n    return fromSPKI(spki, alg, options);\n};\n","import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { decode as base64url } from './base64url.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'oct': {\n            switch (jwk.alg) {\n                case 'HS256':\n                case 'HS384':\n                case 'HS512':\n                    algorithm = { name: 'HMAC', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = ['sign', 'verify'];\n                    break;\n                case 'A128CBC-HS256':\n                case 'A192CBC-HS384':\n                case 'A256CBC-HS512':\n                    throw new JOSENotSupported(`${jwk.alg} keys cannot be imported as CryptoKey instances`);\n                case 'A128GCM':\n                case 'A192GCM':\n                case 'A256GCM':\n                case 'A128GCMKW':\n                case 'A192GCMKW':\n                case 'A256GCMKW':\n                    algorithm = { name: 'AES-GCM' };\n                    keyUsages = ['encrypt', 'decrypt'];\n                    break;\n                case 'A128KW':\n                case 'A192KW':\n                case 'A256KW':\n                    algorithm = { name: 'AES-KW' };\n                    keyUsages = ['wrapKey', 'unwrapKey'];\n                    break;\n                case 'PBES2-HS256+A128KW':\n                case 'PBES2-HS384+A192KW':\n                case 'PBES2-HS512+A256KW':\n                    algorithm = { name: 'PBKDF2' };\n                    keyUsages = ['deriveBits'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'EdDSA':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    var _a, _b;\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        (_a = jwk.ext) !== null && _a !== void 0 ? _a : false,\n        (_b = jwk.key_ops) !== null && _b !== void 0 ? _b : keyUsages,\n    ];\n    if (algorithm.name === 'PBKDF2') {\n        return crypto.subtle.importKey('raw', base64url(jwk.k), ...rest);\n    }\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\n};\nexport default parse;\n","import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg, octAsKeyObject) {\n    var _a;\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : (octAsKeyObject = jwk.ext !== true);\n            if (octAsKeyObject) {\n                return asKeyObject({ ...jwk, alg, ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false });\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encode as base64url } from './base64url.js';\nimport { types } from './is_key_like.js';\nconst keyToJWK = async (key) => {\n    if (key instanceof Uint8Array) {\n        return {\n            kty: 'oct',\n            k: base64url(key),\n        };\n    }\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n    }\n    if (!key.extractable) {\n        throw new TypeError('non-extractable CryptoKey cannot be exported as a JWK');\n    }\n    const { ext, key_ops, alg, use, ...jwk } = await crypto.subtle.exportKey('jwk', key);\n    return jwk;\n};\nexport default keyToJWK;\n","import { toSPKI as exportPublic } from '../runtime/asn1.js';\nimport { toPKCS8 as exportPrivate } from '../runtime/asn1.js';\nimport keyToJWK from '../runtime/key_to_jwk.js';\nexport async function exportSPKI(key) {\n    return exportPublic(key);\n}\nexport async function exportPKCS8(key) {\n    return exportPrivate(key);\n}\nexport async function exportJWK(key) {\n    return keyToJWK(key);\n}\n","import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport random from './random.js';\nexport async function generateSecret(alg, options) {\n    var _a;\n    let length;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            length = parseInt(alg.slice(-3), 10);\n            algorithm = { name: 'HMAC', hash: `SHA-${length}`, length };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            length = parseInt(alg.slice(-3), 10);\n            return random(new Uint8Array(length >> 3));\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-KW', length };\n            keyUsages = ['wrapKey', 'unwrapKey'];\n            break;\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW':\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-GCM', length };\n            keyUsages = ['encrypt', 'decrypt'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return crypto.subtle.generateKey(algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n}\nfunction getModulusLengthOption(options) {\n    var _a;\n    const modulusLength = (_a = options === null || options === void 0 ? void 0 : options.modulusLength) !== null && _a !== void 0 ? _a : 2048;\n    if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n        throw new JOSENotSupported('Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used');\n    }\n    return modulusLength;\n}\nexport async function generateKeyPair(alg, options) {\n    var _a, _b, _c;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = {\n                name: 'RSA-PSS',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['decrypt', 'unwrapKey', 'encrypt', 'wrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'EdDSA':\n            keyUsages = ['sign', 'verify'];\n            const crv = (_a = options === null || options === void 0 ? void 0 : options.crv) !== null && _a !== void 0 ? _a : 'Ed25519';\n            switch (crv) {\n                case 'Ed25519':\n                case 'Ed448':\n                    algorithm = { name: crv };\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided');\n            }\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            keyUsages = ['deriveKey', 'deriveBits'];\n            const crv = (_b = options === null || options === void 0 ? void 0 : options.crv) !== null && _b !== void 0 ? _b : 'P-256';\n            switch (crv) {\n                case 'P-256':\n                case 'P-384':\n                case 'P-521': {\n                    algorithm = { name: 'ECDH', namedCurve: crv };\n                    break;\n                }\n                case 'X25519':\n                case 'X448':\n                    algorithm = { name: crv };\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return (crypto.subtle.generateKey(algorithm, (_c = options === null || options === void 0 ? void 0 : options.extractable) !== null && _c !== void 0 ? _c : false, keyUsages));\n}\n","import { generateKeyPair as generate } from '../runtime/generate.js';\nexport async function generateKeyPair(alg, options) {\n    return generate(alg, options);\n}\n","export class ByteStream {\n    constructor(parameters = {}) {\n        if (\"view\" in parameters) {\n            this.fromUint8Array(parameters.view);\n        }\n        else if (\"buffer\" in parameters) {\n            this.fromArrayBuffer(parameters.buffer);\n        }\n        else if (\"string\" in parameters) {\n            this.fromString(parameters.string);\n        }\n        else if (\"hexstring\" in parameters) {\n            this.fromHexString(parameters.hexstring);\n        }\n        else {\n            if (\"length\" in parameters && parameters.length > 0) {\n                this.length = parameters.length;\n                if (parameters.stub) {\n                    for (let i = 0; i < this._view.length; i++) {\n                        this._view[i] = parameters.stub;\n                    }\n                }\n            }\n            else {\n                this.length = 0;\n            }\n        }\n    }\n    set buffer(value) {\n        this._buffer = value;\n        this._view = new Uint8Array(this._buffer);\n    }\n    get buffer() {\n        return this._buffer;\n    }\n    set view(value) {\n        this._buffer = new ArrayBuffer(value.length);\n        this._view = new Uint8Array(this._buffer);\n        this._view.set(value);\n    }\n    get view() {\n        return this._view;\n    }\n    get length() {\n        return this.view.byteLength;\n    }\n    set length(value) {\n        this._buffer = new ArrayBuffer(value);\n        this._view = new Uint8Array(this._buffer);\n    }\n    clear() {\n        this._buffer = new ArrayBuffer(0);\n        this._view = new Uint8Array(this._buffer);\n    }\n    fromArrayBuffer(array) {\n        this._buffer = array;\n        this._view = new Uint8Array(this._buffer);\n    }\n    fromUint8Array(array) {\n        this.fromArrayBuffer(new Uint8Array(array).buffer);\n    }\n    fromString(string) {\n        const stringLength = string.length;\n        this.length = stringLength;\n        for (let i = 0; i < stringLength; i++)\n            this.view[i] = string.charCodeAt(i);\n    }\n    toString(start = 0, length = (this.view.length - start)) {\n        let result = \"\";\n        if ((start >= this.view.length) || (start < 0)) {\n            start = 0;\n        }\n        if ((length >= this.view.length) || (length < 0)) {\n            length = this.view.length - start;\n        }\n        for (let i = start; i < (start + length); i++)\n            result += String.fromCharCode(this.view[i]);\n        return result;\n    }\n    fromHexString(hexString) {\n        const stringLength = hexString.length;\n        this.buffer = new ArrayBuffer(stringLength >> 1);\n        this.view = new Uint8Array(this.buffer);\n        const hexMap = new Map();\n        hexMap.set(\"0\", 0x00);\n        hexMap.set(\"1\", 0x01);\n        hexMap.set(\"2\", 0x02);\n        hexMap.set(\"3\", 0x03);\n        hexMap.set(\"4\", 0x04);\n        hexMap.set(\"5\", 0x05);\n        hexMap.set(\"6\", 0x06);\n        hexMap.set(\"7\", 0x07);\n        hexMap.set(\"8\", 0x08);\n        hexMap.set(\"9\", 0x09);\n        hexMap.set(\"A\", 0x0A);\n        hexMap.set(\"a\", 0x0A);\n        hexMap.set(\"B\", 0x0B);\n        hexMap.set(\"b\", 0x0B);\n        hexMap.set(\"C\", 0x0C);\n        hexMap.set(\"c\", 0x0C);\n        hexMap.set(\"D\", 0x0D);\n        hexMap.set(\"d\", 0x0D);\n        hexMap.set(\"E\", 0x0E);\n        hexMap.set(\"e\", 0x0E);\n        hexMap.set(\"F\", 0x0F);\n        hexMap.set(\"f\", 0x0F);\n        let j = 0;\n        let temp = 0x00;\n        for (let i = 0; i < stringLength; i++) {\n            if (!(i % 2)) {\n                temp = hexMap.get(hexString.charAt(i)) << 4;\n            }\n            else {\n                temp |= hexMap.get(hexString.charAt(i));\n                this.view[j] = temp;\n                j++;\n            }\n        }\n    }\n    toHexString(start = 0, length = (this.view.length - start)) {\n        let result = \"\";\n        if ((start >= this.view.length) || (start < 0)) {\n            start = 0;\n        }\n        if ((length >= this.view.length) || (length < 0)) {\n            length = this.view.length - start;\n        }\n        for (let i = start; i < (start + length); i++) {\n            const str = this.view[i].toString(16).toUpperCase();\n            result = result + ((str.length == 1) ? \"0\" : \"\") + str;\n        }\n        return result;\n    }\n    copy(start = 0, length = (this.length - start)) {\n        if (!start && !this.length) {\n            return new ByteStream();\n        }\n        if ((start < 0) || (start > (this.length - 1))) {\n            throw new Error(`Wrong start position: ${start}`);\n        }\n        const stream = new ByteStream({\n            buffer: this._buffer.slice(start, start + length)\n        });\n        return stream;\n    }\n    slice(start = 0, end = this.length) {\n        if (!start && !this.length) {\n            return new ByteStream();\n        }\n        if ((start < 0) || (start > (this.length - 1))) {\n            throw new Error(`Wrong start position: ${start}`);\n        }\n        const stream = new ByteStream({\n            buffer: this._buffer.slice(start, end),\n        });\n        return stream;\n    }\n    realloc(size) {\n        const buffer = new ArrayBuffer(size);\n        const view = new Uint8Array(buffer);\n        if (size > this._view.length)\n            view.set(this._view);\n        else {\n            view.set(new Uint8Array(this._buffer, 0, size));\n        }\n        this._buffer = buffer;\n        this._view = new Uint8Array(this._buffer);\n    }\n    append(stream) {\n        const initialSize = this.length;\n        const streamViewLength = stream.length;\n        const subarrayView = stream._view.subarray();\n        this.realloc(initialSize + streamViewLength);\n        this._view.set(subarrayView, initialSize);\n    }\n    insert(stream, start = 0, length = (this.length - start)) {\n        if (start > (this.length - 1))\n            return false;\n        if (length > (this.length - start)) {\n            length = this.length - start;\n        }\n        if (length > stream.length) {\n            length = stream.length;\n        }\n        if (length == stream.length)\n            this._view.set(stream._view, start);\n        else {\n            this._view.set(stream._view.subarray(0, length), start);\n        }\n        return true;\n    }\n    isEqual(stream) {\n        if (this.length != stream.length)\n            return false;\n        for (let i = 0; i < stream.length; i++) {\n            if (this.view[i] != stream.view[i])\n                return false;\n        }\n        return true;\n    }\n    isEqualView(view) {\n        if (view.length != this.view.length)\n            return false;\n        for (let i = 0; i < view.length; i++) {\n            if (this.view[i] != view[i])\n                return false;\n        }\n        return true;\n    }\n    findPattern(pattern, start_, length_, backward_) {\n        const { start, length, backward } = this.prepareFindParameters(start_, length_, backward_);\n        const patternLength = pattern.length;\n        if (patternLength > length) {\n            return (-1);\n        }\n        const patternArray = [];\n        for (let i = 0; i < patternLength; i++)\n            patternArray.push(pattern.view[i]);\n        for (let i = 0; i <= (length - patternLength); i++) {\n            let equal = true;\n            const equalStart = (backward) ? (start - patternLength - i) : (start + i);\n            for (let j = 0; j < patternLength; j++) {\n                if (this.view[j + equalStart] != patternArray[j]) {\n                    equal = false;\n                    break;\n                }\n            }\n            if (equal) {\n                return (backward) ? (start - patternLength - i) : (start + patternLength + i);\n            }\n        }\n        return (-1);\n    }\n    findFirstIn(patterns, start_, length_, backward_) {\n        const { start, length, backward } = this.prepareFindParameters(start_, length_, backward_);\n        const result = {\n            id: (-1),\n            position: (backward) ? 0 : (start + length),\n            length: 0\n        };\n        for (let i = 0; i < patterns.length; i++) {\n            const position = this.findPattern(patterns[i], start, length, backward);\n            if (position != (-1)) {\n                let valid = false;\n                const patternLength = patterns[i].length;\n                if (backward) {\n                    if ((position - patternLength) >= (result.position - result.length))\n                        valid = true;\n                }\n                else {\n                    if ((position - patternLength) <= (result.position - result.length))\n                        valid = true;\n                }\n                if (valid) {\n                    result.position = position;\n                    result.id = i;\n                    result.length = patternLength;\n                }\n            }\n        }\n        return result;\n    }\n    findAllIn(patterns, start_, length_) {\n        let { start, length } = this.prepareFindParameters(start_, length_);\n        const result = [];\n        let patternFound = {\n            id: (-1),\n            position: start\n        };\n        do {\n            const position = patternFound.position;\n            patternFound = this.findFirstIn(patterns, patternFound.position, length);\n            if (patternFound.id == (-1)) {\n                break;\n            }\n            length -= (patternFound.position - position);\n            result.push({\n                id: patternFound.id,\n                position: patternFound.position\n            });\n        } while (true);\n        return result;\n    }\n    findAllPatternIn(pattern, start_, length_) {\n        const { start, length } = this.prepareFindParameters(start_, length_);\n        const result = [];\n        const patternLength = pattern.length;\n        if (patternLength > length) {\n            return (-1);\n        }\n        const patternArray = Array.from(pattern.view);\n        for (let i = 0; i <= (length - patternLength); i++) {\n            let equal = true;\n            const equalStart = start + i;\n            for (let j = 0; j < patternLength; j++) {\n                if (this.view[j + equalStart] != patternArray[j]) {\n                    equal = false;\n                    break;\n                }\n            }\n            if (equal) {\n                result.push(start + patternLength + i);\n                i += (patternLength - 1);\n            }\n        }\n        return result;\n    }\n    findFirstNotIn(patterns, start_, length_, backward_) {\n        let { start, length, backward } = this.prepareFindParameters(start_, length_, backward_);\n        const result = {\n            left: {\n                id: (-1),\n                position: start\n            },\n            right: {\n                id: (-1),\n                position: 0\n            },\n            value: new ByteStream()\n        };\n        let currentLength = length;\n        while (currentLength > 0) {\n            result.right = this.findFirstIn(patterns, (backward) ? (start - length + currentLength) : (start + length - currentLength), currentLength, backward);\n            if (result.right.id == (-1)) {\n                length = currentLength;\n                if (backward) {\n                    start -= length;\n                }\n                else {\n                    start = result.left.position;\n                }\n                result.value = new ByteStream({\n                    buffer: this._buffer.slice(start, start + length),\n                });\n                break;\n            }\n            if (result.right.position != ((backward) ? (result.left.position - patterns[result.right.id].length) : (result.left.position + patterns[result.right.id].length))) {\n                if (backward) {\n                    start = result.right.position + patterns[result.right.id].length;\n                    length = result.left.position - result.right.position - patterns[result.right.id].length;\n                }\n                else {\n                    start = result.left.position;\n                    length = result.right.position - result.left.position - patterns[result.right.id].length;\n                }\n                result.value = new ByteStream({\n                    buffer: this._buffer.slice(start, start + length),\n                });\n                break;\n            }\n            result.left = result.right;\n            currentLength -= patterns[result.right.id].length;\n        }\n        if (backward) {\n            const temp = result.right;\n            result.right = result.left;\n            result.left = temp;\n        }\n        return result;\n    }\n    findAllNotIn(patterns, start_, length_) {\n        let { start, length } = this.prepareFindParameters(start_, length_);\n        const result = [];\n        let patternFound = {\n            left: {\n                id: (-1),\n                position: start\n            },\n            right: {\n                id: (-1),\n                position: start\n            },\n            value: new ByteStream()\n        };\n        do {\n            const position = patternFound.right.position;\n            patternFound = this.findFirstNotIn(patterns, patternFound.right.position, length);\n            length -= (patternFound.right.position - position);\n            result.push({\n                left: {\n                    id: patternFound.left.id,\n                    position: patternFound.left.position\n                },\n                right: {\n                    id: patternFound.right.id,\n                    position: patternFound.right.position\n                },\n                value: patternFound.value\n            });\n        } while (patternFound.right.id != (-1));\n        return result;\n    }\n    findFirstSequence(patterns, start_, length_, backward_) {\n        let { start, length, backward } = this.prepareFindParameters(start_, length_, backward_);\n        const firstIn = this.skipNotPatterns(patterns, start, length, backward);\n        if (firstIn == (-1)) {\n            return {\n                position: (-1),\n                value: new ByteStream()\n            };\n        }\n        const firstNotIn = this.skipPatterns(patterns, firstIn, length - ((backward) ? (start - firstIn) : (firstIn - start)), backward);\n        if (backward) {\n            start = firstNotIn;\n            length = (firstIn - firstNotIn);\n        }\n        else {\n            start = firstIn;\n            length = (firstNotIn - firstIn);\n        }\n        const value = new ByteStream({\n            buffer: this._buffer.slice(start, start + length),\n        });\n        return {\n            position: firstNotIn,\n            value\n        };\n    }\n    findAllSequences(patterns, start_, length_) {\n        let { start, length } = this.prepareFindParameters(start_, length_);\n        const result = [];\n        let patternFound = {\n            position: start,\n            value: new ByteStream()\n        };\n        do {\n            const position = patternFound.position;\n            patternFound = this.findFirstSequence(patterns, patternFound.position, length);\n            if (patternFound.position != (-1)) {\n                length -= (patternFound.position - position);\n                result.push({\n                    position: patternFound.position,\n                    value: patternFound.value,\n                });\n            }\n        } while (patternFound.position != (-1));\n        return result;\n    }\n    findPairedPatterns(leftPattern, rightPattern, start_, length_) {\n        const result = [];\n        if (leftPattern.isEqual(rightPattern))\n            return result;\n        const { start, length } = this.prepareFindParameters(start_, length_);\n        let currentPositionLeft = 0;\n        const leftPatterns = this.findAllPatternIn(leftPattern, start, length);\n        if (!Array.isArray(leftPatterns) || leftPatterns.length == 0) {\n            return result;\n        }\n        const rightPatterns = this.findAllPatternIn(rightPattern, start, length);\n        if (!Array.isArray(rightPatterns) || rightPatterns.length == 0) {\n            return result;\n        }\n        while (currentPositionLeft < leftPatterns.length) {\n            if (rightPatterns.length == 0) {\n                break;\n            }\n            if (leftPatterns[0] == rightPatterns[0]) {\n                result.push({\n                    left: leftPatterns[0],\n                    right: rightPatterns[0]\n                });\n                leftPatterns.splice(0, 1);\n                rightPatterns.splice(0, 1);\n                continue;\n            }\n            if (leftPatterns[currentPositionLeft] > rightPatterns[0]) {\n                break;\n            }\n            while (leftPatterns[currentPositionLeft] < rightPatterns[0]) {\n                currentPositionLeft++;\n                if (currentPositionLeft >= leftPatterns.length) {\n                    break;\n                }\n            }\n            result.push({\n                left: leftPatterns[currentPositionLeft - 1],\n                right: rightPatterns[0]\n            });\n            leftPatterns.splice(currentPositionLeft - 1, 1);\n            rightPatterns.splice(0, 1);\n            currentPositionLeft = 0;\n        }\n        result.sort((a, b) => (a.left - b.left));\n        return result;\n    }\n    findPairedArrays(inputLeftPatterns, inputRightPatterns, start_, length_) {\n        const { start, length } = this.prepareFindParameters(start_, length_);\n        const result = [];\n        let currentPositionLeft = 0;\n        const leftPatterns = this.findAllIn(inputLeftPatterns, start, length);\n        if (leftPatterns.length == 0)\n            return result;\n        const rightPatterns = this.findAllIn(inputRightPatterns, start, length);\n        if (rightPatterns.length == 0)\n            return result;\n        while (currentPositionLeft < leftPatterns.length) {\n            if (rightPatterns.length == 0) {\n                break;\n            }\n            if (leftPatterns[0].position == rightPatterns[0].position) {\n                result.push({\n                    left: leftPatterns[0],\n                    right: rightPatterns[0]\n                });\n                leftPatterns.splice(0, 1);\n                rightPatterns.splice(0, 1);\n                continue;\n            }\n            if (leftPatterns[currentPositionLeft].position > rightPatterns[0].position) {\n                break;\n            }\n            while (leftPatterns[currentPositionLeft].position < rightPatterns[0].position) {\n                currentPositionLeft++;\n                if (currentPositionLeft >= leftPatterns.length) {\n                    break;\n                }\n            }\n            result.push({\n                left: leftPatterns[currentPositionLeft - 1],\n                right: rightPatterns[0]\n            });\n            leftPatterns.splice(currentPositionLeft - 1, 1);\n            rightPatterns.splice(0, 1);\n            currentPositionLeft = 0;\n        }\n        result.sort((a, b) => (a.left.position - b.left.position));\n        return result;\n    }\n    replacePattern(searchPattern, replacePattern, start_, length_, findAllResult = null) {\n        let result = [];\n        let i;\n        const output = {\n            status: (-1),\n            searchPatternPositions: [],\n            replacePatternPositions: []\n        };\n        const { start, length } = this.prepareFindParameters(start_, length_);\n        if (findAllResult == null) {\n            result = this.findAllIn([searchPattern], start, length);\n            if (result.length == 0) {\n                return output;\n            }\n        }\n        else {\n            result = findAllResult;\n        }\n        output.searchPatternPositions.push(...Array.from(result, element => element.position));\n        const patternDifference = searchPattern.length - replacePattern.length;\n        const changedBuffer = new ArrayBuffer(this.view.length - (result.length * patternDifference));\n        const changedView = new Uint8Array(changedBuffer);\n        changedView.set(new Uint8Array(this.buffer, 0, start));\n        for (i = 0; i < result.length; i++) {\n            const currentPosition = (i == 0) ? start : result[i - 1].position;\n            changedView.set(new Uint8Array(this.buffer, currentPosition, result[i].position - searchPattern.length - currentPosition), currentPosition - i * patternDifference);\n            changedView.set(replacePattern.view, result[i].position - searchPattern.length - i * patternDifference);\n            output.replacePatternPositions.push(result[i].position - searchPattern.length - i * patternDifference);\n        }\n        i--;\n        changedView.set(new Uint8Array(this.buffer, result[i].position, this.length - result[i].position), result[i].position - searchPattern.length + replacePattern.length - i * patternDifference);\n        this.buffer = changedBuffer;\n        this.view = new Uint8Array(this.buffer);\n        output.status = 1;\n        return output;\n    }\n    skipPatterns(patterns, start_, length_, backward_) {\n        const { start, length, backward } = this.prepareFindParameters(start_, length_, backward_);\n        let result = start;\n        for (let k = 0; k < patterns.length; k++) {\n            const patternLength = patterns[k].length;\n            const equalStart = (backward) ? (result - patternLength) : (result);\n            let equal = true;\n            for (let j = 0; j < patternLength; j++) {\n                if (this.view[j + equalStart] != patterns[k].view[j]) {\n                    equal = false;\n                    break;\n                }\n            }\n            if (equal) {\n                k = (-1);\n                if (backward) {\n                    result -= patternLength;\n                    if (result <= 0)\n                        return result;\n                }\n                else {\n                    result += patternLength;\n                    if (result >= (start + length))\n                        return result;\n                }\n            }\n        }\n        return result;\n    }\n    skipNotPatterns(patterns, start_, length_, backward_) {\n        const { start, length, backward } = this.prepareFindParameters(start_, length_, backward_);\n        let result = (-1);\n        for (let i = 0; i < length; i++) {\n            for (let k = 0; k < patterns.length; k++) {\n                const patternLength = patterns[k].length;\n                const equalStart = (backward) ? (start - i - patternLength) : (start + i);\n                let equal = true;\n                for (let j = 0; j < patternLength; j++) {\n                    if (this.view[j + equalStart] != patterns[k].view[j]) {\n                        equal = false;\n                        break;\n                    }\n                }\n                if (equal) {\n                    result = (backward) ? (start - i) : (start + i);\n                    break;\n                }\n            }\n            if (result != (-1)) {\n                break;\n            }\n        }\n        return result;\n    }\n    prepareFindParameters(start = null, length = null, backward = false) {\n        if (start === null) {\n            start = (backward) ? this.length : 0;\n        }\n        if (start > this.length) {\n            start = this.length;\n        }\n        if (backward) {\n            if (length === null) {\n                length = start;\n            }\n            if (length > start) {\n                length = start;\n            }\n        }\n        else {\n            if (length === null) {\n                length = this.length - start;\n            }\n            if (length > (this.length - start)) {\n                length = this.length - start;\n            }\n        }\n        return { start, length, backward };\n    }\n}\n","import { ByteStream } from \"./byte_stream\";\nconst pow2_24 = 16777216;\nexport class SeqStream {\n    constructor(parameters = {}) {\n        this._stream = new ByteStream();\n        this._length = 0;\n        this._start = 0;\n        this.backward = false;\n        this.appendBlock = 0;\n        this.prevLength = 0;\n        this.prevStart = 0;\n        if (\"view\" in parameters) {\n            this.stream = new ByteStream({ view: parameters.view });\n        }\n        else if (\"buffer\" in parameters) {\n            this.stream = new ByteStream({ buffer: parameters.buffer });\n        }\n        else if (\"string\" in parameters) {\n            this.stream = new ByteStream({ string: parameters.string });\n        }\n        else if (\"hexstring\" in parameters) {\n            this.stream = new ByteStream({ hexstring: parameters.hexstring });\n        }\n        else if (\"stream\" in parameters) {\n            this.stream = parameters.stream.slice();\n        }\n        else {\n            this.stream = new ByteStream();\n        }\n        if (\"backward\" in parameters && parameters.backward) {\n            this.backward = parameters.backward;\n            this._start = this.stream.length;\n        }\n        if (\"length\" in parameters && parameters.length > 0) {\n            this._length = parameters.length;\n        }\n        if (\"start\" in parameters && parameters.start && parameters.start > 0) {\n            this._start = parameters.start;\n        }\n        if (\"appendBlock\" in parameters && parameters.appendBlock && parameters.appendBlock > 0) {\n            this.appendBlock = parameters.appendBlock;\n        }\n    }\n    set stream(value) {\n        this._stream = value;\n        this.prevLength = this._length;\n        this._length = value.length;\n        this.prevStart = this._start;\n        this._start = 0;\n    }\n    get stream() {\n        return this._stream;\n    }\n    set length(value) {\n        this.prevLength = this._length;\n        this._length = value;\n    }\n    get length() {\n        if (this.appendBlock) {\n            return this.start;\n        }\n        return this._length;\n    }\n    set start(value) {\n        if (value > this.stream.length)\n            return;\n        this.prevStart = this._start;\n        this.prevLength = this._length;\n        this._length -= (this.backward) ? (this._start - value) : (value - this._start);\n        this._start = value;\n    }\n    get start() {\n        return this._start;\n    }\n    get buffer() {\n        return this._stream.buffer.slice(0, this._length);\n    }\n    resetPosition() {\n        this._start = this.prevStart;\n        this._length = this.prevLength;\n    }\n    findPattern(pattern, gap = null) {\n        if ((gap == null) || (gap > this.length)) {\n            gap = this.length;\n        }\n        const result = this.stream.findPattern(pattern, this.start, this.length, this.backward);\n        if (result == (-1))\n            return result;\n        if (this.backward) {\n            if (result < (this.start - pattern.length - gap)) {\n                return (-1);\n            }\n        }\n        else {\n            if (result > (this.start + pattern.length + gap)) {\n                return (-1);\n            }\n        }\n        this.start = result;\n        return result;\n    }\n    findFirstIn(patterns, gap = null) {\n        if ((gap == null) || (gap > this.length)) {\n            gap = this.length;\n        }\n        const result = this.stream.findFirstIn(patterns, this.start, this.length, this.backward);\n        if (result.id == (-1))\n            return result;\n        if (this.backward) {\n            if (result.position < (this.start - patterns[result.id].length - gap)) {\n                return {\n                    id: (-1),\n                    position: (this.backward) ? 0 : (this.start + this.length)\n                };\n            }\n        }\n        else {\n            if (result.position > (this.start + patterns[result.id].length + gap)) {\n                return {\n                    id: (-1),\n                    position: (this.backward) ? 0 : (this.start + this.length)\n                };\n            }\n        }\n        this.start = result.position;\n        return result;\n    }\n    findAllIn(patterns) {\n        const start = (this.backward) ? (this.start - this.length) : this.start;\n        return this.stream.findAllIn(patterns, start, this.length);\n    }\n    findFirstNotIn(patterns, gap = null) {\n        if ((gap == null) || (gap > this._length)) {\n            gap = this._length;\n        }\n        const result = this._stream.findFirstNotIn(patterns, this._start, this._length, this.backward);\n        if ((result.left.id == (-1)) && (result.right.id == (-1))) {\n            return result;\n        }\n        if (this.backward) {\n            if (result.right.id != (-1)) {\n                if (result.right.position < (this._start - patterns[result.right.id].length - gap)) {\n                    return {\n                        left: {\n                            id: (-1),\n                            position: this._start\n                        },\n                        right: {\n                            id: (-1),\n                            position: 0\n                        },\n                        value: new ByteStream()\n                    };\n                }\n            }\n        }\n        else {\n            if (result.left.id != (-1)) {\n                if (result.left.position > (this._start + patterns[result.left.id].length + gap)) {\n                    return {\n                        left: {\n                            id: (-1),\n                            position: this._start\n                        },\n                        right: {\n                            id: (-1),\n                            position: 0\n                        },\n                        value: new ByteStream()\n                    };\n                }\n            }\n        }\n        if (this.backward) {\n            if (result.left.id == (-1)) {\n                this.start = 0;\n            }\n            else {\n                this.start = result.left.position;\n            }\n        }\n        else {\n            if (result.right.id == (-1)) {\n                this.start = (this._start + this._length);\n            }\n            else {\n                this.start = result.right.position;\n            }\n        }\n        return result;\n    }\n    findAllNotIn(patterns) {\n        const start = (this.backward) ? (this._start - this._length) : this._start;\n        return this._stream.findAllNotIn(patterns, start, this._length);\n    }\n    findFirstSequence(patterns, length = null, gap = null) {\n        if ((length == null) || (length > this._length)) {\n            length = this._length;\n        }\n        if ((gap == null) || (gap > length)) {\n            gap = length;\n        }\n        const result = this._stream.findFirstSequence(patterns, this._start, length, this.backward);\n        if (result.value.length == 0) {\n            return result;\n        }\n        if (this.backward) {\n            if (result.position < (this._start - result.value.length - gap)) {\n                return {\n                    position: (-1),\n                    value: new ByteStream()\n                };\n            }\n        }\n        else {\n            if (result.position > (this._start + result.value.length + gap)) {\n                return {\n                    position: (-1),\n                    value: new ByteStream()\n                };\n            }\n        }\n        this.start = result.position;\n        return result;\n    }\n    findAllSequences(patterns) {\n        const start = (this.backward) ? (this.start - this.length) : this.start;\n        return this.stream.findAllSequences(patterns, start, this.length);\n    }\n    findPairedPatterns(leftPattern, rightPattern, gap = null) {\n        if ((gap == null) || (gap > this.length)) {\n            gap = this.length;\n        }\n        const start = (this.backward) ? (this.start - this.length) : this.start;\n        const result = this.stream.findPairedPatterns(leftPattern, rightPattern, start, this.length);\n        if (result.length) {\n            if (this.backward) {\n                if (result[0].right < (this.start - rightPattern.length - gap)) {\n                    return [];\n                }\n            }\n            else {\n                if (result[0].left > (this.start + leftPattern.length + gap)) {\n                    return [];\n                }\n            }\n        }\n        return result;\n    }\n    findPairedArrays(leftPatterns, rightPatterns, gap = null) {\n        if ((gap == null) || (gap > this.length)) {\n            gap = this.length;\n        }\n        const start = (this.backward) ? (this.start - this.length) : this.start;\n        const result = this.stream.findPairedArrays(leftPatterns, rightPatterns, start, this.length);\n        if (result.length) {\n            if (this.backward) {\n                if (result[0].right.position < (this.start - rightPatterns[result[0].right.id].length - gap)) {\n                    return [];\n                }\n            }\n            else {\n                if (result[0].left.position > (this.start + leftPatterns[result[0].left.id].length + gap)) {\n                    return [];\n                }\n            }\n        }\n        return result;\n    }\n    replacePattern(searchPattern, replacePattern) {\n        const start = (this.backward) ? (this.start - this.length) : this.start;\n        return this.stream.replacePattern(searchPattern, replacePattern, start, this.length);\n    }\n    skipPatterns(patterns) {\n        const result = this.stream.skipPatterns(patterns, this.start, this.length, this.backward);\n        this.start = result;\n        return result;\n    }\n    skipNotPatterns(patterns) {\n        const result = this.stream.skipNotPatterns(patterns, this.start, this.length, this.backward);\n        if (result == (-1))\n            return (-1);\n        this.start = result;\n        return result;\n    }\n    append(stream) {\n        this.beforeAppend(stream.length);\n        this._stream.view.set(stream.view, this._start);\n        this._length += (stream.length * 2);\n        this.start = (this._start + stream.length);\n        this.prevLength -= (stream.length * 2);\n    }\n    appendView(view) {\n        this.beforeAppend(view.length);\n        this._stream.view.set(view, this._start);\n        this._length += (view.length * 2);\n        this.start = (this._start + view.length);\n        this.prevLength -= (view.length * 2);\n    }\n    appendChar(char) {\n        this.beforeAppend(1);\n        this._stream.view[this._start] = char;\n        this._length += 2;\n        this.start = (this._start + 1);\n        this.prevLength -= 2;\n    }\n    appendUint16(number) {\n        this.beforeAppend(2);\n        const value = new Uint16Array([number]);\n        const view = new Uint8Array(value.buffer);\n        this.stream.view[this._start] = view[1];\n        this._stream.view[this._start + 1] = view[0];\n        this._length += 4;\n        this.start = this._start + 2;\n        this.prevLength -= 4;\n    }\n    appendUint24(number) {\n        this.beforeAppend(3);\n        const value = new Uint32Array([number]);\n        const view = new Uint8Array(value.buffer);\n        this._stream.view[this._start] = view[2];\n        this._stream.view[this._start + 1] = view[1];\n        this._stream.view[this._start + 2] = view[0];\n        this._length += 6;\n        this.start = (this._start + 3);\n        this.prevLength -= 6;\n    }\n    appendUint32(number) {\n        this.beforeAppend(4);\n        const value = new Uint32Array([number]);\n        const view = new Uint8Array(value.buffer);\n        this._stream.view[this._start] = view[3];\n        this._stream.view[this._start + 1] = view[2];\n        this._stream.view[this._start + 2] = view[1];\n        this._stream.view[this._start + 3] = view[0];\n        this._length += 8;\n        this.start = (this._start + 4);\n        this.prevLength -= 8;\n    }\n    appendInt16(number) {\n        this.beforeAppend(2);\n        const value = new Int16Array([number]);\n        const view = new Uint8Array(value.buffer);\n        this._stream.view[this._start] = view[1];\n        this._stream.view[this._start + 1] = view[0];\n        this._length += 4;\n        this.start = (this._start + 2);\n        this.prevLength -= 4;\n    }\n    appendInt32(number) {\n        this.beforeAppend(4);\n        const value = new Int32Array([number]);\n        const view = new Uint8Array(value.buffer);\n        this._stream.view[this._start] = view[3];\n        this._stream.view[this._start + 1] = view[2];\n        this._stream.view[this._start + 2] = view[1];\n        this._stream.view[this._start + 3] = view[0];\n        this._length += 8;\n        this.start = (this._start + 4);\n        this.prevLength -= 8;\n    }\n    getBlock(size, changeLength = true) {\n        if (this._length <= 0) {\n            return new Uint8Array(0);\n        }\n        if (this._length < size) {\n            size = this._length;\n        }\n        let result;\n        if (this.backward) {\n            const view = this._stream.view.subarray(this._length - size, this._length);\n            result = new Uint8Array(size);\n            for (let i = 0; i < size; i++) {\n                result[size - 1 - i] = view[i];\n            }\n        }\n        else {\n            result = this._stream.view.subarray(this._start, this._start + size);\n        }\n        if (changeLength) {\n            this.start += ((this.backward) ? ((-1) * size) : size);\n        }\n        return result;\n    }\n    getUint16(changeLength = true) {\n        const block = this.getBlock(2, changeLength);\n        if (block.length < 2)\n            return 0;\n        return (block[0] << 8) | block[1];\n    }\n    getInt16(changeLength = true) {\n        const num = this.getUint16(changeLength);\n        const negative = 0x8000;\n        if (num & negative) {\n            return -(negative - (num ^ negative));\n        }\n        return num;\n    }\n    getUint24(changeLength = true) {\n        const block = this.getBlock(4, changeLength);\n        if (block.length < 3)\n            return 0;\n        return (block[0] << 16) |\n            (block[1] << 8) |\n            block[2];\n    }\n    getUint32(changeLength = true) {\n        const block = this.getBlock(4, changeLength);\n        if (block.length < 4)\n            return 0;\n        return (block[0] * pow2_24) +\n            (block[1] << 16) +\n            (block[2] << 8) +\n            block[3];\n    }\n    getInt32(changeLength = true) {\n        const num = this.getUint32(changeLength);\n        const negative = 0x80000000;\n        if (num & negative) {\n            return -(negative - (num ^ negative));\n        }\n        return num;\n    }\n    beforeAppend(size) {\n        if ((this._start + size) > this._stream.length) {\n            if (size > this.appendBlock) {\n                this.appendBlock = size + SeqStream.APPEND_BLOCK;\n            }\n            this._stream.realloc(this._stream.length + this.appendBlock);\n        }\n    }\n}\nSeqStream.APPEND_BLOCK = 1000;\n","/**\n\nSHA1 (RFC 3174), MD5 (RFC 1321) and RIPEMD160 (RFC 2286) legacy, weak hash functions.\nDon't use them in a new protocol. What \"weak\" means:\n\n- Collisions can be made with 2^18 effort in MD5, 2^60 in SHA1, 2^80 in RIPEMD160.\n- No practical pre-image attacks (only theoretical, 2^123.4)\n- HMAC seems kinda ok: https://datatracker.ietf.org/doc/html/rfc6151\n * @module\n */\nimport { Chi, HashMD, Maj } from \"./_md.js\";\nimport { clean, createHasher, rotl } from \"./utils.js\";\n/** Initial SHA1 state */\nconst SHA1_IV = /* @__PURE__ */ Uint32Array.from([\n    0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0,\n]);\n// Reusable temporary buffer\nconst SHA1_W = /* @__PURE__ */ new Uint32Array(80);\n/** SHA1 legacy hash class. */\nexport class SHA1 extends HashMD {\n    constructor() {\n        super(64, 20, 8, false);\n        this.A = SHA1_IV[0] | 0;\n        this.B = SHA1_IV[1] | 0;\n        this.C = SHA1_IV[2] | 0;\n        this.D = SHA1_IV[3] | 0;\n        this.E = SHA1_IV[4] | 0;\n    }\n    get() {\n        const { A, B, C, D, E } = this;\n        return [A, B, C, D, E];\n    }\n    set(A, B, C, D, E) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA1_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 80; i++)\n            SHA1_W[i] = rotl(SHA1_W[i - 3] ^ SHA1_W[i - 8] ^ SHA1_W[i - 14] ^ SHA1_W[i - 16], 1);\n        // Compression function main loop, 80 rounds\n        let { A, B, C, D, E } = this;\n        for (let i = 0; i < 80; i++) {\n            let F, K;\n            if (i < 20) {\n                F = Chi(B, C, D);\n                K = 0x5a827999;\n            }\n            else if (i < 40) {\n                F = B ^ C ^ D;\n                K = 0x6ed9eba1;\n            }\n            else if (i < 60) {\n                F = Maj(B, C, D);\n                K = 0x8f1bbcdc;\n            }\n            else {\n                F = B ^ C ^ D;\n                K = 0xca62c1d6;\n            }\n            const T = (rotl(A, 5) + F + E + K + SHA1_W[i]) | 0;\n            E = D;\n            D = C;\n            C = rotl(B, 30);\n            B = A;\n            A = T;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        this.set(A, B, C, D, E);\n    }\n    roundClean() {\n        clean(SHA1_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0);\n        clean(this.buffer);\n    }\n}\n/** SHA1 (RFC 3174) legacy hash function. It was cryptographically broken. */\nexport const sha1 = /* @__PURE__ */ createHasher(() => new SHA1());\n/** Per-round constants */\nconst p32 = /* @__PURE__ */ Math.pow(2, 32);\nconst K = /* @__PURE__ */ Array.from({ length: 64 }, (_, i) => Math.floor(p32 * Math.abs(Math.sin(i + 1))));\n/** md5 initial state: same as sha1, but 4 u32 instead of 5. */\nconst MD5_IV = /* @__PURE__ */ SHA1_IV.slice(0, 4);\n// Reusable temporary buffer\nconst MD5_W = /* @__PURE__ */ new Uint32Array(16);\n/** MD5 legacy hash class. */\nexport class MD5 extends HashMD {\n    constructor() {\n        super(64, 16, 8, true);\n        this.A = MD5_IV[0] | 0;\n        this.B = MD5_IV[1] | 0;\n        this.C = MD5_IV[2] | 0;\n        this.D = MD5_IV[3] | 0;\n    }\n    get() {\n        const { A, B, C, D } = this;\n        return [A, B, C, D];\n    }\n    set(A, B, C, D) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            MD5_W[i] = view.getUint32(offset, true);\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D } = this;\n        for (let i = 0; i < 64; i++) {\n            let F, g, s;\n            if (i < 16) {\n                F = Chi(B, C, D);\n                g = i;\n                s = [7, 12, 17, 22];\n            }\n            else if (i < 32) {\n                F = Chi(D, B, C);\n                g = (5 * i + 1) % 16;\n                s = [5, 9, 14, 20];\n            }\n            else if (i < 48) {\n                F = B ^ C ^ D;\n                g = (3 * i + 5) % 16;\n                s = [4, 11, 16, 23];\n            }\n            else {\n                F = C ^ (B | ~D);\n                g = (7 * i) % 16;\n                s = [6, 10, 15, 21];\n            }\n            F = F + A + K[i] + MD5_W[g];\n            A = D;\n            D = C;\n            C = B;\n            B = B + rotl(F, s[i % 4]);\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        this.set(A, B, C, D);\n    }\n    roundClean() {\n        clean(MD5_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0);\n        clean(this.buffer);\n    }\n}\n/**\n * MD5 (RFC 1321) legacy hash function. It was cryptographically broken.\n * MD5 architecture is similar to SHA1, with some differences:\n * - Reduced output length: 16 bytes (128 bit) instead of 20\n * - 64 rounds, instead of 80\n * - Little-endian: could be faster, but will require more code\n * - Non-linear index selection: huge speed-up for unroll\n * - Per round constants: more memory accesses, additional speed-up for unroll\n */\nexport const md5 = /* @__PURE__ */ createHasher(() => new MD5());\n// RIPEMD-160\nconst Rho160 = /* @__PURE__ */ Uint8Array.from([\n    7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n]);\nconst Id160 = /* @__PURE__ */ (() => Uint8Array.from(new Array(16).fill(0).map((_, i) => i)))();\nconst Pi160 = /* @__PURE__ */ (() => Id160.map((i) => (9 * i + 5) % 16))();\nconst idxLR = /* @__PURE__ */ (() => {\n    const L = [Id160];\n    const R = [Pi160];\n    const res = [L, R];\n    for (let i = 0; i < 4; i++)\n        for (let j of res)\n            j.push(j[i].map((k) => Rho160[k]));\n    return res;\n})();\nconst idxL = /* @__PURE__ */ (() => idxLR[0])();\nconst idxR = /* @__PURE__ */ (() => idxLR[1])();\n// const [idxL, idxR] = idxLR;\nconst shifts160 = /* @__PURE__ */ [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => Uint8Array.from(i));\nconst shiftsL160 = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts160[i][j]));\nconst shiftsR160 = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts160[i][j]));\nconst Kl160 = /* @__PURE__ */ Uint32Array.from([\n    0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr160 = /* @__PURE__ */ Uint32Array.from([\n    0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// It's called f() in spec.\nfunction ripemd_f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    if (group === 1)\n        return (x & y) | (~x & z);\n    if (group === 2)\n        return (x | ~y) ^ z;\n    if (group === 3)\n        return (x & z) | (y & ~z);\n    return x ^ (y | ~z);\n}\n// Reusable temporary buffer\nconst BUF_160 = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends HashMD {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            BUF_160[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl160[group], hbr = Kr160[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL160[group], sr = shiftsR160[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + ripemd_f(group, bl, cl, dl) + BUF_160[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + ripemd_f(rGroup, br, cr, dr) + BUF_160[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        clean(BUF_160);\n    }\n    destroy() {\n        this.destroyed = true;\n        clean(this.buffer);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a legacy hash function from 1990s.\n * * https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n * * https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\n */\nexport const ripemd160 = /* @__PURE__ */ createHasher(() => new RIPEMD160());\n//# sourceMappingURL=legacy.js.map","/**\n * SHA1 (RFC 3174) legacy hash function.\n * @module\n * @deprecated\n */\nimport { SHA1 as SHA1n, sha1 as sha1n } from \"./legacy.js\";\n/** @deprecated Use import from `noble/hashes/legacy` module */\nexport const SHA1 = SHA1n;\n/** @deprecated Use import from `noble/hashes/legacy` module */\nexport const sha1 = sha1n;\n//# sourceMappingURL=sha1.js.map","/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n * @deprecated\n */\nimport { SHA224 as SHA224n, sha224 as sha224n, SHA256 as SHA256n, sha256 as sha256n, } from \"./sha2.js\";\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA256 = SHA256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha256 = sha256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA224 = SHA224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha224 = sha224n;\n//# sourceMappingURL=sha256.js.map","/**\n * SHA2-512 a.k.a. sha512 and sha384. It is slower than sha256 in js because u64 operations are slow.\n *\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [the paper on truncated SHA512/256](https://eprint.iacr.org/2010/548.pdf).\n * @module\n * @deprecated\n */\nimport { SHA384 as SHA384n, sha384 as sha384n, sha512_224 as sha512_224n, SHA512_224 as SHA512_224n, sha512_256 as sha512_256n, SHA512_256 as SHA512_256n, SHA512 as SHA512n, sha512 as sha512n, } from \"./sha2.js\";\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA512 = SHA512n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha512 = sha512n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA384 = SHA384n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha384 = sha384n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA512_224 = SHA512_224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha512_224 = sha512_224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA512_256 = SHA512_256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha512_256 = sha512_256n;\n//# sourceMappingURL=sha512.js.map","/*!\n * Copyright (c) 2014, GlobalSign\n * Copyright (c) 2015-2019, Peculiar Ventures\n * All rights reserved.\n * \n * Author 2014-2019, Yury Strozhevsky\n * \n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n * \n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n * \n * * Redistributions in binary form must reproduce the above copyright notice, this\n *   list of conditions and the following disclaimer in the documentation and/or\n *   other materials provided with the distribution.\n * \n * * Neither the name of the {organization} nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nimport * as asn1js from 'asn1js';\nimport * as pvtsutils from 'pvtsutils';\nimport { BufferSourceConverter } from 'pvtsutils';\nimport * as pvutils from 'pvutils';\nimport * as bs from 'bytestreamjs';\nimport { sha1 } from '@noble/hashes/sha1';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512, sha384 } from '@noble/hashes/sha512';\n\nconst EMPTY_BUFFER = new ArrayBuffer(0);\nconst EMPTY_STRING = \"\";\n\nclass ArgumentError extends TypeError {\n    constructor() {\n        super(...arguments);\n        this.name = ArgumentError.NAME;\n    }\n    static isType(value, type) {\n        if (typeof type === \"string\") {\n            if (type === \"Array\" && Array.isArray(value)) {\n                return true;\n            }\n            else if (type === \"ArrayBuffer\" && value instanceof ArrayBuffer) {\n                return true;\n            }\n            else if (type === \"ArrayBufferView\" && ArrayBuffer.isView(value)) {\n                return true;\n            }\n            else if (typeof value === type) {\n                return true;\n            }\n        }\n        else if (value instanceof type) {\n            return true;\n        }\n        return false;\n    }\n    static assert(value, name, ...types) {\n        for (const type of types) {\n            if (this.isType(value, type)) {\n                return;\n            }\n        }\n        const typeNames = types.map(o => o instanceof Function && \"name\" in o ? o.name : `${o}`);\n        throw new ArgumentError(`Parameter '${name}' is not of type ${typeNames.length > 1 ? `(${typeNames.join(\" or \")})` : typeNames[0]}`);\n    }\n}\nArgumentError.NAME = \"ArgumentError\";\n\nclass ParameterError extends TypeError {\n    static assert(...args) {\n        let target = null;\n        let params;\n        let fields;\n        if (typeof args[0] === \"string\") {\n            target = args[0];\n            params = args[1];\n            fields = args.slice(2);\n        }\n        else {\n            params = args[0];\n            fields = args.slice(1);\n        }\n        ArgumentError.assert(params, \"parameters\", \"object\");\n        for (const field of fields) {\n            const value = params[field];\n            if (value === undefined || value === null) {\n                throw new ParameterError(field, target);\n            }\n        }\n    }\n    static assertEmpty(value, name, target) {\n        if (value === undefined || value === null) {\n            throw new ParameterError(name, target);\n        }\n    }\n    constructor(field, target = null, message) {\n        super();\n        this.name = ParameterError.NAME;\n        this.field = field;\n        if (target) {\n            this.target = target;\n        }\n        if (message) {\n            this.message = message;\n        }\n        else {\n            this.message = `Absent mandatory parameter '${field}' ${target ? ` in '${target}'` : EMPTY_STRING}`;\n        }\n    }\n}\nParameterError.NAME = \"ParameterError\";\n\nclass AsnError extends Error {\n    static assertSchema(asn1, target) {\n        if (!asn1.verified) {\n            throw new Error(`Object's schema was not verified against input data for ${target}`);\n        }\n    }\n    static assert(asn, target) {\n        if (asn.offset === -1) {\n            throw new AsnError(`Error during parsing of ASN.1 data. Data is not correct for '${target}'.`);\n        }\n    }\n    constructor(message) {\n        super(message);\n        this.name = \"AsnError\";\n    }\n}\n\nclass PkiObject {\n    static blockName() {\n        return this.CLASS_NAME;\n    }\n    static fromBER(raw) {\n        const asn1 = asn1js.fromBER(raw);\n        AsnError.assert(asn1, this.name);\n        try {\n            return new this({ schema: asn1.result });\n        }\n        catch (e) {\n            throw new AsnError(`Cannot create '${this.CLASS_NAME}' from ASN.1 object`);\n        }\n    }\n    static defaultValues(memberName) {\n        throw new Error(`Invalid member name for ${this.CLASS_NAME} class: ${memberName}`);\n    }\n    static schema(parameters = {}) {\n        throw new Error(`Method '${this.CLASS_NAME}.schema' should be overridden`);\n    }\n    get className() {\n        return this.constructor.CLASS_NAME;\n    }\n    toString(encoding = \"hex\") {\n        let schema;\n        try {\n            schema = this.toSchema();\n        }\n        catch {\n            schema = this.toSchema(true);\n        }\n        return pvtsutils.Convert.ToString(schema.toBER(), encoding);\n    }\n}\nPkiObject.CLASS_NAME = \"PkiObject\";\n\nfunction stringPrep(inputString) {\n    let isSpace = false;\n    let cutResult = EMPTY_STRING;\n    const result = inputString.trim();\n    for (let i = 0; i < result.length; i++) {\n        if (result.charCodeAt(i) === 32) {\n            if (isSpace === false)\n                isSpace = true;\n        }\n        else {\n            if (isSpace) {\n                cutResult += \" \";\n                isSpace = false;\n            }\n            cutResult += result[i];\n        }\n    }\n    return cutResult.toLowerCase();\n}\n\nconst TYPE$5 = \"type\";\nconst VALUE$6 = \"value\";\nclass AttributeTypeAndValue extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.type = pvutils.getParametersValue(parameters, TYPE$5, AttributeTypeAndValue.defaultValues(TYPE$5));\n        this.value = pvutils.getParametersValue(parameters, VALUE$6, AttributeTypeAndValue.defaultValues(VALUE$6));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case TYPE$5:\n                return EMPTY_STRING;\n            case VALUE$6:\n                return {};\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.type || EMPTY_STRING) }),\n                new asn1js.Any({ name: (names.value || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, [\n            TYPE$5,\n            \"typeValue\"\n        ]);\n        const asn1 = asn1js.compareSchema(schema, schema, AttributeTypeAndValue.schema({\n            names: {\n                type: TYPE$5,\n                value: \"typeValue\"\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.type = asn1.result.type.valueBlock.toString();\n        this.value = asn1.result.typeValue;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                new asn1js.ObjectIdentifier({ value: this.type }),\n                this.value\n            ]\n        }));\n    }\n    toJSON() {\n        const _object = {\n            type: this.type\n        };\n        if (Object.keys(this.value).length !== 0) {\n            _object.value = (this.value).toJSON();\n        }\n        else {\n            _object.value = this.value;\n        }\n        return _object;\n    }\n    isEqual(compareTo) {\n        const stringBlockNames = [\n            asn1js.Utf8String.blockName(),\n            asn1js.BmpString.blockName(),\n            asn1js.UniversalString.blockName(),\n            asn1js.NumericString.blockName(),\n            asn1js.PrintableString.blockName(),\n            asn1js.TeletexString.blockName(),\n            asn1js.VideotexString.blockName(),\n            asn1js.IA5String.blockName(),\n            asn1js.GraphicString.blockName(),\n            asn1js.VisibleString.blockName(),\n            asn1js.GeneralString.blockName(),\n            asn1js.CharacterString.blockName()\n        ];\n        if (compareTo instanceof ArrayBuffer) {\n            return pvtsutils.BufferSourceConverter.isEqual(this.value.valueBeforeDecodeView, compareTo);\n        }\n        if (compareTo.constructor.blockName() === AttributeTypeAndValue.blockName()) {\n            if (this.type !== compareTo.type)\n                return false;\n            const isStringPair = [false, false];\n            const thisName = this.value.constructor.blockName();\n            for (const name of stringBlockNames) {\n                if (thisName === name) {\n                    isStringPair[0] = true;\n                }\n                if (compareTo.value.constructor.blockName() === name) {\n                    isStringPair[1] = true;\n                }\n            }\n            if (isStringPair[0] !== isStringPair[1]) {\n                return false;\n            }\n            const isString = (isStringPair[0] && isStringPair[1]);\n            if (isString) {\n                const value1 = stringPrep(this.value.valueBlock.value);\n                const value2 = stringPrep(compareTo.value.valueBlock.value);\n                if (value1.localeCompare(value2) !== 0)\n                    return false;\n            }\n            else {\n                if (!pvtsutils.BufferSourceConverter.isEqual(this.value.valueBeforeDecodeView, compareTo.value.valueBeforeDecodeView))\n                    return false;\n            }\n            return true;\n        }\n        return false;\n    }\n}\nAttributeTypeAndValue.CLASS_NAME = \"AttributeTypeAndValue\";\n\nconst TYPE_AND_VALUES = \"typesAndValues\";\nconst VALUE_BEFORE_DECODE = \"valueBeforeDecode\";\nconst RDN = \"RDN\";\nclass RelativeDistinguishedNames extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.typesAndValues = pvutils.getParametersValue(parameters, TYPE_AND_VALUES, RelativeDistinguishedNames.defaultValues(TYPE_AND_VALUES));\n        this.valueBeforeDecode = pvutils.getParametersValue(parameters, VALUE_BEFORE_DECODE, RelativeDistinguishedNames.defaultValues(VALUE_BEFORE_DECODE));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case TYPE_AND_VALUES:\n                return [];\n            case VALUE_BEFORE_DECODE:\n                return EMPTY_BUFFER;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case TYPE_AND_VALUES:\n                return (memberValue.length === 0);\n            case VALUE_BEFORE_DECODE:\n                return (memberValue.byteLength === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Repeated({\n                    name: (names.repeatedSequence || EMPTY_STRING),\n                    value: new asn1js.Set({\n                        value: [\n                            new asn1js.Repeated({\n                                name: (names.repeatedSet || EMPTY_STRING),\n                                value: AttributeTypeAndValue.schema(names.typeAndValue || {})\n                            })\n                        ]\n                    })\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, [\n            RDN,\n            TYPE_AND_VALUES\n        ]);\n        const asn1 = asn1js.compareSchema(schema, schema, RelativeDistinguishedNames.schema({\n            names: {\n                blockName: RDN,\n                repeatedSet: TYPE_AND_VALUES\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (TYPE_AND_VALUES in asn1.result) {\n            this.typesAndValues = Array.from(asn1.result.typesAndValues, element => new AttributeTypeAndValue({ schema: element }));\n        }\n        this.valueBeforeDecode = asn1.result.RDN.valueBeforeDecodeView.slice().buffer;\n    }\n    toSchema() {\n        if (this.valueBeforeDecode.byteLength === 0) {\n            return (new asn1js.Sequence({\n                value: [new asn1js.Set({\n                        value: Array.from(this.typesAndValues, o => o.toSchema())\n                    })]\n            }));\n        }\n        const asn1 = asn1js.fromBER(this.valueBeforeDecode);\n        AsnError.assert(asn1, \"RelativeDistinguishedNames\");\n        if (!(asn1.result instanceof asn1js.Sequence)) {\n            throw new Error(\"ASN.1 result should be SEQUENCE\");\n        }\n        return asn1.result;\n    }\n    toJSON() {\n        return {\n            typesAndValues: Array.from(this.typesAndValues, o => o.toJSON())\n        };\n    }\n    isEqual(compareTo) {\n        if (compareTo instanceof RelativeDistinguishedNames) {\n            if (this.typesAndValues.length !== compareTo.typesAndValues.length)\n                return false;\n            for (const [index, typeAndValue] of this.typesAndValues.entries()) {\n                if (typeAndValue.isEqual(compareTo.typesAndValues[index]) === false)\n                    return false;\n            }\n            return true;\n        }\n        if (compareTo instanceof ArrayBuffer) {\n            return pvutils.isEqualBuffer(this.valueBeforeDecode, compareTo);\n        }\n        return false;\n    }\n}\nRelativeDistinguishedNames.CLASS_NAME = \"RelativeDistinguishedNames\";\n\nconst TYPE$4 = \"type\";\nconst VALUE$5 = \"value\";\nfunction builtInStandardAttributes(parameters = {}, optional = false) {\n    const names = pvutils.getParametersValue(parameters, \"names\", {});\n    return (new asn1js.Sequence({\n        optional,\n        value: [\n            new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 2,\n                    tagNumber: 1\n                },\n                name: (names.country_name || EMPTY_STRING),\n                value: [\n                    new asn1js.Choice({\n                        value: [\n                            new asn1js.NumericString(),\n                            new asn1js.PrintableString()\n                        ]\n                    })\n                ]\n            }),\n            new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 2,\n                    tagNumber: 2\n                },\n                name: (names.administration_domain_name || EMPTY_STRING),\n                value: [\n                    new asn1js.Choice({\n                        value: [\n                            new asn1js.NumericString(),\n                            new asn1js.PrintableString()\n                        ]\n                    })\n                ]\n            }),\n            new asn1js.Primitive({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                name: (names.network_address || EMPTY_STRING),\n                isHexOnly: true\n            }),\n            new asn1js.Primitive({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                name: (names.terminal_identifier || EMPTY_STRING),\n                isHexOnly: true\n            }),\n            new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 2\n                },\n                name: (names.private_domain_name || EMPTY_STRING),\n                value: [\n                    new asn1js.Choice({\n                        value: [\n                            new asn1js.NumericString(),\n                            new asn1js.PrintableString()\n                        ]\n                    })\n                ]\n            }),\n            new asn1js.Primitive({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 3\n                },\n                name: (names.organization_name || EMPTY_STRING),\n                isHexOnly: true\n            }),\n            new asn1js.Primitive({\n                optional: true,\n                name: (names.numeric_user_identifier || EMPTY_STRING),\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 4\n                },\n                isHexOnly: true\n            }),\n            new asn1js.Constructed({\n                optional: true,\n                name: (names.personal_name || EMPTY_STRING),\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 5\n                },\n                value: [\n                    new asn1js.Primitive({\n                        idBlock: {\n                            tagClass: 3,\n                            tagNumber: 0\n                        },\n                        isHexOnly: true\n                    }),\n                    new asn1js.Primitive({\n                        optional: true,\n                        idBlock: {\n                            tagClass: 3,\n                            tagNumber: 1\n                        },\n                        isHexOnly: true\n                    }),\n                    new asn1js.Primitive({\n                        optional: true,\n                        idBlock: {\n                            tagClass: 3,\n                            tagNumber: 2\n                        },\n                        isHexOnly: true\n                    }),\n                    new asn1js.Primitive({\n                        optional: true,\n                        idBlock: {\n                            tagClass: 3,\n                            tagNumber: 3\n                        },\n                        isHexOnly: true\n                    })\n                ]\n            }),\n            new asn1js.Constructed({\n                optional: true,\n                name: (names.organizational_unit_names || EMPTY_STRING),\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 6\n                },\n                value: [\n                    new asn1js.Repeated({\n                        value: new asn1js.PrintableString()\n                    })\n                ]\n            })\n        ]\n    }));\n}\nfunction builtInDomainDefinedAttributes(optional = false) {\n    return (new asn1js.Sequence({\n        optional,\n        value: [\n            new asn1js.PrintableString(),\n            new asn1js.PrintableString()\n        ]\n    }));\n}\nfunction extensionAttributes(optional = false) {\n    return (new asn1js.Set({\n        optional,\n        value: [\n            new asn1js.Primitive({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                isHexOnly: true\n            }),\n            new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                value: [new asn1js.Any()]\n            })\n        ]\n    }));\n}\nclass GeneralName extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.type = pvutils.getParametersValue(parameters, TYPE$4, GeneralName.defaultValues(TYPE$4));\n        this.value = pvutils.getParametersValue(parameters, VALUE$5, GeneralName.defaultValues(VALUE$5));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case TYPE$4:\n                return 9;\n            case VALUE$5:\n                return {};\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case TYPE$4:\n                return (memberValue === GeneralName.defaultValues(memberName));\n            case VALUE$5:\n                return (Object.keys(memberValue).length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Choice({\n            value: [\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    name: (names.blockName || EMPTY_STRING),\n                    value: [\n                        new asn1js.ObjectIdentifier(),\n                        new asn1js.Constructed({\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: 0\n                            },\n                            value: [new asn1js.Any()]\n                        })\n                    ]\n                }),\n                new asn1js.Primitive({\n                    name: (names.blockName || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    }\n                }),\n                new asn1js.Primitive({\n                    name: (names.blockName || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 2\n                    }\n                }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 3\n                    },\n                    name: (names.blockName || EMPTY_STRING),\n                    value: [\n                        builtInStandardAttributes((names.builtInStandardAttributes || {}), false),\n                        builtInDomainDefinedAttributes(true),\n                        extensionAttributes(true)\n                    ]\n                }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 4\n                    },\n                    name: (names.blockName || EMPTY_STRING),\n                    value: [RelativeDistinguishedNames.schema(names.directoryName || {})]\n                }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 5\n                    },\n                    name: (names.blockName || EMPTY_STRING),\n                    value: [\n                        new asn1js.Constructed({\n                            optional: true,\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: 0\n                            },\n                            value: [\n                                new asn1js.Choice({\n                                    value: [\n                                        new asn1js.TeletexString(),\n                                        new asn1js.PrintableString(),\n                                        new asn1js.UniversalString(),\n                                        new asn1js.Utf8String(),\n                                        new asn1js.BmpString()\n                                    ]\n                                })\n                            ]\n                        }),\n                        new asn1js.Constructed({\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: 1\n                            },\n                            value: [\n                                new asn1js.Choice({\n                                    value: [\n                                        new asn1js.TeletexString(),\n                                        new asn1js.PrintableString(),\n                                        new asn1js.UniversalString(),\n                                        new asn1js.Utf8String(),\n                                        new asn1js.BmpString()\n                                    ]\n                                })\n                            ]\n                        })\n                    ]\n                }),\n                new asn1js.Primitive({\n                    name: (names.blockName || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 6\n                    }\n                }),\n                new asn1js.Primitive({\n                    name: (names.blockName || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 7\n                    }\n                }),\n                new asn1js.Primitive({\n                    name: (names.blockName || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 8\n                    }\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, [\n            \"blockName\",\n            \"otherName\",\n            \"rfc822Name\",\n            \"dNSName\",\n            \"x400Address\",\n            \"directoryName\",\n            \"ediPartyName\",\n            \"uniformResourceIdentifier\",\n            \"iPAddress\",\n            \"registeredID\"\n        ]);\n        const asn1 = asn1js.compareSchema(schema, schema, GeneralName.schema({\n            names: {\n                blockName: \"blockName\",\n                otherName: \"otherName\",\n                rfc822Name: \"rfc822Name\",\n                dNSName: \"dNSName\",\n                x400Address: \"x400Address\",\n                directoryName: {\n                    names: {\n                        blockName: \"directoryName\"\n                    }\n                },\n                ediPartyName: \"ediPartyName\",\n                uniformResourceIdentifier: \"uniformResourceIdentifier\",\n                iPAddress: \"iPAddress\",\n                registeredID: \"registeredID\"\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.type = asn1.result.blockName.idBlock.tagNumber;\n        switch (this.type) {\n            case 0:\n                this.value = asn1.result.blockName;\n                break;\n            case 1:\n            case 2:\n            case 6:\n                {\n                    const value = asn1.result.blockName;\n                    value.idBlock.tagClass = 1;\n                    value.idBlock.tagNumber = 22;\n                    const valueBER = value.toBER(false);\n                    const asnValue = asn1js.fromBER(valueBER);\n                    AsnError.assert(asnValue, \"GeneralName value\");\n                    this.value = asnValue.result.valueBlock.value;\n                }\n                break;\n            case 3:\n                this.value = asn1.result.blockName;\n                break;\n            case 4:\n                this.value = new RelativeDistinguishedNames({ schema: asn1.result.directoryName });\n                break;\n            case 5:\n                this.value = asn1.result.ediPartyName;\n                break;\n            case 7:\n                this.value = new asn1js.OctetString({ valueHex: asn1.result.blockName.valueBlock.valueHex });\n                break;\n            case 8:\n                {\n                    const value = asn1.result.blockName;\n                    value.idBlock.tagClass = 1;\n                    value.idBlock.tagNumber = 6;\n                    const valueBER = value.toBER(false);\n                    const asnValue = asn1js.fromBER(valueBER);\n                    AsnError.assert(asnValue, \"GeneralName registeredID\");\n                    this.value = asnValue.result.valueBlock.toString();\n                }\n                break;\n        }\n    }\n    toSchema() {\n        switch (this.type) {\n            case 0:\n            case 3:\n            case 5:\n                return new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: this.type\n                    },\n                    value: [\n                        this.value\n                    ]\n                });\n            case 1:\n            case 2:\n            case 6:\n                {\n                    const value = new asn1js.IA5String({ value: this.value });\n                    value.idBlock.tagClass = 3;\n                    value.idBlock.tagNumber = this.type;\n                    return value;\n                }\n            case 4:\n                return new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 4\n                    },\n                    value: [this.value.toSchema()]\n                });\n            case 7:\n                {\n                    const value = this.value;\n                    value.idBlock.tagClass = 3;\n                    value.idBlock.tagNumber = this.type;\n                    return value;\n                }\n            case 8:\n                {\n                    const value = new asn1js.ObjectIdentifier({ value: this.value });\n                    value.idBlock.tagClass = 3;\n                    value.idBlock.tagNumber = this.type;\n                    return value;\n                }\n            default:\n                return GeneralName.schema();\n        }\n    }\n    toJSON() {\n        const _object = {\n            type: this.type,\n            value: EMPTY_STRING\n        };\n        if ((typeof this.value) === \"string\")\n            _object.value = this.value;\n        else {\n            try {\n                _object.value = this.value.toJSON();\n            }\n            catch (ex) {\n            }\n        }\n        return _object;\n    }\n}\nGeneralName.CLASS_NAME = \"GeneralName\";\n\nconst ACCESS_METHOD = \"accessMethod\";\nconst ACCESS_LOCATION = \"accessLocation\";\nconst CLEAR_PROPS$1v = [\n    ACCESS_METHOD,\n    ACCESS_LOCATION,\n];\nclass AccessDescription extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.accessMethod = pvutils.getParametersValue(parameters, ACCESS_METHOD, AccessDescription.defaultValues(ACCESS_METHOD));\n        this.accessLocation = pvutils.getParametersValue(parameters, ACCESS_LOCATION, AccessDescription.defaultValues(ACCESS_LOCATION));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ACCESS_METHOD:\n                return EMPTY_STRING;\n            case ACCESS_LOCATION:\n                return new GeneralName();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.accessMethod || EMPTY_STRING) }),\n                GeneralName.schema(names.accessLocation || {})\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1v);\n        const asn1 = asn1js.compareSchema(schema, schema, AccessDescription.schema({\n            names: {\n                accessMethod: ACCESS_METHOD,\n                accessLocation: {\n                    names: {\n                        blockName: ACCESS_LOCATION\n                    }\n                }\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.accessMethod = asn1.result.accessMethod.valueBlock.toString();\n        this.accessLocation = new GeneralName({ schema: asn1.result.accessLocation });\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                new asn1js.ObjectIdentifier({ value: this.accessMethod }),\n                this.accessLocation.toSchema()\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            accessMethod: this.accessMethod,\n            accessLocation: this.accessLocation.toJSON()\n        };\n    }\n}\nAccessDescription.CLASS_NAME = \"AccessDescription\";\n\nconst SECONDS = \"seconds\";\nconst MILLIS = \"millis\";\nconst MICROS = \"micros\";\nclass Accuracy extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        if (SECONDS in parameters) {\n            this.seconds = pvutils.getParametersValue(parameters, SECONDS, Accuracy.defaultValues(SECONDS));\n        }\n        if (MILLIS in parameters) {\n            this.millis = pvutils.getParametersValue(parameters, MILLIS, Accuracy.defaultValues(MILLIS));\n        }\n        if (MICROS in parameters) {\n            this.micros = pvutils.getParametersValue(parameters, MICROS, Accuracy.defaultValues(MICROS));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case SECONDS:\n            case MILLIS:\n            case MICROS:\n                return 0;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case SECONDS:\n            case MILLIS:\n            case MICROS:\n                return (memberValue === Accuracy.defaultValues(memberName));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            optional: true,\n            value: [\n                new asn1js.Integer({\n                    optional: true,\n                    name: (names.seconds || EMPTY_STRING)\n                }),\n                new asn1js.Primitive({\n                    name: (names.millis || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    }\n                }),\n                new asn1js.Primitive({\n                    name: (names.micros || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    }\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, [\n            SECONDS,\n            MILLIS,\n            MICROS,\n        ]);\n        const asn1 = asn1js.compareSchema(schema, schema, Accuracy.schema({\n            names: {\n                seconds: SECONDS,\n                millis: MILLIS,\n                micros: MICROS,\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (\"seconds\" in asn1.result) {\n            this.seconds = asn1.result.seconds.valueBlock.valueDec;\n        }\n        if (\"millis\" in asn1.result) {\n            const intMillis = new asn1js.Integer({ valueHex: asn1.result.millis.valueBlock.valueHex });\n            this.millis = intMillis.valueBlock.valueDec;\n        }\n        if (\"micros\" in asn1.result) {\n            const intMicros = new asn1js.Integer({ valueHex: asn1.result.micros.valueBlock.valueHex });\n            this.micros = intMicros.valueBlock.valueDec;\n        }\n    }\n    toSchema() {\n        const outputArray = [];\n        if (this.seconds !== undefined)\n            outputArray.push(new asn1js.Integer({ value: this.seconds }));\n        if (this.millis !== undefined) {\n            const intMillis = new asn1js.Integer({ value: this.millis });\n            outputArray.push(new asn1js.Primitive({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                valueHex: intMillis.valueBlock.valueHexView\n            }));\n        }\n        if (this.micros !== undefined) {\n            const intMicros = new asn1js.Integer({ value: this.micros });\n            outputArray.push(new asn1js.Primitive({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                valueHex: intMicros.valueBlock.valueHexView\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const _object = {};\n        if (this.seconds !== undefined)\n            _object.seconds = this.seconds;\n        if (this.millis !== undefined)\n            _object.millis = this.millis;\n        if (this.micros !== undefined)\n            _object.micros = this.micros;\n        return _object;\n    }\n}\nAccuracy.CLASS_NAME = \"Accuracy\";\n\nconst ALGORITHM_ID = \"algorithmId\";\nconst ALGORITHM_PARAMS = \"algorithmParams\";\nconst ALGORITHM$2 = \"algorithm\";\nconst PARAMS = \"params\";\nconst CLEAR_PROPS$1u = [\n    ALGORITHM$2,\n    PARAMS\n];\nclass AlgorithmIdentifier extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.algorithmId = pvutils.getParametersValue(parameters, ALGORITHM_ID, AlgorithmIdentifier.defaultValues(ALGORITHM_ID));\n        if (ALGORITHM_PARAMS in parameters) {\n            this.algorithmParams = pvutils.getParametersValue(parameters, ALGORITHM_PARAMS, AlgorithmIdentifier.defaultValues(ALGORITHM_PARAMS));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ALGORITHM_ID:\n                return EMPTY_STRING;\n            case ALGORITHM_PARAMS:\n                return new asn1js.Any();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case ALGORITHM_ID:\n                return (memberValue === EMPTY_STRING);\n            case ALGORITHM_PARAMS:\n                return (memberValue instanceof asn1js.Any);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            optional: (names.optional || false),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.algorithmIdentifier || EMPTY_STRING) }),\n                new asn1js.Any({ name: (names.algorithmParams || EMPTY_STRING), optional: true })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1u);\n        const asn1 = asn1js.compareSchema(schema, schema, AlgorithmIdentifier.schema({\n            names: {\n                algorithmIdentifier: ALGORITHM$2,\n                algorithmParams: PARAMS\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.algorithmId = asn1.result.algorithm.valueBlock.toString();\n        if (PARAMS in asn1.result) {\n            this.algorithmParams = asn1.result.params;\n        }\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(new asn1js.ObjectIdentifier({ value: this.algorithmId }));\n        if (this.algorithmParams && !(this.algorithmParams instanceof asn1js.Any)) {\n            outputArray.push(this.algorithmParams);\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const object = {\n            algorithmId: this.algorithmId\n        };\n        if (this.algorithmParams && !(this.algorithmParams instanceof asn1js.Any)) {\n            object.algorithmParams = this.algorithmParams.toJSON();\n        }\n        return object;\n    }\n    isEqual(algorithmIdentifier) {\n        if (!(algorithmIdentifier instanceof AlgorithmIdentifier)) {\n            return false;\n        }\n        if (this.algorithmId !== algorithmIdentifier.algorithmId) {\n            return false;\n        }\n        if (this.algorithmParams) {\n            if (algorithmIdentifier.algorithmParams) {\n                return JSON.stringify(this.algorithmParams) === JSON.stringify(algorithmIdentifier.algorithmParams);\n            }\n            return false;\n        }\n        if (algorithmIdentifier.algorithmParams) {\n            return false;\n        }\n        return true;\n    }\n}\nAlgorithmIdentifier.CLASS_NAME = \"AlgorithmIdentifier\";\n\nconst ALT_NAMES = \"altNames\";\nconst CLEAR_PROPS$1t = [\n    ALT_NAMES\n];\nclass AltName extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.altNames = pvutils.getParametersValue(parameters, ALT_NAMES, AltName.defaultValues(ALT_NAMES));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ALT_NAMES:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Repeated({\n                    name: (names.altNames || EMPTY_STRING),\n                    value: GeneralName.schema()\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1t);\n        const asn1 = asn1js.compareSchema(schema, schema, AltName.schema({\n            names: {\n                altNames: ALT_NAMES\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (ALT_NAMES in asn1.result) {\n            this.altNames = Array.from(asn1.result.altNames, element => new GeneralName({ schema: element }));\n        }\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: Array.from(this.altNames, o => o.toSchema())\n        }));\n    }\n    toJSON() {\n        return {\n            altNames: Array.from(this.altNames, o => o.toJSON())\n        };\n    }\n}\nAltName.CLASS_NAME = \"AltName\";\n\nconst TYPE$3 = \"type\";\nconst VALUES$1 = \"values\";\nconst CLEAR_PROPS$1s = [\n    TYPE$3,\n    VALUES$1\n];\nclass Attribute extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.type = pvutils.getParametersValue(parameters, TYPE$3, Attribute.defaultValues(TYPE$3));\n        this.values = pvutils.getParametersValue(parameters, VALUES$1, Attribute.defaultValues(VALUES$1));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case TYPE$3:\n                return EMPTY_STRING;\n            case VALUES$1:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case TYPE$3:\n                return (memberValue === EMPTY_STRING);\n            case VALUES$1:\n                return (memberValue.length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.type || EMPTY_STRING) }),\n                new asn1js.Set({\n                    name: (names.setName || EMPTY_STRING),\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.values || EMPTY_STRING),\n                            value: new asn1js.Any()\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1s);\n        const asn1 = asn1js.compareSchema(schema, schema, Attribute.schema({\n            names: {\n                type: TYPE$3,\n                values: VALUES$1\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.type = asn1.result.type.valueBlock.toString();\n        this.values = asn1.result.values;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                new asn1js.ObjectIdentifier({ value: this.type }),\n                new asn1js.Set({\n                    value: this.values\n                })\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            type: this.type,\n            values: Array.from(this.values, o => o.toJSON())\n        };\n    }\n}\nAttribute.CLASS_NAME = \"Attribute\";\n\nconst NOT_BEFORE_TIME = \"notBeforeTime\";\nconst NOT_AFTER_TIME = \"notAfterTime\";\nconst CLEAR_PROPS$1r = [\n    NOT_BEFORE_TIME,\n    NOT_AFTER_TIME,\n];\nclass AttCertValidityPeriod extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.notBeforeTime = pvutils.getParametersValue(parameters, NOT_BEFORE_TIME, AttCertValidityPeriod.defaultValues(NOT_BEFORE_TIME));\n        this.notAfterTime = pvutils.getParametersValue(parameters, NOT_AFTER_TIME, AttCertValidityPeriod.defaultValues(NOT_AFTER_TIME));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case NOT_BEFORE_TIME:\n            case NOT_AFTER_TIME:\n                return new Date(0, 0, 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.GeneralizedTime({ name: (names.notBeforeTime || EMPTY_STRING) }),\n                new asn1js.GeneralizedTime({ name: (names.notAfterTime || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1r);\n        const asn1 = asn1js.compareSchema(schema, schema, AttCertValidityPeriod.schema({\n            names: {\n                notBeforeTime: NOT_BEFORE_TIME,\n                notAfterTime: NOT_AFTER_TIME\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.notBeforeTime = asn1.result.notBeforeTime.toDate();\n        this.notAfterTime = asn1.result.notAfterTime.toDate();\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                new asn1js.GeneralizedTime({ valueDate: this.notBeforeTime }),\n                new asn1js.GeneralizedTime({ valueDate: this.notAfterTime }),\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            notBeforeTime: this.notBeforeTime,\n            notAfterTime: this.notAfterTime\n        };\n    }\n}\nAttCertValidityPeriod.CLASS_NAME = \"AttCertValidityPeriod\";\n\nconst NAMES = \"names\";\nconst GENERAL_NAMES = \"generalNames\";\nclass GeneralNames extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.names = pvutils.getParametersValue(parameters, NAMES, GeneralNames.defaultValues(NAMES));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case \"names\":\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}, optional = false) {\n        const names = pvutils.getParametersValue(parameters, NAMES, {});\n        return (new asn1js.Sequence({\n            optional,\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Repeated({\n                    name: (names.generalNames || EMPTY_STRING),\n                    value: GeneralName.schema()\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, [\n            NAMES,\n            GENERAL_NAMES\n        ]);\n        const asn1 = asn1js.compareSchema(schema, schema, GeneralNames.schema({\n            names: {\n                blockName: NAMES,\n                generalNames: GENERAL_NAMES\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.names = Array.from(asn1.result.generalNames, element => new GeneralName({ schema: element }));\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: Array.from(this.names, o => o.toSchema())\n        }));\n    }\n    toJSON() {\n        return {\n            names: Array.from(this.names, o => o.toJSON())\n        };\n    }\n}\nGeneralNames.CLASS_NAME = \"GeneralNames\";\n\nconst id_SubjectDirectoryAttributes = \"2.5.29.9\";\nconst id_SubjectKeyIdentifier = \"2.5.29.14\";\nconst id_KeyUsage = \"2.5.29.15\";\nconst id_PrivateKeyUsagePeriod = \"2.5.29.16\";\nconst id_SubjectAltName = \"2.5.29.17\";\nconst id_IssuerAltName = \"2.5.29.18\";\nconst id_BasicConstraints = \"2.5.29.19\";\nconst id_CRLNumber = \"2.5.29.20\";\nconst id_BaseCRLNumber = \"2.5.29.27\";\nconst id_CRLReason = \"2.5.29.21\";\nconst id_InvalidityDate = \"2.5.29.24\";\nconst id_IssuingDistributionPoint = \"2.5.29.28\";\nconst id_CertificateIssuer = \"2.5.29.29\";\nconst id_NameConstraints = \"2.5.29.30\";\nconst id_CRLDistributionPoints = \"2.5.29.31\";\nconst id_FreshestCRL = \"2.5.29.46\";\nconst id_CertificatePolicies = \"2.5.29.32\";\nconst id_AnyPolicy = \"2.5.29.32.0\";\nconst id_MicrosoftAppPolicies = \"1.3.6.1.4.1.311.21.10\";\nconst id_PolicyMappings = \"2.5.29.33\";\nconst id_AuthorityKeyIdentifier = \"2.5.29.35\";\nconst id_PolicyConstraints = \"2.5.29.36\";\nconst id_ExtKeyUsage = \"2.5.29.37\";\nconst id_InhibitAnyPolicy = \"2.5.29.54\";\nconst id_AuthorityInfoAccess = \"1.3.6.1.5.5.7.1.1\";\nconst id_SubjectInfoAccess = \"1.3.6.1.5.5.7.1.11\";\nconst id_SignedCertificateTimestampList = \"1.3.6.1.4.1.11129.2.4.2\";\nconst id_MicrosoftCertTemplateV1 = \"1.3.6.1.4.1.311.20.2\";\nconst id_MicrosoftPrevCaCertHash = \"1.3.6.1.4.1.311.21.2\";\nconst id_MicrosoftCertTemplateV2 = \"1.3.6.1.4.1.311.21.7\";\nconst id_MicrosoftCaVersion = \"1.3.6.1.4.1.311.21.1\";\nconst id_QCStatements = \"1.3.6.1.5.5.7.1.3\";\nconst id_ContentType_Data = \"1.2.840.113549.1.7.1\";\nconst id_ContentType_SignedData = \"1.2.840.113549.1.7.2\";\nconst id_ContentType_EnvelopedData = \"1.2.840.113549.1.7.3\";\nconst id_ContentType_EncryptedData = \"1.2.840.113549.1.7.6\";\nconst id_eContentType_TSTInfo = \"1.2.840.113549.1.9.16.1.4\";\nconst id_CertBag_X509Certificate = \"1.2.840.113549.1.9.22.1\";\nconst id_CertBag_SDSICertificate = \"1.2.840.113549.1.9.22.2\";\nconst id_CertBag_AttributeCertificate = \"1.2.840.113549.1.9.22.3\";\nconst id_CRLBag_X509CRL = \"1.2.840.113549.1.9.23.1\";\nconst id_pkix = \"1.3.6.1.5.5.7\";\nconst id_ad = `${id_pkix}.48`;\nconst id_PKIX_OCSP_Basic = `${id_ad}.1.1`;\nconst id_ad_caIssuers = `${id_ad}.2`;\nconst id_ad_ocsp = `${id_ad}.1`;\nconst id_sha1 = \"1.3.14.3.2.26\";\nconst id_sha256 = \"2.16.840.1.101.3.4.2.1\";\nconst id_sha384 = \"2.16.840.1.101.3.4.2.2\";\nconst id_sha512 = \"2.16.840.1.101.3.4.2.3\";\n\nconst KEY_IDENTIFIER$1 = \"keyIdentifier\";\nconst AUTHORITY_CERT_ISSUER = \"authorityCertIssuer\";\nconst AUTHORITY_CERT_SERIAL_NUMBER = \"authorityCertSerialNumber\";\nconst CLEAR_PROPS$1q = [\n    KEY_IDENTIFIER$1,\n    AUTHORITY_CERT_ISSUER,\n    AUTHORITY_CERT_SERIAL_NUMBER,\n];\nclass AuthorityKeyIdentifier extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        if (KEY_IDENTIFIER$1 in parameters) {\n            this.keyIdentifier = pvutils.getParametersValue(parameters, KEY_IDENTIFIER$1, AuthorityKeyIdentifier.defaultValues(KEY_IDENTIFIER$1));\n        }\n        if (AUTHORITY_CERT_ISSUER in parameters) {\n            this.authorityCertIssuer = pvutils.getParametersValue(parameters, AUTHORITY_CERT_ISSUER, AuthorityKeyIdentifier.defaultValues(AUTHORITY_CERT_ISSUER));\n        }\n        if (AUTHORITY_CERT_SERIAL_NUMBER in parameters) {\n            this.authorityCertSerialNumber = pvutils.getParametersValue(parameters, AUTHORITY_CERT_SERIAL_NUMBER, AuthorityKeyIdentifier.defaultValues(AUTHORITY_CERT_SERIAL_NUMBER));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case KEY_IDENTIFIER$1:\n                return new asn1js.OctetString();\n            case AUTHORITY_CERT_ISSUER:\n                return [];\n            case AUTHORITY_CERT_SERIAL_NUMBER:\n                return new asn1js.Integer();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Primitive({\n                    name: (names.keyIdentifier || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    }\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.authorityCertIssuer || EMPTY_STRING),\n                            value: GeneralName.schema()\n                        })\n                    ]\n                }),\n                new asn1js.Primitive({\n                    name: (names.authorityCertSerialNumber || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 2\n                    }\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1q);\n        const asn1 = asn1js.compareSchema(schema, schema, AuthorityKeyIdentifier.schema({\n            names: {\n                keyIdentifier: KEY_IDENTIFIER$1,\n                authorityCertIssuer: AUTHORITY_CERT_ISSUER,\n                authorityCertSerialNumber: AUTHORITY_CERT_SERIAL_NUMBER\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (KEY_IDENTIFIER$1 in asn1.result)\n            this.keyIdentifier = new asn1js.OctetString({ valueHex: asn1.result.keyIdentifier.valueBlock.valueHex });\n        if (AUTHORITY_CERT_ISSUER in asn1.result)\n            this.authorityCertIssuer = Array.from(asn1.result.authorityCertIssuer, o => new GeneralName({ schema: o }));\n        if (AUTHORITY_CERT_SERIAL_NUMBER in asn1.result)\n            this.authorityCertSerialNumber = new asn1js.Integer({ valueHex: asn1.result.authorityCertSerialNumber.valueBlock.valueHex });\n    }\n    toSchema() {\n        const outputArray = [];\n        if (this.keyIdentifier) {\n            outputArray.push(new asn1js.Primitive({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                valueHex: this.keyIdentifier.valueBlock.valueHexView\n            }));\n        }\n        if (this.authorityCertIssuer) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                value: Array.from(this.authorityCertIssuer, o => o.toSchema())\n            }));\n        }\n        if (this.authorityCertSerialNumber) {\n            outputArray.push(new asn1js.Primitive({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 2\n                },\n                valueHex: this.authorityCertSerialNumber.valueBlock.valueHexView\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const object = {};\n        if (this.keyIdentifier) {\n            object.keyIdentifier = this.keyIdentifier.toJSON();\n        }\n        if (this.authorityCertIssuer) {\n            object.authorityCertIssuer = Array.from(this.authorityCertIssuer, o => o.toJSON());\n        }\n        if (this.authorityCertSerialNumber) {\n            object.authorityCertSerialNumber = this.authorityCertSerialNumber.toJSON();\n        }\n        return object;\n    }\n}\nAuthorityKeyIdentifier.CLASS_NAME = \"AuthorityKeyIdentifier\";\n\nconst PATH_LENGTH_CONSTRAINT = \"pathLenConstraint\";\nconst CA = \"cA\";\nclass BasicConstraints extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.cA = pvutils.getParametersValue(parameters, CA, false);\n        if (PATH_LENGTH_CONSTRAINT in parameters) {\n            this.pathLenConstraint = pvutils.getParametersValue(parameters, PATH_LENGTH_CONSTRAINT, 0);\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case CA:\n                return false;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Boolean({\n                    optional: true,\n                    name: (names.cA || EMPTY_STRING)\n                }),\n                new asn1js.Integer({\n                    optional: true,\n                    name: (names.pathLenConstraint || EMPTY_STRING)\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, [\n            CA,\n            PATH_LENGTH_CONSTRAINT\n        ]);\n        const asn1 = asn1js.compareSchema(schema, schema, BasicConstraints.schema({\n            names: {\n                cA: CA,\n                pathLenConstraint: PATH_LENGTH_CONSTRAINT\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (CA in asn1.result) {\n            this.cA = asn1.result.cA.valueBlock.value;\n        }\n        if (PATH_LENGTH_CONSTRAINT in asn1.result) {\n            if (asn1.result.pathLenConstraint.valueBlock.isHexOnly) {\n                this.pathLenConstraint = asn1.result.pathLenConstraint;\n            }\n            else {\n                this.pathLenConstraint = asn1.result.pathLenConstraint.valueBlock.valueDec;\n            }\n        }\n    }\n    toSchema() {\n        const outputArray = [];\n        if (this.cA !== BasicConstraints.defaultValues(CA))\n            outputArray.push(new asn1js.Boolean({ value: this.cA }));\n        if (PATH_LENGTH_CONSTRAINT in this) {\n            if (this.pathLenConstraint instanceof asn1js.Integer) {\n                outputArray.push(this.pathLenConstraint);\n            }\n            else {\n                outputArray.push(new asn1js.Integer({ value: this.pathLenConstraint }));\n            }\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const object = {};\n        if (this.cA !== BasicConstraints.defaultValues(CA)) {\n            object.cA = this.cA;\n        }\n        if (PATH_LENGTH_CONSTRAINT in this) {\n            if (this.pathLenConstraint instanceof asn1js.Integer) {\n                object.pathLenConstraint = this.pathLenConstraint.toJSON();\n            }\n            else {\n                object.pathLenConstraint = this.pathLenConstraint;\n            }\n        }\n        return object;\n    }\n}\nBasicConstraints.CLASS_NAME = \"BasicConstraints\";\n\nconst CERTIFICATE_INDEX = \"certificateIndex\";\nconst KEY_INDEX = \"keyIndex\";\nclass CAVersion extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.certificateIndex = pvutils.getParametersValue(parameters, CERTIFICATE_INDEX, CAVersion.defaultValues(CERTIFICATE_INDEX));\n        this.keyIndex = pvutils.getParametersValue(parameters, KEY_INDEX, CAVersion.defaultValues(KEY_INDEX));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case CERTIFICATE_INDEX:\n            case KEY_INDEX:\n                return 0;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema() {\n        return (new asn1js.Integer());\n    }\n    fromSchema(schema) {\n        if (schema.constructor.blockName() !== asn1js.Integer.blockName()) {\n            throw new Error(\"Object's schema was not verified against input data for CAVersion\");\n        }\n        let value = schema.valueBlock.valueHex.slice(0);\n        const valueView = new Uint8Array(value);\n        switch (true) {\n            case (value.byteLength < 4):\n                {\n                    const tempValue = new ArrayBuffer(4);\n                    const tempValueView = new Uint8Array(tempValue);\n                    tempValueView.set(valueView, 4 - value.byteLength);\n                    value = tempValue.slice(0);\n                }\n                break;\n            case (value.byteLength > 4):\n                {\n                    const tempValue = new ArrayBuffer(4);\n                    const tempValueView = new Uint8Array(tempValue);\n                    tempValueView.set(valueView.slice(0, 4));\n                    value = tempValue.slice(0);\n                }\n                break;\n        }\n        const keyIndexBuffer = value.slice(0, 2);\n        const keyIndexView8 = new Uint8Array(keyIndexBuffer);\n        let temp = keyIndexView8[0];\n        keyIndexView8[0] = keyIndexView8[1];\n        keyIndexView8[1] = temp;\n        const keyIndexView16 = new Uint16Array(keyIndexBuffer);\n        this.keyIndex = keyIndexView16[0];\n        const certificateIndexBuffer = value.slice(2);\n        const certificateIndexView8 = new Uint8Array(certificateIndexBuffer);\n        temp = certificateIndexView8[0];\n        certificateIndexView8[0] = certificateIndexView8[1];\n        certificateIndexView8[1] = temp;\n        const certificateIndexView16 = new Uint16Array(certificateIndexBuffer);\n        this.certificateIndex = certificateIndexView16[0];\n    }\n    toSchema() {\n        const certificateIndexBuffer = new ArrayBuffer(2);\n        const certificateIndexView = new Uint16Array(certificateIndexBuffer);\n        certificateIndexView[0] = this.certificateIndex;\n        const certificateIndexView8 = new Uint8Array(certificateIndexBuffer);\n        let temp = certificateIndexView8[0];\n        certificateIndexView8[0] = certificateIndexView8[1];\n        certificateIndexView8[1] = temp;\n        const keyIndexBuffer = new ArrayBuffer(2);\n        const keyIndexView = new Uint16Array(keyIndexBuffer);\n        keyIndexView[0] = this.keyIndex;\n        const keyIndexView8 = new Uint8Array(keyIndexBuffer);\n        temp = keyIndexView8[0];\n        keyIndexView8[0] = keyIndexView8[1];\n        keyIndexView8[1] = temp;\n        return (new asn1js.Integer({\n            valueHex: pvutils.utilConcatBuf(keyIndexBuffer, certificateIndexBuffer)\n        }));\n    }\n    toJSON() {\n        return {\n            certificateIndex: this.certificateIndex,\n            keyIndex: this.keyIndex\n        };\n    }\n}\nCAVersion.CLASS_NAME = \"CAVersion\";\n\nconst POLICY_QUALIFIER_ID = \"policyQualifierId\";\nconst QUALIFIER = \"qualifier\";\nconst CLEAR_PROPS$1p = [\n    POLICY_QUALIFIER_ID,\n    QUALIFIER\n];\nclass PolicyQualifierInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.policyQualifierId = pvutils.getParametersValue(parameters, POLICY_QUALIFIER_ID, PolicyQualifierInfo.defaultValues(POLICY_QUALIFIER_ID));\n        this.qualifier = pvutils.getParametersValue(parameters, QUALIFIER, PolicyQualifierInfo.defaultValues(QUALIFIER));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case POLICY_QUALIFIER_ID:\n                return EMPTY_STRING;\n            case QUALIFIER:\n                return new asn1js.Any();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.policyQualifierId || EMPTY_STRING) }),\n                new asn1js.Any({ name: (names.qualifier || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1p);\n        const asn1 = asn1js.compareSchema(schema, schema, PolicyQualifierInfo.schema({\n            names: {\n                policyQualifierId: POLICY_QUALIFIER_ID,\n                qualifier: QUALIFIER\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.policyQualifierId = asn1.result.policyQualifierId.valueBlock.toString();\n        this.qualifier = asn1.result.qualifier;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                new asn1js.ObjectIdentifier({ value: this.policyQualifierId }),\n                this.qualifier\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            policyQualifierId: this.policyQualifierId,\n            qualifier: this.qualifier.toJSON()\n        };\n    }\n}\nPolicyQualifierInfo.CLASS_NAME = \"PolicyQualifierInfo\";\n\nconst POLICY_IDENTIFIER = \"policyIdentifier\";\nconst POLICY_QUALIFIERS = \"policyQualifiers\";\nconst CLEAR_PROPS$1o = [\n    POLICY_IDENTIFIER,\n    POLICY_QUALIFIERS\n];\nclass PolicyInformation extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.policyIdentifier = pvutils.getParametersValue(parameters, POLICY_IDENTIFIER, PolicyInformation.defaultValues(POLICY_IDENTIFIER));\n        if (POLICY_QUALIFIERS in parameters) {\n            this.policyQualifiers = pvutils.getParametersValue(parameters, POLICY_QUALIFIERS, PolicyInformation.defaultValues(POLICY_QUALIFIERS));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case POLICY_IDENTIFIER:\n                return EMPTY_STRING;\n            case POLICY_QUALIFIERS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.policyIdentifier || EMPTY_STRING) }),\n                new asn1js.Sequence({\n                    optional: true,\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.policyQualifiers || EMPTY_STRING),\n                            value: PolicyQualifierInfo.schema()\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1o);\n        const asn1 = asn1js.compareSchema(schema, schema, PolicyInformation.schema({\n            names: {\n                policyIdentifier: POLICY_IDENTIFIER,\n                policyQualifiers: POLICY_QUALIFIERS\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.policyIdentifier = asn1.result.policyIdentifier.valueBlock.toString();\n        if (POLICY_QUALIFIERS in asn1.result) {\n            this.policyQualifiers = Array.from(asn1.result.policyQualifiers, element => new PolicyQualifierInfo({ schema: element }));\n        }\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(new asn1js.ObjectIdentifier({ value: this.policyIdentifier }));\n        if (this.policyQualifiers) {\n            outputArray.push(new asn1js.Sequence({\n                value: Array.from(this.policyQualifiers, o => o.toSchema())\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            policyIdentifier: this.policyIdentifier\n        };\n        if (this.policyQualifiers)\n            res.policyQualifiers = Array.from(this.policyQualifiers, o => o.toJSON());\n        return res;\n    }\n}\nPolicyInformation.CLASS_NAME = \"PolicyInformation\";\n\nconst CERTIFICATE_POLICIES = \"certificatePolicies\";\nconst CLEAR_PROPS$1n = [\n    CERTIFICATE_POLICIES,\n];\nclass CertificatePolicies extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.certificatePolicies = pvutils.getParametersValue(parameters, CERTIFICATE_POLICIES, CertificatePolicies.defaultValues(CERTIFICATE_POLICIES));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case CERTIFICATE_POLICIES:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Repeated({\n                    name: (names.certificatePolicies || EMPTY_STRING),\n                    value: PolicyInformation.schema()\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1n);\n        const asn1 = asn1js.compareSchema(schema, schema, CertificatePolicies.schema({\n            names: {\n                certificatePolicies: CERTIFICATE_POLICIES\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.certificatePolicies = Array.from(asn1.result.certificatePolicies, element => new PolicyInformation({ schema: element }));\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: Array.from(this.certificatePolicies, o => o.toSchema())\n        }));\n    }\n    toJSON() {\n        return {\n            certificatePolicies: Array.from(this.certificatePolicies, o => o.toJSON())\n        };\n    }\n}\nCertificatePolicies.CLASS_NAME = \"CertificatePolicies\";\n\nconst TEMPLATE_ID = \"templateID\";\nconst TEMPLATE_MAJOR_VERSION = \"templateMajorVersion\";\nconst TEMPLATE_MINOR_VERSION = \"templateMinorVersion\";\nconst CLEAR_PROPS$1m = [\n    TEMPLATE_ID,\n    TEMPLATE_MAJOR_VERSION,\n    TEMPLATE_MINOR_VERSION\n];\nclass CertificateTemplate extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.templateID = pvutils.getParametersValue(parameters, TEMPLATE_ID, CertificateTemplate.defaultValues(TEMPLATE_ID));\n        if (TEMPLATE_MAJOR_VERSION in parameters) {\n            this.templateMajorVersion = pvutils.getParametersValue(parameters, TEMPLATE_MAJOR_VERSION, CertificateTemplate.defaultValues(TEMPLATE_MAJOR_VERSION));\n        }\n        if (TEMPLATE_MINOR_VERSION in parameters) {\n            this.templateMinorVersion = pvutils.getParametersValue(parameters, TEMPLATE_MINOR_VERSION, CertificateTemplate.defaultValues(TEMPLATE_MINOR_VERSION));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case TEMPLATE_ID:\n                return EMPTY_STRING;\n            case TEMPLATE_MAJOR_VERSION:\n            case TEMPLATE_MINOR_VERSION:\n                return 0;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.templateID || EMPTY_STRING) }),\n                new asn1js.Integer({\n                    name: (names.templateMajorVersion || EMPTY_STRING),\n                    optional: true\n                }),\n                new asn1js.Integer({\n                    name: (names.templateMinorVersion || EMPTY_STRING),\n                    optional: true\n                }),\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1m);\n        const asn1 = asn1js.compareSchema(schema, schema, CertificateTemplate.schema({\n            names: {\n                templateID: TEMPLATE_ID,\n                templateMajorVersion: TEMPLATE_MAJOR_VERSION,\n                templateMinorVersion: TEMPLATE_MINOR_VERSION\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.templateID = asn1.result.templateID.valueBlock.toString();\n        if (TEMPLATE_MAJOR_VERSION in asn1.result) {\n            this.templateMajorVersion = asn1.result.templateMajorVersion.valueBlock.valueDec;\n        }\n        if (TEMPLATE_MINOR_VERSION in asn1.result) {\n            this.templateMinorVersion = asn1.result.templateMinorVersion.valueBlock.valueDec;\n        }\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(new asn1js.ObjectIdentifier({ value: this.templateID }));\n        if (TEMPLATE_MAJOR_VERSION in this) {\n            outputArray.push(new asn1js.Integer({ value: this.templateMajorVersion }));\n        }\n        if (TEMPLATE_MINOR_VERSION in this) {\n            outputArray.push(new asn1js.Integer({ value: this.templateMinorVersion }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            templateID: this.templateID\n        };\n        if (TEMPLATE_MAJOR_VERSION in this)\n            res.templateMajorVersion = this.templateMajorVersion;\n        if (TEMPLATE_MINOR_VERSION in this)\n            res.templateMinorVersion = this.templateMinorVersion;\n        return res;\n    }\n}\n\nconst DISTRIBUTION_POINT$1 = \"distributionPoint\";\nconst DISTRIBUTION_POINT_NAMES$1 = \"distributionPointNames\";\nconst REASONS = \"reasons\";\nconst CRL_ISSUER = \"cRLIssuer\";\nconst CRL_ISSUER_NAMES = \"cRLIssuerNames\";\nconst CLEAR_PROPS$1l = [\n    DISTRIBUTION_POINT$1,\n    DISTRIBUTION_POINT_NAMES$1,\n    REASONS,\n    CRL_ISSUER,\n    CRL_ISSUER_NAMES,\n];\nclass DistributionPoint extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        if (DISTRIBUTION_POINT$1 in parameters) {\n            this.distributionPoint = pvutils.getParametersValue(parameters, DISTRIBUTION_POINT$1, DistributionPoint.defaultValues(DISTRIBUTION_POINT$1));\n        }\n        if (REASONS in parameters) {\n            this.reasons = pvutils.getParametersValue(parameters, REASONS, DistributionPoint.defaultValues(REASONS));\n        }\n        if (CRL_ISSUER in parameters) {\n            this.cRLIssuer = pvutils.getParametersValue(parameters, CRL_ISSUER, DistributionPoint.defaultValues(CRL_ISSUER));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case DISTRIBUTION_POINT$1:\n                return [];\n            case REASONS:\n                return new asn1js.BitString();\n            case CRL_ISSUER:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [\n                        new asn1js.Choice({\n                            value: [\n                                new asn1js.Constructed({\n                                    name: (names.distributionPoint || EMPTY_STRING),\n                                    optional: true,\n                                    idBlock: {\n                                        tagClass: 3,\n                                        tagNumber: 0\n                                    },\n                                    value: [\n                                        new asn1js.Repeated({\n                                            name: (names.distributionPointNames || EMPTY_STRING),\n                                            value: GeneralName.schema()\n                                        })\n                                    ]\n                                }),\n                                new asn1js.Constructed({\n                                    name: (names.distributionPoint || EMPTY_STRING),\n                                    optional: true,\n                                    idBlock: {\n                                        tagClass: 3,\n                                        tagNumber: 1\n                                    },\n                                    value: RelativeDistinguishedNames.schema().valueBlock.value\n                                })\n                            ]\n                        })\n                    ]\n                }),\n                new asn1js.Primitive({\n                    name: (names.reasons || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    }\n                }),\n                new asn1js.Constructed({\n                    name: (names.cRLIssuer || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 2\n                    },\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.cRLIssuerNames || EMPTY_STRING),\n                            value: GeneralName.schema()\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1l);\n        const asn1 = asn1js.compareSchema(schema, schema, DistributionPoint.schema({\n            names: {\n                distributionPoint: DISTRIBUTION_POINT$1,\n                distributionPointNames: DISTRIBUTION_POINT_NAMES$1,\n                reasons: REASONS,\n                cRLIssuer: CRL_ISSUER,\n                cRLIssuerNames: CRL_ISSUER_NAMES\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (DISTRIBUTION_POINT$1 in asn1.result) {\n            if (asn1.result.distributionPoint.idBlock.tagNumber === 0) {\n                this.distributionPoint = Array.from(asn1.result.distributionPointNames, element => new GeneralName({ schema: element }));\n            }\n            if (asn1.result.distributionPoint.idBlock.tagNumber === 1) {\n                this.distributionPoint = new RelativeDistinguishedNames({\n                    schema: new asn1js.Sequence({\n                        value: asn1.result.distributionPoint.valueBlock.value\n                    })\n                });\n            }\n        }\n        if (REASONS in asn1.result) {\n            this.reasons = new asn1js.BitString({ valueHex: asn1.result.reasons.valueBlock.valueHex });\n        }\n        if (CRL_ISSUER in asn1.result) {\n            this.cRLIssuer = Array.from(asn1.result.cRLIssuerNames, element => new GeneralName({ schema: element }));\n        }\n    }\n    toSchema() {\n        const outputArray = [];\n        if (this.distributionPoint) {\n            let internalValue;\n            if (this.distributionPoint instanceof Array) {\n                internalValue = new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: Array.from(this.distributionPoint, o => o.toSchema())\n                });\n            }\n            else {\n                internalValue = new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: [this.distributionPoint.toSchema()]\n                });\n            }\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [internalValue]\n            }));\n        }\n        if (this.reasons) {\n            outputArray.push(new asn1js.Primitive({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                valueHex: this.reasons.valueBlock.valueHexView\n            }));\n        }\n        if (this.cRLIssuer) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 2\n                },\n                value: Array.from(this.cRLIssuer, o => o.toSchema())\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const object = {};\n        if (this.distributionPoint) {\n            if (this.distributionPoint instanceof Array) {\n                object.distributionPoint = Array.from(this.distributionPoint, o => o.toJSON());\n            }\n            else {\n                object.distributionPoint = this.distributionPoint.toJSON();\n            }\n        }\n        if (this.reasons) {\n            object.reasons = this.reasons.toJSON();\n        }\n        if (this.cRLIssuer) {\n            object.cRLIssuer = Array.from(this.cRLIssuer, o => o.toJSON());\n        }\n        return object;\n    }\n}\nDistributionPoint.CLASS_NAME = \"DistributionPoint\";\n\nconst DISTRIBUTION_POINTS = \"distributionPoints\";\nconst CLEAR_PROPS$1k = [\n    DISTRIBUTION_POINTS\n];\nclass CRLDistributionPoints extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.distributionPoints = pvutils.getParametersValue(parameters, DISTRIBUTION_POINTS, CRLDistributionPoints.defaultValues(DISTRIBUTION_POINTS));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case DISTRIBUTION_POINTS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Repeated({\n                    name: (names.distributionPoints || EMPTY_STRING),\n                    value: DistributionPoint.schema()\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1k);\n        const asn1 = asn1js.compareSchema(schema, schema, CRLDistributionPoints.schema({\n            names: {\n                distributionPoints: DISTRIBUTION_POINTS\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.distributionPoints = Array.from(asn1.result.distributionPoints, element => new DistributionPoint({ schema: element }));\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: Array.from(this.distributionPoints, o => o.toSchema())\n        }));\n    }\n    toJSON() {\n        return {\n            distributionPoints: Array.from(this.distributionPoints, o => o.toJSON())\n        };\n    }\n}\nCRLDistributionPoints.CLASS_NAME = \"CRLDistributionPoints\";\n\nconst KEY_PURPOSES = \"keyPurposes\";\nconst CLEAR_PROPS$1j = [\n    KEY_PURPOSES,\n];\nclass ExtKeyUsage extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.keyPurposes = pvutils.getParametersValue(parameters, KEY_PURPOSES, ExtKeyUsage.defaultValues(KEY_PURPOSES));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case KEY_PURPOSES:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Repeated({\n                    name: (names.keyPurposes || EMPTY_STRING),\n                    value: new asn1js.ObjectIdentifier()\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1j);\n        const asn1 = asn1js.compareSchema(schema, schema, ExtKeyUsage.schema({\n            names: {\n                keyPurposes: KEY_PURPOSES\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.keyPurposes = Array.from(asn1.result.keyPurposes, (element) => element.valueBlock.toString());\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: Array.from(this.keyPurposes, element => new asn1js.ObjectIdentifier({ value: element }))\n        }));\n    }\n    toJSON() {\n        return {\n            keyPurposes: Array.from(this.keyPurposes)\n        };\n    }\n}\nExtKeyUsage.CLASS_NAME = \"ExtKeyUsage\";\n\nconst ACCESS_DESCRIPTIONS = \"accessDescriptions\";\nclass InfoAccess extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.accessDescriptions = pvutils.getParametersValue(parameters, ACCESS_DESCRIPTIONS, InfoAccess.defaultValues(ACCESS_DESCRIPTIONS));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ACCESS_DESCRIPTIONS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Repeated({\n                    name: (names.accessDescriptions || EMPTY_STRING),\n                    value: AccessDescription.schema()\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, [\n            ACCESS_DESCRIPTIONS\n        ]);\n        const asn1 = asn1js.compareSchema(schema, schema, InfoAccess.schema({\n            names: {\n                accessDescriptions: ACCESS_DESCRIPTIONS\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.accessDescriptions = Array.from(asn1.result.accessDescriptions, element => new AccessDescription({ schema: element }));\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: Array.from(this.accessDescriptions, o => o.toSchema())\n        }));\n    }\n    toJSON() {\n        return {\n            accessDescriptions: Array.from(this.accessDescriptions, o => o.toJSON())\n        };\n    }\n}\nInfoAccess.CLASS_NAME = \"InfoAccess\";\n\nconst DISTRIBUTION_POINT = \"distributionPoint\";\nconst DISTRIBUTION_POINT_NAMES = \"distributionPointNames\";\nconst ONLY_CONTAINS_USER_CERTS = \"onlyContainsUserCerts\";\nconst ONLY_CONTAINS_CA_CERTS = \"onlyContainsCACerts\";\nconst ONLY_SOME_REASON = \"onlySomeReasons\";\nconst INDIRECT_CRL = \"indirectCRL\";\nconst ONLY_CONTAINS_ATTRIBUTE_CERTS = \"onlyContainsAttributeCerts\";\nconst CLEAR_PROPS$1i = [\n    DISTRIBUTION_POINT,\n    DISTRIBUTION_POINT_NAMES,\n    ONLY_CONTAINS_USER_CERTS,\n    ONLY_CONTAINS_CA_CERTS,\n    ONLY_SOME_REASON,\n    INDIRECT_CRL,\n    ONLY_CONTAINS_ATTRIBUTE_CERTS,\n];\nclass IssuingDistributionPoint extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        if (DISTRIBUTION_POINT in parameters) {\n            this.distributionPoint = pvutils.getParametersValue(parameters, DISTRIBUTION_POINT, IssuingDistributionPoint.defaultValues(DISTRIBUTION_POINT));\n        }\n        this.onlyContainsUserCerts = pvutils.getParametersValue(parameters, ONLY_CONTAINS_USER_CERTS, IssuingDistributionPoint.defaultValues(ONLY_CONTAINS_USER_CERTS));\n        this.onlyContainsCACerts = pvutils.getParametersValue(parameters, ONLY_CONTAINS_CA_CERTS, IssuingDistributionPoint.defaultValues(ONLY_CONTAINS_CA_CERTS));\n        if (ONLY_SOME_REASON in parameters) {\n            this.onlySomeReasons = pvutils.getParametersValue(parameters, ONLY_SOME_REASON, IssuingDistributionPoint.defaultValues(ONLY_SOME_REASON));\n        }\n        this.indirectCRL = pvutils.getParametersValue(parameters, INDIRECT_CRL, IssuingDistributionPoint.defaultValues(INDIRECT_CRL));\n        this.onlyContainsAttributeCerts = pvutils.getParametersValue(parameters, ONLY_CONTAINS_ATTRIBUTE_CERTS, IssuingDistributionPoint.defaultValues(ONLY_CONTAINS_ATTRIBUTE_CERTS));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case DISTRIBUTION_POINT:\n                return [];\n            case ONLY_CONTAINS_USER_CERTS:\n                return false;\n            case ONLY_CONTAINS_CA_CERTS:\n                return false;\n            case ONLY_SOME_REASON:\n                return 0;\n            case INDIRECT_CRL:\n                return false;\n            case ONLY_CONTAINS_ATTRIBUTE_CERTS:\n                return false;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [\n                        new asn1js.Choice({\n                            value: [\n                                new asn1js.Constructed({\n                                    name: (names.distributionPoint || EMPTY_STRING),\n                                    idBlock: {\n                                        tagClass: 3,\n                                        tagNumber: 0\n                                    },\n                                    value: [\n                                        new asn1js.Repeated({\n                                            name: (names.distributionPointNames || EMPTY_STRING),\n                                            value: GeneralName.schema()\n                                        })\n                                    ]\n                                }),\n                                new asn1js.Constructed({\n                                    name: (names.distributionPoint || EMPTY_STRING),\n                                    idBlock: {\n                                        tagClass: 3,\n                                        tagNumber: 1\n                                    },\n                                    value: RelativeDistinguishedNames.schema().valueBlock.value\n                                })\n                            ]\n                        })\n                    ]\n                }),\n                new asn1js.Primitive({\n                    name: (names.onlyContainsUserCerts || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    }\n                }),\n                new asn1js.Primitive({\n                    name: (names.onlyContainsCACerts || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 2\n                    }\n                }),\n                new asn1js.Primitive({\n                    name: (names.onlySomeReasons || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 3\n                    }\n                }),\n                new asn1js.Primitive({\n                    name: (names.indirectCRL || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 4\n                    }\n                }),\n                new asn1js.Primitive({\n                    name: (names.onlyContainsAttributeCerts || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 5\n                    }\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1i);\n        const asn1 = asn1js.compareSchema(schema, schema, IssuingDistributionPoint.schema({\n            names: {\n                distributionPoint: DISTRIBUTION_POINT,\n                distributionPointNames: DISTRIBUTION_POINT_NAMES,\n                onlyContainsUserCerts: ONLY_CONTAINS_USER_CERTS,\n                onlyContainsCACerts: ONLY_CONTAINS_CA_CERTS,\n                onlySomeReasons: ONLY_SOME_REASON,\n                indirectCRL: INDIRECT_CRL,\n                onlyContainsAttributeCerts: ONLY_CONTAINS_ATTRIBUTE_CERTS\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (DISTRIBUTION_POINT in asn1.result) {\n            switch (true) {\n                case (asn1.result.distributionPoint.idBlock.tagNumber === 0):\n                    this.distributionPoint = Array.from(asn1.result.distributionPointNames, element => new GeneralName({ schema: element }));\n                    break;\n                case (asn1.result.distributionPoint.idBlock.tagNumber === 1):\n                    {\n                        this.distributionPoint = new RelativeDistinguishedNames({\n                            schema: new asn1js.Sequence({\n                                value: asn1.result.distributionPoint.valueBlock.value\n                            })\n                        });\n                    }\n                    break;\n                default:\n                    throw new Error(\"Unknown tagNumber for distributionPoint: {$asn1.result.distributionPoint.idBlock.tagNumber}\");\n            }\n        }\n        if (ONLY_CONTAINS_USER_CERTS in asn1.result) {\n            const view = new Uint8Array(asn1.result.onlyContainsUserCerts.valueBlock.valueHex);\n            this.onlyContainsUserCerts = (view[0] !== 0x00);\n        }\n        if (ONLY_CONTAINS_CA_CERTS in asn1.result) {\n            const view = new Uint8Array(asn1.result.onlyContainsCACerts.valueBlock.valueHex);\n            this.onlyContainsCACerts = (view[0] !== 0x00);\n        }\n        if (ONLY_SOME_REASON in asn1.result) {\n            const view = new Uint8Array(asn1.result.onlySomeReasons.valueBlock.valueHex);\n            this.onlySomeReasons = view[0];\n        }\n        if (INDIRECT_CRL in asn1.result) {\n            const view = new Uint8Array(asn1.result.indirectCRL.valueBlock.valueHex);\n            this.indirectCRL = (view[0] !== 0x00);\n        }\n        if (ONLY_CONTAINS_ATTRIBUTE_CERTS in asn1.result) {\n            const view = new Uint8Array(asn1.result.onlyContainsAttributeCerts.valueBlock.valueHex);\n            this.onlyContainsAttributeCerts = (view[0] !== 0x00);\n        }\n    }\n    toSchema() {\n        const outputArray = [];\n        if (this.distributionPoint) {\n            let value;\n            if (this.distributionPoint instanceof Array) {\n                value = new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: Array.from(this.distributionPoint, o => o.toSchema())\n                });\n            }\n            else {\n                value = this.distributionPoint.toSchema();\n                value.idBlock.tagClass = 3;\n                value.idBlock.tagNumber = 1;\n            }\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [value]\n            }));\n        }\n        if (this.onlyContainsUserCerts !== IssuingDistributionPoint.defaultValues(ONLY_CONTAINS_USER_CERTS)) {\n            outputArray.push(new asn1js.Primitive({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                valueHex: (new Uint8Array([0xFF])).buffer\n            }));\n        }\n        if (this.onlyContainsCACerts !== IssuingDistributionPoint.defaultValues(ONLY_CONTAINS_CA_CERTS)) {\n            outputArray.push(new asn1js.Primitive({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 2\n                },\n                valueHex: (new Uint8Array([0xFF])).buffer\n            }));\n        }\n        if (this.onlySomeReasons !== undefined) {\n            const buffer = new ArrayBuffer(1);\n            const view = new Uint8Array(buffer);\n            view[0] = this.onlySomeReasons;\n            outputArray.push(new asn1js.Primitive({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 3\n                },\n                valueHex: buffer\n            }));\n        }\n        if (this.indirectCRL !== IssuingDistributionPoint.defaultValues(INDIRECT_CRL)) {\n            outputArray.push(new asn1js.Primitive({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 4\n                },\n                valueHex: (new Uint8Array([0xFF])).buffer\n            }));\n        }\n        if (this.onlyContainsAttributeCerts !== IssuingDistributionPoint.defaultValues(ONLY_CONTAINS_ATTRIBUTE_CERTS)) {\n            outputArray.push(new asn1js.Primitive({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 5\n                },\n                valueHex: (new Uint8Array([0xFF])).buffer\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const obj = {};\n        if (this.distributionPoint) {\n            if (this.distributionPoint instanceof Array) {\n                obj.distributionPoint = Array.from(this.distributionPoint, o => o.toJSON());\n            }\n            else {\n                obj.distributionPoint = this.distributionPoint.toJSON();\n            }\n        }\n        if (this.onlyContainsUserCerts !== IssuingDistributionPoint.defaultValues(ONLY_CONTAINS_USER_CERTS)) {\n            obj.onlyContainsUserCerts = this.onlyContainsUserCerts;\n        }\n        if (this.onlyContainsCACerts !== IssuingDistributionPoint.defaultValues(ONLY_CONTAINS_CA_CERTS)) {\n            obj.onlyContainsCACerts = this.onlyContainsCACerts;\n        }\n        if (ONLY_SOME_REASON in this) {\n            obj.onlySomeReasons = this.onlySomeReasons;\n        }\n        if (this.indirectCRL !== IssuingDistributionPoint.defaultValues(INDIRECT_CRL)) {\n            obj.indirectCRL = this.indirectCRL;\n        }\n        if (this.onlyContainsAttributeCerts !== IssuingDistributionPoint.defaultValues(ONLY_CONTAINS_ATTRIBUTE_CERTS)) {\n            obj.onlyContainsAttributeCerts = this.onlyContainsAttributeCerts;\n        }\n        return obj;\n    }\n}\nIssuingDistributionPoint.CLASS_NAME = \"IssuingDistributionPoint\";\n\nconst BASE = \"base\";\nconst MINIMUM = \"minimum\";\nconst MAXIMUM = \"maximum\";\nconst CLEAR_PROPS$1h = [\n    BASE,\n    MINIMUM,\n    MAXIMUM\n];\nclass GeneralSubtree extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.base = pvutils.getParametersValue(parameters, BASE, GeneralSubtree.defaultValues(BASE));\n        this.minimum = pvutils.getParametersValue(parameters, MINIMUM, GeneralSubtree.defaultValues(MINIMUM));\n        if (MAXIMUM in parameters) {\n            this.maximum = pvutils.getParametersValue(parameters, MAXIMUM, GeneralSubtree.defaultValues(MAXIMUM));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case BASE:\n                return new GeneralName();\n            case MINIMUM:\n                return 0;\n            case MAXIMUM:\n                return 0;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                GeneralName.schema(names.base || {}),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [new asn1js.Integer({ name: (names.minimum || EMPTY_STRING) })]\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: [new asn1js.Integer({ name: (names.maximum || EMPTY_STRING) })]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1h);\n        const asn1 = asn1js.compareSchema(schema, schema, GeneralSubtree.schema({\n            names: {\n                base: {\n                    names: {\n                        blockName: BASE\n                    }\n                },\n                minimum: MINIMUM,\n                maximum: MAXIMUM\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.base = new GeneralName({ schema: asn1.result.base });\n        if (MINIMUM in asn1.result) {\n            if (asn1.result.minimum.valueBlock.isHexOnly)\n                this.minimum = asn1.result.minimum;\n            else\n                this.minimum = asn1.result.minimum.valueBlock.valueDec;\n        }\n        if (MAXIMUM in asn1.result) {\n            if (asn1.result.maximum.valueBlock.isHexOnly)\n                this.maximum = asn1.result.maximum;\n            else\n                this.maximum = asn1.result.maximum.valueBlock.valueDec;\n        }\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(this.base.toSchema());\n        if (this.minimum !== 0) {\n            let valueMinimum = 0;\n            if (this.minimum instanceof asn1js.Integer) {\n                valueMinimum = this.minimum;\n            }\n            else {\n                valueMinimum = new asn1js.Integer({ value: this.minimum });\n            }\n            outputArray.push(new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [valueMinimum]\n            }));\n        }\n        if (MAXIMUM in this) {\n            let valueMaximum = 0;\n            if (this.maximum instanceof asn1js.Integer) {\n                valueMaximum = this.maximum;\n            }\n            else {\n                valueMaximum = new asn1js.Integer({ value: this.maximum });\n            }\n            outputArray.push(new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                value: [valueMaximum]\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            base: this.base.toJSON()\n        };\n        if (this.minimum !== 0) {\n            if (typeof this.minimum === \"number\") {\n                res.minimum = this.minimum;\n            }\n            else {\n                res.minimum = this.minimum.toJSON();\n            }\n        }\n        if (this.maximum !== undefined) {\n            if (typeof this.maximum === \"number\") {\n                res.maximum = this.maximum;\n            }\n            else {\n                res.maximum = this.maximum.toJSON();\n            }\n        }\n        return res;\n    }\n}\nGeneralSubtree.CLASS_NAME = \"GeneralSubtree\";\n\nconst PERMITTED_SUBTREES = \"permittedSubtrees\";\nconst EXCLUDED_SUBTREES = \"excludedSubtrees\";\nconst CLEAR_PROPS$1g = [\n    PERMITTED_SUBTREES,\n    EXCLUDED_SUBTREES\n];\nclass NameConstraints extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        if (PERMITTED_SUBTREES in parameters) {\n            this.permittedSubtrees = pvutils.getParametersValue(parameters, PERMITTED_SUBTREES, NameConstraints.defaultValues(PERMITTED_SUBTREES));\n        }\n        if (EXCLUDED_SUBTREES in parameters) {\n            this.excludedSubtrees = pvutils.getParametersValue(parameters, EXCLUDED_SUBTREES, NameConstraints.defaultValues(EXCLUDED_SUBTREES));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case PERMITTED_SUBTREES:\n            case EXCLUDED_SUBTREES:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.permittedSubtrees || EMPTY_STRING),\n                            value: GeneralSubtree.schema()\n                        })\n                    ]\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.excludedSubtrees || EMPTY_STRING),\n                            value: GeneralSubtree.schema()\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1g);\n        const asn1 = asn1js.compareSchema(schema, schema, NameConstraints.schema({\n            names: {\n                permittedSubtrees: PERMITTED_SUBTREES,\n                excludedSubtrees: EXCLUDED_SUBTREES\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (PERMITTED_SUBTREES in asn1.result)\n            this.permittedSubtrees = Array.from(asn1.result.permittedSubtrees, element => new GeneralSubtree({ schema: element }));\n        if (EXCLUDED_SUBTREES in asn1.result)\n            this.excludedSubtrees = Array.from(asn1.result.excludedSubtrees, element => new GeneralSubtree({ schema: element }));\n    }\n    toSchema() {\n        const outputArray = [];\n        if (this.permittedSubtrees) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: Array.from(this.permittedSubtrees, o => o.toSchema())\n            }));\n        }\n        if (this.excludedSubtrees) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                value: Array.from(this.excludedSubtrees, o => o.toSchema())\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const object = {};\n        if (this.permittedSubtrees) {\n            object.permittedSubtrees = Array.from(this.permittedSubtrees, o => o.toJSON());\n        }\n        if (this.excludedSubtrees) {\n            object.excludedSubtrees = Array.from(this.excludedSubtrees, o => o.toJSON());\n        }\n        return object;\n    }\n}\nNameConstraints.CLASS_NAME = \"NameConstraints\";\n\nconst REQUIRE_EXPLICIT_POLICY = \"requireExplicitPolicy\";\nconst INHIBIT_POLICY_MAPPING = \"inhibitPolicyMapping\";\nconst CLEAR_PROPS$1f = [\n    REQUIRE_EXPLICIT_POLICY,\n    INHIBIT_POLICY_MAPPING,\n];\nclass PolicyConstraints extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        if (REQUIRE_EXPLICIT_POLICY in parameters) {\n            this.requireExplicitPolicy = pvutils.getParametersValue(parameters, REQUIRE_EXPLICIT_POLICY, PolicyConstraints.defaultValues(REQUIRE_EXPLICIT_POLICY));\n        }\n        if (INHIBIT_POLICY_MAPPING in parameters) {\n            this.inhibitPolicyMapping = pvutils.getParametersValue(parameters, INHIBIT_POLICY_MAPPING, PolicyConstraints.defaultValues(INHIBIT_POLICY_MAPPING));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case REQUIRE_EXPLICIT_POLICY:\n                return 0;\n            case INHIBIT_POLICY_MAPPING:\n                return 0;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Primitive({\n                    name: (names.requireExplicitPolicy || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    }\n                }),\n                new asn1js.Primitive({\n                    name: (names.inhibitPolicyMapping || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    }\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1f);\n        const asn1 = asn1js.compareSchema(schema, schema, PolicyConstraints.schema({\n            names: {\n                requireExplicitPolicy: REQUIRE_EXPLICIT_POLICY,\n                inhibitPolicyMapping: INHIBIT_POLICY_MAPPING\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (REQUIRE_EXPLICIT_POLICY in asn1.result) {\n            const field1 = asn1.result.requireExplicitPolicy;\n            field1.idBlock.tagClass = 1;\n            field1.idBlock.tagNumber = 2;\n            const ber1 = field1.toBER(false);\n            const int1 = asn1js.fromBER(ber1);\n            AsnError.assert(int1, \"Integer\");\n            this.requireExplicitPolicy = int1.result.valueBlock.valueDec;\n        }\n        if (INHIBIT_POLICY_MAPPING in asn1.result) {\n            const field2 = asn1.result.inhibitPolicyMapping;\n            field2.idBlock.tagClass = 1;\n            field2.idBlock.tagNumber = 2;\n            const ber2 = field2.toBER(false);\n            const int2 = asn1js.fromBER(ber2);\n            AsnError.assert(int2, \"Integer\");\n            this.inhibitPolicyMapping = int2.result.valueBlock.valueDec;\n        }\n    }\n    toSchema() {\n        const outputArray = [];\n        if (REQUIRE_EXPLICIT_POLICY in this) {\n            const int1 = new asn1js.Integer({ value: this.requireExplicitPolicy });\n            int1.idBlock.tagClass = 3;\n            int1.idBlock.tagNumber = 0;\n            outputArray.push(int1);\n        }\n        if (INHIBIT_POLICY_MAPPING in this) {\n            const int2 = new asn1js.Integer({ value: this.inhibitPolicyMapping });\n            int2.idBlock.tagClass = 3;\n            int2.idBlock.tagNumber = 1;\n            outputArray.push(int2);\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {};\n        if (REQUIRE_EXPLICIT_POLICY in this) {\n            res.requireExplicitPolicy = this.requireExplicitPolicy;\n        }\n        if (INHIBIT_POLICY_MAPPING in this) {\n            res.inhibitPolicyMapping = this.inhibitPolicyMapping;\n        }\n        return res;\n    }\n}\nPolicyConstraints.CLASS_NAME = \"PolicyConstraints\";\n\nconst ISSUER_DOMAIN_POLICY = \"issuerDomainPolicy\";\nconst SUBJECT_DOMAIN_POLICY = \"subjectDomainPolicy\";\nconst CLEAR_PROPS$1e = [\n    ISSUER_DOMAIN_POLICY,\n    SUBJECT_DOMAIN_POLICY\n];\nclass PolicyMapping extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.issuerDomainPolicy = pvutils.getParametersValue(parameters, ISSUER_DOMAIN_POLICY, PolicyMapping.defaultValues(ISSUER_DOMAIN_POLICY));\n        this.subjectDomainPolicy = pvutils.getParametersValue(parameters, SUBJECT_DOMAIN_POLICY, PolicyMapping.defaultValues(SUBJECT_DOMAIN_POLICY));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ISSUER_DOMAIN_POLICY:\n                return EMPTY_STRING;\n            case SUBJECT_DOMAIN_POLICY:\n                return EMPTY_STRING;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.issuerDomainPolicy || EMPTY_STRING) }),\n                new asn1js.ObjectIdentifier({ name: (names.subjectDomainPolicy || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1e);\n        const asn1 = asn1js.compareSchema(schema, schema, PolicyMapping.schema({\n            names: {\n                issuerDomainPolicy: ISSUER_DOMAIN_POLICY,\n                subjectDomainPolicy: SUBJECT_DOMAIN_POLICY\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.issuerDomainPolicy = asn1.result.issuerDomainPolicy.valueBlock.toString();\n        this.subjectDomainPolicy = asn1.result.subjectDomainPolicy.valueBlock.toString();\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                new asn1js.ObjectIdentifier({ value: this.issuerDomainPolicy }),\n                new asn1js.ObjectIdentifier({ value: this.subjectDomainPolicy })\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            issuerDomainPolicy: this.issuerDomainPolicy,\n            subjectDomainPolicy: this.subjectDomainPolicy\n        };\n    }\n}\nPolicyMapping.CLASS_NAME = \"PolicyMapping\";\n\nconst MAPPINGS = \"mappings\";\nconst CLEAR_PROPS$1d = [\n    MAPPINGS,\n];\nclass PolicyMappings extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.mappings = pvutils.getParametersValue(parameters, MAPPINGS, PolicyMappings.defaultValues(MAPPINGS));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case MAPPINGS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Repeated({\n                    name: (names.mappings || EMPTY_STRING),\n                    value: PolicyMapping.schema()\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1d);\n        const asn1 = asn1js.compareSchema(schema, schema, PolicyMappings.schema({\n            names: {\n                mappings: MAPPINGS\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.mappings = Array.from(asn1.result.mappings, element => new PolicyMapping({ schema: element }));\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: Array.from(this.mappings, o => o.toSchema())\n        }));\n    }\n    toJSON() {\n        return {\n            mappings: Array.from(this.mappings, o => o.toJSON())\n        };\n    }\n}\nPolicyMappings.CLASS_NAME = \"PolicyMappings\";\n\nconst NOT_BEFORE$1 = \"notBefore\";\nconst NOT_AFTER$1 = \"notAfter\";\nconst CLEAR_PROPS$1c = [\n    NOT_BEFORE$1,\n    NOT_AFTER$1\n];\nclass PrivateKeyUsagePeriod extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        if (NOT_BEFORE$1 in parameters) {\n            this.notBefore = pvutils.getParametersValue(parameters, NOT_BEFORE$1, PrivateKeyUsagePeriod.defaultValues(NOT_BEFORE$1));\n        }\n        if (NOT_AFTER$1 in parameters) {\n            this.notAfter = pvutils.getParametersValue(parameters, NOT_AFTER$1, PrivateKeyUsagePeriod.defaultValues(NOT_AFTER$1));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case NOT_BEFORE$1:\n                return new Date();\n            case NOT_AFTER$1:\n                return new Date();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Primitive({\n                    name: (names.notBefore || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    }\n                }),\n                new asn1js.Primitive({\n                    name: (names.notAfter || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    }\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1c);\n        const asn1 = asn1js.compareSchema(schema, schema, PrivateKeyUsagePeriod.schema({\n            names: {\n                notBefore: NOT_BEFORE$1,\n                notAfter: NOT_AFTER$1\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (NOT_BEFORE$1 in asn1.result) {\n            const localNotBefore = new asn1js.GeneralizedTime();\n            localNotBefore.fromBuffer(asn1.result.notBefore.valueBlock.valueHex);\n            this.notBefore = localNotBefore.toDate();\n        }\n        if (NOT_AFTER$1 in asn1.result) {\n            const localNotAfter = new asn1js.GeneralizedTime({ valueHex: asn1.result.notAfter.valueBlock.valueHex });\n            localNotAfter.fromBuffer(asn1.result.notAfter.valueBlock.valueHex);\n            this.notAfter = localNotAfter.toDate();\n        }\n    }\n    toSchema() {\n        const outputArray = [];\n        if (NOT_BEFORE$1 in this) {\n            outputArray.push(new asn1js.Primitive({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                valueHex: (new asn1js.GeneralizedTime({ valueDate: this.notBefore })).valueBlock.valueHexView\n            }));\n        }\n        if (NOT_AFTER$1 in this) {\n            outputArray.push(new asn1js.Primitive({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                valueHex: (new asn1js.GeneralizedTime({ valueDate: this.notAfter })).valueBlock.valueHexView\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {};\n        if (this.notBefore) {\n            res.notBefore = this.notBefore;\n        }\n        if (this.notAfter) {\n            res.notAfter = this.notAfter;\n        }\n        return res;\n    }\n}\nPrivateKeyUsagePeriod.CLASS_NAME = \"PrivateKeyUsagePeriod\";\n\nconst ID = \"id\";\nconst TYPE$2 = \"type\";\nconst VALUES = \"values\";\nconst QC_STATEMENT_CLEAR_PROPS = [\n    ID,\n    TYPE$2\n];\nconst QC_STATEMENTS_CLEAR_PROPS = [\n    VALUES\n];\nclass QCStatement extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.id = pvutils.getParametersValue(parameters, ID, QCStatement.defaultValues(ID));\n        if (TYPE$2 in parameters) {\n            this.type = pvutils.getParametersValue(parameters, TYPE$2, QCStatement.defaultValues(TYPE$2));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ID:\n                return EMPTY_STRING;\n            case TYPE$2:\n                return new asn1js.Null();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case ID:\n                return (memberValue === EMPTY_STRING);\n            case TYPE$2:\n                return (memberValue instanceof asn1js.Null);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.id || EMPTY_STRING) }),\n                new asn1js.Any({\n                    name: (names.type || EMPTY_STRING),\n                    optional: true\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, QC_STATEMENT_CLEAR_PROPS);\n        const asn1 = asn1js.compareSchema(schema, schema, QCStatement.schema({\n            names: {\n                id: ID,\n                type: TYPE$2\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.id = asn1.result.id.valueBlock.toString();\n        if (TYPE$2 in asn1.result)\n            this.type = asn1.result.type;\n    }\n    toSchema() {\n        const value = [\n            new asn1js.ObjectIdentifier({ value: this.id })\n        ];\n        if (TYPE$2 in this)\n            value.push(this.type);\n        return (new asn1js.Sequence({\n            value,\n        }));\n    }\n    toJSON() {\n        const object = {\n            id: this.id\n        };\n        if (this.type) {\n            object.type = this.type.toJSON();\n        }\n        return object;\n    }\n}\nQCStatement.CLASS_NAME = \"QCStatement\";\nclass QCStatements extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.values = pvutils.getParametersValue(parameters, VALUES, QCStatements.defaultValues(VALUES));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VALUES:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case VALUES:\n                return (memberValue.length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Repeated({\n                    name: (names.values || EMPTY_STRING),\n                    value: QCStatement.schema(names.value || {})\n                }),\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, QC_STATEMENTS_CLEAR_PROPS);\n        const asn1 = asn1js.compareSchema(schema, schema, QCStatements.schema({\n            names: {\n                values: VALUES\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.values = Array.from(asn1.result.values, element => new QCStatement({ schema: element }));\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: Array.from(this.values, o => o.toSchema())\n        }));\n    }\n    toJSON() {\n        return {\n            values: Array.from(this.values, o => o.toJSON())\n        };\n    }\n}\nQCStatements.CLASS_NAME = \"QCStatements\";\n\nvar _a;\nclass ECNamedCurves {\n    static register(name, id, size) {\n        this.namedCurves[name.toLowerCase()] = this.namedCurves[id] = { name, id, size };\n    }\n    static find(nameOrId) {\n        return this.namedCurves[nameOrId.toLowerCase()] || null;\n    }\n}\n_a = ECNamedCurves;\nECNamedCurves.namedCurves = {};\n(() => {\n    _a.register(\"P-256\", \"1.2.840.10045.3.1.7\", 32);\n    _a.register(\"P-384\", \"1.3.132.0.34\", 48);\n    _a.register(\"P-521\", \"1.3.132.0.35\", 66);\n    _a.register(\"brainpoolP256r1\", \"1.3.36.3.3.2.8.1.1.7\", 32);\n    _a.register(\"brainpoolP384r1\", \"1.3.36.3.3.2.8.1.1.11\", 48);\n    _a.register(\"brainpoolP512r1\", \"1.3.36.3.3.2.8.1.1.13\", 64);\n})();\n\nconst X = \"x\";\nconst Y = \"y\";\nconst NAMED_CURVE$1 = \"namedCurve\";\nclass ECPublicKey extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.x = pvutils.getParametersValue(parameters, X, ECPublicKey.defaultValues(X));\n        this.y = pvutils.getParametersValue(parameters, Y, ECPublicKey.defaultValues(Y));\n        this.namedCurve = pvutils.getParametersValue(parameters, NAMED_CURVE$1, ECPublicKey.defaultValues(NAMED_CURVE$1));\n        if (parameters.json) {\n            this.fromJSON(parameters.json);\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case X:\n            case Y:\n                return EMPTY_BUFFER;\n            case NAMED_CURVE$1:\n                return EMPTY_STRING;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case X:\n            case Y:\n                return memberValue instanceof ArrayBuffer &&\n                    (pvutils.isEqualBuffer(memberValue, ECPublicKey.defaultValues(memberName)));\n            case NAMED_CURVE$1:\n                return typeof memberValue === \"string\" &&\n                    memberValue === ECPublicKey.defaultValues(memberName);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema() {\n        return new asn1js.RawData();\n    }\n    fromSchema(schema1) {\n        const view = BufferSourceConverter.toUint8Array(schema1);\n        if (view[0] !== 0x04) {\n            throw new Error(\"Object's schema was not verified against input data for ECPublicKey\");\n        }\n        const namedCurve = ECNamedCurves.find(this.namedCurve);\n        if (!namedCurve) {\n            throw new Error(`Incorrect curve OID: ${this.namedCurve}`);\n        }\n        const coordinateLength = namedCurve.size;\n        if (view.byteLength !== (coordinateLength * 2 + 1)) {\n            throw new Error(\"Object's schema was not verified against input data for ECPublicKey\");\n        }\n        this.namedCurve = namedCurve.name;\n        this.x = view.slice(1, coordinateLength + 1).buffer;\n        this.y = view.slice(1 + coordinateLength, coordinateLength * 2 + 1).buffer;\n    }\n    toSchema() {\n        return new asn1js.RawData({\n            data: pvutils.utilConcatBuf((new Uint8Array([0x04])).buffer, this.x, this.y)\n        });\n    }\n    toJSON() {\n        const namedCurve = ECNamedCurves.find(this.namedCurve);\n        return {\n            crv: namedCurve ? namedCurve.name : this.namedCurve,\n            x: pvutils.toBase64(pvutils.arrayBufferToString(this.x), true, true, false),\n            y: pvutils.toBase64(pvutils.arrayBufferToString(this.y), true, true, false)\n        };\n    }\n    fromJSON(json) {\n        ParameterError.assert(\"json\", json, \"crv\", \"x\", \"y\");\n        let coordinateLength = 0;\n        const namedCurve = ECNamedCurves.find(json.crv);\n        if (namedCurve) {\n            this.namedCurve = namedCurve.id;\n            coordinateLength = namedCurve.size;\n        }\n        const xConvertBuffer = pvutils.stringToArrayBuffer(pvutils.fromBase64(json.x, true));\n        if (xConvertBuffer.byteLength < coordinateLength) {\n            this.x = new ArrayBuffer(coordinateLength);\n            const view = new Uint8Array(this.x);\n            const convertBufferView = new Uint8Array(xConvertBuffer);\n            view.set(convertBufferView, 1);\n        }\n        else {\n            this.x = xConvertBuffer.slice(0, coordinateLength);\n        }\n        const yConvertBuffer = pvutils.stringToArrayBuffer(pvutils.fromBase64(json.y, true));\n        if (yConvertBuffer.byteLength < coordinateLength) {\n            this.y = new ArrayBuffer(coordinateLength);\n            const view = new Uint8Array(this.y);\n            const convertBufferView = new Uint8Array(yConvertBuffer);\n            view.set(convertBufferView, 1);\n        }\n        else {\n            this.y = yConvertBuffer.slice(0, coordinateLength);\n        }\n    }\n}\nECPublicKey.CLASS_NAME = \"ECPublicKey\";\n\nconst MODULUS$1 = \"modulus\";\nconst PUBLIC_EXPONENT$1 = \"publicExponent\";\nconst CLEAR_PROPS$1b = [MODULUS$1, PUBLIC_EXPONENT$1];\nclass RSAPublicKey extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.modulus = pvutils.getParametersValue(parameters, MODULUS$1, RSAPublicKey.defaultValues(MODULUS$1));\n        this.publicExponent = pvutils.getParametersValue(parameters, PUBLIC_EXPONENT$1, RSAPublicKey.defaultValues(PUBLIC_EXPONENT$1));\n        if (parameters.json) {\n            this.fromJSON(parameters.json);\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case MODULUS$1:\n                return new asn1js.Integer();\n            case PUBLIC_EXPONENT$1:\n                return new asn1js.Integer();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Integer({ name: (names.modulus || EMPTY_STRING) }),\n                new asn1js.Integer({ name: (names.publicExponent || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1b);\n        const asn1 = asn1js.compareSchema(schema, schema, RSAPublicKey.schema({\n            names: {\n                modulus: MODULUS$1,\n                publicExponent: PUBLIC_EXPONENT$1\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.modulus = asn1.result.modulus.convertFromDER(256);\n        this.publicExponent = asn1.result.publicExponent;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                this.modulus.convertToDER(),\n                this.publicExponent\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            n: pvtsutils.Convert.ToBase64Url(this.modulus.valueBlock.valueHexView),\n            e: pvtsutils.Convert.ToBase64Url(this.publicExponent.valueBlock.valueHexView),\n        };\n    }\n    fromJSON(json) {\n        ParameterError.assert(\"json\", json, \"n\", \"e\");\n        const array = pvutils.stringToArrayBuffer(pvutils.fromBase64(json.n, true));\n        this.modulus = new asn1js.Integer({ valueHex: array.slice(0, Math.pow(2, pvutils.nearestPowerOf2(array.byteLength))) });\n        this.publicExponent = new asn1js.Integer({ valueHex: pvutils.stringToArrayBuffer(pvutils.fromBase64(json.e, true)).slice(0, 3) });\n    }\n}\nRSAPublicKey.CLASS_NAME = \"RSAPublicKey\";\n\nconst ALGORITHM$1 = \"algorithm\";\nconst SUBJECT_PUBLIC_KEY = \"subjectPublicKey\";\nconst CLEAR_PROPS$1a = [ALGORITHM$1, SUBJECT_PUBLIC_KEY];\nclass PublicKeyInfo extends PkiObject {\n    get parsedKey() {\n        if (this._parsedKey === undefined) {\n            switch (this.algorithm.algorithmId) {\n                case \"1.2.840.10045.2.1\":\n                    if (\"algorithmParams\" in this.algorithm) {\n                        if (this.algorithm.algorithmParams.constructor.blockName() === asn1js.ObjectIdentifier.blockName()) {\n                            try {\n                                this._parsedKey = new ECPublicKey({\n                                    namedCurve: this.algorithm.algorithmParams.valueBlock.toString(),\n                                    schema: this.subjectPublicKey.valueBlock.valueHexView\n                                });\n                            }\n                            catch (ex) {\n                            }\n                        }\n                    }\n                    break;\n                case \"1.2.840.113549.1.1.1\":\n                    {\n                        const publicKeyASN1 = asn1js.fromBER(this.subjectPublicKey.valueBlock.valueHexView);\n                        if (publicKeyASN1.offset !== -1) {\n                            try {\n                                this._parsedKey = new RSAPublicKey({ schema: publicKeyASN1.result });\n                            }\n                            catch (ex) {\n                            }\n                        }\n                    }\n                    break;\n            }\n            this._parsedKey || (this._parsedKey = null);\n        }\n        return this._parsedKey || undefined;\n    }\n    set parsedKey(value) {\n        this._parsedKey = value;\n    }\n    constructor(parameters = {}) {\n        super();\n        this.algorithm = pvutils.getParametersValue(parameters, ALGORITHM$1, PublicKeyInfo.defaultValues(ALGORITHM$1));\n        this.subjectPublicKey = pvutils.getParametersValue(parameters, SUBJECT_PUBLIC_KEY, PublicKeyInfo.defaultValues(SUBJECT_PUBLIC_KEY));\n        const parsedKey = pvutils.getParametersValue(parameters, \"parsedKey\", null);\n        if (parsedKey) {\n            this.parsedKey = parsedKey;\n        }\n        if (parameters.json) {\n            this.fromJSON(parameters.json);\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ALGORITHM$1:\n                return new AlgorithmIdentifier();\n            case SUBJECT_PUBLIC_KEY:\n                return new asn1js.BitString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                AlgorithmIdentifier.schema(names.algorithm || {}),\n                new asn1js.BitString({ name: (names.subjectPublicKey || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1a);\n        const asn1 = asn1js.compareSchema(schema, schema, PublicKeyInfo.schema({\n            names: {\n                algorithm: {\n                    names: {\n                        blockName: ALGORITHM$1\n                    }\n                },\n                subjectPublicKey: SUBJECT_PUBLIC_KEY\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.algorithm = new AlgorithmIdentifier({ schema: asn1.result.algorithm });\n        this.subjectPublicKey = asn1.result.subjectPublicKey;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                this.algorithm.toSchema(),\n                this.subjectPublicKey\n            ]\n        }));\n    }\n    toJSON() {\n        if (!this.parsedKey) {\n            return {\n                algorithm: this.algorithm.toJSON(),\n                subjectPublicKey: this.subjectPublicKey.toJSON(),\n            };\n        }\n        const jwk = {};\n        switch (this.algorithm.algorithmId) {\n            case \"1.2.840.10045.2.1\":\n                jwk.kty = \"EC\";\n                break;\n            case \"1.2.840.113549.1.1.1\":\n                jwk.kty = \"RSA\";\n                break;\n        }\n        const publicKeyJWK = this.parsedKey.toJSON();\n        Object.assign(jwk, publicKeyJWK);\n        return jwk;\n    }\n    fromJSON(json) {\n        if (\"kty\" in json) {\n            switch (json.kty.toUpperCase()) {\n                case \"EC\":\n                    this.parsedKey = new ECPublicKey({ json });\n                    this.algorithm = new AlgorithmIdentifier({\n                        algorithmId: \"1.2.840.10045.2.1\",\n                        algorithmParams: new asn1js.ObjectIdentifier({ value: this.parsedKey.namedCurve })\n                    });\n                    break;\n                case \"RSA\":\n                    this.parsedKey = new RSAPublicKey({ json });\n                    this.algorithm = new AlgorithmIdentifier({\n                        algorithmId: \"1.2.840.113549.1.1.1\",\n                        algorithmParams: new asn1js.Null()\n                    });\n                    break;\n                default:\n                    throw new Error(`Invalid value for \"kty\" parameter: ${json.kty}`);\n            }\n            this.subjectPublicKey = new asn1js.BitString({ valueHex: this.parsedKey.toSchema().toBER(false) });\n        }\n    }\n    async importKey(publicKey, crypto = getCrypto(true)) {\n        try {\n            if (!publicKey) {\n                throw new Error(\"Need to provide publicKey input parameter\");\n            }\n            const exportedKey = await crypto.exportKey(\"spki\", publicKey);\n            const asn1 = asn1js.fromBER(exportedKey);\n            try {\n                this.fromSchema(asn1.result);\n            }\n            catch (exception) {\n                throw new Error(\"Error during initializing object from schema\");\n            }\n        }\n        catch (e) {\n            const message = e instanceof Error ? e.message : `${e}`;\n            throw new Error(`Error during exporting public key: ${message}`);\n        }\n    }\n}\nPublicKeyInfo.CLASS_NAME = \"PublicKeyInfo\";\n\nconst VERSION$l = \"version\";\nconst PRIVATE_KEY$1 = \"privateKey\";\nconst NAMED_CURVE = \"namedCurve\";\nconst PUBLIC_KEY$1 = \"publicKey\";\nconst CLEAR_PROPS$19 = [\n    VERSION$l,\n    PRIVATE_KEY$1,\n    NAMED_CURVE,\n    PUBLIC_KEY$1\n];\nclass ECPrivateKey extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION$l, ECPrivateKey.defaultValues(VERSION$l));\n        this.privateKey = pvutils.getParametersValue(parameters, PRIVATE_KEY$1, ECPrivateKey.defaultValues(PRIVATE_KEY$1));\n        if (NAMED_CURVE in parameters) {\n            this.namedCurve = pvutils.getParametersValue(parameters, NAMED_CURVE, ECPrivateKey.defaultValues(NAMED_CURVE));\n        }\n        if (PUBLIC_KEY$1 in parameters) {\n            this.publicKey = pvutils.getParametersValue(parameters, PUBLIC_KEY$1, ECPrivateKey.defaultValues(PUBLIC_KEY$1));\n        }\n        if (parameters.json) {\n            this.fromJSON(parameters.json);\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$l:\n                return 1;\n            case PRIVATE_KEY$1:\n                return new asn1js.OctetString();\n            case NAMED_CURVE:\n                return EMPTY_STRING;\n            case PUBLIC_KEY$1:\n                return new ECPublicKey();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case VERSION$l:\n                return (memberValue === ECPrivateKey.defaultValues(memberName));\n            case PRIVATE_KEY$1:\n                return (memberValue.isEqual(ECPrivateKey.defaultValues(memberName)));\n            case NAMED_CURVE:\n                return (memberValue === EMPTY_STRING);\n            case PUBLIC_KEY$1:\n                return ((ECPublicKey.compareWithDefault(NAMED_CURVE, memberValue.namedCurve)) &&\n                    (ECPublicKey.compareWithDefault(\"x\", memberValue.x)) &&\n                    (ECPublicKey.compareWithDefault(\"y\", memberValue.y)));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Integer({ name: (names.version || EMPTY_STRING) }),\n                new asn1js.OctetString({ name: (names.privateKey || EMPTY_STRING) }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [\n                        new asn1js.ObjectIdentifier({ name: (names.namedCurve || EMPTY_STRING) })\n                    ]\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: [\n                        new asn1js.BitString({ name: (names.publicKey || EMPTY_STRING) })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$19);\n        const asn1 = asn1js.compareSchema(schema, schema, ECPrivateKey.schema({\n            names: {\n                version: VERSION$l,\n                privateKey: PRIVATE_KEY$1,\n                namedCurve: NAMED_CURVE,\n                publicKey: PUBLIC_KEY$1\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.version = asn1.result.version.valueBlock.valueDec;\n        this.privateKey = asn1.result.privateKey;\n        if (NAMED_CURVE in asn1.result) {\n            this.namedCurve = asn1.result.namedCurve.valueBlock.toString();\n        }\n        if (PUBLIC_KEY$1 in asn1.result) {\n            const publicKeyData = { schema: asn1.result.publicKey.valueBlock.valueHex };\n            if (NAMED_CURVE in this) {\n                publicKeyData.namedCurve = this.namedCurve;\n            }\n            this.publicKey = new ECPublicKey(publicKeyData);\n        }\n    }\n    toSchema() {\n        const outputArray = [\n            new asn1js.Integer({ value: this.version }),\n            this.privateKey\n        ];\n        if (this.namedCurve) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [\n                    new asn1js.ObjectIdentifier({ value: this.namedCurve })\n                ]\n            }));\n        }\n        if (this.publicKey) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                value: [\n                    new asn1js.BitString({ valueHex: this.publicKey.toSchema().toBER(false) })\n                ]\n            }));\n        }\n        return new asn1js.Sequence({\n            value: outputArray\n        });\n    }\n    toJSON() {\n        if (!this.namedCurve || ECPrivateKey.compareWithDefault(NAMED_CURVE, this.namedCurve)) {\n            throw new Error(\"Not enough information for making JSON: absent \\\"namedCurve\\\" value\");\n        }\n        const curve = ECNamedCurves.find(this.namedCurve);\n        const privateKeyJSON = {\n            crv: curve ? curve.name : this.namedCurve,\n            d: pvtsutils.Convert.ToBase64Url(this.privateKey.valueBlock.valueHexView),\n        };\n        if (this.publicKey) {\n            const publicKeyJSON = this.publicKey.toJSON();\n            privateKeyJSON.x = publicKeyJSON.x;\n            privateKeyJSON.y = publicKeyJSON.y;\n        }\n        return privateKeyJSON;\n    }\n    fromJSON(json) {\n        ParameterError.assert(\"json\", json, \"crv\", \"d\");\n        let coordinateLength = 0;\n        const curve = ECNamedCurves.find(json.crv);\n        if (curve) {\n            this.namedCurve = curve.id;\n            coordinateLength = curve.size;\n        }\n        const convertBuffer = pvtsutils.Convert.FromBase64Url(json.d);\n        if (convertBuffer.byteLength < coordinateLength) {\n            const buffer = new ArrayBuffer(coordinateLength);\n            const view = new Uint8Array(buffer);\n            const convertBufferView = new Uint8Array(convertBuffer);\n            view.set(convertBufferView, 1);\n            this.privateKey = new asn1js.OctetString({ valueHex: buffer });\n        }\n        else {\n            this.privateKey = new asn1js.OctetString({ valueHex: convertBuffer.slice(0, coordinateLength) });\n        }\n        if (json.x && json.y) {\n            this.publicKey = new ECPublicKey({ json });\n        }\n    }\n}\nECPrivateKey.CLASS_NAME = \"ECPrivateKey\";\n\nconst PRIME = \"prime\";\nconst EXPONENT = \"exponent\";\nconst COEFFICIENT$1 = \"coefficient\";\nconst CLEAR_PROPS$18 = [\n    PRIME,\n    EXPONENT,\n    COEFFICIENT$1,\n];\nclass OtherPrimeInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.prime = pvutils.getParametersValue(parameters, PRIME, OtherPrimeInfo.defaultValues(PRIME));\n        this.exponent = pvutils.getParametersValue(parameters, EXPONENT, OtherPrimeInfo.defaultValues(EXPONENT));\n        this.coefficient = pvutils.getParametersValue(parameters, COEFFICIENT$1, OtherPrimeInfo.defaultValues(COEFFICIENT$1));\n        if (parameters.json) {\n            this.fromJSON(parameters.json);\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case PRIME:\n                return new asn1js.Integer();\n            case EXPONENT:\n                return new asn1js.Integer();\n            case COEFFICIENT$1:\n                return new asn1js.Integer();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Integer({ name: (names.prime || EMPTY_STRING) }),\n                new asn1js.Integer({ name: (names.exponent || EMPTY_STRING) }),\n                new asn1js.Integer({ name: (names.coefficient || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$18);\n        const asn1 = asn1js.compareSchema(schema, schema, OtherPrimeInfo.schema({\n            names: {\n                prime: PRIME,\n                exponent: EXPONENT,\n                coefficient: COEFFICIENT$1\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.prime = asn1.result.prime.convertFromDER();\n        this.exponent = asn1.result.exponent.convertFromDER();\n        this.coefficient = asn1.result.coefficient.convertFromDER();\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                this.prime.convertToDER(),\n                this.exponent.convertToDER(),\n                this.coefficient.convertToDER()\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            r: pvtsutils.Convert.ToBase64Url(this.prime.valueBlock.valueHexView),\n            d: pvtsutils.Convert.ToBase64Url(this.exponent.valueBlock.valueHexView),\n            t: pvtsutils.Convert.ToBase64Url(this.coefficient.valueBlock.valueHexView),\n        };\n    }\n    fromJSON(json) {\n        ParameterError.assert(\"json\", json, \"r\", \"d\", \"r\");\n        this.prime = new asn1js.Integer({ valueHex: pvtsutils.Convert.FromBase64Url(json.r) });\n        this.exponent = new asn1js.Integer({ valueHex: pvtsutils.Convert.FromBase64Url(json.d) });\n        this.coefficient = new asn1js.Integer({ valueHex: pvtsutils.Convert.FromBase64Url(json.t) });\n    }\n}\nOtherPrimeInfo.CLASS_NAME = \"OtherPrimeInfo\";\n\nconst VERSION$k = \"version\";\nconst MODULUS = \"modulus\";\nconst PUBLIC_EXPONENT = \"publicExponent\";\nconst PRIVATE_EXPONENT = \"privateExponent\";\nconst PRIME1 = \"prime1\";\nconst PRIME2 = \"prime2\";\nconst EXPONENT1 = \"exponent1\";\nconst EXPONENT2 = \"exponent2\";\nconst COEFFICIENT = \"coefficient\";\nconst OTHER_PRIME_INFOS = \"otherPrimeInfos\";\nconst CLEAR_PROPS$17 = [\n    VERSION$k,\n    MODULUS,\n    PUBLIC_EXPONENT,\n    PRIVATE_EXPONENT,\n    PRIME1,\n    PRIME2,\n    EXPONENT1,\n    EXPONENT2,\n    COEFFICIENT,\n    OTHER_PRIME_INFOS\n];\nclass RSAPrivateKey extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION$k, RSAPrivateKey.defaultValues(VERSION$k));\n        this.modulus = pvutils.getParametersValue(parameters, MODULUS, RSAPrivateKey.defaultValues(MODULUS));\n        this.publicExponent = pvutils.getParametersValue(parameters, PUBLIC_EXPONENT, RSAPrivateKey.defaultValues(PUBLIC_EXPONENT));\n        this.privateExponent = pvutils.getParametersValue(parameters, PRIVATE_EXPONENT, RSAPrivateKey.defaultValues(PRIVATE_EXPONENT));\n        this.prime1 = pvutils.getParametersValue(parameters, PRIME1, RSAPrivateKey.defaultValues(PRIME1));\n        this.prime2 = pvutils.getParametersValue(parameters, PRIME2, RSAPrivateKey.defaultValues(PRIME2));\n        this.exponent1 = pvutils.getParametersValue(parameters, EXPONENT1, RSAPrivateKey.defaultValues(EXPONENT1));\n        this.exponent2 = pvutils.getParametersValue(parameters, EXPONENT2, RSAPrivateKey.defaultValues(EXPONENT2));\n        this.coefficient = pvutils.getParametersValue(parameters, COEFFICIENT, RSAPrivateKey.defaultValues(COEFFICIENT));\n        if (OTHER_PRIME_INFOS in parameters) {\n            this.otherPrimeInfos = pvutils.getParametersValue(parameters, OTHER_PRIME_INFOS, RSAPrivateKey.defaultValues(OTHER_PRIME_INFOS));\n        }\n        if (parameters.json) {\n            this.fromJSON(parameters.json);\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$k:\n                return 0;\n            case MODULUS:\n                return new asn1js.Integer();\n            case PUBLIC_EXPONENT:\n                return new asn1js.Integer();\n            case PRIVATE_EXPONENT:\n                return new asn1js.Integer();\n            case PRIME1:\n                return new asn1js.Integer();\n            case PRIME2:\n                return new asn1js.Integer();\n            case EXPONENT1:\n                return new asn1js.Integer();\n            case EXPONENT2:\n                return new asn1js.Integer();\n            case COEFFICIENT:\n                return new asn1js.Integer();\n            case OTHER_PRIME_INFOS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Integer({ name: (names.version || EMPTY_STRING) }),\n                new asn1js.Integer({ name: (names.modulus || EMPTY_STRING) }),\n                new asn1js.Integer({ name: (names.publicExponent || EMPTY_STRING) }),\n                new asn1js.Integer({ name: (names.privateExponent || EMPTY_STRING) }),\n                new asn1js.Integer({ name: (names.prime1 || EMPTY_STRING) }),\n                new asn1js.Integer({ name: (names.prime2 || EMPTY_STRING) }),\n                new asn1js.Integer({ name: (names.exponent1 || EMPTY_STRING) }),\n                new asn1js.Integer({ name: (names.exponent2 || EMPTY_STRING) }),\n                new asn1js.Integer({ name: (names.coefficient || EMPTY_STRING) }),\n                new asn1js.Sequence({\n                    optional: true,\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.otherPrimeInfosName || EMPTY_STRING),\n                            value: OtherPrimeInfo.schema(names.otherPrimeInfo || {})\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$17);\n        const asn1 = asn1js.compareSchema(schema, schema, RSAPrivateKey.schema({\n            names: {\n                version: VERSION$k,\n                modulus: MODULUS,\n                publicExponent: PUBLIC_EXPONENT,\n                privateExponent: PRIVATE_EXPONENT,\n                prime1: PRIME1,\n                prime2: PRIME2,\n                exponent1: EXPONENT1,\n                exponent2: EXPONENT2,\n                coefficient: COEFFICIENT,\n                otherPrimeInfo: {\n                    names: {\n                        blockName: OTHER_PRIME_INFOS\n                    }\n                }\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.version = asn1.result.version.valueBlock.valueDec;\n        this.modulus = asn1.result.modulus.convertFromDER(256);\n        this.publicExponent = asn1.result.publicExponent;\n        this.privateExponent = asn1.result.privateExponent.convertFromDER(256);\n        this.prime1 = asn1.result.prime1.convertFromDER(128);\n        this.prime2 = asn1.result.prime2.convertFromDER(128);\n        this.exponent1 = asn1.result.exponent1.convertFromDER(128);\n        this.exponent2 = asn1.result.exponent2.convertFromDER(128);\n        this.coefficient = asn1.result.coefficient.convertFromDER(128);\n        if (OTHER_PRIME_INFOS in asn1.result)\n            this.otherPrimeInfos = Array.from(asn1.result.otherPrimeInfos, element => new OtherPrimeInfo({ schema: element }));\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(new asn1js.Integer({ value: this.version }));\n        outputArray.push(this.modulus.convertToDER());\n        outputArray.push(this.publicExponent);\n        outputArray.push(this.privateExponent.convertToDER());\n        outputArray.push(this.prime1.convertToDER());\n        outputArray.push(this.prime2.convertToDER());\n        outputArray.push(this.exponent1.convertToDER());\n        outputArray.push(this.exponent2.convertToDER());\n        outputArray.push(this.coefficient.convertToDER());\n        if (this.otherPrimeInfos) {\n            outputArray.push(new asn1js.Sequence({\n                value: Array.from(this.otherPrimeInfos, o => o.toSchema())\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const jwk = {\n            n: pvtsutils.Convert.ToBase64Url(this.modulus.valueBlock.valueHexView),\n            e: pvtsutils.Convert.ToBase64Url(this.publicExponent.valueBlock.valueHexView),\n            d: pvtsutils.Convert.ToBase64Url(this.privateExponent.valueBlock.valueHexView),\n            p: pvtsutils.Convert.ToBase64Url(this.prime1.valueBlock.valueHexView),\n            q: pvtsutils.Convert.ToBase64Url(this.prime2.valueBlock.valueHexView),\n            dp: pvtsutils.Convert.ToBase64Url(this.exponent1.valueBlock.valueHexView),\n            dq: pvtsutils.Convert.ToBase64Url(this.exponent2.valueBlock.valueHexView),\n            qi: pvtsutils.Convert.ToBase64Url(this.coefficient.valueBlock.valueHexView),\n        };\n        if (this.otherPrimeInfos) {\n            jwk.oth = Array.from(this.otherPrimeInfos, o => o.toJSON());\n        }\n        return jwk;\n    }\n    fromJSON(json) {\n        ParameterError.assert(\"json\", json, \"n\", \"e\", \"d\", \"p\", \"q\", \"dp\", \"dq\", \"qi\");\n        this.modulus = new asn1js.Integer({ valueHex: pvtsutils.Convert.FromBase64Url(json.n) });\n        this.publicExponent = new asn1js.Integer({ valueHex: pvtsutils.Convert.FromBase64Url(json.e) });\n        this.privateExponent = new asn1js.Integer({ valueHex: pvtsutils.Convert.FromBase64Url(json.d) });\n        this.prime1 = new asn1js.Integer({ valueHex: pvtsutils.Convert.FromBase64Url(json.p) });\n        this.prime2 = new asn1js.Integer({ valueHex: pvtsutils.Convert.FromBase64Url(json.q) });\n        this.exponent1 = new asn1js.Integer({ valueHex: pvtsutils.Convert.FromBase64Url(json.dp) });\n        this.exponent2 = new asn1js.Integer({ valueHex: pvtsutils.Convert.FromBase64Url(json.dq) });\n        this.coefficient = new asn1js.Integer({ valueHex: pvtsutils.Convert.FromBase64Url(json.qi) });\n        if (json.oth) {\n            this.otherPrimeInfos = Array.from(json.oth, (element) => new OtherPrimeInfo({ json: element }));\n        }\n    }\n}\nRSAPrivateKey.CLASS_NAME = \"RSAPrivateKey\";\n\nconst VERSION$j = \"version\";\nconst PRIVATE_KEY_ALGORITHM = \"privateKeyAlgorithm\";\nconst PRIVATE_KEY = \"privateKey\";\nconst ATTRIBUTES$5 = \"attributes\";\nconst PARSED_KEY = \"parsedKey\";\nconst CLEAR_PROPS$16 = [\n    VERSION$j,\n    PRIVATE_KEY_ALGORITHM,\n    PRIVATE_KEY,\n    ATTRIBUTES$5\n];\nclass PrivateKeyInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION$j, PrivateKeyInfo.defaultValues(VERSION$j));\n        this.privateKeyAlgorithm = pvutils.getParametersValue(parameters, PRIVATE_KEY_ALGORITHM, PrivateKeyInfo.defaultValues(PRIVATE_KEY_ALGORITHM));\n        this.privateKey = pvutils.getParametersValue(parameters, PRIVATE_KEY, PrivateKeyInfo.defaultValues(PRIVATE_KEY));\n        if (ATTRIBUTES$5 in parameters) {\n            this.attributes = pvutils.getParametersValue(parameters, ATTRIBUTES$5, PrivateKeyInfo.defaultValues(ATTRIBUTES$5));\n        }\n        if (PARSED_KEY in parameters) {\n            this.parsedKey = pvutils.getParametersValue(parameters, PARSED_KEY, PrivateKeyInfo.defaultValues(PARSED_KEY));\n        }\n        if (parameters.json) {\n            this.fromJSON(parameters.json);\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$j:\n                return 0;\n            case PRIVATE_KEY_ALGORITHM:\n                return new AlgorithmIdentifier();\n            case PRIVATE_KEY:\n                return new asn1js.OctetString();\n            case ATTRIBUTES$5:\n                return [];\n            case PARSED_KEY:\n                return {};\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Integer({ name: (names.version || EMPTY_STRING) }),\n                AlgorithmIdentifier.schema(names.privateKeyAlgorithm || {}),\n                new asn1js.OctetString({ name: (names.privateKey || EMPTY_STRING) }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.attributes || EMPTY_STRING),\n                            value: Attribute.schema()\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$16);\n        const asn1 = asn1js.compareSchema(schema, schema, PrivateKeyInfo.schema({\n            names: {\n                version: VERSION$j,\n                privateKeyAlgorithm: {\n                    names: {\n                        blockName: PRIVATE_KEY_ALGORITHM\n                    }\n                },\n                privateKey: PRIVATE_KEY,\n                attributes: ATTRIBUTES$5\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.version = asn1.result.version.valueBlock.valueDec;\n        this.privateKeyAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.privateKeyAlgorithm });\n        this.privateKey = asn1.result.privateKey;\n        if (ATTRIBUTES$5 in asn1.result)\n            this.attributes = Array.from(asn1.result.attributes, element => new Attribute({ schema: element }));\n        switch (this.privateKeyAlgorithm.algorithmId) {\n            case \"1.2.840.113549.1.1.1\":\n                {\n                    const privateKeyASN1 = asn1js.fromBER(this.privateKey.valueBlock.valueHexView);\n                    if (privateKeyASN1.offset !== -1)\n                        this.parsedKey = new RSAPrivateKey({ schema: privateKeyASN1.result });\n                }\n                break;\n            case \"1.2.840.10045.2.1\":\n                if (\"algorithmParams\" in this.privateKeyAlgorithm) {\n                    if (this.privateKeyAlgorithm.algorithmParams instanceof asn1js.ObjectIdentifier) {\n                        const privateKeyASN1 = asn1js.fromBER(this.privateKey.valueBlock.valueHexView);\n                        if (privateKeyASN1.offset !== -1) {\n                            this.parsedKey = new ECPrivateKey({\n                                namedCurve: this.privateKeyAlgorithm.algorithmParams.valueBlock.toString(),\n                                schema: privateKeyASN1.result\n                            });\n                        }\n                    }\n                }\n                break;\n        }\n    }\n    toSchema() {\n        const outputArray = [\n            new asn1js.Integer({ value: this.version }),\n            this.privateKeyAlgorithm.toSchema(),\n            this.privateKey\n        ];\n        if (this.attributes) {\n            outputArray.push(new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: Array.from(this.attributes, o => o.toSchema())\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        if (!this.parsedKey) {\n            const object = {\n                version: this.version,\n                privateKeyAlgorithm: this.privateKeyAlgorithm.toJSON(),\n                privateKey: this.privateKey.toJSON(),\n            };\n            if (this.attributes) {\n                object.attributes = Array.from(this.attributes, o => o.toJSON());\n            }\n            return object;\n        }\n        const jwk = {};\n        switch (this.privateKeyAlgorithm.algorithmId) {\n            case \"1.2.840.10045.2.1\":\n                jwk.kty = \"EC\";\n                break;\n            case \"1.2.840.113549.1.1.1\":\n                jwk.kty = \"RSA\";\n                break;\n        }\n        const publicKeyJWK = this.parsedKey.toJSON();\n        Object.assign(jwk, publicKeyJWK);\n        return jwk;\n    }\n    fromJSON(json) {\n        if (\"kty\" in json) {\n            switch (json.kty.toUpperCase()) {\n                case \"EC\":\n                    this.parsedKey = new ECPrivateKey({ json });\n                    this.privateKeyAlgorithm = new AlgorithmIdentifier({\n                        algorithmId: \"1.2.840.10045.2.1\",\n                        algorithmParams: new asn1js.ObjectIdentifier({ value: this.parsedKey.namedCurve })\n                    });\n                    break;\n                case \"RSA\":\n                    this.parsedKey = new RSAPrivateKey({ json });\n                    this.privateKeyAlgorithm = new AlgorithmIdentifier({\n                        algorithmId: \"1.2.840.113549.1.1.1\",\n                        algorithmParams: new asn1js.Null()\n                    });\n                    break;\n                default:\n                    throw new Error(`Invalid value for \"kty\" parameter: ${json.kty}`);\n            }\n            this.privateKey = new asn1js.OctetString({ valueHex: this.parsedKey.toSchema().toBER(false) });\n        }\n    }\n}\nPrivateKeyInfo.CLASS_NAME = \"PrivateKeyInfo\";\n\nconst CONTENT_TYPE$1 = \"contentType\";\nconst CONTENT_ENCRYPTION_ALGORITHM = \"contentEncryptionAlgorithm\";\nconst ENCRYPTED_CONTENT = \"encryptedContent\";\nconst CLEAR_PROPS$15 = [\n    CONTENT_TYPE$1,\n    CONTENT_ENCRYPTION_ALGORITHM,\n    ENCRYPTED_CONTENT,\n];\nconst PIECE_SIZE = 1024;\nclass EncryptedContentInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.contentType = pvutils.getParametersValue(parameters, CONTENT_TYPE$1, EncryptedContentInfo.defaultValues(CONTENT_TYPE$1));\n        this.contentEncryptionAlgorithm = pvutils.getParametersValue(parameters, CONTENT_ENCRYPTION_ALGORITHM, EncryptedContentInfo.defaultValues(CONTENT_ENCRYPTION_ALGORITHM));\n        if (ENCRYPTED_CONTENT in parameters && parameters.encryptedContent) {\n            this.encryptedContent = parameters.encryptedContent;\n            if ((this.encryptedContent.idBlock.tagClass === 1) &&\n                (this.encryptedContent.idBlock.tagNumber === 4)) {\n                if (this.encryptedContent.idBlock.isConstructed === false && !parameters.disableSplit) {\n                    const constrString = new asn1js.OctetString({\n                        idBlock: { isConstructed: true },\n                        isConstructed: true\n                    });\n                    let offset = 0;\n                    const valueHex = this.encryptedContent.valueBlock.valueHexView.slice().buffer;\n                    let length = valueHex.byteLength;\n                    while (length > 0) {\n                        const pieceView = new Uint8Array(valueHex, offset, ((offset + PIECE_SIZE) > valueHex.byteLength) ? (valueHex.byteLength - offset) : PIECE_SIZE);\n                        const _array = new ArrayBuffer(pieceView.length);\n                        const _view = new Uint8Array(_array);\n                        for (let i = 0; i < _view.length; i++)\n                            _view[i] = pieceView[i];\n                        constrString.valueBlock.value.push(new asn1js.OctetString({ valueHex: _array }));\n                        length -= pieceView.length;\n                        offset += pieceView.length;\n                    }\n                    this.encryptedContent = constrString;\n                }\n            }\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case CONTENT_TYPE$1:\n                return EMPTY_STRING;\n            case CONTENT_ENCRYPTION_ALGORITHM:\n                return new AlgorithmIdentifier();\n            case ENCRYPTED_CONTENT:\n                return new asn1js.OctetString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case CONTENT_TYPE$1:\n                return (memberValue === EMPTY_STRING);\n            case CONTENT_ENCRYPTION_ALGORITHM:\n                return ((memberValue.algorithmId === EMPTY_STRING) && ((\"algorithmParams\" in memberValue) === false));\n            case ENCRYPTED_CONTENT:\n                return (memberValue.isEqual(EncryptedContentInfo.defaultValues(ENCRYPTED_CONTENT)));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.contentType || EMPTY_STRING) }),\n                AlgorithmIdentifier.schema(names.contentEncryptionAlgorithm || {}),\n                new asn1js.Choice({\n                    value: [\n                        new asn1js.Constructed({\n                            name: (names.encryptedContent || EMPTY_STRING),\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: 0\n                            },\n                            value: [\n                                new asn1js.Repeated({\n                                    value: new asn1js.OctetString()\n                                })\n                            ]\n                        }),\n                        new asn1js.Primitive({\n                            name: (names.encryptedContent || EMPTY_STRING),\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: 0\n                            }\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$15);\n        const asn1 = asn1js.compareSchema(schema, schema, EncryptedContentInfo.schema({\n            names: {\n                contentType: CONTENT_TYPE$1,\n                contentEncryptionAlgorithm: {\n                    names: {\n                        blockName: CONTENT_ENCRYPTION_ALGORITHM\n                    }\n                },\n                encryptedContent: ENCRYPTED_CONTENT\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.contentType = asn1.result.contentType.valueBlock.toString();\n        this.contentEncryptionAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.contentEncryptionAlgorithm });\n        if (ENCRYPTED_CONTENT in asn1.result) {\n            this.encryptedContent = asn1.result.encryptedContent;\n            this.encryptedContent.idBlock.tagClass = 1;\n            this.encryptedContent.idBlock.tagNumber = 4;\n        }\n    }\n    toSchema() {\n        const sequenceLengthBlock = {\n            isIndefiniteForm: false\n        };\n        const outputArray = [];\n        outputArray.push(new asn1js.ObjectIdentifier({ value: this.contentType }));\n        outputArray.push(this.contentEncryptionAlgorithm.toSchema());\n        if (this.encryptedContent) {\n            sequenceLengthBlock.isIndefiniteForm = this.encryptedContent.idBlock.isConstructed;\n            const encryptedValue = this.encryptedContent;\n            encryptedValue.idBlock.tagClass = 3;\n            encryptedValue.idBlock.tagNumber = 0;\n            encryptedValue.lenBlock.isIndefiniteForm = this.encryptedContent.idBlock.isConstructed;\n            outputArray.push(encryptedValue);\n        }\n        return (new asn1js.Sequence({\n            lenBlock: sequenceLengthBlock,\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            contentType: this.contentType,\n            contentEncryptionAlgorithm: this.contentEncryptionAlgorithm.toJSON()\n        };\n        if (this.encryptedContent) {\n            res.encryptedContent = this.encryptedContent.toJSON();\n        }\n        return res;\n    }\n    getEncryptedContent() {\n        if (!this.encryptedContent) {\n            throw new Error(\"Parameter 'encryptedContent' is undefined\");\n        }\n        return asn1js.OctetString.prototype.getValue.call(this.encryptedContent);\n    }\n}\nEncryptedContentInfo.CLASS_NAME = \"EncryptedContentInfo\";\n\nconst HASH_ALGORITHM$4 = \"hashAlgorithm\";\nconst MASK_GEN_ALGORITHM$1 = \"maskGenAlgorithm\";\nconst SALT_LENGTH = \"saltLength\";\nconst TRAILER_FIELD = \"trailerField\";\nconst CLEAR_PROPS$14 = [\n    HASH_ALGORITHM$4,\n    MASK_GEN_ALGORITHM$1,\n    SALT_LENGTH,\n    TRAILER_FIELD\n];\nclass RSASSAPSSParams extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.hashAlgorithm = pvutils.getParametersValue(parameters, HASH_ALGORITHM$4, RSASSAPSSParams.defaultValues(HASH_ALGORITHM$4));\n        this.maskGenAlgorithm = pvutils.getParametersValue(parameters, MASK_GEN_ALGORITHM$1, RSASSAPSSParams.defaultValues(MASK_GEN_ALGORITHM$1));\n        this.saltLength = pvutils.getParametersValue(parameters, SALT_LENGTH, RSASSAPSSParams.defaultValues(SALT_LENGTH));\n        this.trailerField = pvutils.getParametersValue(parameters, TRAILER_FIELD, RSASSAPSSParams.defaultValues(TRAILER_FIELD));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case HASH_ALGORITHM$4:\n                return new AlgorithmIdentifier({\n                    algorithmId: \"1.3.14.3.2.26\",\n                    algorithmParams: new asn1js.Null()\n                });\n            case MASK_GEN_ALGORITHM$1:\n                return new AlgorithmIdentifier({\n                    algorithmId: \"1.2.840.113549.1.1.8\",\n                    algorithmParams: (new AlgorithmIdentifier({\n                        algorithmId: \"1.3.14.3.2.26\",\n                        algorithmParams: new asn1js.Null()\n                    })).toSchema()\n                });\n            case SALT_LENGTH:\n                return 20;\n            case TRAILER_FIELD:\n                return 1;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    optional: true,\n                    value: [AlgorithmIdentifier.schema(names.hashAlgorithm || {})]\n                }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    optional: true,\n                    value: [AlgorithmIdentifier.schema(names.maskGenAlgorithm || {})]\n                }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 2\n                    },\n                    optional: true,\n                    value: [new asn1js.Integer({ name: (names.saltLength || EMPTY_STRING) })]\n                }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 3\n                    },\n                    optional: true,\n                    value: [new asn1js.Integer({ name: (names.trailerField || EMPTY_STRING) })]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$14);\n        const asn1 = asn1js.compareSchema(schema, schema, RSASSAPSSParams.schema({\n            names: {\n                hashAlgorithm: {\n                    names: {\n                        blockName: HASH_ALGORITHM$4\n                    }\n                },\n                maskGenAlgorithm: {\n                    names: {\n                        blockName: MASK_GEN_ALGORITHM$1\n                    }\n                },\n                saltLength: SALT_LENGTH,\n                trailerField: TRAILER_FIELD\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (HASH_ALGORITHM$4 in asn1.result)\n            this.hashAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.hashAlgorithm });\n        if (MASK_GEN_ALGORITHM$1 in asn1.result)\n            this.maskGenAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.maskGenAlgorithm });\n        if (SALT_LENGTH in asn1.result)\n            this.saltLength = asn1.result.saltLength.valueBlock.valueDec;\n        if (TRAILER_FIELD in asn1.result)\n            this.trailerField = asn1.result.trailerField.valueBlock.valueDec;\n    }\n    toSchema() {\n        const outputArray = [];\n        if (!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(HASH_ALGORITHM$4))) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [this.hashAlgorithm.toSchema()]\n            }));\n        }\n        if (!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(MASK_GEN_ALGORITHM$1))) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                value: [this.maskGenAlgorithm.toSchema()]\n            }));\n        }\n        if (this.saltLength !== RSASSAPSSParams.defaultValues(SALT_LENGTH)) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 2\n                },\n                value: [new asn1js.Integer({ value: this.saltLength })]\n            }));\n        }\n        if (this.trailerField !== RSASSAPSSParams.defaultValues(TRAILER_FIELD)) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 3\n                },\n                value: [new asn1js.Integer({ value: this.trailerField })]\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {};\n        if (!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(HASH_ALGORITHM$4))) {\n            res.hashAlgorithm = this.hashAlgorithm.toJSON();\n        }\n        if (!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(MASK_GEN_ALGORITHM$1))) {\n            res.maskGenAlgorithm = this.maskGenAlgorithm.toJSON();\n        }\n        if (this.saltLength !== RSASSAPSSParams.defaultValues(SALT_LENGTH)) {\n            res.saltLength = this.saltLength;\n        }\n        if (this.trailerField !== RSASSAPSSParams.defaultValues(TRAILER_FIELD)) {\n            res.trailerField = this.trailerField;\n        }\n        return res;\n    }\n}\nRSASSAPSSParams.CLASS_NAME = \"RSASSAPSSParams\";\n\nconst SALT = \"salt\";\nconst ITERATION_COUNT = \"iterationCount\";\nconst KEY_LENGTH = \"keyLength\";\nconst PRF = \"prf\";\nconst CLEAR_PROPS$13 = [\n    SALT,\n    ITERATION_COUNT,\n    KEY_LENGTH,\n    PRF\n];\nclass PBKDF2Params extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.salt = pvutils.getParametersValue(parameters, SALT, PBKDF2Params.defaultValues(SALT));\n        this.iterationCount = pvutils.getParametersValue(parameters, ITERATION_COUNT, PBKDF2Params.defaultValues(ITERATION_COUNT));\n        if (KEY_LENGTH in parameters) {\n            this.keyLength = pvutils.getParametersValue(parameters, KEY_LENGTH, PBKDF2Params.defaultValues(KEY_LENGTH));\n        }\n        if (PRF in parameters) {\n            this.prf = pvutils.getParametersValue(parameters, PRF, PBKDF2Params.defaultValues(PRF));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case SALT:\n                return {};\n            case ITERATION_COUNT:\n                return (-1);\n            case KEY_LENGTH:\n                return 0;\n            case PRF:\n                return new AlgorithmIdentifier({\n                    algorithmId: \"1.3.14.3.2.26\",\n                    algorithmParams: new asn1js.Null()\n                });\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Choice({\n                    value: [\n                        new asn1js.OctetString({ name: (names.saltPrimitive || EMPTY_STRING) }),\n                        AlgorithmIdentifier.schema(names.saltConstructed || {})\n                    ]\n                }),\n                new asn1js.Integer({ name: (names.iterationCount || EMPTY_STRING) }),\n                new asn1js.Integer({\n                    name: (names.keyLength || EMPTY_STRING),\n                    optional: true\n                }),\n                AlgorithmIdentifier.schema(names.prf || {\n                    names: {\n                        optional: true\n                    }\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$13);\n        const asn1 = asn1js.compareSchema(schema, schema, PBKDF2Params.schema({\n            names: {\n                saltPrimitive: SALT,\n                saltConstructed: {\n                    names: {\n                        blockName: SALT\n                    }\n                },\n                iterationCount: ITERATION_COUNT,\n                keyLength: KEY_LENGTH,\n                prf: {\n                    names: {\n                        blockName: PRF,\n                        optional: true\n                    }\n                }\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.salt = asn1.result.salt;\n        this.iterationCount = asn1.result.iterationCount.valueBlock.valueDec;\n        if (KEY_LENGTH in asn1.result)\n            this.keyLength = asn1.result.keyLength.valueBlock.valueDec;\n        if (PRF in asn1.result)\n            this.prf = new AlgorithmIdentifier({ schema: asn1.result.prf });\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(this.salt);\n        outputArray.push(new asn1js.Integer({ value: this.iterationCount }));\n        if (KEY_LENGTH in this) {\n            if (PBKDF2Params.defaultValues(KEY_LENGTH) !== this.keyLength)\n                outputArray.push(new asn1js.Integer({ value: this.keyLength }));\n        }\n        if (this.prf) {\n            if (PBKDF2Params.defaultValues(PRF).isEqual(this.prf) === false)\n                outputArray.push(this.prf.toSchema());\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            salt: this.salt.toJSON(),\n            iterationCount: this.iterationCount\n        };\n        if (KEY_LENGTH in this) {\n            if (PBKDF2Params.defaultValues(KEY_LENGTH) !== this.keyLength)\n                res.keyLength = this.keyLength;\n        }\n        if (this.prf) {\n            if (PBKDF2Params.defaultValues(PRF).isEqual(this.prf) === false)\n                res.prf = this.prf.toJSON();\n        }\n        return res;\n    }\n}\nPBKDF2Params.CLASS_NAME = \"PBKDF2Params\";\n\nconst KEY_DERIVATION_FUNC = \"keyDerivationFunc\";\nconst ENCRYPTION_SCHEME = \"encryptionScheme\";\nconst CLEAR_PROPS$12 = [\n    KEY_DERIVATION_FUNC,\n    ENCRYPTION_SCHEME\n];\nclass PBES2Params extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.keyDerivationFunc = pvutils.getParametersValue(parameters, KEY_DERIVATION_FUNC, PBES2Params.defaultValues(KEY_DERIVATION_FUNC));\n        this.encryptionScheme = pvutils.getParametersValue(parameters, ENCRYPTION_SCHEME, PBES2Params.defaultValues(ENCRYPTION_SCHEME));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case KEY_DERIVATION_FUNC:\n                return new AlgorithmIdentifier();\n            case ENCRYPTION_SCHEME:\n                return new AlgorithmIdentifier();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                AlgorithmIdentifier.schema(names.keyDerivationFunc || {}),\n                AlgorithmIdentifier.schema(names.encryptionScheme || {})\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$12);\n        const asn1 = asn1js.compareSchema(schema, schema, PBES2Params.schema({\n            names: {\n                keyDerivationFunc: {\n                    names: {\n                        blockName: KEY_DERIVATION_FUNC\n                    }\n                },\n                encryptionScheme: {\n                    names: {\n                        blockName: ENCRYPTION_SCHEME\n                    }\n                }\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.keyDerivationFunc = new AlgorithmIdentifier({ schema: asn1.result.keyDerivationFunc });\n        this.encryptionScheme = new AlgorithmIdentifier({ schema: asn1.result.encryptionScheme });\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                this.keyDerivationFunc.toSchema(),\n                this.encryptionScheme.toSchema()\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            keyDerivationFunc: this.keyDerivationFunc.toJSON(),\n            encryptionScheme: this.encryptionScheme.toJSON()\n        };\n    }\n}\nPBES2Params.CLASS_NAME = \"PBES2Params\";\n\nclass AbstractCryptoEngine {\n    constructor(parameters) {\n        this.crypto = parameters.crypto;\n        this.subtle = \"webkitSubtle\" in parameters.crypto\n            ? parameters.crypto.webkitSubtle\n            : parameters.crypto.subtle;\n        this.name = pvutils.getParametersValue(parameters, \"name\", EMPTY_STRING);\n    }\n    async encrypt(...args) {\n        return this.subtle.encrypt(...args);\n    }\n    async decrypt(...args) {\n        return this.subtle.decrypt(...args);\n    }\n    sign(...args) {\n        return this.subtle.sign(...args);\n    }\n    async verify(...args) {\n        return this.subtle.verify(...args);\n    }\n    async digest(...args) {\n        return this.subtle.digest(...args);\n    }\n    async generateKey(...args) {\n        return this.subtle.generateKey(...args);\n    }\n    async deriveKey(...args) {\n        return this.subtle.deriveKey(...args);\n    }\n    async deriveBits(...args) {\n        return this.subtle.deriveBits(...args);\n    }\n    async wrapKey(...args) {\n        return this.subtle.wrapKey(...args);\n    }\n    async unwrapKey(...args) {\n        return this.subtle.unwrapKey(...args);\n    }\n    exportKey(...args) {\n        return this.subtle.exportKey(...args);\n    }\n    importKey(...args) {\n        return this.subtle.importKey(...args);\n    }\n    getRandomValues(array) {\n        return this.crypto.getRandomValues(array);\n    }\n}\n\nasync function makePKCS12B2Key(hashAlgorithm, keyLength, password, salt, iterationCount) {\n    let u;\n    let v;\n    let md;\n    switch (hashAlgorithm.toUpperCase()) {\n        case \"SHA-1\":\n            u = 20;\n            v = 64;\n            md = sha1;\n            break;\n        case \"SHA-256\":\n            u = 32;\n            v = 64;\n            md = sha256;\n            break;\n        case \"SHA-384\":\n            u = 48;\n            v = 128;\n            md = sha384;\n            break;\n        case \"SHA-512\":\n            u = 64;\n            v = 128;\n            md = sha512;\n            break;\n        default:\n            throw new Error(\"Unsupported hashing algorithm\");\n    }\n    const originalPassword = new Uint8Array(password);\n    let decodedPassword = new TextDecoder().decode(password);\n    const encodedPassword = new TextEncoder().encode(decodedPassword);\n    if (encodedPassword.some((byte, i) => byte !== originalPassword[i])) {\n        decodedPassword = String.fromCharCode(...originalPassword);\n    }\n    const passwordTransformed = new Uint8Array(decodedPassword.length * 2 + 2);\n    const passwordView = new DataView(passwordTransformed.buffer);\n    for (let i = 0; i < decodedPassword.length; i++) {\n        passwordView.setUint16(i * 2, decodedPassword.charCodeAt(i), false);\n    }\n    passwordView.setUint16(decodedPassword.length * 2, 0, false);\n    const D = new Uint8Array(v).fill(3);\n    const saltView = new Uint8Array(salt);\n    const S = new Uint8Array(v * Math.ceil(saltView.length / v)).map((_, i) => saltView[i % saltView.length]);\n    const P = new Uint8Array(v * Math.ceil(passwordTransformed.length / v)).map((_, i) => passwordTransformed[i % passwordTransformed.length]);\n    let I = new Uint8Array(S.length + P.length);\n    I.set(S);\n    I.set(P, S.length);\n    const c = Math.ceil((keyLength >> 3) / u);\n    const result = [];\n    for (let i = 0; i < c; i++) {\n        let A = new Uint8Array(D.length + I.length);\n        A.set(D);\n        A.set(I, D.length);\n        for (let j = 0; j < iterationCount; j++) {\n            A = md(A);\n        }\n        const B = new Uint8Array(v).map((_, i) => A[i % A.length]);\n        const k = Math.ceil(saltView.length / v) + Math.ceil(passwordTransformed.length / v);\n        const iRound = [];\n        for (let j = 0; j < k; j++) {\n            const chunk = Array.from(I.slice(j * v, (j + 1) * v));\n            let x = 0x1ff;\n            for (let l = B.length - 1; l >= 0; l--) {\n                x >>= 8;\n                x += B[l] + (chunk[l] || 0);\n                chunk[l] = x & 0xff;\n            }\n            iRound.push(...chunk);\n        }\n        I = new Uint8Array(iRound);\n        result.push(...A);\n    }\n    return new Uint8Array(result.slice(0, keyLength >> 3)).buffer;\n}\nfunction prepareAlgorithm(data) {\n    const res = typeof data === \"string\"\n        ? { name: data }\n        : data;\n    if (\"hash\" in res) {\n        return {\n            ...res,\n            hash: prepareAlgorithm(res.hash)\n        };\n    }\n    return res;\n}\nclass CryptoEngine extends AbstractCryptoEngine {\n    async importKey(format, keyData, algorithm, extractable, keyUsages) {\n        var _a, _b, _c, _d, _e, _f;\n        let jwk = {};\n        const alg = prepareAlgorithm(algorithm);\n        switch (format.toLowerCase()) {\n            case \"raw\":\n                return this.subtle.importKey(\"raw\", keyData, algorithm, extractable, keyUsages);\n            case \"spki\":\n                {\n                    const asn1 = asn1js.fromBER(pvtsutils.BufferSourceConverter.toArrayBuffer(keyData));\n                    AsnError.assert(asn1, \"keyData\");\n                    const publicKeyInfo = new PublicKeyInfo();\n                    try {\n                        publicKeyInfo.fromSchema(asn1.result);\n                    }\n                    catch {\n                        throw new ArgumentError(\"Incorrect keyData\");\n                    }\n                    switch (alg.name.toUpperCase()) {\n                        case \"RSA-PSS\":\n                            {\n                                if (!alg.hash) {\n                                    throw new ParameterError(\"hash\", \"algorithm.hash\", \"Incorrect hash algorithm: Hash algorithm is missed\");\n                                }\n                                switch (alg.hash.name.toUpperCase()) {\n                                    case \"SHA-1\":\n                                        jwk.alg = \"PS1\";\n                                        break;\n                                    case \"SHA-256\":\n                                        jwk.alg = \"PS256\";\n                                        break;\n                                    case \"SHA-384\":\n                                        jwk.alg = \"PS384\";\n                                        break;\n                                    case \"SHA-512\":\n                                        jwk.alg = \"PS512\";\n                                        break;\n                                    default:\n                                        throw new Error(`Incorrect hash algorithm: ${alg.hash.name.toUpperCase()}`);\n                                }\n                            }\n                        case \"RSASSA-PKCS1-V1_5\":\n                            {\n                                keyUsages = [\"verify\"];\n                                jwk.kty = \"RSA\";\n                                jwk.ext = extractable;\n                                jwk.key_ops = keyUsages;\n                                if (publicKeyInfo.algorithm.algorithmId !== \"1.2.840.113549.1.1.1\")\n                                    throw new Error(`Incorrect public key algorithm: ${publicKeyInfo.algorithm.algorithmId}`);\n                                if (!jwk.alg) {\n                                    if (!alg.hash) {\n                                        throw new ParameterError(\"hash\", \"algorithm.hash\", \"Incorrect hash algorithm: Hash algorithm is missed\");\n                                    }\n                                    switch (alg.hash.name.toUpperCase()) {\n                                        case \"SHA-1\":\n                                            jwk.alg = \"RS1\";\n                                            break;\n                                        case \"SHA-256\":\n                                            jwk.alg = \"RS256\";\n                                            break;\n                                        case \"SHA-384\":\n                                            jwk.alg = \"RS384\";\n                                            break;\n                                        case \"SHA-512\":\n                                            jwk.alg = \"RS512\";\n                                            break;\n                                        default:\n                                            throw new Error(`Incorrect hash algorithm: ${alg.hash.name.toUpperCase()}`);\n                                    }\n                                }\n                                const publicKeyJSON = publicKeyInfo.toJSON();\n                                Object.assign(jwk, publicKeyJSON);\n                            }\n                            break;\n                        case \"ECDSA\":\n                            keyUsages = [\"verify\"];\n                        case \"ECDH\":\n                            {\n                                jwk = {\n                                    kty: \"EC\",\n                                    ext: extractable,\n                                    key_ops: keyUsages\n                                };\n                                if (publicKeyInfo.algorithm.algorithmId !== \"1.2.840.10045.2.1\") {\n                                    throw new Error(`Incorrect public key algorithm: ${publicKeyInfo.algorithm.algorithmId}`);\n                                }\n                                const publicKeyJSON = publicKeyInfo.toJSON();\n                                Object.assign(jwk, publicKeyJSON);\n                            }\n                            break;\n                        case \"RSA-OAEP\":\n                            {\n                                jwk.kty = \"RSA\";\n                                jwk.ext = extractable;\n                                jwk.key_ops = keyUsages;\n                                if (this.name.toLowerCase() === \"safari\")\n                                    jwk.alg = \"RSA-OAEP\";\n                                else {\n                                    if (!alg.hash) {\n                                        throw new ParameterError(\"hash\", \"algorithm.hash\", \"Incorrect hash algorithm: Hash algorithm is missed\");\n                                    }\n                                    switch (alg.hash.name.toUpperCase()) {\n                                        case \"SHA-1\":\n                                            jwk.alg = \"RSA-OAEP\";\n                                            break;\n                                        case \"SHA-256\":\n                                            jwk.alg = \"RSA-OAEP-256\";\n                                            break;\n                                        case \"SHA-384\":\n                                            jwk.alg = \"RSA-OAEP-384\";\n                                            break;\n                                        case \"SHA-512\":\n                                            jwk.alg = \"RSA-OAEP-512\";\n                                            break;\n                                        default:\n                                            throw new Error(`Incorrect hash algorithm: ${alg.hash.name.toUpperCase()}`);\n                                    }\n                                }\n                                const publicKeyJSON = publicKeyInfo.toJSON();\n                                Object.assign(jwk, publicKeyJSON);\n                            }\n                            break;\n                        case \"RSAES-PKCS1-V1_5\":\n                            {\n                                jwk.kty = \"RSA\";\n                                jwk.ext = extractable;\n                                jwk.key_ops = keyUsages;\n                                jwk.alg = \"PS1\";\n                                const publicKeyJSON = publicKeyInfo.toJSON();\n                                Object.assign(jwk, publicKeyJSON);\n                            }\n                            break;\n                        default:\n                            throw new Error(`Incorrect algorithm name: ${alg.name.toUpperCase()}`);\n                    }\n                }\n                break;\n            case \"pkcs8\":\n                {\n                    const privateKeyInfo = new PrivateKeyInfo();\n                    const asn1 = asn1js.fromBER(pvtsutils.BufferSourceConverter.toArrayBuffer(keyData));\n                    AsnError.assert(asn1, \"keyData\");\n                    try {\n                        privateKeyInfo.fromSchema(asn1.result);\n                    }\n                    catch (ex) {\n                        throw new Error(\"Incorrect keyData\");\n                    }\n                    if (!privateKeyInfo.parsedKey)\n                        throw new Error(\"Incorrect keyData\");\n                    switch (alg.name.toUpperCase()) {\n                        case \"RSA-PSS\":\n                            {\n                                switch ((_a = alg.hash) === null || _a === void 0 ? void 0 : _a.name.toUpperCase()) {\n                                    case \"SHA-1\":\n                                        jwk.alg = \"PS1\";\n                                        break;\n                                    case \"SHA-256\":\n                                        jwk.alg = \"PS256\";\n                                        break;\n                                    case \"SHA-384\":\n                                        jwk.alg = \"PS384\";\n                                        break;\n                                    case \"SHA-512\":\n                                        jwk.alg = \"PS512\";\n                                        break;\n                                    default:\n                                        throw new Error(`Incorrect hash algorithm: ${(_b = alg.hash) === null || _b === void 0 ? void 0 : _b.name.toUpperCase()}`);\n                                }\n                            }\n                        case \"RSASSA-PKCS1-V1_5\":\n                            {\n                                keyUsages = [\"sign\"];\n                                jwk.kty = \"RSA\";\n                                jwk.ext = extractable;\n                                jwk.key_ops = keyUsages;\n                                if (privateKeyInfo.privateKeyAlgorithm.algorithmId !== \"1.2.840.113549.1.1.1\")\n                                    throw new Error(`Incorrect private key algorithm: ${privateKeyInfo.privateKeyAlgorithm.algorithmId}`);\n                                if ((\"alg\" in jwk) === false) {\n                                    switch ((_c = alg.hash) === null || _c === void 0 ? void 0 : _c.name.toUpperCase()) {\n                                        case \"SHA-1\":\n                                            jwk.alg = \"RS1\";\n                                            break;\n                                        case \"SHA-256\":\n                                            jwk.alg = \"RS256\";\n                                            break;\n                                        case \"SHA-384\":\n                                            jwk.alg = \"RS384\";\n                                            break;\n                                        case \"SHA-512\":\n                                            jwk.alg = \"RS512\";\n                                            break;\n                                        default:\n                                            throw new Error(`Incorrect hash algorithm: ${(_d = alg.hash) === null || _d === void 0 ? void 0 : _d.name.toUpperCase()}`);\n                                    }\n                                }\n                                const privateKeyJSON = privateKeyInfo.toJSON();\n                                Object.assign(jwk, privateKeyJSON);\n                            }\n                            break;\n                        case \"ECDSA\":\n                            keyUsages = [\"sign\"];\n                        case \"ECDH\":\n                            {\n                                jwk = {\n                                    kty: \"EC\",\n                                    ext: extractable,\n                                    key_ops: keyUsages\n                                };\n                                if (privateKeyInfo.privateKeyAlgorithm.algorithmId !== \"1.2.840.10045.2.1\")\n                                    throw new Error(`Incorrect algorithm: ${privateKeyInfo.privateKeyAlgorithm.algorithmId}`);\n                                const privateKeyJSON = privateKeyInfo.toJSON();\n                                Object.assign(jwk, privateKeyJSON);\n                            }\n                            break;\n                        case \"RSA-OAEP\":\n                            {\n                                jwk.kty = \"RSA\";\n                                jwk.ext = extractable;\n                                jwk.key_ops = keyUsages;\n                                if (this.name.toLowerCase() === \"safari\")\n                                    jwk.alg = \"RSA-OAEP\";\n                                else {\n                                    switch ((_e = alg.hash) === null || _e === void 0 ? void 0 : _e.name.toUpperCase()) {\n                                        case \"SHA-1\":\n                                            jwk.alg = \"RSA-OAEP\";\n                                            break;\n                                        case \"SHA-256\":\n                                            jwk.alg = \"RSA-OAEP-256\";\n                                            break;\n                                        case \"SHA-384\":\n                                            jwk.alg = \"RSA-OAEP-384\";\n                                            break;\n                                        case \"SHA-512\":\n                                            jwk.alg = \"RSA-OAEP-512\";\n                                            break;\n                                        default:\n                                            throw new Error(`Incorrect hash algorithm: ${(_f = alg.hash) === null || _f === void 0 ? void 0 : _f.name.toUpperCase()}`);\n                                    }\n                                }\n                                const privateKeyJSON = privateKeyInfo.toJSON();\n                                Object.assign(jwk, privateKeyJSON);\n                            }\n                            break;\n                        case \"RSAES-PKCS1-V1_5\":\n                            {\n                                keyUsages = [\"decrypt\"];\n                                jwk.kty = \"RSA\";\n                                jwk.ext = extractable;\n                                jwk.key_ops = keyUsages;\n                                jwk.alg = \"PS1\";\n                                const privateKeyJSON = privateKeyInfo.toJSON();\n                                Object.assign(jwk, privateKeyJSON);\n                            }\n                            break;\n                        default:\n                            throw new Error(`Incorrect algorithm name: ${alg.name.toUpperCase()}`);\n                    }\n                }\n                break;\n            case \"jwk\":\n                jwk = keyData;\n                break;\n            default:\n                throw new Error(`Incorrect format: ${format}`);\n        }\n        if (this.name.toLowerCase() === \"safari\") {\n            try {\n                return this.subtle.importKey(\"jwk\", pvutils.stringToArrayBuffer(JSON.stringify(jwk)), algorithm, extractable, keyUsages);\n            }\n            catch {\n                return this.subtle.importKey(\"jwk\", jwk, algorithm, extractable, keyUsages);\n            }\n        }\n        return this.subtle.importKey(\"jwk\", jwk, algorithm, extractable, keyUsages);\n    }\n    async exportKey(format, key) {\n        let jwk = await this.subtle.exportKey(\"jwk\", key);\n        if (this.name.toLowerCase() === \"safari\") {\n            if (jwk instanceof ArrayBuffer) {\n                jwk = JSON.parse(pvutils.arrayBufferToString(jwk));\n            }\n        }\n        switch (format.toLowerCase()) {\n            case \"raw\":\n                return this.subtle.exportKey(\"raw\", key);\n            case \"spki\": {\n                const publicKeyInfo = new PublicKeyInfo();\n                try {\n                    publicKeyInfo.fromJSON(jwk);\n                }\n                catch (ex) {\n                    throw new Error(\"Incorrect key data\");\n                }\n                return publicKeyInfo.toSchema().toBER(false);\n            }\n            case \"pkcs8\": {\n                const privateKeyInfo = new PrivateKeyInfo();\n                try {\n                    privateKeyInfo.fromJSON(jwk);\n                }\n                catch (ex) {\n                    throw new Error(\"Incorrect key data\");\n                }\n                return privateKeyInfo.toSchema().toBER(false);\n            }\n            case \"jwk\":\n                return jwk;\n            default:\n                throw new Error(`Incorrect format: ${format}`);\n        }\n    }\n    async convert(inputFormat, outputFormat, keyData, algorithm, extractable, keyUsages) {\n        if (inputFormat.toLowerCase() === outputFormat.toLowerCase()) {\n            return keyData;\n        }\n        const key = await this.importKey(inputFormat, keyData, algorithm, extractable, keyUsages);\n        return this.exportKey(outputFormat, key);\n    }\n    getAlgorithmByOID(oid, safety = false, target) {\n        switch (oid) {\n            case \"1.2.840.113549.1.1.1\":\n                return {\n                    name: \"RSAES-PKCS1-v1_5\"\n                };\n            case \"1.2.840.113549.1.1.5\":\n                return {\n                    name: \"RSASSA-PKCS1-v1_5\",\n                    hash: {\n                        name: \"SHA-1\"\n                    }\n                };\n            case \"1.2.840.113549.1.1.11\":\n                return {\n                    name: \"RSASSA-PKCS1-v1_5\",\n                    hash: {\n                        name: \"SHA-256\"\n                    }\n                };\n            case \"1.2.840.113549.1.1.12\":\n                return {\n                    name: \"RSASSA-PKCS1-v1_5\",\n                    hash: {\n                        name: \"SHA-384\"\n                    }\n                };\n            case \"1.2.840.113549.1.1.13\":\n                return {\n                    name: \"RSASSA-PKCS1-v1_5\",\n                    hash: {\n                        name: \"SHA-512\"\n                    }\n                };\n            case \"1.2.840.113549.1.1.10\":\n                return {\n                    name: \"RSA-PSS\"\n                };\n            case \"1.2.840.113549.1.1.7\":\n                return {\n                    name: \"RSA-OAEP\"\n                };\n            case \"1.2.840.10045.2.1\":\n            case \"1.2.840.10045.4.1\":\n                return {\n                    name: \"ECDSA\",\n                    hash: {\n                        name: \"SHA-1\"\n                    }\n                };\n            case \"1.2.840.10045.4.3.2\":\n                return {\n                    name: \"ECDSA\",\n                    hash: {\n                        name: \"SHA-256\"\n                    }\n                };\n            case \"1.2.840.10045.4.3.3\":\n                return {\n                    name: \"ECDSA\",\n                    hash: {\n                        name: \"SHA-384\"\n                    }\n                };\n            case \"1.2.840.10045.4.3.4\":\n                return {\n                    name: \"ECDSA\",\n                    hash: {\n                        name: \"SHA-512\"\n                    }\n                };\n            case \"1.3.133.16.840.63.0.2\":\n                return {\n                    name: \"ECDH\",\n                    kdf: \"SHA-1\"\n                };\n            case \"1.3.132.1.11.1\":\n                return {\n                    name: \"ECDH\",\n                    kdf: \"SHA-256\"\n                };\n            case \"1.3.132.1.11.2\":\n                return {\n                    name: \"ECDH\",\n                    kdf: \"SHA-384\"\n                };\n            case \"1.3.132.1.11.3\":\n                return {\n                    name: \"ECDH\",\n                    kdf: \"SHA-512\"\n                };\n            case \"2.16.840.1.101.3.4.1.2\":\n                return {\n                    name: \"AES-CBC\",\n                    length: 128\n                };\n            case \"2.16.840.1.101.3.4.1.22\":\n                return {\n                    name: \"AES-CBC\",\n                    length: 192\n                };\n            case \"2.16.840.1.101.3.4.1.42\":\n                return {\n                    name: \"AES-CBC\",\n                    length: 256\n                };\n            case \"2.16.840.1.101.3.4.1.6\":\n                return {\n                    name: \"AES-GCM\",\n                    length: 128\n                };\n            case \"2.16.840.1.101.3.4.1.26\":\n                return {\n                    name: \"AES-GCM\",\n                    length: 192\n                };\n            case \"2.16.840.1.101.3.4.1.46\":\n                return {\n                    name: \"AES-GCM\",\n                    length: 256\n                };\n            case \"2.16.840.1.101.3.4.1.4\":\n                return {\n                    name: \"AES-CFB\",\n                    length: 128\n                };\n            case \"2.16.840.1.101.3.4.1.24\":\n                return {\n                    name: \"AES-CFB\",\n                    length: 192\n                };\n            case \"2.16.840.1.101.3.4.1.44\":\n                return {\n                    name: \"AES-CFB\",\n                    length: 256\n                };\n            case \"2.16.840.1.101.3.4.1.5\":\n                return {\n                    name: \"AES-KW\",\n                    length: 128\n                };\n            case \"2.16.840.1.101.3.4.1.25\":\n                return {\n                    name: \"AES-KW\",\n                    length: 192\n                };\n            case \"2.16.840.1.101.3.4.1.45\":\n                return {\n                    name: \"AES-KW\",\n                    length: 256\n                };\n            case \"1.2.840.113549.2.7\":\n                return {\n                    name: \"HMAC\",\n                    hash: {\n                        name: \"SHA-1\"\n                    }\n                };\n            case \"1.2.840.113549.2.9\":\n                return {\n                    name: \"HMAC\",\n                    hash: {\n                        name: \"SHA-256\"\n                    }\n                };\n            case \"1.2.840.113549.2.10\":\n                return {\n                    name: \"HMAC\",\n                    hash: {\n                        name: \"SHA-384\"\n                    }\n                };\n            case \"1.2.840.113549.2.11\":\n                return {\n                    name: \"HMAC\",\n                    hash: {\n                        name: \"SHA-512\"\n                    }\n                };\n            case \"1.2.840.113549.1.9.16.3.5\":\n                return {\n                    name: \"DH\"\n                };\n            case \"1.3.14.3.2.26\":\n                return {\n                    name: \"SHA-1\"\n                };\n            case \"2.16.840.1.101.3.4.2.1\":\n                return {\n                    name: \"SHA-256\"\n                };\n            case \"2.16.840.1.101.3.4.2.2\":\n                return {\n                    name: \"SHA-384\"\n                };\n            case \"2.16.840.1.101.3.4.2.3\":\n                return {\n                    name: \"SHA-512\"\n                };\n            case \"1.2.840.113549.1.5.12\":\n                return {\n                    name: \"PBKDF2\"\n                };\n            case \"1.2.840.10045.3.1.7\":\n                return {\n                    name: \"P-256\"\n                };\n            case \"1.3.132.0.34\":\n                return {\n                    name: \"P-384\"\n                };\n            case \"1.3.132.0.35\":\n                return {\n                    name: \"P-521\"\n                };\n        }\n        if (safety) {\n            throw new Error(`Unsupported algorithm identifier ${target ? `for ${target} ` : EMPTY_STRING}: ${oid}`);\n        }\n        return {};\n    }\n    getOIDByAlgorithm(algorithm, safety = false, target) {\n        let result = EMPTY_STRING;\n        switch (algorithm.name.toUpperCase()) {\n            case \"RSAES-PKCS1-V1_5\":\n                result = \"1.2.840.113549.1.1.1\";\n                break;\n            case \"RSASSA-PKCS1-V1_5\":\n                switch (algorithm.hash.name.toUpperCase()) {\n                    case \"SHA-1\":\n                        result = \"1.2.840.113549.1.1.5\";\n                        break;\n                    case \"SHA-256\":\n                        result = \"1.2.840.113549.1.1.11\";\n                        break;\n                    case \"SHA-384\":\n                        result = \"1.2.840.113549.1.1.12\";\n                        break;\n                    case \"SHA-512\":\n                        result = \"1.2.840.113549.1.1.13\";\n                        break;\n                }\n                break;\n            case \"RSA-PSS\":\n                result = \"1.2.840.113549.1.1.10\";\n                break;\n            case \"RSA-OAEP\":\n                result = \"1.2.840.113549.1.1.7\";\n                break;\n            case \"ECDSA\":\n                switch (algorithm.hash.name.toUpperCase()) {\n                    case \"SHA-1\":\n                        result = \"1.2.840.10045.4.1\";\n                        break;\n                    case \"SHA-256\":\n                        result = \"1.2.840.10045.4.3.2\";\n                        break;\n                    case \"SHA-384\":\n                        result = \"1.2.840.10045.4.3.3\";\n                        break;\n                    case \"SHA-512\":\n                        result = \"1.2.840.10045.4.3.4\";\n                        break;\n                }\n                break;\n            case \"ECDH\":\n                switch (algorithm.kdf.toUpperCase()) {\n                    case \"SHA-1\":\n                        result = \"1.3.133.16.840.63.0.2\";\n                        break;\n                    case \"SHA-256\":\n                        result = \"1.3.132.1.11.1\";\n                        break;\n                    case \"SHA-384\":\n                        result = \"1.3.132.1.11.2\";\n                        break;\n                    case \"SHA-512\":\n                        result = \"1.3.132.1.11.3\";\n                        break;\n                }\n                break;\n            case \"AES-CTR\":\n                break;\n            case \"AES-CBC\":\n                switch (algorithm.length) {\n                    case 128:\n                        result = \"2.16.840.1.101.3.4.1.2\";\n                        break;\n                    case 192:\n                        result = \"2.16.840.1.101.3.4.1.22\";\n                        break;\n                    case 256:\n                        result = \"2.16.840.1.101.3.4.1.42\";\n                        break;\n                }\n                break;\n            case \"AES-CMAC\":\n                break;\n            case \"AES-GCM\":\n                switch (algorithm.length) {\n                    case 128:\n                        result = \"2.16.840.1.101.3.4.1.6\";\n                        break;\n                    case 192:\n                        result = \"2.16.840.1.101.3.4.1.26\";\n                        break;\n                    case 256:\n                        result = \"2.16.840.1.101.3.4.1.46\";\n                        break;\n                }\n                break;\n            case \"AES-CFB\":\n                switch (algorithm.length) {\n                    case 128:\n                        result = \"2.16.840.1.101.3.4.1.4\";\n                        break;\n                    case 192:\n                        result = \"2.16.840.1.101.3.4.1.24\";\n                        break;\n                    case 256:\n                        result = \"2.16.840.1.101.3.4.1.44\";\n                        break;\n                }\n                break;\n            case \"AES-KW\":\n                switch (algorithm.length) {\n                    case 128:\n                        result = \"2.16.840.1.101.3.4.1.5\";\n                        break;\n                    case 192:\n                        result = \"2.16.840.1.101.3.4.1.25\";\n                        break;\n                    case 256:\n                        result = \"2.16.840.1.101.3.4.1.45\";\n                        break;\n                }\n                break;\n            case \"HMAC\":\n                switch (algorithm.hash.name.toUpperCase()) {\n                    case \"SHA-1\":\n                        result = \"1.2.840.113549.2.7\";\n                        break;\n                    case \"SHA-256\":\n                        result = \"1.2.840.113549.2.9\";\n                        break;\n                    case \"SHA-384\":\n                        result = \"1.2.840.113549.2.10\";\n                        break;\n                    case \"SHA-512\":\n                        result = \"1.2.840.113549.2.11\";\n                        break;\n                }\n                break;\n            case \"DH\":\n                result = \"1.2.840.113549.1.9.16.3.5\";\n                break;\n            case \"SHA-1\":\n                result = \"1.3.14.3.2.26\";\n                break;\n            case \"SHA-256\":\n                result = \"2.16.840.1.101.3.4.2.1\";\n                break;\n            case \"SHA-384\":\n                result = \"2.16.840.1.101.3.4.2.2\";\n                break;\n            case \"SHA-512\":\n                result = \"2.16.840.1.101.3.4.2.3\";\n                break;\n            case \"CONCAT\":\n                break;\n            case \"HKDF\":\n                break;\n            case \"PBKDF2\":\n                result = \"1.2.840.113549.1.5.12\";\n                break;\n            case \"P-256\":\n                result = \"1.2.840.10045.3.1.7\";\n                break;\n            case \"P-384\":\n                result = \"1.3.132.0.34\";\n                break;\n            case \"P-521\":\n                result = \"1.3.132.0.35\";\n                break;\n        }\n        if (!result && safety) {\n            throw new Error(`Unsupported algorithm ${target ? `for ${target} ` : EMPTY_STRING}: ${algorithm.name}`);\n        }\n        return result;\n    }\n    getAlgorithmParameters(algorithmName, operation) {\n        let result = {\n            algorithm: {},\n            usages: []\n        };\n        switch (algorithmName.toUpperCase()) {\n            case \"RSAES-PKCS1-V1_5\":\n            case \"RSASSA-PKCS1-V1_5\":\n                switch (operation.toLowerCase()) {\n                    case \"generatekey\":\n                        result = {\n                            algorithm: {\n                                name: \"RSASSA-PKCS1-v1_5\",\n                                modulusLength: 2048,\n                                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                                hash: {\n                                    name: \"SHA-256\"\n                                }\n                            },\n                            usages: [\"sign\", \"verify\"]\n                        };\n                        break;\n                    case \"verify\":\n                    case \"sign\":\n                    case \"importkey\":\n                        result = {\n                            algorithm: {\n                                name: \"RSASSA-PKCS1-v1_5\",\n                                hash: {\n                                    name: \"SHA-256\"\n                                }\n                            },\n                            usages: [\"verify\"]\n                        };\n                        break;\n                    case \"exportkey\":\n                    default:\n                        return {\n                            algorithm: {\n                                name: \"RSASSA-PKCS1-v1_5\"\n                            },\n                            usages: []\n                        };\n                }\n                break;\n            case \"RSA-PSS\":\n                switch (operation.toLowerCase()) {\n                    case \"sign\":\n                    case \"verify\":\n                        result = {\n                            algorithm: {\n                                name: \"RSA-PSS\",\n                                hash: {\n                                    name: \"SHA-1\"\n                                },\n                                saltLength: 20\n                            },\n                            usages: [\"sign\", \"verify\"]\n                        };\n                        break;\n                    case \"generatekey\":\n                        result = {\n                            algorithm: {\n                                name: \"RSA-PSS\",\n                                modulusLength: 2048,\n                                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                                hash: {\n                                    name: \"SHA-1\"\n                                }\n                            },\n                            usages: [\"sign\", \"verify\"]\n                        };\n                        break;\n                    case \"importkey\":\n                        result = {\n                            algorithm: {\n                                name: \"RSA-PSS\",\n                                hash: {\n                                    name: \"SHA-1\"\n                                }\n                            },\n                            usages: [\"verify\"]\n                        };\n                        break;\n                    case \"exportkey\":\n                    default:\n                        return {\n                            algorithm: {\n                                name: \"RSA-PSS\"\n                            },\n                            usages: []\n                        };\n                }\n                break;\n            case \"RSA-OAEP\":\n                switch (operation.toLowerCase()) {\n                    case \"encrypt\":\n                    case \"decrypt\":\n                        result = {\n                            algorithm: {\n                                name: \"RSA-OAEP\"\n                            },\n                            usages: [\"encrypt\", \"decrypt\"]\n                        };\n                        break;\n                    case \"generatekey\":\n                        result = {\n                            algorithm: {\n                                name: \"RSA-OAEP\",\n                                modulusLength: 2048,\n                                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                                hash: {\n                                    name: \"SHA-256\"\n                                }\n                            },\n                            usages: [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"]\n                        };\n                        break;\n                    case \"importkey\":\n                        result = {\n                            algorithm: {\n                                name: \"RSA-OAEP\",\n                                hash: {\n                                    name: \"SHA-256\"\n                                }\n                            },\n                            usages: [\"encrypt\"]\n                        };\n                        break;\n                    case \"exportkey\":\n                    default:\n                        return {\n                            algorithm: {\n                                name: \"RSA-OAEP\"\n                            },\n                            usages: []\n                        };\n                }\n                break;\n            case \"ECDSA\":\n                switch (operation.toLowerCase()) {\n                    case \"generatekey\":\n                        result = {\n                            algorithm: {\n                                name: \"ECDSA\",\n                                namedCurve: \"P-256\"\n                            },\n                            usages: [\"sign\", \"verify\"]\n                        };\n                        break;\n                    case \"importkey\":\n                        result = {\n                            algorithm: {\n                                name: \"ECDSA\",\n                                namedCurve: \"P-256\"\n                            },\n                            usages: [\"verify\"]\n                        };\n                        break;\n                    case \"verify\":\n                    case \"sign\":\n                        result = {\n                            algorithm: {\n                                name: \"ECDSA\",\n                                hash: {\n                                    name: \"SHA-256\"\n                                }\n                            },\n                            usages: [\"sign\"]\n                        };\n                        break;\n                    default:\n                        return {\n                            algorithm: {\n                                name: \"ECDSA\"\n                            },\n                            usages: []\n                        };\n                }\n                break;\n            case \"ECDH\":\n                switch (operation.toLowerCase()) {\n                    case \"exportkey\":\n                    case \"importkey\":\n                    case \"generatekey\":\n                        result = {\n                            algorithm: {\n                                name: \"ECDH\",\n                                namedCurve: \"P-256\"\n                            },\n                            usages: [\"deriveKey\", \"deriveBits\"]\n                        };\n                        break;\n                    case \"derivekey\":\n                    case \"derivebits\":\n                        result = {\n                            algorithm: {\n                                name: \"ECDH\",\n                                namedCurve: \"P-256\",\n                                public: []\n                            },\n                            usages: [\"encrypt\", \"decrypt\"]\n                        };\n                        break;\n                    default:\n                        return {\n                            algorithm: {\n                                name: \"ECDH\"\n                            },\n                            usages: []\n                        };\n                }\n                break;\n            case \"AES-CTR\":\n                switch (operation.toLowerCase()) {\n                    case \"importkey\":\n                    case \"exportkey\":\n                    case \"generatekey\":\n                        result = {\n                            algorithm: {\n                                name: \"AES-CTR\",\n                                length: 256\n                            },\n                            usages: [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"]\n                        };\n                        break;\n                    case \"decrypt\":\n                    case \"encrypt\":\n                        result = {\n                            algorithm: {\n                                name: \"AES-CTR\",\n                                counter: new Uint8Array(16),\n                                length: 10\n                            },\n                            usages: [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"]\n                        };\n                        break;\n                    default:\n                        return {\n                            algorithm: {\n                                name: \"AES-CTR\"\n                            },\n                            usages: []\n                        };\n                }\n                break;\n            case \"AES-CBC\":\n                switch (operation.toLowerCase()) {\n                    case \"importkey\":\n                    case \"exportkey\":\n                    case \"generatekey\":\n                        result = {\n                            algorithm: {\n                                name: \"AES-CBC\",\n                                length: 256\n                            },\n                            usages: [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"]\n                        };\n                        break;\n                    case \"decrypt\":\n                    case \"encrypt\":\n                        result = {\n                            algorithm: {\n                                name: \"AES-CBC\",\n                                iv: this.getRandomValues(new Uint8Array(16))\n                            },\n                            usages: [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"]\n                        };\n                        break;\n                    default:\n                        return {\n                            algorithm: {\n                                name: \"AES-CBC\"\n                            },\n                            usages: []\n                        };\n                }\n                break;\n            case \"AES-GCM\":\n                switch (operation.toLowerCase()) {\n                    case \"importkey\":\n                    case \"exportkey\":\n                    case \"generatekey\":\n                        result = {\n                            algorithm: {\n                                name: \"AES-GCM\",\n                                length: 256\n                            },\n                            usages: [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"]\n                        };\n                        break;\n                    case \"decrypt\":\n                    case \"encrypt\":\n                        result = {\n                            algorithm: {\n                                name: \"AES-GCM\",\n                                iv: this.getRandomValues(new Uint8Array(16))\n                            },\n                            usages: [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"]\n                        };\n                        break;\n                    default:\n                        return {\n                            algorithm: {\n                                name: \"AES-GCM\"\n                            },\n                            usages: []\n                        };\n                }\n                break;\n            case \"AES-KW\":\n                switch (operation.toLowerCase()) {\n                    case \"importkey\":\n                    case \"exportkey\":\n                    case \"generatekey\":\n                    case \"wrapkey\":\n                    case \"unwrapkey\":\n                        result = {\n                            algorithm: {\n                                name: \"AES-KW\",\n                                length: 256\n                            },\n                            usages: [\"wrapKey\", \"unwrapKey\"]\n                        };\n                        break;\n                    default:\n                        return {\n                            algorithm: {\n                                name: \"AES-KW\"\n                            },\n                            usages: []\n                        };\n                }\n                break;\n            case \"HMAC\":\n                switch (operation.toLowerCase()) {\n                    case \"sign\":\n                    case \"verify\":\n                        result = {\n                            algorithm: {\n                                name: \"HMAC\"\n                            },\n                            usages: [\"sign\", \"verify\"]\n                        };\n                        break;\n                    case \"importkey\":\n                    case \"exportkey\":\n                    case \"generatekey\":\n                        result = {\n                            algorithm: {\n                                name: \"HMAC\",\n                                length: 32,\n                                hash: {\n                                    name: \"SHA-256\"\n                                }\n                            },\n                            usages: [\"sign\", \"verify\"]\n                        };\n                        break;\n                    default:\n                        return {\n                            algorithm: {\n                                name: \"HMAC\"\n                            },\n                            usages: []\n                        };\n                }\n                break;\n            case \"HKDF\":\n                switch (operation.toLowerCase()) {\n                    case \"derivekey\":\n                        result = {\n                            algorithm: {\n                                name: \"HKDF\",\n                                hash: \"SHA-256\",\n                                salt: new Uint8Array([]),\n                                info: new Uint8Array([])\n                            },\n                            usages: [\"encrypt\", \"decrypt\"]\n                        };\n                        break;\n                    default:\n                        return {\n                            algorithm: {\n                                name: \"HKDF\"\n                            },\n                            usages: []\n                        };\n                }\n                break;\n            case \"PBKDF2\":\n                switch (operation.toLowerCase()) {\n                    case \"derivekey\":\n                        result = {\n                            algorithm: {\n                                name: \"PBKDF2\",\n                                hash: { name: \"SHA-256\" },\n                                salt: new Uint8Array([]),\n                                iterations: 10000\n                            },\n                            usages: [\"encrypt\", \"decrypt\"]\n                        };\n                        break;\n                    default:\n                        return {\n                            algorithm: {\n                                name: \"PBKDF2\"\n                            },\n                            usages: []\n                        };\n                }\n                break;\n        }\n        return result;\n    }\n    getHashAlgorithm(signatureAlgorithm) {\n        let result = EMPTY_STRING;\n        switch (signatureAlgorithm.algorithmId) {\n            case \"1.2.840.10045.4.1\":\n            case \"1.2.840.113549.1.1.5\":\n                result = \"SHA-1\";\n                break;\n            case \"1.2.840.10045.4.3.2\":\n            case \"1.2.840.113549.1.1.11\":\n                result = \"SHA-256\";\n                break;\n            case \"1.2.840.10045.4.3.3\":\n            case \"1.2.840.113549.1.1.12\":\n                result = \"SHA-384\";\n                break;\n            case \"1.2.840.10045.4.3.4\":\n            case \"1.2.840.113549.1.1.13\":\n                result = \"SHA-512\";\n                break;\n            case \"1.2.840.113549.1.1.10\":\n                {\n                    try {\n                        const params = new RSASSAPSSParams({ schema: signatureAlgorithm.algorithmParams });\n                        if (params.hashAlgorithm) {\n                            const algorithm = this.getAlgorithmByOID(params.hashAlgorithm.algorithmId);\n                            if (\"name\" in algorithm) {\n                                result = algorithm.name;\n                            }\n                            else {\n                                return EMPTY_STRING;\n                            }\n                        }\n                        else\n                            result = \"SHA-1\";\n                    }\n                    catch {\n                    }\n                }\n                break;\n        }\n        return result;\n    }\n    async encryptEncryptedContentInfo(parameters) {\n        ParameterError.assert(parameters, \"password\", \"contentEncryptionAlgorithm\", \"hmacHashAlgorithm\", \"iterationCount\", \"contentToEncrypt\", \"contentToEncrypt\", \"contentType\");\n        const contentEncryptionOID = this.getOIDByAlgorithm(parameters.contentEncryptionAlgorithm, true, \"contentEncryptionAlgorithm\");\n        const pbkdf2OID = this.getOIDByAlgorithm({\n            name: \"PBKDF2\"\n        }, true, \"PBKDF2\");\n        const hmacOID = this.getOIDByAlgorithm({\n            name: \"HMAC\",\n            hash: {\n                name: parameters.hmacHashAlgorithm\n            }\n        }, true, \"hmacHashAlgorithm\");\n        const ivBuffer = new ArrayBuffer(16);\n        const ivView = new Uint8Array(ivBuffer);\n        this.getRandomValues(ivView);\n        const saltBuffer = new ArrayBuffer(64);\n        const saltView = new Uint8Array(saltBuffer);\n        this.getRandomValues(saltView);\n        const contentView = new Uint8Array(parameters.contentToEncrypt);\n        const pbkdf2Params = new PBKDF2Params({\n            salt: new asn1js.OctetString({ valueHex: saltBuffer }),\n            iterationCount: parameters.iterationCount,\n            prf: new AlgorithmIdentifier({\n                algorithmId: hmacOID,\n                algorithmParams: new asn1js.Null()\n            })\n        });\n        const passwordView = new Uint8Array(parameters.password);\n        const pbkdfKey = await this.importKey(\"raw\", passwordView, \"PBKDF2\", false, [\"deriveKey\"]);\n        const derivedKey = await this.deriveKey({\n            name: \"PBKDF2\",\n            hash: {\n                name: parameters.hmacHashAlgorithm\n            },\n            salt: saltView,\n            iterations: parameters.iterationCount\n        }, pbkdfKey, parameters.contentEncryptionAlgorithm, false, [\"encrypt\"]);\n        const encryptedData = await this.encrypt({\n            name: parameters.contentEncryptionAlgorithm.name,\n            iv: ivView\n        }, derivedKey, contentView);\n        const pbes2Parameters = new PBES2Params({\n            keyDerivationFunc: new AlgorithmIdentifier({\n                algorithmId: pbkdf2OID,\n                algorithmParams: pbkdf2Params.toSchema()\n            }),\n            encryptionScheme: new AlgorithmIdentifier({\n                algorithmId: contentEncryptionOID,\n                algorithmParams: new asn1js.OctetString({ valueHex: ivBuffer })\n            })\n        });\n        return new EncryptedContentInfo({\n            contentType: parameters.contentType,\n            contentEncryptionAlgorithm: new AlgorithmIdentifier({\n                algorithmId: \"1.2.840.113549.1.5.13\",\n                algorithmParams: pbes2Parameters.toSchema()\n            }),\n            encryptedContent: new asn1js.OctetString({ valueHex: encryptedData })\n        });\n    }\n    async decryptEncryptedContentInfo(parameters) {\n        ParameterError.assert(parameters, \"password\", \"encryptedContentInfo\");\n        if (parameters.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId !== \"1.2.840.113549.1.5.13\")\n            throw new Error(`Unknown \"contentEncryptionAlgorithm\": ${parameters.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId}`);\n        let pbes2Parameters;\n        try {\n            pbes2Parameters = new PBES2Params({ schema: parameters.encryptedContentInfo.contentEncryptionAlgorithm.algorithmParams });\n        }\n        catch (ex) {\n            throw new Error(\"Incorrectly encoded \\\"pbes2Parameters\\\"\");\n        }\n        let pbkdf2Params;\n        try {\n            pbkdf2Params = new PBKDF2Params({ schema: pbes2Parameters.keyDerivationFunc.algorithmParams });\n        }\n        catch (ex) {\n            throw new Error(\"Incorrectly encoded \\\"pbkdf2Params\\\"\");\n        }\n        const contentEncryptionAlgorithm = this.getAlgorithmByOID(pbes2Parameters.encryptionScheme.algorithmId, true);\n        const ivBuffer = pbes2Parameters.encryptionScheme.algorithmParams.valueBlock.valueHex;\n        const ivView = new Uint8Array(ivBuffer);\n        const saltBuffer = pbkdf2Params.salt.valueBlock.valueHex;\n        const saltView = new Uint8Array(saltBuffer);\n        const iterationCount = pbkdf2Params.iterationCount;\n        let hmacHashAlgorithm = \"SHA-1\";\n        if (pbkdf2Params.prf) {\n            const algorithm = this.getAlgorithmByOID(pbkdf2Params.prf.algorithmId, true);\n            hmacHashAlgorithm = algorithm.hash.name;\n        }\n        const pbkdfKey = await this.importKey(\"raw\", parameters.password, \"PBKDF2\", false, [\"deriveKey\"]);\n        const result = await this.deriveKey({\n            name: \"PBKDF2\",\n            hash: {\n                name: hmacHashAlgorithm\n            },\n            salt: saltView,\n            iterations: iterationCount\n        }, pbkdfKey, contentEncryptionAlgorithm, false, [\"decrypt\"]);\n        const dataBuffer = parameters.encryptedContentInfo.getEncryptedContent();\n        return this.decrypt({\n            name: contentEncryptionAlgorithm.name,\n            iv: ivView\n        }, result, dataBuffer);\n    }\n    async stampDataWithPassword(parameters) {\n        if ((parameters instanceof Object) === false)\n            throw new Error(\"Parameters must have type \\\"Object\\\"\");\n        ParameterError.assert(parameters, \"password\", \"hashAlgorithm\", \"iterationCount\", \"salt\", \"contentToStamp\");\n        let length;\n        switch (parameters.hashAlgorithm.toLowerCase()) {\n            case \"sha-1\":\n                length = 160;\n                break;\n            case \"sha-256\":\n                length = 256;\n                break;\n            case \"sha-384\":\n                length = 384;\n                break;\n            case \"sha-512\":\n                length = 512;\n                break;\n            default:\n                throw new Error(`Incorrect \"parameters.hashAlgorithm\" parameter: ${parameters.hashAlgorithm}`);\n        }\n        const hmacAlgorithm = {\n            name: \"HMAC\",\n            length,\n            hash: {\n                name: parameters.hashAlgorithm\n            }\n        };\n        const pkcsKey = await makePKCS12B2Key(parameters.hashAlgorithm, length, parameters.password, parameters.salt, parameters.iterationCount);\n        const hmacKey = await this.importKey(\"raw\", new Uint8Array(pkcsKey), hmacAlgorithm, false, [\"sign\"]);\n        return this.sign(hmacAlgorithm, hmacKey, new Uint8Array(parameters.contentToStamp));\n    }\n    async verifyDataStampedWithPassword(parameters) {\n        ParameterError.assert(parameters, \"password\", \"hashAlgorithm\", \"salt\", \"iterationCount\", \"contentToVerify\", \"signatureToVerify\");\n        let length = 0;\n        switch (parameters.hashAlgorithm.toLowerCase()) {\n            case \"sha-1\":\n                length = 160;\n                break;\n            case \"sha-256\":\n                length = 256;\n                break;\n            case \"sha-384\":\n                length = 384;\n                break;\n            case \"sha-512\":\n                length = 512;\n                break;\n            default:\n                throw new Error(`Incorrect \"parameters.hashAlgorithm\" parameter: ${parameters.hashAlgorithm}`);\n        }\n        const hmacAlgorithm = {\n            name: \"HMAC\",\n            length,\n            hash: {\n                name: parameters.hashAlgorithm\n            }\n        };\n        const pkcsKey = await makePKCS12B2Key(parameters.hashAlgorithm, length, parameters.password, parameters.salt, parameters.iterationCount);\n        const hmacKey = await this.importKey(\"raw\", new Uint8Array(pkcsKey), hmacAlgorithm, false, [\"verify\"]);\n        return this.verify(hmacAlgorithm, hmacKey, new Uint8Array(parameters.signatureToVerify), new Uint8Array(parameters.contentToVerify));\n    }\n    async getSignatureParameters(privateKey, hashAlgorithm = \"SHA-1\") {\n        this.getOIDByAlgorithm({ name: hashAlgorithm }, true, \"hashAlgorithm\");\n        const signatureAlgorithm = new AlgorithmIdentifier();\n        const parameters = this.getAlgorithmParameters(privateKey.algorithm.name, \"sign\");\n        if (!Object.keys(parameters.algorithm).length) {\n            throw new Error(\"Parameter 'algorithm' is empty\");\n        }\n        const algorithm = parameters.algorithm;\n        if (\"hash\" in privateKey.algorithm && privateKey.algorithm.hash && privateKey.algorithm.hash.name) {\n            algorithm.hash.name = privateKey.algorithm.hash.name;\n        }\n        else {\n            algorithm.hash.name = hashAlgorithm;\n        }\n        switch (privateKey.algorithm.name.toUpperCase()) {\n            case \"RSASSA-PKCS1-V1_5\":\n            case \"ECDSA\":\n                signatureAlgorithm.algorithmId = this.getOIDByAlgorithm(algorithm, true);\n                break;\n            case \"RSA-PSS\":\n                {\n                    switch (algorithm.hash.name.toUpperCase()) {\n                        case \"SHA-256\":\n                            algorithm.saltLength = 32;\n                            break;\n                        case \"SHA-384\":\n                            algorithm.saltLength = 48;\n                            break;\n                        case \"SHA-512\":\n                            algorithm.saltLength = 64;\n                            break;\n                    }\n                    const paramsObject = {};\n                    if (algorithm.hash.name.toUpperCase() !== \"SHA-1\") {\n                        const hashAlgorithmOID = this.getOIDByAlgorithm({ name: algorithm.hash.name }, true, \"hashAlgorithm\");\n                        paramsObject.hashAlgorithm = new AlgorithmIdentifier({\n                            algorithmId: hashAlgorithmOID,\n                            algorithmParams: new asn1js.Null()\n                        });\n                        paramsObject.maskGenAlgorithm = new AlgorithmIdentifier({\n                            algorithmId: \"1.2.840.113549.1.1.8\",\n                            algorithmParams: paramsObject.hashAlgorithm.toSchema()\n                        });\n                    }\n                    if (algorithm.saltLength !== 20)\n                        paramsObject.saltLength = algorithm.saltLength;\n                    const pssParameters = new RSASSAPSSParams(paramsObject);\n                    signatureAlgorithm.algorithmId = \"1.2.840.113549.1.1.10\";\n                    signatureAlgorithm.algorithmParams = pssParameters.toSchema();\n                }\n                break;\n            default:\n                throw new Error(`Unsupported signature algorithm: ${privateKey.algorithm.name}`);\n        }\n        return {\n            signatureAlgorithm,\n            parameters\n        };\n    }\n    async signWithPrivateKey(data, privateKey, parameters) {\n        const signature = await this.sign(parameters.algorithm, privateKey, data);\n        if (parameters.algorithm.name === \"ECDSA\") {\n            return createCMSECDSASignature(signature);\n        }\n        return signature;\n    }\n    fillPublicKeyParameters(publicKeyInfo, signatureAlgorithm) {\n        const parameters = {};\n        const shaAlgorithm = this.getHashAlgorithm(signatureAlgorithm);\n        if (shaAlgorithm === EMPTY_STRING)\n            throw new Error(`Unsupported signature algorithm: ${signatureAlgorithm.algorithmId}`);\n        let algorithmId;\n        if (signatureAlgorithm.algorithmId === \"1.2.840.113549.1.1.10\")\n            algorithmId = signatureAlgorithm.algorithmId;\n        else\n            algorithmId = publicKeyInfo.algorithm.algorithmId;\n        const algorithmObject = this.getAlgorithmByOID(algorithmId, true);\n        parameters.algorithm = this.getAlgorithmParameters(algorithmObject.name, \"importKey\");\n        if (\"hash\" in parameters.algorithm.algorithm)\n            parameters.algorithm.algorithm.hash.name = shaAlgorithm;\n        if (algorithmObject.name === \"ECDSA\") {\n            const publicKeyAlgorithm = publicKeyInfo.algorithm;\n            if (!publicKeyAlgorithm.algorithmParams) {\n                throw new Error(\"Algorithm parameters for ECDSA public key are missed\");\n            }\n            const publicKeyAlgorithmParams = publicKeyAlgorithm.algorithmParams;\n            if (\"idBlock\" in publicKeyAlgorithm.algorithmParams) {\n                if (!((publicKeyAlgorithmParams.idBlock.tagClass === 1) && (publicKeyAlgorithmParams.idBlock.tagNumber === 6))) {\n                    throw new Error(\"Incorrect type for ECDSA public key parameters\");\n                }\n            }\n            const curveObject = this.getAlgorithmByOID(publicKeyAlgorithmParams.valueBlock.toString(), true);\n            parameters.algorithm.algorithm.namedCurve = curveObject.name;\n        }\n        return parameters;\n    }\n    async getPublicKey(publicKeyInfo, signatureAlgorithm, parameters) {\n        if (!parameters) {\n            parameters = this.fillPublicKeyParameters(publicKeyInfo, signatureAlgorithm);\n        }\n        const publicKeyInfoBuffer = publicKeyInfo.toSchema().toBER(false);\n        return this.importKey(\"spki\", publicKeyInfoBuffer, parameters.algorithm.algorithm, true, parameters.algorithm.usages);\n    }\n    async verifyWithPublicKey(data, signature, publicKeyInfo, signatureAlgorithm, shaAlgorithm) {\n        let publicKey;\n        if (!shaAlgorithm) {\n            shaAlgorithm = this.getHashAlgorithm(signatureAlgorithm);\n            if (!shaAlgorithm)\n                throw new Error(`Unsupported signature algorithm: ${signatureAlgorithm.algorithmId}`);\n            publicKey = await this.getPublicKey(publicKeyInfo, signatureAlgorithm);\n        }\n        else {\n            const parameters = {};\n            let algorithmId;\n            if (signatureAlgorithm.algorithmId === \"1.2.840.113549.1.1.10\")\n                algorithmId = signatureAlgorithm.algorithmId;\n            else\n                algorithmId = publicKeyInfo.algorithm.algorithmId;\n            const algorithmObject = this.getAlgorithmByOID(algorithmId, true);\n            parameters.algorithm = this.getAlgorithmParameters(algorithmObject.name, \"importKey\");\n            if (\"hash\" in parameters.algorithm.algorithm)\n                parameters.algorithm.algorithm.hash.name = shaAlgorithm;\n            if (algorithmObject.name === \"ECDSA\") {\n                let algorithmParamsChecked = false;\n                if ((\"algorithmParams\" in publicKeyInfo.algorithm) === true) {\n                    if (\"idBlock\" in publicKeyInfo.algorithm.algorithmParams) {\n                        if ((publicKeyInfo.algorithm.algorithmParams.idBlock.tagClass === 1) && (publicKeyInfo.algorithm.algorithmParams.idBlock.tagNumber === 6))\n                            algorithmParamsChecked = true;\n                    }\n                }\n                if (algorithmParamsChecked === false) {\n                    throw new Error(\"Incorrect type for ECDSA public key parameters\");\n                }\n                const curveObject = this.getAlgorithmByOID(publicKeyInfo.algorithm.algorithmParams.valueBlock.toString(), true);\n                parameters.algorithm.algorithm.namedCurve = curveObject.name;\n            }\n            publicKey = await this.getPublicKey(publicKeyInfo, null, parameters);\n        }\n        const algorithm = this.getAlgorithmParameters(publicKey.algorithm.name, \"verify\");\n        if (\"hash\" in algorithm.algorithm)\n            algorithm.algorithm.hash.name = shaAlgorithm;\n        let signatureValue = signature.valueBlock.valueHexView;\n        if (publicKey.algorithm.name === \"ECDSA\") {\n            const namedCurve = ECNamedCurves.find(publicKey.algorithm.namedCurve);\n            if (!namedCurve) {\n                throw new Error(\"Unsupported named curve in use\");\n            }\n            const asn1 = asn1js.fromBER(signatureValue);\n            AsnError.assert(asn1, \"Signature value\");\n            signatureValue = createECDSASignatureFromCMS(asn1.result, namedCurve.size);\n        }\n        if (publicKey.algorithm.name === \"RSA-PSS\") {\n            const pssParameters = new RSASSAPSSParams({ schema: signatureAlgorithm.algorithmParams });\n            if (\"saltLength\" in pssParameters)\n                algorithm.algorithm.saltLength = pssParameters.saltLength;\n            else\n                algorithm.algorithm.saltLength = 20;\n            let hashAlgo = \"SHA-1\";\n            if (\"hashAlgorithm\" in pssParameters) {\n                const hashAlgorithm = this.getAlgorithmByOID(pssParameters.hashAlgorithm.algorithmId, true);\n                hashAlgo = hashAlgorithm.name;\n            }\n            algorithm.algorithm.hash.name = hashAlgo;\n        }\n        return this.verify(algorithm.algorithm, publicKey, signatureValue, data);\n    }\n}\n\nlet engine = {\n    name: \"none\",\n    crypto: null,\n};\nfunction isCryptoEngine(engine) {\n    return engine\n        && typeof engine === \"object\"\n        && \"crypto\" in engine\n        ? true\n        : false;\n}\nfunction setEngine(name, ...args) {\n    let crypto = null;\n    if (args.length < 2) {\n        if (args.length) {\n            crypto = args[0];\n        }\n        else {\n            crypto = typeof self !== \"undefined\" && self.crypto ? new CryptoEngine({ name: \"browser\", crypto: self.crypto }) : null;\n        }\n    }\n    else {\n        const cryptoArg = args[0];\n        const subtleArg = args[1];\n        if (isCryptoEngine(subtleArg)) {\n            crypto = subtleArg;\n        }\n        else if (isCryptoEngine(cryptoArg)) {\n            crypto = cryptoArg;\n        }\n        else if (\"subtle\" in cryptoArg && \"getRandomValues\" in cryptoArg) {\n            crypto = new CryptoEngine({\n                crypto: cryptoArg,\n            });\n        }\n    }\n    if ((typeof process !== \"undefined\") && (\"pid\" in process) && (typeof global !== \"undefined\") && (typeof window === \"undefined\")) {\n        if (typeof global[process.pid] === \"undefined\") {\n            global[process.pid] = {};\n        }\n        else {\n            if (typeof global[process.pid] !== \"object\") {\n                throw new Error(`Name global.${process.pid} already exists and it is not an object`);\n            }\n        }\n        if (typeof global[process.pid].pkijs === \"undefined\") {\n            global[process.pid].pkijs = {};\n        }\n        else {\n            if (typeof global[process.pid].pkijs !== \"object\") {\n                throw new Error(`Name global.${process.pid}.pkijs already exists and it is not an object`);\n            }\n        }\n        global[process.pid].pkijs.engine = {\n            name: name,\n            crypto,\n        };\n    }\n    else {\n        engine = {\n            name: name,\n            crypto,\n        };\n    }\n}\nfunction getEngine() {\n    if ((typeof process !== \"undefined\") && (\"pid\" in process) && (typeof global !== \"undefined\") && (typeof window === \"undefined\")) {\n        let _engine;\n        try {\n            _engine = global[process.pid].pkijs.engine;\n        }\n        catch (ex) {\n            throw new Error(\"Please call 'setEngine' before call to 'getEngine'\");\n        }\n        return _engine;\n    }\n    return engine;\n}\nfunction getCrypto(safety = false) {\n    const _engine = getEngine();\n    if (!_engine.crypto && safety) {\n        throw new Error(\"Unable to create WebCrypto object\");\n    }\n    return _engine.crypto;\n}\nfunction getRandomValues(view) {\n    return getCrypto(true).getRandomValues(view);\n}\nfunction getOIDByAlgorithm(algorithm, safety, target) {\n    return getCrypto(true).getOIDByAlgorithm(algorithm, safety, target);\n}\nfunction getAlgorithmParameters(algorithmName, operation) {\n    return getCrypto(true).getAlgorithmParameters(algorithmName, operation);\n}\nfunction createCMSECDSASignature(signatureBuffer) {\n    if ((signatureBuffer.byteLength % 2) !== 0)\n        return EMPTY_BUFFER;\n    const length = signatureBuffer.byteLength / 2;\n    const rBuffer = new ArrayBuffer(length);\n    const rView = new Uint8Array(rBuffer);\n    rView.set(new Uint8Array(signatureBuffer, 0, length));\n    const rInteger = new asn1js.Integer({ valueHex: rBuffer });\n    const sBuffer = new ArrayBuffer(length);\n    const sView = new Uint8Array(sBuffer);\n    sView.set(new Uint8Array(signatureBuffer, length, length));\n    const sInteger = new asn1js.Integer({ valueHex: sBuffer });\n    return (new asn1js.Sequence({\n        value: [\n            rInteger.convertToDER(),\n            sInteger.convertToDER()\n        ]\n    })).toBER(false);\n}\nfunction createECDSASignatureFromCMS(cmsSignature, pointSize) {\n    if (!(cmsSignature instanceof asn1js.Sequence\n        && cmsSignature.valueBlock.value.length === 2\n        && cmsSignature.valueBlock.value[0] instanceof asn1js.Integer\n        && cmsSignature.valueBlock.value[1] instanceof asn1js.Integer))\n        return EMPTY_BUFFER;\n    const rValueView = cmsSignature.valueBlock.value[0].convertFromDER().valueBlock.valueHexView;\n    const sValueView = cmsSignature.valueBlock.value[1].convertFromDER().valueBlock.valueHexView;\n    const res = new Uint8Array(pointSize * 2);\n    res.set(rValueView, pointSize - rValueView.byteLength);\n    res.set(sValueView, (2 * pointSize) - sValueView.byteLength);\n    return res.buffer;\n}\nfunction getAlgorithmByOID(oid, safety = false, target) {\n    return getCrypto(true).getAlgorithmByOID(oid, safety, target);\n}\nfunction getHashAlgorithm(signatureAlgorithm) {\n    return getCrypto(true).getHashAlgorithm(signatureAlgorithm);\n}\nasync function kdfWithCounter(hashFunction, zBuffer, Counter, SharedInfo, crypto) {\n    switch (hashFunction.toUpperCase()) {\n        case \"SHA-1\":\n        case \"SHA-256\":\n        case \"SHA-384\":\n        case \"SHA-512\":\n            break;\n        default:\n            throw new ArgumentError(`Unknown hash function: ${hashFunction}`);\n    }\n    ArgumentError.assert(zBuffer, \"zBuffer\", \"ArrayBuffer\");\n    if (zBuffer.byteLength === 0)\n        throw new ArgumentError(\"'zBuffer' has zero length, error\");\n    ArgumentError.assert(SharedInfo, \"SharedInfo\", \"ArrayBuffer\");\n    if (Counter > 255)\n        throw new ArgumentError(\"Please set 'Counter' argument to value less or equal to 255\");\n    const counterBuffer = new ArrayBuffer(4);\n    const counterView = new Uint8Array(counterBuffer);\n    counterView[0] = 0x00;\n    counterView[1] = 0x00;\n    counterView[2] = 0x00;\n    counterView[3] = Counter;\n    let combinedBuffer = EMPTY_BUFFER;\n    combinedBuffer = pvutils.utilConcatBuf(combinedBuffer, zBuffer);\n    combinedBuffer = pvutils.utilConcatBuf(combinedBuffer, counterBuffer);\n    combinedBuffer = pvutils.utilConcatBuf(combinedBuffer, SharedInfo);\n    const result = await crypto.digest({ name: hashFunction }, combinedBuffer);\n    return {\n        counter: Counter,\n        result\n    };\n}\nasync function kdf(hashFunction, Zbuffer, keydatalen, SharedInfo, crypto = getCrypto(true)) {\n    let hashLength = 0;\n    let maxCounter = 1;\n    switch (hashFunction.toUpperCase()) {\n        case \"SHA-1\":\n            hashLength = 160;\n            break;\n        case \"SHA-256\":\n            hashLength = 256;\n            break;\n        case \"SHA-384\":\n            hashLength = 384;\n            break;\n        case \"SHA-512\":\n            hashLength = 512;\n            break;\n        default:\n            throw new ArgumentError(`Unknown hash function: ${hashFunction}`);\n    }\n    ArgumentError.assert(Zbuffer, \"Zbuffer\", \"ArrayBuffer\");\n    if (Zbuffer.byteLength === 0)\n        throw new ArgumentError(\"'Zbuffer' has zero length, error\");\n    ArgumentError.assert(SharedInfo, \"SharedInfo\", \"ArrayBuffer\");\n    const quotient = keydatalen / hashLength;\n    if (Math.floor(quotient) > 0) {\n        maxCounter = Math.floor(quotient);\n        if ((quotient - maxCounter) > 0)\n            maxCounter++;\n    }\n    const incomingResult = [];\n    for (let i = 1; i <= maxCounter; i++)\n        incomingResult.push(await kdfWithCounter(hashFunction, Zbuffer, i, SharedInfo, crypto));\n    let combinedBuffer = EMPTY_BUFFER;\n    let currentCounter = 1;\n    let found = true;\n    while (found) {\n        found = false;\n        for (const result of incomingResult) {\n            if (result.counter === currentCounter) {\n                combinedBuffer = pvutils.utilConcatBuf(combinedBuffer, result.result);\n                found = true;\n                break;\n            }\n        }\n        currentCounter++;\n    }\n    keydatalen >>= 3;\n    if (combinedBuffer.byteLength > keydatalen) {\n        const newBuffer = new ArrayBuffer(keydatalen);\n        const newView = new Uint8Array(newBuffer);\n        const combinedView = new Uint8Array(combinedBuffer);\n        for (let i = 0; i < keydatalen; i++)\n            newView[i] = combinedView[i];\n        return newBuffer;\n    }\n    return combinedBuffer;\n}\n\nconst VERSION$i = \"version\";\nconst LOG_ID = \"logID\";\nconst EXTENSIONS$6 = \"extensions\";\nconst TIMESTAMP = \"timestamp\";\nconst HASH_ALGORITHM$3 = \"hashAlgorithm\";\nconst SIGNATURE_ALGORITHM$8 = \"signatureAlgorithm\";\nconst SIGNATURE$7 = \"signature\";\nconst NONE = \"none\";\nconst MD5 = \"md5\";\nconst SHA1 = \"sha1\";\nconst SHA224 = \"sha224\";\nconst SHA256 = \"sha256\";\nconst SHA384 = \"sha384\";\nconst SHA512 = \"sha512\";\nconst ANONYMOUS = \"anonymous\";\nconst RSA = \"rsa\";\nconst DSA = \"dsa\";\nconst ECDSA = \"ecdsa\";\nclass SignedCertificateTimestamp extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION$i, SignedCertificateTimestamp.defaultValues(VERSION$i));\n        this.logID = pvutils.getParametersValue(parameters, LOG_ID, SignedCertificateTimestamp.defaultValues(LOG_ID));\n        this.timestamp = pvutils.getParametersValue(parameters, TIMESTAMP, SignedCertificateTimestamp.defaultValues(TIMESTAMP));\n        this.extensions = pvutils.getParametersValue(parameters, EXTENSIONS$6, SignedCertificateTimestamp.defaultValues(EXTENSIONS$6));\n        this.hashAlgorithm = pvutils.getParametersValue(parameters, HASH_ALGORITHM$3, SignedCertificateTimestamp.defaultValues(HASH_ALGORITHM$3));\n        this.signatureAlgorithm = pvutils.getParametersValue(parameters, SIGNATURE_ALGORITHM$8, SignedCertificateTimestamp.defaultValues(SIGNATURE_ALGORITHM$8));\n        this.signature = pvutils.getParametersValue(parameters, SIGNATURE$7, SignedCertificateTimestamp.defaultValues(SIGNATURE$7));\n        if (\"stream\" in parameters && parameters.stream) {\n            this.fromStream(parameters.stream);\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$i:\n                return 0;\n            case LOG_ID:\n            case EXTENSIONS$6:\n                return EMPTY_BUFFER;\n            case TIMESTAMP:\n                return new Date(0);\n            case HASH_ALGORITHM$3:\n            case SIGNATURE_ALGORITHM$8:\n                return EMPTY_STRING;\n            case SIGNATURE$7:\n                return new asn1js.Any();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    fromSchema(schema) {\n        if ((schema instanceof asn1js.RawData) === false)\n            throw new Error(\"Object's schema was not verified against input data for SignedCertificateTimestamp\");\n        const seqStream = new bs.SeqStream({\n            stream: new bs.ByteStream({\n                buffer: schema.data\n            })\n        });\n        this.fromStream(seqStream);\n    }\n    fromStream(stream) {\n        const blockLength = stream.getUint16();\n        this.version = (stream.getBlock(1))[0];\n        if (this.version === 0) {\n            this.logID = (new Uint8Array(stream.getBlock(32))).buffer.slice(0);\n            this.timestamp = new Date(pvutils.utilFromBase(new Uint8Array(stream.getBlock(8)), 8));\n            const extensionsLength = stream.getUint16();\n            this.extensions = (new Uint8Array(stream.getBlock(extensionsLength))).buffer.slice(0);\n            switch ((stream.getBlock(1))[0]) {\n                case 0:\n                    this.hashAlgorithm = NONE;\n                    break;\n                case 1:\n                    this.hashAlgorithm = MD5;\n                    break;\n                case 2:\n                    this.hashAlgorithm = SHA1;\n                    break;\n                case 3:\n                    this.hashAlgorithm = SHA224;\n                    break;\n                case 4:\n                    this.hashAlgorithm = SHA256;\n                    break;\n                case 5:\n                    this.hashAlgorithm = SHA384;\n                    break;\n                case 6:\n                    this.hashAlgorithm = SHA512;\n                    break;\n                default:\n                    throw new Error(\"Object's stream was not correct for SignedCertificateTimestamp\");\n            }\n            switch ((stream.getBlock(1))[0]) {\n                case 0:\n                    this.signatureAlgorithm = ANONYMOUS;\n                    break;\n                case 1:\n                    this.signatureAlgorithm = RSA;\n                    break;\n                case 2:\n                    this.signatureAlgorithm = DSA;\n                    break;\n                case 3:\n                    this.signatureAlgorithm = ECDSA;\n                    break;\n                default:\n                    throw new Error(\"Object's stream was not correct for SignedCertificateTimestamp\");\n            }\n            const signatureLength = stream.getUint16();\n            const signatureData = new Uint8Array(stream.getBlock(signatureLength)).buffer.slice(0);\n            const asn1 = asn1js.fromBER(signatureData);\n            AsnError.assert(asn1, \"SignedCertificateTimestamp\");\n            this.signature = asn1.result;\n            if (blockLength !== (47 + extensionsLength + signatureLength)) {\n                throw new Error(\"Object's stream was not correct for SignedCertificateTimestamp\");\n            }\n        }\n    }\n    toSchema() {\n        const stream = this.toStream();\n        return new asn1js.RawData({ data: stream.stream.buffer });\n    }\n    toStream() {\n        const stream = new bs.SeqStream();\n        stream.appendUint16(47 + this.extensions.byteLength + this.signature.valueBeforeDecodeView.byteLength);\n        stream.appendChar(this.version);\n        stream.appendView(new Uint8Array(this.logID));\n        const timeBuffer = new ArrayBuffer(8);\n        const timeView = new Uint8Array(timeBuffer);\n        const baseArray = pvutils.utilToBase(this.timestamp.valueOf(), 8);\n        timeView.set(new Uint8Array(baseArray), 8 - baseArray.byteLength);\n        stream.appendView(timeView);\n        stream.appendUint16(this.extensions.byteLength);\n        if (this.extensions.byteLength)\n            stream.appendView(new Uint8Array(this.extensions));\n        let _hashAlgorithm;\n        switch (this.hashAlgorithm.toLowerCase()) {\n            case NONE:\n                _hashAlgorithm = 0;\n                break;\n            case MD5:\n                _hashAlgorithm = 1;\n                break;\n            case SHA1:\n                _hashAlgorithm = 2;\n                break;\n            case SHA224:\n                _hashAlgorithm = 3;\n                break;\n            case SHA256:\n                _hashAlgorithm = 4;\n                break;\n            case SHA384:\n                _hashAlgorithm = 5;\n                break;\n            case SHA512:\n                _hashAlgorithm = 6;\n                break;\n            default:\n                throw new Error(`Incorrect data for hashAlgorithm: ${this.hashAlgorithm}`);\n        }\n        stream.appendChar(_hashAlgorithm);\n        let _signatureAlgorithm;\n        switch (this.signatureAlgorithm.toLowerCase()) {\n            case ANONYMOUS:\n                _signatureAlgorithm = 0;\n                break;\n            case RSA:\n                _signatureAlgorithm = 1;\n                break;\n            case DSA:\n                _signatureAlgorithm = 2;\n                break;\n            case ECDSA:\n                _signatureAlgorithm = 3;\n                break;\n            default:\n                throw new Error(`Incorrect data for signatureAlgorithm: ${this.signatureAlgorithm}`);\n        }\n        stream.appendChar(_signatureAlgorithm);\n        const _signature = this.signature.toBER(false);\n        stream.appendUint16(_signature.byteLength);\n        stream.appendView(new Uint8Array(_signature));\n        return stream;\n    }\n    toJSON() {\n        return {\n            version: this.version,\n            logID: pvutils.bufferToHexCodes(this.logID),\n            timestamp: this.timestamp,\n            extensions: pvutils.bufferToHexCodes(this.extensions),\n            hashAlgorithm: this.hashAlgorithm,\n            signatureAlgorithm: this.signatureAlgorithm,\n            signature: this.signature.toJSON()\n        };\n    }\n    async verify(logs, data, dataType = 0, crypto = getCrypto(true)) {\n        const logId = pvutils.toBase64(pvutils.arrayBufferToString(this.logID));\n        let publicKeyBase64 = null;\n        const stream = new bs.SeqStream();\n        for (const log of logs) {\n            if (log.log_id === logId) {\n                publicKeyBase64 = log.key;\n                break;\n            }\n        }\n        if (!publicKeyBase64) {\n            throw new Error(`Public key not found for CT with logId: ${logId}`);\n        }\n        const pki = pvutils.stringToArrayBuffer(pvutils.fromBase64(publicKeyBase64));\n        const publicKeyInfo = PublicKeyInfo.fromBER(pki);\n        stream.appendChar(0x00);\n        stream.appendChar(0x00);\n        const timeBuffer = new ArrayBuffer(8);\n        const timeView = new Uint8Array(timeBuffer);\n        const baseArray = pvutils.utilToBase(this.timestamp.valueOf(), 8);\n        timeView.set(new Uint8Array(baseArray), 8 - baseArray.byteLength);\n        stream.appendView(timeView);\n        stream.appendUint16(dataType);\n        if (dataType === 0)\n            stream.appendUint24(data.byteLength);\n        stream.appendView(new Uint8Array(data));\n        stream.appendUint16(this.extensions.byteLength);\n        if (this.extensions.byteLength !== 0)\n            stream.appendView(new Uint8Array(this.extensions));\n        return crypto.verifyWithPublicKey(stream.buffer.slice(0, stream.length), new asn1js.OctetString({ valueHex: this.signature.toBER(false) }), publicKeyInfo, { algorithmId: EMPTY_STRING }, \"SHA-256\");\n    }\n}\nSignedCertificateTimestamp.CLASS_NAME = \"SignedCertificateTimestamp\";\nasync function verifySCTsForCertificate(certificate, issuerCertificate, logs, index = (-1), crypto = getCrypto(true)) {\n    let parsedValue = null;\n    const stream = new bs.SeqStream();\n    if (certificate.extensions) {\n        for (let i = certificate.extensions.length - 1; i >= 0; i--) {\n            switch (certificate.extensions[i].extnID) {\n                case id_SignedCertificateTimestampList:\n                    {\n                        parsedValue = certificate.extensions[i].parsedValue;\n                        if (!parsedValue || parsedValue.timestamps.length === 0)\n                            throw new Error(\"Nothing to verify in the certificate\");\n                        certificate.extensions.splice(i, 1);\n                    }\n                    break;\n            }\n        }\n    }\n    if (parsedValue === null)\n        throw new Error(\"No SignedCertificateTimestampList extension in the specified certificate\");\n    const tbs = certificate.encodeTBS().toBER();\n    const issuerId = await crypto.digest({ name: \"SHA-256\" }, new Uint8Array(issuerCertificate.subjectPublicKeyInfo.toSchema().toBER(false)));\n    stream.appendView(new Uint8Array(issuerId));\n    stream.appendUint24(tbs.byteLength);\n    stream.appendView(new Uint8Array(tbs));\n    const preCert = stream.stream.slice(0, stream.length);\n    if (index === (-1)) {\n        const verifyArray = [];\n        for (const timestamp of parsedValue.timestamps) {\n            const verifyResult = await timestamp.verify(logs, preCert.buffer, 1, crypto);\n            verifyArray.push(verifyResult);\n        }\n        return verifyArray;\n    }\n    if (index >= parsedValue.timestamps.length)\n        index = (parsedValue.timestamps.length - 1);\n    return [await parsedValue.timestamps[index].verify(logs, preCert.buffer, 1, crypto)];\n}\n\nconst TIMESTAMPS = \"timestamps\";\nclass SignedCertificateTimestampList extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.timestamps = pvutils.getParametersValue(parameters, TIMESTAMPS, SignedCertificateTimestampList.defaultValues(TIMESTAMPS));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case TIMESTAMPS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case TIMESTAMPS:\n                return (memberValue.length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        var _a;\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        (_a = names.optional) !== null && _a !== void 0 ? _a : (names.optional = false);\n        return (new asn1js.OctetString({\n            name: (names.blockName || \"SignedCertificateTimestampList\"),\n            optional: names.optional\n        }));\n    }\n    fromSchema(schema) {\n        if ((schema instanceof asn1js.OctetString) === false) {\n            throw new Error(\"Object's schema was not verified against input data for SignedCertificateTimestampList\");\n        }\n        const seqStream = new bs.SeqStream({\n            stream: new bs.ByteStream({\n                buffer: schema.valueBlock.valueHex\n            })\n        });\n        const dataLength = seqStream.getUint16();\n        if (dataLength !== seqStream.length) {\n            throw new Error(\"Object's schema was not verified against input data for SignedCertificateTimestampList\");\n        }\n        while (seqStream.length) {\n            this.timestamps.push(new SignedCertificateTimestamp({ stream: seqStream }));\n        }\n    }\n    toSchema() {\n        const stream = new bs.SeqStream();\n        let overallLength = 0;\n        const timestampsData = [];\n        for (const timestamp of this.timestamps) {\n            const timestampStream = timestamp.toStream();\n            timestampsData.push(timestampStream);\n            overallLength += timestampStream.stream.buffer.byteLength;\n        }\n        stream.appendUint16(overallLength);\n        for (const timestamp of timestampsData) {\n            stream.appendView(timestamp.stream.view);\n        }\n        return new asn1js.OctetString({ valueHex: stream.stream.buffer.slice(0) });\n    }\n    toJSON() {\n        return {\n            timestamps: Array.from(this.timestamps, o => o.toJSON())\n        };\n    }\n}\nSignedCertificateTimestampList.CLASS_NAME = \"SignedCertificateTimestampList\";\n\nconst ATTRIBUTES$4 = \"attributes\";\nconst CLEAR_PROPS$11 = [\n    ATTRIBUTES$4\n];\nclass SubjectDirectoryAttributes extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.attributes = pvutils.getParametersValue(parameters, ATTRIBUTES$4, SubjectDirectoryAttributes.defaultValues(ATTRIBUTES$4));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ATTRIBUTES$4:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Repeated({\n                    name: (names.attributes || EMPTY_STRING),\n                    value: Attribute.schema()\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$11);\n        const asn1 = asn1js.compareSchema(schema, schema, SubjectDirectoryAttributes.schema({\n            names: {\n                attributes: ATTRIBUTES$4\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.attributes = Array.from(asn1.result.attributes, element => new Attribute({ schema: element }));\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: Array.from(this.attributes, o => o.toSchema())\n        }));\n    }\n    toJSON() {\n        return {\n            attributes: Array.from(this.attributes, o => o.toJSON())\n        };\n    }\n}\nSubjectDirectoryAttributes.CLASS_NAME = \"SubjectDirectoryAttributes\";\n\nclass ExtensionValueFactory {\n    static getItems() {\n        if (!this.types) {\n            this.types = {};\n            ExtensionValueFactory.register(id_SubjectAltName, \"SubjectAltName\", AltName);\n            ExtensionValueFactory.register(id_IssuerAltName, \"IssuerAltName\", AltName);\n            ExtensionValueFactory.register(id_AuthorityKeyIdentifier, \"AuthorityKeyIdentifier\", AuthorityKeyIdentifier);\n            ExtensionValueFactory.register(id_BasicConstraints, \"BasicConstraints\", BasicConstraints);\n            ExtensionValueFactory.register(id_MicrosoftCaVersion, \"MicrosoftCaVersion\", CAVersion);\n            ExtensionValueFactory.register(id_CertificatePolicies, \"CertificatePolicies\", CertificatePolicies);\n            ExtensionValueFactory.register(id_MicrosoftAppPolicies, \"CertificatePoliciesMicrosoft\", CertificatePolicies);\n            ExtensionValueFactory.register(id_MicrosoftCertTemplateV2, \"MicrosoftCertTemplateV2\", CertificateTemplate);\n            ExtensionValueFactory.register(id_CRLDistributionPoints, \"CRLDistributionPoints\", CRLDistributionPoints);\n            ExtensionValueFactory.register(id_FreshestCRL, \"FreshestCRL\", CRLDistributionPoints);\n            ExtensionValueFactory.register(id_ExtKeyUsage, \"ExtKeyUsage\", ExtKeyUsage);\n            ExtensionValueFactory.register(id_CertificateIssuer, \"CertificateIssuer\", GeneralNames);\n            ExtensionValueFactory.register(id_AuthorityInfoAccess, \"AuthorityInfoAccess\", InfoAccess);\n            ExtensionValueFactory.register(id_SubjectInfoAccess, \"SubjectInfoAccess\", InfoAccess);\n            ExtensionValueFactory.register(id_IssuingDistributionPoint, \"IssuingDistributionPoint\", IssuingDistributionPoint);\n            ExtensionValueFactory.register(id_NameConstraints, \"NameConstraints\", NameConstraints);\n            ExtensionValueFactory.register(id_PolicyConstraints, \"PolicyConstraints\", PolicyConstraints);\n            ExtensionValueFactory.register(id_PolicyMappings, \"PolicyMappings\", PolicyMappings);\n            ExtensionValueFactory.register(id_PrivateKeyUsagePeriod, \"PrivateKeyUsagePeriod\", PrivateKeyUsagePeriod);\n            ExtensionValueFactory.register(id_QCStatements, \"QCStatements\", QCStatements);\n            ExtensionValueFactory.register(id_SignedCertificateTimestampList, \"SignedCertificateTimestampList\", SignedCertificateTimestampList);\n            ExtensionValueFactory.register(id_SubjectDirectoryAttributes, \"SubjectDirectoryAttributes\", SubjectDirectoryAttributes);\n        }\n        return this.types;\n    }\n    static fromBER(id, raw) {\n        const asn1 = asn1js.fromBER(raw);\n        if (asn1.offset === -1) {\n            return null;\n        }\n        const item = this.find(id);\n        if (item) {\n            try {\n                return new item.type({ schema: asn1.result });\n            }\n            catch (ex) {\n                const res = new item.type();\n                res.parsingError = `Incorrectly formatted value of extension ${item.name} (${id})`;\n                return res;\n            }\n        }\n        return asn1.result;\n    }\n    static find(id) {\n        const types = this.getItems();\n        return types[id] || null;\n    }\n    static register(id, name, type) {\n        this.getItems()[id] = { name, type };\n    }\n}\n\nconst EXTN_ID = \"extnID\";\nconst CRITICAL = \"critical\";\nconst EXTN_VALUE = \"extnValue\";\nconst PARSED_VALUE$5 = \"parsedValue\";\nconst CLEAR_PROPS$10 = [\n    EXTN_ID,\n    CRITICAL,\n    EXTN_VALUE\n];\nclass Extension extends PkiObject {\n    get parsedValue() {\n        if (this._parsedValue === undefined) {\n            const parsedValue = ExtensionValueFactory.fromBER(this.extnID, this.extnValue.valueBlock.valueHexView);\n            this._parsedValue = parsedValue;\n        }\n        return this._parsedValue || undefined;\n    }\n    set parsedValue(value) {\n        this._parsedValue = value;\n    }\n    constructor(parameters = {}) {\n        super();\n        this.extnID = pvutils.getParametersValue(parameters, EXTN_ID, Extension.defaultValues(EXTN_ID));\n        this.critical = pvutils.getParametersValue(parameters, CRITICAL, Extension.defaultValues(CRITICAL));\n        if (EXTN_VALUE in parameters) {\n            this.extnValue = new asn1js.OctetString({ valueHex: parameters.extnValue });\n        }\n        else {\n            this.extnValue = Extension.defaultValues(EXTN_VALUE);\n        }\n        if (PARSED_VALUE$5 in parameters) {\n            this.parsedValue = pvutils.getParametersValue(parameters, PARSED_VALUE$5, Extension.defaultValues(PARSED_VALUE$5));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case EXTN_ID:\n                return EMPTY_STRING;\n            case CRITICAL:\n                return false;\n            case EXTN_VALUE:\n                return new asn1js.OctetString();\n            case PARSED_VALUE$5:\n                return {};\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.extnID || EMPTY_STRING) }),\n                new asn1js.Boolean({\n                    name: (names.critical || EMPTY_STRING),\n                    optional: true\n                }),\n                new asn1js.OctetString({ name: (names.extnValue || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$10);\n        const asn1 = asn1js.compareSchema(schema, schema, Extension.schema({\n            names: {\n                extnID: EXTN_ID,\n                critical: CRITICAL,\n                extnValue: EXTN_VALUE\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.extnID = asn1.result.extnID.valueBlock.toString();\n        if (CRITICAL in asn1.result) {\n            this.critical = asn1.result.critical.valueBlock.value;\n        }\n        this.extnValue = asn1.result.extnValue;\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(new asn1js.ObjectIdentifier({ value: this.extnID }));\n        if (this.critical !== Extension.defaultValues(CRITICAL)) {\n            outputArray.push(new asn1js.Boolean({ value: this.critical }));\n        }\n        outputArray.push(this.extnValue);\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const object = {\n            extnID: this.extnID,\n            extnValue: this.extnValue.toJSON(),\n        };\n        if (this.critical !== Extension.defaultValues(CRITICAL)) {\n            object.critical = this.critical;\n        }\n        if (this.parsedValue && this.parsedValue.toJSON) {\n            object.parsedValue = this.parsedValue.toJSON();\n        }\n        return object;\n    }\n}\nExtension.CLASS_NAME = \"Extension\";\n\nconst EXTENSIONS$5 = \"extensions\";\nconst CLEAR_PROPS$$ = [\n    EXTENSIONS$5,\n];\nclass Extensions extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.extensions = pvutils.getParametersValue(parameters, EXTENSIONS$5, Extensions.defaultValues(EXTENSIONS$5));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case EXTENSIONS$5:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}, optional = false) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            optional,\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Repeated({\n                    name: (names.extensions || EMPTY_STRING),\n                    value: Extension.schema(names.extension || {})\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$$);\n        const asn1 = asn1js.compareSchema(schema, schema, Extensions.schema({\n            names: {\n                extensions: EXTENSIONS$5\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.extensions = Array.from(asn1.result.extensions, element => new Extension({ schema: element }));\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: Array.from(this.extensions, o => o.toSchema())\n        }));\n    }\n    toJSON() {\n        return {\n            extensions: this.extensions.map(o => o.toJSON())\n        };\n    }\n}\nExtensions.CLASS_NAME = \"Extensions\";\n\nconst ISSUER$5 = \"issuer\";\nconst SERIAL_NUMBER$6 = \"serialNumber\";\nconst ISSUER_UID = \"issuerUID\";\nconst CLEAR_PROPS$_ = [\n    ISSUER$5,\n    SERIAL_NUMBER$6,\n    ISSUER_UID,\n];\nclass IssuerSerial extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.issuer = pvutils.getParametersValue(parameters, ISSUER$5, IssuerSerial.defaultValues(ISSUER$5));\n        this.serialNumber = pvutils.getParametersValue(parameters, SERIAL_NUMBER$6, IssuerSerial.defaultValues(SERIAL_NUMBER$6));\n        if (ISSUER_UID in parameters) {\n            this.issuerUID = pvutils.getParametersValue(parameters, ISSUER_UID, IssuerSerial.defaultValues(ISSUER_UID));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ISSUER$5:\n                return new GeneralNames();\n            case SERIAL_NUMBER$6:\n                return new asn1js.Integer();\n            case ISSUER_UID:\n                return new asn1js.BitString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                GeneralNames.schema(names.issuer || {}),\n                new asn1js.Integer({ name: (names.serialNumber || EMPTY_STRING) }),\n                new asn1js.BitString({\n                    optional: true,\n                    name: (names.issuerUID || EMPTY_STRING)\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$_);\n        const asn1 = asn1js.compareSchema(schema, schema, IssuerSerial.schema({\n            names: {\n                issuer: {\n                    names: {\n                        blockName: ISSUER$5\n                    }\n                },\n                serialNumber: SERIAL_NUMBER$6,\n                issuerUID: ISSUER_UID\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.issuer = new GeneralNames({ schema: asn1.result.issuer });\n        this.serialNumber = asn1.result.serialNumber;\n        if (ISSUER_UID in asn1.result)\n            this.issuerUID = asn1.result.issuerUID;\n    }\n    toSchema() {\n        const result = new asn1js.Sequence({\n            value: [\n                this.issuer.toSchema(),\n                this.serialNumber\n            ]\n        });\n        if (this.issuerUID) {\n            result.valueBlock.value.push(this.issuerUID);\n        }\n        return result;\n    }\n    toJSON() {\n        const result = {\n            issuer: this.issuer.toJSON(),\n            serialNumber: this.serialNumber.toJSON()\n        };\n        if (this.issuerUID) {\n            result.issuerUID = this.issuerUID.toJSON();\n        }\n        return result;\n    }\n}\nIssuerSerial.CLASS_NAME = \"IssuerSerial\";\n\nconst VERSION$h = \"version\";\nconst BASE_CERTIFICATE_ID$2 = \"baseCertificateID\";\nconst SUBJECT_NAME = \"subjectName\";\nconst ISSUER$4 = \"issuer\";\nconst SIGNATURE$6 = \"signature\";\nconst SERIAL_NUMBER$5 = \"serialNumber\";\nconst ATTR_CERT_VALIDITY_PERIOD$1 = \"attrCertValidityPeriod\";\nconst ATTRIBUTES$3 = \"attributes\";\nconst ISSUER_UNIQUE_ID$2 = \"issuerUniqueID\";\nconst EXTENSIONS$4 = \"extensions\";\nconst CLEAR_PROPS$Z = [\n    VERSION$h,\n    BASE_CERTIFICATE_ID$2,\n    SUBJECT_NAME,\n    ISSUER$4,\n    SIGNATURE$6,\n    SERIAL_NUMBER$5,\n    ATTR_CERT_VALIDITY_PERIOD$1,\n    ATTRIBUTES$3,\n    ISSUER_UNIQUE_ID$2,\n    EXTENSIONS$4,\n];\nclass AttributeCertificateInfoV1 extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION$h, AttributeCertificateInfoV1.defaultValues(VERSION$h));\n        if (BASE_CERTIFICATE_ID$2 in parameters) {\n            this.baseCertificateID = pvutils.getParametersValue(parameters, BASE_CERTIFICATE_ID$2, AttributeCertificateInfoV1.defaultValues(BASE_CERTIFICATE_ID$2));\n        }\n        if (SUBJECT_NAME in parameters) {\n            this.subjectName = pvutils.getParametersValue(parameters, SUBJECT_NAME, AttributeCertificateInfoV1.defaultValues(SUBJECT_NAME));\n        }\n        this.issuer = pvutils.getParametersValue(parameters, ISSUER$4, AttributeCertificateInfoV1.defaultValues(ISSUER$4));\n        this.signature = pvutils.getParametersValue(parameters, SIGNATURE$6, AttributeCertificateInfoV1.defaultValues(SIGNATURE$6));\n        this.serialNumber = pvutils.getParametersValue(parameters, SERIAL_NUMBER$5, AttributeCertificateInfoV1.defaultValues(SERIAL_NUMBER$5));\n        this.attrCertValidityPeriod = pvutils.getParametersValue(parameters, ATTR_CERT_VALIDITY_PERIOD$1, AttributeCertificateInfoV1.defaultValues(ATTR_CERT_VALIDITY_PERIOD$1));\n        this.attributes = pvutils.getParametersValue(parameters, ATTRIBUTES$3, AttributeCertificateInfoV1.defaultValues(ATTRIBUTES$3));\n        if (ISSUER_UNIQUE_ID$2 in parameters)\n            this.issuerUniqueID = pvutils.getParametersValue(parameters, ISSUER_UNIQUE_ID$2, AttributeCertificateInfoV1.defaultValues(ISSUER_UNIQUE_ID$2));\n        if (EXTENSIONS$4 in parameters) {\n            this.extensions = pvutils.getParametersValue(parameters, EXTENSIONS$4, AttributeCertificateInfoV1.defaultValues(EXTENSIONS$4));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$h:\n                return 0;\n            case BASE_CERTIFICATE_ID$2:\n                return new IssuerSerial();\n            case SUBJECT_NAME:\n                return new GeneralNames();\n            case ISSUER$4:\n                return new GeneralNames();\n            case SIGNATURE$6:\n                return new AlgorithmIdentifier();\n            case SERIAL_NUMBER$5:\n                return new asn1js.Integer();\n            case ATTR_CERT_VALIDITY_PERIOD$1:\n                return new AttCertValidityPeriod();\n            case ATTRIBUTES$3:\n                return [];\n            case ISSUER_UNIQUE_ID$2:\n                return new asn1js.BitString();\n            case EXTENSIONS$4:\n                return new Extensions();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Integer({ name: (names.version || EMPTY_STRING) }),\n                new asn1js.Choice({\n                    value: [\n                        new asn1js.Constructed({\n                            name: (names.baseCertificateID || EMPTY_STRING),\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: 0\n                            },\n                            value: IssuerSerial.schema().valueBlock.value\n                        }),\n                        new asn1js.Constructed({\n                            name: (names.subjectName || EMPTY_STRING),\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: 1\n                            },\n                            value: GeneralNames.schema().valueBlock.value\n                        }),\n                    ]\n                }),\n                GeneralNames.schema({\n                    names: {\n                        blockName: (names.issuer || EMPTY_STRING)\n                    }\n                }),\n                AlgorithmIdentifier.schema(names.signature || {}),\n                new asn1js.Integer({ name: (names.serialNumber || EMPTY_STRING) }),\n                AttCertValidityPeriod.schema(names.attrCertValidityPeriod || {}),\n                new asn1js.Sequence({\n                    name: (names.attributes || EMPTY_STRING),\n                    value: [\n                        new asn1js.Repeated({\n                            value: Attribute.schema()\n                        })\n                    ]\n                }),\n                new asn1js.BitString({\n                    optional: true,\n                    name: (names.issuerUniqueID || EMPTY_STRING)\n                }),\n                Extensions.schema(names.extensions || {}, true)\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$Z);\n        const asn1 = asn1js.compareSchema(schema, schema, AttributeCertificateInfoV1.schema({\n            names: {\n                version: VERSION$h,\n                baseCertificateID: BASE_CERTIFICATE_ID$2,\n                subjectName: SUBJECT_NAME,\n                issuer: ISSUER$4,\n                signature: {\n                    names: {\n                        blockName: SIGNATURE$6\n                    }\n                },\n                serialNumber: SERIAL_NUMBER$5,\n                attrCertValidityPeriod: {\n                    names: {\n                        blockName: ATTR_CERT_VALIDITY_PERIOD$1\n                    }\n                },\n                attributes: ATTRIBUTES$3,\n                issuerUniqueID: ISSUER_UNIQUE_ID$2,\n                extensions: {\n                    names: {\n                        blockName: EXTENSIONS$4\n                    }\n                }\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.version = asn1.result.version.valueBlock.valueDec;\n        if (BASE_CERTIFICATE_ID$2 in asn1.result) {\n            this.baseCertificateID = new IssuerSerial({\n                schema: new asn1js.Sequence({\n                    value: asn1.result.baseCertificateID.valueBlock.value\n                })\n            });\n        }\n        if (SUBJECT_NAME in asn1.result) {\n            this.subjectName = new GeneralNames({\n                schema: new asn1js.Sequence({\n                    value: asn1.result.subjectName.valueBlock.value\n                })\n            });\n        }\n        this.issuer = asn1.result.issuer;\n        this.signature = new AlgorithmIdentifier({ schema: asn1.result.signature });\n        this.serialNumber = asn1.result.serialNumber;\n        this.attrCertValidityPeriod = new AttCertValidityPeriod({ schema: asn1.result.attrCertValidityPeriod });\n        this.attributes = Array.from(asn1.result.attributes.valueBlock.value, element => new Attribute({ schema: element }));\n        if (ISSUER_UNIQUE_ID$2 in asn1.result) {\n            this.issuerUniqueID = asn1.result.issuerUniqueID;\n        }\n        if (EXTENSIONS$4 in asn1.result) {\n            this.extensions = new Extensions({ schema: asn1.result.extensions });\n        }\n    }\n    toSchema() {\n        const result = new asn1js.Sequence({\n            value: [new asn1js.Integer({ value: this.version })]\n        });\n        if (this.baseCertificateID) {\n            result.valueBlock.value.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: this.baseCertificateID.toSchema().valueBlock.value\n            }));\n        }\n        if (this.subjectName) {\n            result.valueBlock.value.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                value: this.subjectName.toSchema().valueBlock.value\n            }));\n        }\n        result.valueBlock.value.push(this.issuer.toSchema());\n        result.valueBlock.value.push(this.signature.toSchema());\n        result.valueBlock.value.push(this.serialNumber);\n        result.valueBlock.value.push(this.attrCertValidityPeriod.toSchema());\n        result.valueBlock.value.push(new asn1js.Sequence({\n            value: Array.from(this.attributes, o => o.toSchema())\n        }));\n        if (this.issuerUniqueID) {\n            result.valueBlock.value.push(this.issuerUniqueID);\n        }\n        if (this.extensions) {\n            result.valueBlock.value.push(this.extensions.toSchema());\n        }\n        return result;\n    }\n    toJSON() {\n        const result = {\n            version: this.version\n        };\n        if (this.baseCertificateID) {\n            result.baseCertificateID = this.baseCertificateID.toJSON();\n        }\n        if (this.subjectName) {\n            result.subjectName = this.subjectName.toJSON();\n        }\n        result.issuer = this.issuer.toJSON();\n        result.signature = this.signature.toJSON();\n        result.serialNumber = this.serialNumber.toJSON();\n        result.attrCertValidityPeriod = this.attrCertValidityPeriod.toJSON();\n        result.attributes = Array.from(this.attributes, o => o.toJSON());\n        if (this.issuerUniqueID) {\n            result.issuerUniqueID = this.issuerUniqueID.toJSON();\n        }\n        if (this.extensions) {\n            result.extensions = this.extensions.toJSON();\n        }\n        return result;\n    }\n}\nAttributeCertificateInfoV1.CLASS_NAME = \"AttributeCertificateInfoV1\";\n\nconst ACINFO$1 = \"acinfo\";\nconst SIGNATURE_ALGORITHM$7 = \"signatureAlgorithm\";\nconst SIGNATURE_VALUE$4 = \"signatureValue\";\nconst CLEAR_PROPS$Y = [\n    ACINFO$1,\n    SIGNATURE_VALUE$4,\n    SIGNATURE_ALGORITHM$7\n];\nclass AttributeCertificateV1 extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.acinfo = pvutils.getParametersValue(parameters, ACINFO$1, AttributeCertificateV1.defaultValues(ACINFO$1));\n        this.signatureAlgorithm = pvutils.getParametersValue(parameters, SIGNATURE_ALGORITHM$7, AttributeCertificateV1.defaultValues(SIGNATURE_ALGORITHM$7));\n        this.signatureValue = pvutils.getParametersValue(parameters, SIGNATURE_VALUE$4, AttributeCertificateV1.defaultValues(SIGNATURE_VALUE$4));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ACINFO$1:\n                return new AttributeCertificateInfoV1();\n            case SIGNATURE_ALGORITHM$7:\n                return new AlgorithmIdentifier();\n            case SIGNATURE_VALUE$4:\n                return new asn1js.BitString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                AttributeCertificateInfoV1.schema(names.acinfo || {}),\n                AlgorithmIdentifier.schema(names.signatureAlgorithm || {}),\n                new asn1js.BitString({ name: (names.signatureValue || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$Y);\n        const asn1 = asn1js.compareSchema(schema, schema, AttributeCertificateV1.schema({\n            names: {\n                acinfo: {\n                    names: {\n                        blockName: ACINFO$1\n                    }\n                },\n                signatureAlgorithm: {\n                    names: {\n                        blockName: SIGNATURE_ALGORITHM$7\n                    }\n                },\n                signatureValue: SIGNATURE_VALUE$4\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.acinfo = new AttributeCertificateInfoV1({ schema: asn1.result.acinfo });\n        this.signatureAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.signatureAlgorithm });\n        this.signatureValue = asn1.result.signatureValue;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                this.acinfo.toSchema(),\n                this.signatureAlgorithm.toSchema(),\n                this.signatureValue\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            acinfo: this.acinfo.toJSON(),\n            signatureAlgorithm: this.signatureAlgorithm.toJSON(),\n            signatureValue: this.signatureValue.toJSON(),\n        };\n    }\n}\nAttributeCertificateV1.CLASS_NAME = \"AttributeCertificateV1\";\n\nconst DIGESTED_OBJECT_TYPE = \"digestedObjectType\";\nconst OTHER_OBJECT_TYPE_ID = \"otherObjectTypeID\";\nconst DIGEST_ALGORITHM$2 = \"digestAlgorithm\";\nconst OBJECT_DIGEST = \"objectDigest\";\nconst CLEAR_PROPS$X = [\n    DIGESTED_OBJECT_TYPE,\n    OTHER_OBJECT_TYPE_ID,\n    DIGEST_ALGORITHM$2,\n    OBJECT_DIGEST,\n];\nclass ObjectDigestInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.digestedObjectType = pvutils.getParametersValue(parameters, DIGESTED_OBJECT_TYPE, ObjectDigestInfo.defaultValues(DIGESTED_OBJECT_TYPE));\n        if (OTHER_OBJECT_TYPE_ID in parameters) {\n            this.otherObjectTypeID = pvutils.getParametersValue(parameters, OTHER_OBJECT_TYPE_ID, ObjectDigestInfo.defaultValues(OTHER_OBJECT_TYPE_ID));\n        }\n        this.digestAlgorithm = pvutils.getParametersValue(parameters, DIGEST_ALGORITHM$2, ObjectDigestInfo.defaultValues(DIGEST_ALGORITHM$2));\n        this.objectDigest = pvutils.getParametersValue(parameters, OBJECT_DIGEST, ObjectDigestInfo.defaultValues(OBJECT_DIGEST));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case DIGESTED_OBJECT_TYPE:\n                return new asn1js.Enumerated();\n            case OTHER_OBJECT_TYPE_ID:\n                return new asn1js.ObjectIdentifier();\n            case DIGEST_ALGORITHM$2:\n                return new AlgorithmIdentifier();\n            case OBJECT_DIGEST:\n                return new asn1js.BitString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Enumerated({ name: (names.digestedObjectType || EMPTY_STRING) }),\n                new asn1js.ObjectIdentifier({\n                    optional: true,\n                    name: (names.otherObjectTypeID || EMPTY_STRING)\n                }),\n                AlgorithmIdentifier.schema(names.digestAlgorithm || {}),\n                new asn1js.BitString({ name: (names.objectDigest || EMPTY_STRING) }),\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$X);\n        const asn1 = asn1js.compareSchema(schema, schema, ObjectDigestInfo.schema({\n            names: {\n                digestedObjectType: DIGESTED_OBJECT_TYPE,\n                otherObjectTypeID: OTHER_OBJECT_TYPE_ID,\n                digestAlgorithm: {\n                    names: {\n                        blockName: DIGEST_ALGORITHM$2\n                    }\n                },\n                objectDigest: OBJECT_DIGEST\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.digestedObjectType = asn1.result.digestedObjectType;\n        if (OTHER_OBJECT_TYPE_ID in asn1.result) {\n            this.otherObjectTypeID = asn1.result.otherObjectTypeID;\n        }\n        this.digestAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.digestAlgorithm });\n        this.objectDigest = asn1.result.objectDigest;\n    }\n    toSchema() {\n        const result = new asn1js.Sequence({\n            value: [this.digestedObjectType]\n        });\n        if (this.otherObjectTypeID) {\n            result.valueBlock.value.push(this.otherObjectTypeID);\n        }\n        result.valueBlock.value.push(this.digestAlgorithm.toSchema());\n        result.valueBlock.value.push(this.objectDigest);\n        return result;\n    }\n    toJSON() {\n        const result = {\n            digestedObjectType: this.digestedObjectType.toJSON(),\n            digestAlgorithm: this.digestAlgorithm.toJSON(),\n            objectDigest: this.objectDigest.toJSON(),\n        };\n        if (this.otherObjectTypeID) {\n            result.otherObjectTypeID = this.otherObjectTypeID.toJSON();\n        }\n        return result;\n    }\n}\nObjectDigestInfo.CLASS_NAME = \"ObjectDigestInfo\";\n\nconst ISSUER_NAME = \"issuerName\";\nconst BASE_CERTIFICATE_ID$1 = \"baseCertificateID\";\nconst OBJECT_DIGEST_INFO$1 = \"objectDigestInfo\";\nconst CLEAR_PROPS$W = [\n    ISSUER_NAME,\n    BASE_CERTIFICATE_ID$1,\n    OBJECT_DIGEST_INFO$1\n];\nclass V2Form extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        if (ISSUER_NAME in parameters) {\n            this.issuerName = pvutils.getParametersValue(parameters, ISSUER_NAME, V2Form.defaultValues(ISSUER_NAME));\n        }\n        if (BASE_CERTIFICATE_ID$1 in parameters) {\n            this.baseCertificateID = pvutils.getParametersValue(parameters, BASE_CERTIFICATE_ID$1, V2Form.defaultValues(BASE_CERTIFICATE_ID$1));\n        }\n        if (OBJECT_DIGEST_INFO$1 in parameters) {\n            this.objectDigestInfo = pvutils.getParametersValue(parameters, OBJECT_DIGEST_INFO$1, V2Form.defaultValues(OBJECT_DIGEST_INFO$1));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ISSUER_NAME:\n                return new GeneralNames();\n            case BASE_CERTIFICATE_ID$1:\n                return new IssuerSerial();\n            case OBJECT_DIGEST_INFO$1:\n                return new ObjectDigestInfo();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                GeneralNames.schema({\n                    names: {\n                        blockName: names.issuerName\n                    }\n                }, true),\n                new asn1js.Constructed({\n                    optional: true,\n                    name: (names.baseCertificateID || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: IssuerSerial.schema().valueBlock.value\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    name: (names.objectDigestInfo || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: ObjectDigestInfo.schema().valueBlock.value\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$W);\n        const asn1 = asn1js.compareSchema(schema, schema, V2Form.schema({\n            names: {\n                issuerName: ISSUER_NAME,\n                baseCertificateID: BASE_CERTIFICATE_ID$1,\n                objectDigestInfo: OBJECT_DIGEST_INFO$1\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (ISSUER_NAME in asn1.result)\n            this.issuerName = new GeneralNames({ schema: asn1.result.issuerName });\n        if (BASE_CERTIFICATE_ID$1 in asn1.result) {\n            this.baseCertificateID = new IssuerSerial({\n                schema: new asn1js.Sequence({\n                    value: asn1.result.baseCertificateID.valueBlock.value\n                })\n            });\n        }\n        if (OBJECT_DIGEST_INFO$1 in asn1.result) {\n            this.objectDigestInfo = new ObjectDigestInfo({\n                schema: new asn1js.Sequence({\n                    value: asn1.result.objectDigestInfo.valueBlock.value\n                })\n            });\n        }\n    }\n    toSchema() {\n        const result = new asn1js.Sequence();\n        if (this.issuerName)\n            result.valueBlock.value.push(this.issuerName.toSchema());\n        if (this.baseCertificateID) {\n            result.valueBlock.value.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: this.baseCertificateID.toSchema().valueBlock.value\n            }));\n        }\n        if (this.objectDigestInfo) {\n            result.valueBlock.value.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                value: this.objectDigestInfo.toSchema().valueBlock.value\n            }));\n        }\n        return result;\n    }\n    toJSON() {\n        const result = {};\n        if (this.issuerName) {\n            result.issuerName = this.issuerName.toJSON();\n        }\n        if (this.baseCertificateID) {\n            result.baseCertificateID = this.baseCertificateID.toJSON();\n        }\n        if (this.objectDigestInfo) {\n            result.objectDigestInfo = this.objectDigestInfo.toJSON();\n        }\n        return result;\n    }\n}\nV2Form.CLASS_NAME = \"V2Form\";\n\nconst BASE_CERTIFICATE_ID = \"baseCertificateID\";\nconst ENTITY_NAME = \"entityName\";\nconst OBJECT_DIGEST_INFO = \"objectDigestInfo\";\nconst CLEAR_PROPS$V = [\n    BASE_CERTIFICATE_ID,\n    ENTITY_NAME,\n    OBJECT_DIGEST_INFO\n];\nclass Holder extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        if (BASE_CERTIFICATE_ID in parameters) {\n            this.baseCertificateID = pvutils.getParametersValue(parameters, BASE_CERTIFICATE_ID, Holder.defaultValues(BASE_CERTIFICATE_ID));\n        }\n        if (ENTITY_NAME in parameters) {\n            this.entityName = pvutils.getParametersValue(parameters, ENTITY_NAME, Holder.defaultValues(ENTITY_NAME));\n        }\n        if (OBJECT_DIGEST_INFO in parameters) {\n            this.objectDigestInfo = pvutils.getParametersValue(parameters, OBJECT_DIGEST_INFO, Holder.defaultValues(OBJECT_DIGEST_INFO));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case BASE_CERTIFICATE_ID:\n                return new IssuerSerial();\n            case ENTITY_NAME:\n                return new GeneralNames();\n            case OBJECT_DIGEST_INFO:\n                return new ObjectDigestInfo();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Constructed({\n                    optional: true,\n                    name: (names.baseCertificateID || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: IssuerSerial.schema().valueBlock.value\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    name: (names.entityName || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: GeneralNames.schema().valueBlock.value\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    name: (names.objectDigestInfo || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 2\n                    },\n                    value: ObjectDigestInfo.schema().valueBlock.value\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$V);\n        const asn1 = asn1js.compareSchema(schema, schema, Holder.schema({\n            names: {\n                baseCertificateID: BASE_CERTIFICATE_ID,\n                entityName: ENTITY_NAME,\n                objectDigestInfo: OBJECT_DIGEST_INFO\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (BASE_CERTIFICATE_ID in asn1.result) {\n            this.baseCertificateID = new IssuerSerial({\n                schema: new asn1js.Sequence({\n                    value: asn1.result.baseCertificateID.valueBlock.value\n                })\n            });\n        }\n        if (ENTITY_NAME in asn1.result) {\n            this.entityName = new GeneralNames({\n                schema: new asn1js.Sequence({\n                    value: asn1.result.entityName.valueBlock.value\n                })\n            });\n        }\n        if (OBJECT_DIGEST_INFO in asn1.result) {\n            this.objectDigestInfo = new ObjectDigestInfo({\n                schema: new asn1js.Sequence({\n                    value: asn1.result.objectDigestInfo.valueBlock.value\n                })\n            });\n        }\n    }\n    toSchema() {\n        const result = new asn1js.Sequence();\n        if (this.baseCertificateID) {\n            result.valueBlock.value.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: this.baseCertificateID.toSchema().valueBlock.value\n            }));\n        }\n        if (this.entityName) {\n            result.valueBlock.value.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                value: this.entityName.toSchema().valueBlock.value\n            }));\n        }\n        if (this.objectDigestInfo) {\n            result.valueBlock.value.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 2\n                },\n                value: this.objectDigestInfo.toSchema().valueBlock.value\n            }));\n        }\n        return result;\n    }\n    toJSON() {\n        const result = {};\n        if (this.baseCertificateID) {\n            result.baseCertificateID = this.baseCertificateID.toJSON();\n        }\n        if (this.entityName) {\n            result.entityName = this.entityName.toJSON();\n        }\n        if (this.objectDigestInfo) {\n            result.objectDigestInfo = this.objectDigestInfo.toJSON();\n        }\n        return result;\n    }\n}\nHolder.CLASS_NAME = \"Holder\";\n\nconst VERSION$g = \"version\";\nconst HOLDER = \"holder\";\nconst ISSUER$3 = \"issuer\";\nconst SIGNATURE$5 = \"signature\";\nconst SERIAL_NUMBER$4 = \"serialNumber\";\nconst ATTR_CERT_VALIDITY_PERIOD = \"attrCertValidityPeriod\";\nconst ATTRIBUTES$2 = \"attributes\";\nconst ISSUER_UNIQUE_ID$1 = \"issuerUniqueID\";\nconst EXTENSIONS$3 = \"extensions\";\nconst CLEAR_PROPS$U = [\n    VERSION$g,\n    HOLDER,\n    ISSUER$3,\n    SIGNATURE$5,\n    SERIAL_NUMBER$4,\n    ATTR_CERT_VALIDITY_PERIOD,\n    ATTRIBUTES$2,\n    ISSUER_UNIQUE_ID$1,\n    EXTENSIONS$3\n];\nclass AttributeCertificateInfoV2 extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION$g, AttributeCertificateInfoV2.defaultValues(VERSION$g));\n        this.holder = pvutils.getParametersValue(parameters, HOLDER, AttributeCertificateInfoV2.defaultValues(HOLDER));\n        this.issuer = pvutils.getParametersValue(parameters, ISSUER$3, AttributeCertificateInfoV2.defaultValues(ISSUER$3));\n        this.signature = pvutils.getParametersValue(parameters, SIGNATURE$5, AttributeCertificateInfoV2.defaultValues(SIGNATURE$5));\n        this.serialNumber = pvutils.getParametersValue(parameters, SERIAL_NUMBER$4, AttributeCertificateInfoV2.defaultValues(SERIAL_NUMBER$4));\n        this.attrCertValidityPeriod = pvutils.getParametersValue(parameters, ATTR_CERT_VALIDITY_PERIOD, AttributeCertificateInfoV2.defaultValues(ATTR_CERT_VALIDITY_PERIOD));\n        this.attributes = pvutils.getParametersValue(parameters, ATTRIBUTES$2, AttributeCertificateInfoV2.defaultValues(ATTRIBUTES$2));\n        if (ISSUER_UNIQUE_ID$1 in parameters) {\n            this.issuerUniqueID = pvutils.getParametersValue(parameters, ISSUER_UNIQUE_ID$1, AttributeCertificateInfoV2.defaultValues(ISSUER_UNIQUE_ID$1));\n        }\n        if (EXTENSIONS$3 in parameters) {\n            this.extensions = pvutils.getParametersValue(parameters, EXTENSIONS$3, AttributeCertificateInfoV2.defaultValues(EXTENSIONS$3));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$g:\n                return 1;\n            case HOLDER:\n                return new Holder();\n            case ISSUER$3:\n                return {};\n            case SIGNATURE$5:\n                return new AlgorithmIdentifier();\n            case SERIAL_NUMBER$4:\n                return new asn1js.Integer();\n            case ATTR_CERT_VALIDITY_PERIOD:\n                return new AttCertValidityPeriod();\n            case ATTRIBUTES$2:\n                return [];\n            case ISSUER_UNIQUE_ID$1:\n                return new asn1js.BitString();\n            case EXTENSIONS$3:\n                return new Extensions();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Integer({ name: (names.version || EMPTY_STRING) }),\n                Holder.schema(names.holder || {}),\n                new asn1js.Choice({\n                    value: [\n                        GeneralNames.schema({\n                            names: {\n                                blockName: (names.issuer || EMPTY_STRING)\n                            }\n                        }),\n                        new asn1js.Constructed({\n                            name: (names.issuer || EMPTY_STRING),\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: 0\n                            },\n                            value: V2Form.schema().valueBlock.value\n                        })\n                    ]\n                }),\n                AlgorithmIdentifier.schema(names.signature || {}),\n                new asn1js.Integer({ name: (names.serialNumber || EMPTY_STRING) }),\n                AttCertValidityPeriod.schema(names.attrCertValidityPeriod || {}),\n                new asn1js.Sequence({\n                    name: (names.attributes || EMPTY_STRING),\n                    value: [\n                        new asn1js.Repeated({\n                            value: Attribute.schema()\n                        })\n                    ]\n                }),\n                new asn1js.BitString({\n                    optional: true,\n                    name: (names.issuerUniqueID || EMPTY_STRING)\n                }),\n                Extensions.schema(names.extensions || {}, true)\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$U);\n        const asn1 = asn1js.compareSchema(schema, schema, AttributeCertificateInfoV2.schema({\n            names: {\n                version: VERSION$g,\n                holder: {\n                    names: {\n                        blockName: HOLDER\n                    }\n                },\n                issuer: ISSUER$3,\n                signature: {\n                    names: {\n                        blockName: SIGNATURE$5\n                    }\n                },\n                serialNumber: SERIAL_NUMBER$4,\n                attrCertValidityPeriod: {\n                    names: {\n                        blockName: ATTR_CERT_VALIDITY_PERIOD\n                    }\n                },\n                attributes: ATTRIBUTES$2,\n                issuerUniqueID: ISSUER_UNIQUE_ID$1,\n                extensions: {\n                    names: {\n                        blockName: EXTENSIONS$3\n                    }\n                }\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.version = asn1.result.version.valueBlock.valueDec;\n        this.holder = new Holder({ schema: asn1.result.holder });\n        switch (asn1.result.issuer.idBlock.tagClass) {\n            case 3:\n                this.issuer = new V2Form({\n                    schema: new asn1js.Sequence({\n                        value: asn1.result.issuer.valueBlock.value\n                    })\n                });\n                break;\n            case 1:\n            default:\n                throw new Error(\"Incorrect value for 'issuer' in AttributeCertificateInfoV2\");\n        }\n        this.signature = new AlgorithmIdentifier({ schema: asn1.result.signature });\n        this.serialNumber = asn1.result.serialNumber;\n        this.attrCertValidityPeriod = new AttCertValidityPeriod({ schema: asn1.result.attrCertValidityPeriod });\n        this.attributes = Array.from(asn1.result.attributes.valueBlock.value, element => new Attribute({ schema: element }));\n        if (ISSUER_UNIQUE_ID$1 in asn1.result) {\n            this.issuerUniqueID = asn1.result.issuerUniqueID;\n        }\n        if (EXTENSIONS$3 in asn1.result) {\n            this.extensions = new Extensions({ schema: asn1.result.extensions });\n        }\n    }\n    toSchema() {\n        const result = new asn1js.Sequence({\n            value: [\n                new asn1js.Integer({ value: this.version }),\n                this.holder.toSchema(),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: this.issuer.toSchema().valueBlock.value\n                }),\n                this.signature.toSchema(),\n                this.serialNumber,\n                this.attrCertValidityPeriod.toSchema(),\n                new asn1js.Sequence({\n                    value: Array.from(this.attributes, o => o.toSchema())\n                })\n            ]\n        });\n        if (this.issuerUniqueID) {\n            result.valueBlock.value.push(this.issuerUniqueID);\n        }\n        if (this.extensions) {\n            result.valueBlock.value.push(this.extensions.toSchema());\n        }\n        return result;\n    }\n    toJSON() {\n        const result = {\n            version: this.version,\n            holder: this.holder.toJSON(),\n            issuer: this.issuer.toJSON(),\n            signature: this.signature.toJSON(),\n            serialNumber: this.serialNumber.toJSON(),\n            attrCertValidityPeriod: this.attrCertValidityPeriod.toJSON(),\n            attributes: Array.from(this.attributes, o => o.toJSON())\n        };\n        if (this.issuerUniqueID) {\n            result.issuerUniqueID = this.issuerUniqueID.toJSON();\n        }\n        if (this.extensions) {\n            result.extensions = this.extensions.toJSON();\n        }\n        return result;\n    }\n}\nAttributeCertificateInfoV2.CLASS_NAME = \"AttributeCertificateInfoV2\";\n\nconst ACINFO = \"acinfo\";\nconst SIGNATURE_ALGORITHM$6 = \"signatureAlgorithm\";\nconst SIGNATURE_VALUE$3 = \"signatureValue\";\nconst CLEAR_PROPS$T = [\n    ACINFO,\n    SIGNATURE_ALGORITHM$6,\n    SIGNATURE_VALUE$3,\n];\nclass AttributeCertificateV2 extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.acinfo = pvutils.getParametersValue(parameters, ACINFO, AttributeCertificateV2.defaultValues(ACINFO));\n        this.signatureAlgorithm = pvutils.getParametersValue(parameters, SIGNATURE_ALGORITHM$6, AttributeCertificateV2.defaultValues(SIGNATURE_ALGORITHM$6));\n        this.signatureValue = pvutils.getParametersValue(parameters, SIGNATURE_VALUE$3, AttributeCertificateV2.defaultValues(SIGNATURE_VALUE$3));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ACINFO:\n                return new AttributeCertificateInfoV2();\n            case SIGNATURE_ALGORITHM$6:\n                return new AlgorithmIdentifier();\n            case SIGNATURE_VALUE$3:\n                return new asn1js.BitString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                AttributeCertificateInfoV2.schema(names.acinfo || {}),\n                AlgorithmIdentifier.schema(names.signatureAlgorithm || {}),\n                new asn1js.BitString({ name: (names.signatureValue || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$T);\n        const asn1 = asn1js.compareSchema(schema, schema, AttributeCertificateV2.schema({\n            names: {\n                acinfo: {\n                    names: {\n                        blockName: ACINFO\n                    }\n                },\n                signatureAlgorithm: {\n                    names: {\n                        blockName: SIGNATURE_ALGORITHM$6\n                    }\n                },\n                signatureValue: SIGNATURE_VALUE$3\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.acinfo = new AttributeCertificateInfoV2({ schema: asn1.result.acinfo });\n        this.signatureAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.signatureAlgorithm });\n        this.signatureValue = asn1.result.signatureValue;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                this.acinfo.toSchema(),\n                this.signatureAlgorithm.toSchema(),\n                this.signatureValue\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            acinfo: this.acinfo.toJSON(),\n            signatureAlgorithm: this.signatureAlgorithm.toJSON(),\n            signatureValue: this.signatureValue.toJSON(),\n        };\n    }\n}\nAttributeCertificateV2.CLASS_NAME = \"AttributeCertificateV2\";\n\nconst CONTENT_TYPE = \"contentType\";\nconst CONTENT = \"content\";\nconst CLEAR_PROPS$S = [CONTENT_TYPE, CONTENT];\nclass ContentInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.contentType = pvutils.getParametersValue(parameters, CONTENT_TYPE, ContentInfo.defaultValues(CONTENT_TYPE));\n        this.content = pvutils.getParametersValue(parameters, CONTENT, ContentInfo.defaultValues(CONTENT));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case CONTENT_TYPE:\n                return EMPTY_STRING;\n            case CONTENT:\n                return new asn1js.Any();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case CONTENT_TYPE:\n                return (typeof memberValue === \"string\" &&\n                    memberValue === this.defaultValues(CONTENT_TYPE));\n            case CONTENT:\n                return (memberValue instanceof asn1js.Any);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        if ((\"optional\" in names) === false) {\n            names.optional = false;\n        }\n        return (new asn1js.Sequence({\n            name: (names.blockName || \"ContentInfo\"),\n            optional: names.optional,\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.contentType || CONTENT_TYPE) }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [new asn1js.Any({ name: (names.content || CONTENT) })]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$S);\n        const asn1 = asn1js.compareSchema(schema, schema, ContentInfo.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.contentType = asn1.result.contentType.valueBlock.toString();\n        this.content = asn1.result.content;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                new asn1js.ObjectIdentifier({ value: this.contentType }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [this.content]\n                })\n            ]\n        }));\n    }\n    toJSON() {\n        const object = {\n            contentType: this.contentType\n        };\n        if (!(this.content instanceof asn1js.Any)) {\n            object.content = this.content.toJSON();\n        }\n        return object;\n    }\n}\nContentInfo.CLASS_NAME = \"ContentInfo\";\nContentInfo.DATA = id_ContentType_Data;\nContentInfo.SIGNED_DATA = id_ContentType_SignedData;\nContentInfo.ENVELOPED_DATA = id_ContentType_EnvelopedData;\nContentInfo.ENCRYPTED_DATA = id_ContentType_EncryptedData;\n\nconst TYPE$1 = \"type\";\nconst VALUE$4 = \"value\";\nconst UTC_TIME_NAME = \"utcTimeName\";\nconst GENERAL_TIME_NAME = \"generalTimeName\";\nconst CLEAR_PROPS$R = [UTC_TIME_NAME, GENERAL_TIME_NAME];\nvar TimeType;\n(function (TimeType) {\n    TimeType[TimeType[\"UTCTime\"] = 0] = \"UTCTime\";\n    TimeType[TimeType[\"GeneralizedTime\"] = 1] = \"GeneralizedTime\";\n    TimeType[TimeType[\"empty\"] = 2] = \"empty\";\n})(TimeType || (TimeType = {}));\nclass Time extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.type = pvutils.getParametersValue(parameters, TYPE$1, Time.defaultValues(TYPE$1));\n        this.value = pvutils.getParametersValue(parameters, VALUE$4, Time.defaultValues(VALUE$4));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case TYPE$1:\n                return 0;\n            case VALUE$4:\n                return new Date(0, 0, 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}, optional = false) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Choice({\n            optional,\n            value: [\n                new asn1js.UTCTime({ name: (names.utcTimeName || EMPTY_STRING) }),\n                new asn1js.GeneralizedTime({ name: (names.generalTimeName || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$R);\n        const asn1 = asn1js.compareSchema(schema, schema, Time.schema({\n            names: {\n                utcTimeName: UTC_TIME_NAME,\n                generalTimeName: GENERAL_TIME_NAME\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (UTC_TIME_NAME in asn1.result) {\n            this.type = 0;\n            this.value = asn1.result.utcTimeName.toDate();\n        }\n        if (GENERAL_TIME_NAME in asn1.result) {\n            this.type = 1;\n            this.value = asn1.result.generalTimeName.toDate();\n        }\n    }\n    toSchema() {\n        if (this.type === 0) {\n            return new asn1js.UTCTime({ valueDate: this.value });\n        }\n        else if (this.type === 1) {\n            return new asn1js.GeneralizedTime({ valueDate: this.value });\n        }\n        return {};\n    }\n    toJSON() {\n        return {\n            type: this.type,\n            value: this.value\n        };\n    }\n}\nTime.CLASS_NAME = \"Time\";\n\nconst TBS$4 = \"tbs\";\nconst VERSION$f = \"version\";\nconst SERIAL_NUMBER$3 = \"serialNumber\";\nconst SIGNATURE$4 = \"signature\";\nconst ISSUER$2 = \"issuer\";\nconst NOT_BEFORE = \"notBefore\";\nconst NOT_AFTER = \"notAfter\";\nconst SUBJECT$1 = \"subject\";\nconst SUBJECT_PUBLIC_KEY_INFO = \"subjectPublicKeyInfo\";\nconst ISSUER_UNIQUE_ID = \"issuerUniqueID\";\nconst SUBJECT_UNIQUE_ID = \"subjectUniqueID\";\nconst EXTENSIONS$2 = \"extensions\";\nconst SIGNATURE_ALGORITHM$5 = \"signatureAlgorithm\";\nconst SIGNATURE_VALUE$2 = \"signatureValue\";\nconst TBS_CERTIFICATE = \"tbsCertificate\";\nconst TBS_CERTIFICATE_VERSION = `${TBS_CERTIFICATE}.${VERSION$f}`;\nconst TBS_CERTIFICATE_SERIAL_NUMBER = `${TBS_CERTIFICATE}.${SERIAL_NUMBER$3}`;\nconst TBS_CERTIFICATE_SIGNATURE = `${TBS_CERTIFICATE}.${SIGNATURE$4}`;\nconst TBS_CERTIFICATE_ISSUER = `${TBS_CERTIFICATE}.${ISSUER$2}`;\nconst TBS_CERTIFICATE_NOT_BEFORE = `${TBS_CERTIFICATE}.${NOT_BEFORE}`;\nconst TBS_CERTIFICATE_NOT_AFTER = `${TBS_CERTIFICATE}.${NOT_AFTER}`;\nconst TBS_CERTIFICATE_SUBJECT = `${TBS_CERTIFICATE}.${SUBJECT$1}`;\nconst TBS_CERTIFICATE_SUBJECT_PUBLIC_KEY = `${TBS_CERTIFICATE}.${SUBJECT_PUBLIC_KEY_INFO}`;\nconst TBS_CERTIFICATE_ISSUER_UNIQUE_ID = `${TBS_CERTIFICATE}.${ISSUER_UNIQUE_ID}`;\nconst TBS_CERTIFICATE_SUBJECT_UNIQUE_ID = `${TBS_CERTIFICATE}.${SUBJECT_UNIQUE_ID}`;\nconst TBS_CERTIFICATE_EXTENSIONS = `${TBS_CERTIFICATE}.${EXTENSIONS$2}`;\nconst CLEAR_PROPS$Q = [\n    TBS_CERTIFICATE,\n    TBS_CERTIFICATE_VERSION,\n    TBS_CERTIFICATE_SERIAL_NUMBER,\n    TBS_CERTIFICATE_SIGNATURE,\n    TBS_CERTIFICATE_ISSUER,\n    TBS_CERTIFICATE_NOT_BEFORE,\n    TBS_CERTIFICATE_NOT_AFTER,\n    TBS_CERTIFICATE_SUBJECT,\n    TBS_CERTIFICATE_SUBJECT_PUBLIC_KEY,\n    TBS_CERTIFICATE_ISSUER_UNIQUE_ID,\n    TBS_CERTIFICATE_SUBJECT_UNIQUE_ID,\n    TBS_CERTIFICATE_EXTENSIONS,\n    SIGNATURE_ALGORITHM$5,\n    SIGNATURE_VALUE$2\n];\nfunction tbsCertificate(parameters = {}) {\n    const names = pvutils.getParametersValue(parameters, \"names\", {});\n    return (new asn1js.Sequence({\n        name: (names.blockName || TBS_CERTIFICATE),\n        value: [\n            new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [\n                    new asn1js.Integer({ name: (names.tbsCertificateVersion || TBS_CERTIFICATE_VERSION) })\n                ]\n            }),\n            new asn1js.Integer({ name: (names.tbsCertificateSerialNumber || TBS_CERTIFICATE_SERIAL_NUMBER) }),\n            AlgorithmIdentifier.schema(names.signature || {\n                names: {\n                    blockName: TBS_CERTIFICATE_SIGNATURE\n                }\n            }),\n            RelativeDistinguishedNames.schema(names.issuer || {\n                names: {\n                    blockName: TBS_CERTIFICATE_ISSUER\n                }\n            }),\n            new asn1js.Sequence({\n                name: (names.tbsCertificateValidity || \"tbsCertificate.validity\"),\n                value: [\n                    Time.schema(names.notBefore || {\n                        names: {\n                            utcTimeName: TBS_CERTIFICATE_NOT_BEFORE,\n                            generalTimeName: TBS_CERTIFICATE_NOT_BEFORE\n                        }\n                    }),\n                    Time.schema(names.notAfter || {\n                        names: {\n                            utcTimeName: TBS_CERTIFICATE_NOT_AFTER,\n                            generalTimeName: TBS_CERTIFICATE_NOT_AFTER\n                        }\n                    })\n                ]\n            }),\n            RelativeDistinguishedNames.schema(names.subject || {\n                names: {\n                    blockName: TBS_CERTIFICATE_SUBJECT\n                }\n            }),\n            PublicKeyInfo.schema(names.subjectPublicKeyInfo || {\n                names: {\n                    blockName: TBS_CERTIFICATE_SUBJECT_PUBLIC_KEY\n                }\n            }),\n            new asn1js.Primitive({\n                name: (names.tbsCertificateIssuerUniqueID || TBS_CERTIFICATE_ISSUER_UNIQUE_ID),\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                }\n            }),\n            new asn1js.Primitive({\n                name: (names.tbsCertificateSubjectUniqueID || TBS_CERTIFICATE_SUBJECT_UNIQUE_ID),\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 2\n                }\n            }),\n            new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 3\n                },\n                value: [Extensions.schema(names.extensions || {\n                        names: {\n                            blockName: TBS_CERTIFICATE_EXTENSIONS\n                        }\n                    })]\n            })\n        ]\n    }));\n}\nclass Certificate extends PkiObject {\n    get tbs() {\n        return pvtsutils.BufferSourceConverter.toArrayBuffer(this.tbsView);\n    }\n    set tbs(value) {\n        this.tbsView = new Uint8Array(value);\n    }\n    constructor(parameters = {}) {\n        super();\n        this.tbsView = new Uint8Array(pvutils.getParametersValue(parameters, TBS$4, Certificate.defaultValues(TBS$4)));\n        this.version = pvutils.getParametersValue(parameters, VERSION$f, Certificate.defaultValues(VERSION$f));\n        this.serialNumber = pvutils.getParametersValue(parameters, SERIAL_NUMBER$3, Certificate.defaultValues(SERIAL_NUMBER$3));\n        this.signature = pvutils.getParametersValue(parameters, SIGNATURE$4, Certificate.defaultValues(SIGNATURE$4));\n        this.issuer = pvutils.getParametersValue(parameters, ISSUER$2, Certificate.defaultValues(ISSUER$2));\n        this.notBefore = pvutils.getParametersValue(parameters, NOT_BEFORE, Certificate.defaultValues(NOT_BEFORE));\n        this.notAfter = pvutils.getParametersValue(parameters, NOT_AFTER, Certificate.defaultValues(NOT_AFTER));\n        this.subject = pvutils.getParametersValue(parameters, SUBJECT$1, Certificate.defaultValues(SUBJECT$1));\n        this.subjectPublicKeyInfo = pvutils.getParametersValue(parameters, SUBJECT_PUBLIC_KEY_INFO, Certificate.defaultValues(SUBJECT_PUBLIC_KEY_INFO));\n        if (ISSUER_UNIQUE_ID in parameters) {\n            this.issuerUniqueID = pvutils.getParametersValue(parameters, ISSUER_UNIQUE_ID, Certificate.defaultValues(ISSUER_UNIQUE_ID));\n        }\n        if (SUBJECT_UNIQUE_ID in parameters) {\n            this.subjectUniqueID = pvutils.getParametersValue(parameters, SUBJECT_UNIQUE_ID, Certificate.defaultValues(SUBJECT_UNIQUE_ID));\n        }\n        if (EXTENSIONS$2 in parameters) {\n            this.extensions = pvutils.getParametersValue(parameters, EXTENSIONS$2, Certificate.defaultValues(EXTENSIONS$2));\n        }\n        this.signatureAlgorithm = pvutils.getParametersValue(parameters, SIGNATURE_ALGORITHM$5, Certificate.defaultValues(SIGNATURE_ALGORITHM$5));\n        this.signatureValue = pvutils.getParametersValue(parameters, SIGNATURE_VALUE$2, Certificate.defaultValues(SIGNATURE_VALUE$2));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case TBS$4:\n                return EMPTY_BUFFER;\n            case VERSION$f:\n                return 0;\n            case SERIAL_NUMBER$3:\n                return new asn1js.Integer();\n            case SIGNATURE$4:\n                return new AlgorithmIdentifier();\n            case ISSUER$2:\n                return new RelativeDistinguishedNames();\n            case NOT_BEFORE:\n                return new Time();\n            case NOT_AFTER:\n                return new Time();\n            case SUBJECT$1:\n                return new RelativeDistinguishedNames();\n            case SUBJECT_PUBLIC_KEY_INFO:\n                return new PublicKeyInfo();\n            case ISSUER_UNIQUE_ID:\n                return EMPTY_BUFFER;\n            case SUBJECT_UNIQUE_ID:\n                return EMPTY_BUFFER;\n            case EXTENSIONS$2:\n                return [];\n            case SIGNATURE_ALGORITHM$5:\n                return new AlgorithmIdentifier();\n            case SIGNATURE_VALUE$2:\n                return new asn1js.BitString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                tbsCertificate(names.tbsCertificate),\n                AlgorithmIdentifier.schema(names.signatureAlgorithm || {\n                    names: {\n                        blockName: SIGNATURE_ALGORITHM$5\n                    }\n                }),\n                new asn1js.BitString({ name: (names.signatureValue || SIGNATURE_VALUE$2) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$Q);\n        const asn1 = asn1js.compareSchema(schema, schema, Certificate.schema({\n            names: {\n                tbsCertificate: {\n                    names: {\n                        extensions: {\n                            names: {\n                                extensions: TBS_CERTIFICATE_EXTENSIONS\n                            }\n                        }\n                    }\n                }\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.tbsView = asn1.result.tbsCertificate.valueBeforeDecodeView;\n        if (TBS_CERTIFICATE_VERSION in asn1.result)\n            this.version = asn1.result[TBS_CERTIFICATE_VERSION].valueBlock.valueDec;\n        this.serialNumber = asn1.result[TBS_CERTIFICATE_SERIAL_NUMBER];\n        this.signature = new AlgorithmIdentifier({ schema: asn1.result[TBS_CERTIFICATE_SIGNATURE] });\n        this.issuer = new RelativeDistinguishedNames({ schema: asn1.result[TBS_CERTIFICATE_ISSUER] });\n        this.notBefore = new Time({ schema: asn1.result[TBS_CERTIFICATE_NOT_BEFORE] });\n        this.notAfter = new Time({ schema: asn1.result[TBS_CERTIFICATE_NOT_AFTER] });\n        this.subject = new RelativeDistinguishedNames({ schema: asn1.result[TBS_CERTIFICATE_SUBJECT] });\n        this.subjectPublicKeyInfo = new PublicKeyInfo({ schema: asn1.result[TBS_CERTIFICATE_SUBJECT_PUBLIC_KEY] });\n        if (TBS_CERTIFICATE_ISSUER_UNIQUE_ID in asn1.result)\n            this.issuerUniqueID = asn1.result[TBS_CERTIFICATE_ISSUER_UNIQUE_ID].valueBlock.valueHex;\n        if (TBS_CERTIFICATE_SUBJECT_UNIQUE_ID in asn1.result)\n            this.subjectUniqueID = asn1.result[TBS_CERTIFICATE_SUBJECT_UNIQUE_ID].valueBlock.valueHex;\n        if (TBS_CERTIFICATE_EXTENSIONS in asn1.result)\n            this.extensions = Array.from(asn1.result[TBS_CERTIFICATE_EXTENSIONS], element => new Extension({ schema: element }));\n        this.signatureAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.signatureAlgorithm });\n        this.signatureValue = asn1.result.signatureValue;\n    }\n    encodeTBS() {\n        const outputArray = [];\n        if ((VERSION$f in this) && (this.version !== Certificate.defaultValues(VERSION$f))) {\n            outputArray.push(new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [\n                    new asn1js.Integer({ value: this.version })\n                ]\n            }));\n        }\n        outputArray.push(this.serialNumber);\n        outputArray.push(this.signature.toSchema());\n        outputArray.push(this.issuer.toSchema());\n        outputArray.push(new asn1js.Sequence({\n            value: [\n                this.notBefore.toSchema(),\n                this.notAfter.toSchema()\n            ]\n        }));\n        outputArray.push(this.subject.toSchema());\n        outputArray.push(this.subjectPublicKeyInfo.toSchema());\n        if (this.issuerUniqueID) {\n            outputArray.push(new asn1js.Primitive({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                valueHex: this.issuerUniqueID\n            }));\n        }\n        if (this.subjectUniqueID) {\n            outputArray.push(new asn1js.Primitive({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 2\n                },\n                valueHex: this.subjectUniqueID\n            }));\n        }\n        if (this.extensions) {\n            outputArray.push(new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 3\n                },\n                value: [new asn1js.Sequence({\n                        value: Array.from(this.extensions, o => o.toSchema())\n                    })]\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toSchema(encodeFlag = false) {\n        let tbsSchema;\n        if (encodeFlag === false) {\n            if (!this.tbsView.byteLength) {\n                return Certificate.schema().value[0];\n            }\n            const asn1 = asn1js.fromBER(this.tbsView);\n            AsnError.assert(asn1, \"TBS Certificate\");\n            tbsSchema = asn1.result;\n        }\n        else {\n            tbsSchema = this.encodeTBS();\n        }\n        return (new asn1js.Sequence({\n            value: [\n                tbsSchema,\n                this.signatureAlgorithm.toSchema(),\n                this.signatureValue\n            ]\n        }));\n    }\n    toJSON() {\n        const res = {\n            tbs: pvtsutils.Convert.ToHex(this.tbsView),\n            version: this.version,\n            serialNumber: this.serialNumber.toJSON(),\n            signature: this.signature.toJSON(),\n            issuer: this.issuer.toJSON(),\n            notBefore: this.notBefore.toJSON(),\n            notAfter: this.notAfter.toJSON(),\n            subject: this.subject.toJSON(),\n            subjectPublicKeyInfo: this.subjectPublicKeyInfo.toJSON(),\n            signatureAlgorithm: this.signatureAlgorithm.toJSON(),\n            signatureValue: this.signatureValue.toJSON(),\n        };\n        if ((VERSION$f in this) && (this.version !== Certificate.defaultValues(VERSION$f))) {\n            res.version = this.version;\n        }\n        if (this.issuerUniqueID) {\n            res.issuerUniqueID = pvtsutils.Convert.ToHex(this.issuerUniqueID);\n        }\n        if (this.subjectUniqueID) {\n            res.subjectUniqueID = pvtsutils.Convert.ToHex(this.subjectUniqueID);\n        }\n        if (this.extensions) {\n            res.extensions = Array.from(this.extensions, o => o.toJSON());\n        }\n        return res;\n    }\n    async getPublicKey(parameters, crypto = getCrypto(true)) {\n        return crypto.getPublicKey(this.subjectPublicKeyInfo, this.signatureAlgorithm, parameters);\n    }\n    async getKeyHash(hashAlgorithm = \"SHA-1\", crypto = getCrypto(true)) {\n        return crypto.digest({ name: hashAlgorithm }, this.subjectPublicKeyInfo.subjectPublicKey.valueBlock.valueHexView);\n    }\n    async sign(privateKey, hashAlgorithm = \"SHA-1\", crypto = getCrypto(true)) {\n        if (!privateKey) {\n            throw new Error(\"Need to provide a private key for signing\");\n        }\n        const signatureParameters = await crypto.getSignatureParameters(privateKey, hashAlgorithm);\n        const parameters = signatureParameters.parameters;\n        this.signature = signatureParameters.signatureAlgorithm;\n        this.signatureAlgorithm = signatureParameters.signatureAlgorithm;\n        this.tbsView = new Uint8Array(this.encodeTBS().toBER());\n        const signature = await crypto.signWithPrivateKey(this.tbsView, privateKey, parameters);\n        this.signatureValue = new asn1js.BitString({ valueHex: signature });\n    }\n    async verify(issuerCertificate, crypto = getCrypto(true)) {\n        let subjectPublicKeyInfo;\n        if (issuerCertificate) {\n            subjectPublicKeyInfo = issuerCertificate.subjectPublicKeyInfo;\n        }\n        else if (this.issuer.isEqual(this.subject)) {\n            subjectPublicKeyInfo = this.subjectPublicKeyInfo;\n        }\n        if (!(subjectPublicKeyInfo instanceof PublicKeyInfo)) {\n            throw new Error(\"Please provide issuer certificate as a parameter\");\n        }\n        return crypto.verifyWithPublicKey(this.tbsView, this.signatureValue, subjectPublicKeyInfo, this.signatureAlgorithm);\n    }\n}\nCertificate.CLASS_NAME = \"Certificate\";\nfunction checkCA(cert, signerCert = null) {\n    if (signerCert && cert.issuer.isEqual(signerCert.issuer) && cert.serialNumber.isEqual(signerCert.serialNumber)) {\n        return null;\n    }\n    let isCA = false;\n    if (cert.extensions) {\n        for (const extension of cert.extensions) {\n            if (extension.extnID === id_BasicConstraints && extension.parsedValue instanceof BasicConstraints) {\n                if (extension.parsedValue.cA) {\n                    isCA = true;\n                    break;\n                }\n            }\n        }\n    }\n    if (isCA) {\n        return cert;\n    }\n    return null;\n}\n\nconst CERT_ID$1 = \"certId\";\nconst CERT_VALUE = \"certValue\";\nconst PARSED_VALUE$4 = \"parsedValue\";\nconst CLEAR_PROPS$P = [\n    CERT_ID$1,\n    CERT_VALUE\n];\nclass CertBag extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.certId = pvutils.getParametersValue(parameters, CERT_ID$1, CertBag.defaultValues(CERT_ID$1));\n        this.certValue = pvutils.getParametersValue(parameters, CERT_VALUE, CertBag.defaultValues(CERT_VALUE));\n        if (PARSED_VALUE$4 in parameters) {\n            this.parsedValue = pvutils.getParametersValue(parameters, PARSED_VALUE$4, CertBag.defaultValues(PARSED_VALUE$4));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case CERT_ID$1:\n                return EMPTY_STRING;\n            case CERT_VALUE:\n                return (new asn1js.Any());\n            case PARSED_VALUE$4:\n                return {};\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case CERT_ID$1:\n                return (memberValue === EMPTY_STRING);\n            case CERT_VALUE:\n                return (memberValue instanceof asn1js.Any);\n            case PARSED_VALUE$4:\n                return ((memberValue instanceof Object) && (Object.keys(memberValue).length === 0));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.id || \"id\") }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [new asn1js.Any({ name: (names.value || \"value\") })]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$P);\n        const asn1 = asn1js.compareSchema(schema, schema, CertBag.schema({\n            names: {\n                id: CERT_ID$1,\n                value: CERT_VALUE\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.certId = asn1.result.certId.valueBlock.toString();\n        this.certValue = asn1.result.certValue;\n        const certValueHex = this.certValue.valueBlock.valueHexView;\n        switch (this.certId) {\n            case id_CertBag_X509Certificate:\n                {\n                    try {\n                        this.parsedValue = Certificate.fromBER(certValueHex);\n                    }\n                    catch (ex) {\n                        AttributeCertificateV2.fromBER(certValueHex);\n                    }\n                }\n                break;\n            case id_CertBag_AttributeCertificate:\n                {\n                    this.parsedValue = AttributeCertificateV2.fromBER(certValueHex);\n                }\n                break;\n            case id_CertBag_SDSICertificate:\n            default:\n                throw new Error(`Incorrect CERT_ID value in CertBag: ${this.certId}`);\n        }\n    }\n    toSchema() {\n        if (PARSED_VALUE$4 in this) {\n            if (\"acinfo\" in this.parsedValue) {\n                this.certId = id_CertBag_AttributeCertificate;\n            }\n            else {\n                this.certId = id_CertBag_X509Certificate;\n            }\n            this.certValue = new asn1js.OctetString({ valueHex: this.parsedValue.toSchema().toBER(false) });\n        }\n        return (new asn1js.Sequence({\n            value: [\n                new asn1js.ObjectIdentifier({ value: this.certId }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [((\"toSchema\" in this.certValue) ? this.certValue.toSchema() : this.certValue)]\n                })\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            certId: this.certId,\n            certValue: this.certValue.toJSON()\n        };\n    }\n}\nCertBag.CLASS_NAME = \"CertBag\";\n\nconst USER_CERTIFICATE = \"userCertificate\";\nconst REVOCATION_DATE = \"revocationDate\";\nconst CRL_ENTRY_EXTENSIONS = \"crlEntryExtensions\";\nconst CLEAR_PROPS$O = [\n    USER_CERTIFICATE,\n    REVOCATION_DATE,\n    CRL_ENTRY_EXTENSIONS\n];\nclass RevokedCertificate extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.userCertificate = pvutils.getParametersValue(parameters, USER_CERTIFICATE, RevokedCertificate.defaultValues(USER_CERTIFICATE));\n        this.revocationDate = pvutils.getParametersValue(parameters, REVOCATION_DATE, RevokedCertificate.defaultValues(REVOCATION_DATE));\n        if (CRL_ENTRY_EXTENSIONS in parameters) {\n            this.crlEntryExtensions = pvutils.getParametersValue(parameters, CRL_ENTRY_EXTENSIONS, RevokedCertificate.defaultValues(CRL_ENTRY_EXTENSIONS));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case USER_CERTIFICATE:\n                return new asn1js.Integer();\n            case REVOCATION_DATE:\n                return new Time();\n            case CRL_ENTRY_EXTENSIONS:\n                return new Extensions();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Integer({ name: (names.userCertificate || USER_CERTIFICATE) }),\n                Time.schema({\n                    names: {\n                        utcTimeName: (names.revocationDate || REVOCATION_DATE),\n                        generalTimeName: (names.revocationDate || REVOCATION_DATE)\n                    }\n                }),\n                Extensions.schema({\n                    names: {\n                        blockName: (names.crlEntryExtensions || CRL_ENTRY_EXTENSIONS)\n                    }\n                }, true)\n            ]\n        });\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$O);\n        const asn1 = asn1js.compareSchema(schema, schema, RevokedCertificate.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.userCertificate = asn1.result.userCertificate;\n        this.revocationDate = new Time({ schema: asn1.result.revocationDate });\n        if (CRL_ENTRY_EXTENSIONS in asn1.result) {\n            this.crlEntryExtensions = new Extensions({ schema: asn1.result.crlEntryExtensions });\n        }\n    }\n    toSchema() {\n        const outputArray = [\n            this.userCertificate,\n            this.revocationDate.toSchema()\n        ];\n        if (this.crlEntryExtensions) {\n            outputArray.push(this.crlEntryExtensions.toSchema());\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            userCertificate: this.userCertificate.toJSON(),\n            revocationDate: this.revocationDate.toJSON(),\n        };\n        if (this.crlEntryExtensions) {\n            res.crlEntryExtensions = this.crlEntryExtensions.toJSON();\n        }\n        return res;\n    }\n}\nRevokedCertificate.CLASS_NAME = \"RevokedCertificate\";\n\nconst TBS$3 = \"tbs\";\nconst VERSION$e = \"version\";\nconst SIGNATURE$3 = \"signature\";\nconst ISSUER$1 = \"issuer\";\nconst THIS_UPDATE$1 = \"thisUpdate\";\nconst NEXT_UPDATE$1 = \"nextUpdate\";\nconst REVOKED_CERTIFICATES = \"revokedCertificates\";\nconst CRL_EXTENSIONS = \"crlExtensions\";\nconst SIGNATURE_ALGORITHM$4 = \"signatureAlgorithm\";\nconst SIGNATURE_VALUE$1 = \"signatureValue\";\nconst TBS_CERT_LIST = \"tbsCertList\";\nconst TBS_CERT_LIST_VERSION = `${TBS_CERT_LIST}.version`;\nconst TBS_CERT_LIST_SIGNATURE = `${TBS_CERT_LIST}.signature`;\nconst TBS_CERT_LIST_ISSUER = `${TBS_CERT_LIST}.issuer`;\nconst TBS_CERT_LIST_THIS_UPDATE = `${TBS_CERT_LIST}.thisUpdate`;\nconst TBS_CERT_LIST_NEXT_UPDATE = `${TBS_CERT_LIST}.nextUpdate`;\nconst TBS_CERT_LIST_REVOKED_CERTIFICATES = `${TBS_CERT_LIST}.revokedCertificates`;\nconst TBS_CERT_LIST_EXTENSIONS = `${TBS_CERT_LIST}.extensions`;\nconst CLEAR_PROPS$N = [\n    TBS_CERT_LIST,\n    TBS_CERT_LIST_VERSION,\n    TBS_CERT_LIST_SIGNATURE,\n    TBS_CERT_LIST_ISSUER,\n    TBS_CERT_LIST_THIS_UPDATE,\n    TBS_CERT_LIST_NEXT_UPDATE,\n    TBS_CERT_LIST_REVOKED_CERTIFICATES,\n    TBS_CERT_LIST_EXTENSIONS,\n    SIGNATURE_ALGORITHM$4,\n    SIGNATURE_VALUE$1\n];\nfunction tbsCertList(parameters = {}) {\n    const names = pvutils.getParametersValue(parameters, \"names\", {});\n    return (new asn1js.Sequence({\n        name: (names.blockName || TBS_CERT_LIST),\n        value: [\n            new asn1js.Integer({\n                optional: true,\n                name: (names.tbsCertListVersion || TBS_CERT_LIST_VERSION),\n                value: 2\n            }),\n            AlgorithmIdentifier.schema(names.signature || {\n                names: {\n                    blockName: TBS_CERT_LIST_SIGNATURE\n                }\n            }),\n            RelativeDistinguishedNames.schema(names.issuer || {\n                names: {\n                    blockName: TBS_CERT_LIST_ISSUER\n                }\n            }),\n            Time.schema(names.tbsCertListThisUpdate || {\n                names: {\n                    utcTimeName: TBS_CERT_LIST_THIS_UPDATE,\n                    generalTimeName: TBS_CERT_LIST_THIS_UPDATE\n                }\n            }),\n            Time.schema(names.tbsCertListNextUpdate || {\n                names: {\n                    utcTimeName: TBS_CERT_LIST_NEXT_UPDATE,\n                    generalTimeName: TBS_CERT_LIST_NEXT_UPDATE\n                }\n            }, true),\n            new asn1js.Sequence({\n                optional: true,\n                value: [\n                    new asn1js.Repeated({\n                        name: (names.tbsCertListRevokedCertificates || TBS_CERT_LIST_REVOKED_CERTIFICATES),\n                        value: new asn1js.Sequence({\n                            value: [\n                                new asn1js.Integer(),\n                                Time.schema(),\n                                Extensions.schema({}, true)\n                            ]\n                        })\n                    })\n                ]\n            }),\n            new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [Extensions.schema(names.crlExtensions || {\n                        names: {\n                            blockName: TBS_CERT_LIST_EXTENSIONS\n                        }\n                    })]\n            })\n        ]\n    }));\n}\nconst WELL_KNOWN_EXTENSIONS = [\n    id_AuthorityKeyIdentifier,\n    id_IssuerAltName,\n    id_CRLNumber,\n    id_BaseCRLNumber,\n    id_IssuingDistributionPoint,\n    id_FreshestCRL,\n    id_AuthorityInfoAccess,\n    id_CRLReason,\n    id_InvalidityDate,\n    id_CertificateIssuer,\n];\nclass CertificateRevocationList extends PkiObject {\n    get tbs() {\n        return pvtsutils.BufferSourceConverter.toArrayBuffer(this.tbsView);\n    }\n    set tbs(value) {\n        this.tbsView = new Uint8Array(value);\n    }\n    constructor(parameters = {}) {\n        super();\n        this.tbsView = new Uint8Array(pvutils.getParametersValue(parameters, TBS$3, CertificateRevocationList.defaultValues(TBS$3)));\n        this.version = pvutils.getParametersValue(parameters, VERSION$e, CertificateRevocationList.defaultValues(VERSION$e));\n        this.signature = pvutils.getParametersValue(parameters, SIGNATURE$3, CertificateRevocationList.defaultValues(SIGNATURE$3));\n        this.issuer = pvutils.getParametersValue(parameters, ISSUER$1, CertificateRevocationList.defaultValues(ISSUER$1));\n        this.thisUpdate = pvutils.getParametersValue(parameters, THIS_UPDATE$1, CertificateRevocationList.defaultValues(THIS_UPDATE$1));\n        if (NEXT_UPDATE$1 in parameters) {\n            this.nextUpdate = pvutils.getParametersValue(parameters, NEXT_UPDATE$1, CertificateRevocationList.defaultValues(NEXT_UPDATE$1));\n        }\n        if (REVOKED_CERTIFICATES in parameters) {\n            this.revokedCertificates = pvutils.getParametersValue(parameters, REVOKED_CERTIFICATES, CertificateRevocationList.defaultValues(REVOKED_CERTIFICATES));\n        }\n        if (CRL_EXTENSIONS in parameters) {\n            this.crlExtensions = pvutils.getParametersValue(parameters, CRL_EXTENSIONS, CertificateRevocationList.defaultValues(CRL_EXTENSIONS));\n        }\n        this.signatureAlgorithm = pvutils.getParametersValue(parameters, SIGNATURE_ALGORITHM$4, CertificateRevocationList.defaultValues(SIGNATURE_ALGORITHM$4));\n        this.signatureValue = pvutils.getParametersValue(parameters, SIGNATURE_VALUE$1, CertificateRevocationList.defaultValues(SIGNATURE_VALUE$1));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case TBS$3:\n                return EMPTY_BUFFER;\n            case VERSION$e:\n                return 0;\n            case SIGNATURE$3:\n                return new AlgorithmIdentifier();\n            case ISSUER$1:\n                return new RelativeDistinguishedNames();\n            case THIS_UPDATE$1:\n                return new Time();\n            case NEXT_UPDATE$1:\n                return new Time();\n            case REVOKED_CERTIFICATES:\n                return [];\n            case CRL_EXTENSIONS:\n                return new Extensions();\n            case SIGNATURE_ALGORITHM$4:\n                return new AlgorithmIdentifier();\n            case SIGNATURE_VALUE$1:\n                return new asn1js.BitString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || \"CertificateList\"),\n            value: [\n                tbsCertList(parameters),\n                AlgorithmIdentifier.schema(names.signatureAlgorithm || {\n                    names: {\n                        blockName: SIGNATURE_ALGORITHM$4\n                    }\n                }),\n                new asn1js.BitString({ name: (names.signatureValue || SIGNATURE_VALUE$1) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$N);\n        const asn1 = asn1js.compareSchema(schema, schema, CertificateRevocationList.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.tbsView = asn1.result.tbsCertList.valueBeforeDecodeView;\n        if (TBS_CERT_LIST_VERSION in asn1.result) {\n            this.version = asn1.result[TBS_CERT_LIST_VERSION].valueBlock.valueDec;\n        }\n        this.signature = new AlgorithmIdentifier({ schema: asn1.result[TBS_CERT_LIST_SIGNATURE] });\n        this.issuer = new RelativeDistinguishedNames({ schema: asn1.result[TBS_CERT_LIST_ISSUER] });\n        this.thisUpdate = new Time({ schema: asn1.result[TBS_CERT_LIST_THIS_UPDATE] });\n        if (TBS_CERT_LIST_NEXT_UPDATE in asn1.result) {\n            this.nextUpdate = new Time({ schema: asn1.result[TBS_CERT_LIST_NEXT_UPDATE] });\n        }\n        if (TBS_CERT_LIST_REVOKED_CERTIFICATES in asn1.result) {\n            this.revokedCertificates = Array.from(asn1.result[TBS_CERT_LIST_REVOKED_CERTIFICATES], element => new RevokedCertificate({ schema: element }));\n        }\n        if (TBS_CERT_LIST_EXTENSIONS in asn1.result) {\n            this.crlExtensions = new Extensions({ schema: asn1.result[TBS_CERT_LIST_EXTENSIONS] });\n        }\n        this.signatureAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.signatureAlgorithm });\n        this.signatureValue = asn1.result.signatureValue;\n    }\n    encodeTBS() {\n        const outputArray = [];\n        if (this.version !== CertificateRevocationList.defaultValues(VERSION$e)) {\n            outputArray.push(new asn1js.Integer({ value: this.version }));\n        }\n        outputArray.push(this.signature.toSchema());\n        outputArray.push(this.issuer.toSchema());\n        outputArray.push(this.thisUpdate.toSchema());\n        if (this.nextUpdate) {\n            outputArray.push(this.nextUpdate.toSchema());\n        }\n        if (this.revokedCertificates) {\n            outputArray.push(new asn1js.Sequence({\n                value: Array.from(this.revokedCertificates, o => o.toSchema())\n            }));\n        }\n        if (this.crlExtensions) {\n            outputArray.push(new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [\n                    this.crlExtensions.toSchema()\n                ]\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toSchema(encodeFlag = false) {\n        let tbsSchema;\n        if (!encodeFlag) {\n            if (!this.tbsView.byteLength) {\n                return CertificateRevocationList.schema();\n            }\n            const asn1 = asn1js.fromBER(this.tbsView);\n            AsnError.assert(asn1, \"TBS Certificate Revocation List\");\n            tbsSchema = asn1.result;\n        }\n        else {\n            tbsSchema = this.encodeTBS();\n        }\n        return (new asn1js.Sequence({\n            value: [\n                tbsSchema,\n                this.signatureAlgorithm.toSchema(),\n                this.signatureValue\n            ]\n        }));\n    }\n    toJSON() {\n        const res = {\n            tbs: pvtsutils.Convert.ToHex(this.tbsView),\n            version: this.version,\n            signature: this.signature.toJSON(),\n            issuer: this.issuer.toJSON(),\n            thisUpdate: this.thisUpdate.toJSON(),\n            signatureAlgorithm: this.signatureAlgorithm.toJSON(),\n            signatureValue: this.signatureValue.toJSON()\n        };\n        if (this.version !== CertificateRevocationList.defaultValues(VERSION$e))\n            res.version = this.version;\n        if (this.nextUpdate) {\n            res.nextUpdate = this.nextUpdate.toJSON();\n        }\n        if (this.revokedCertificates) {\n            res.revokedCertificates = Array.from(this.revokedCertificates, o => o.toJSON());\n        }\n        if (this.crlExtensions) {\n            res.crlExtensions = this.crlExtensions.toJSON();\n        }\n        return res;\n    }\n    isCertificateRevoked(certificate) {\n        if (!this.issuer.isEqual(certificate.issuer)) {\n            return false;\n        }\n        if (!this.revokedCertificates) {\n            return false;\n        }\n        for (const revokedCertificate of this.revokedCertificates) {\n            if (revokedCertificate.userCertificate.isEqual(certificate.serialNumber)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    async sign(privateKey, hashAlgorithm = \"SHA-1\", crypto = getCrypto(true)) {\n        if (!privateKey) {\n            throw new Error(\"Need to provide a private key for signing\");\n        }\n        const signatureParameters = await crypto.getSignatureParameters(privateKey, hashAlgorithm);\n        const { parameters } = signatureParameters;\n        this.signature = signatureParameters.signatureAlgorithm;\n        this.signatureAlgorithm = signatureParameters.signatureAlgorithm;\n        this.tbsView = new Uint8Array(this.encodeTBS().toBER());\n        const signature = await crypto.signWithPrivateKey(this.tbsView, privateKey, parameters);\n        this.signatureValue = new asn1js.BitString({ valueHex: signature });\n    }\n    async verify(parameters = {}, crypto = getCrypto(true)) {\n        let subjectPublicKeyInfo;\n        if (parameters.issuerCertificate) {\n            subjectPublicKeyInfo = parameters.issuerCertificate.subjectPublicKeyInfo;\n            if (!this.issuer.isEqual(parameters.issuerCertificate.subject)) {\n                return false;\n            }\n        }\n        if (parameters.publicKeyInfo) {\n            subjectPublicKeyInfo = parameters.publicKeyInfo;\n        }\n        if (!subjectPublicKeyInfo) {\n            throw new Error(\"Issuer's certificate must be provided as an input parameter\");\n        }\n        if (this.crlExtensions) {\n            for (const extension of this.crlExtensions.extensions) {\n                if (extension.critical) {\n                    if (!WELL_KNOWN_EXTENSIONS.includes(extension.extnID))\n                        return false;\n                }\n            }\n        }\n        return crypto.verifyWithPublicKey(this.tbsView, this.signatureValue, subjectPublicKeyInfo, this.signatureAlgorithm);\n    }\n}\nCertificateRevocationList.CLASS_NAME = \"CertificateRevocationList\";\n\nconst CRL_ID = \"crlId\";\nconst CRL_VALUE = \"crlValue\";\nconst PARSED_VALUE$3 = \"parsedValue\";\nconst CLEAR_PROPS$M = [\n    CRL_ID,\n    CRL_VALUE,\n];\nclass CRLBag extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.crlId = pvutils.getParametersValue(parameters, CRL_ID, CRLBag.defaultValues(CRL_ID));\n        this.crlValue = pvutils.getParametersValue(parameters, CRL_VALUE, CRLBag.defaultValues(CRL_VALUE));\n        if (PARSED_VALUE$3 in parameters) {\n            this.parsedValue = pvutils.getParametersValue(parameters, PARSED_VALUE$3, CRLBag.defaultValues(PARSED_VALUE$3));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case CRL_ID:\n                return EMPTY_STRING;\n            case CRL_VALUE:\n                return (new asn1js.Any());\n            case PARSED_VALUE$3:\n                return {};\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case CRL_ID:\n                return (memberValue === EMPTY_STRING);\n            case CRL_VALUE:\n                return (memberValue instanceof asn1js.Any);\n            case PARSED_VALUE$3:\n                return ((memberValue instanceof Object) && (Object.keys(memberValue).length === 0));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.id || \"id\") }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [new asn1js.Any({ name: (names.value || \"value\") })]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$M);\n        const asn1 = asn1js.compareSchema(schema, schema, CRLBag.schema({\n            names: {\n                id: CRL_ID,\n                value: CRL_VALUE\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.crlId = asn1.result.crlId.valueBlock.toString();\n        this.crlValue = asn1.result.crlValue;\n        switch (this.crlId) {\n            case id_CRLBag_X509CRL:\n                {\n                    this.parsedValue = CertificateRevocationList.fromBER(this.certValue.valueBlock.valueHex);\n                }\n                break;\n            default:\n                throw new Error(`Incorrect CRL_ID value in CRLBag: ${this.crlId}`);\n        }\n    }\n    toSchema() {\n        if (this.parsedValue) {\n            this.crlId = id_CRLBag_X509CRL;\n            this.crlValue = new asn1js.OctetString({ valueHex: this.parsedValue.toSchema().toBER(false) });\n        }\n        return (new asn1js.Sequence({\n            value: [\n                new asn1js.ObjectIdentifier({ value: this.crlId }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [this.crlValue.toSchema()]\n                })\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            crlId: this.crlId,\n            crlValue: this.crlValue.toJSON()\n        };\n    }\n}\nCRLBag.CLASS_NAME = \"CRLBag\";\n\nconst VERSION$d = \"version\";\nconst ENCRYPTED_CONTENT_INFO$1 = \"encryptedContentInfo\";\nconst UNPROTECTED_ATTRS$1 = \"unprotectedAttrs\";\nconst CLEAR_PROPS$L = [\n    VERSION$d,\n    ENCRYPTED_CONTENT_INFO$1,\n    UNPROTECTED_ATTRS$1,\n];\nclass EncryptedData extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION$d, EncryptedData.defaultValues(VERSION$d));\n        this.encryptedContentInfo = pvutils.getParametersValue(parameters, ENCRYPTED_CONTENT_INFO$1, EncryptedData.defaultValues(ENCRYPTED_CONTENT_INFO$1));\n        if (UNPROTECTED_ATTRS$1 in parameters) {\n            this.unprotectedAttrs = pvutils.getParametersValue(parameters, UNPROTECTED_ATTRS$1, EncryptedData.defaultValues(UNPROTECTED_ATTRS$1));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$d:\n                return 0;\n            case ENCRYPTED_CONTENT_INFO$1:\n                return new EncryptedContentInfo();\n            case UNPROTECTED_ATTRS$1:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case VERSION$d:\n                return (memberValue === 0);\n            case ENCRYPTED_CONTENT_INFO$1:\n                return ((EncryptedContentInfo.compareWithDefault(\"contentType\", memberValue.contentType)) &&\n                    (EncryptedContentInfo.compareWithDefault(\"contentEncryptionAlgorithm\", memberValue.contentEncryptionAlgorithm)) &&\n                    (EncryptedContentInfo.compareWithDefault(\"encryptedContent\", memberValue.encryptedContent)));\n            case UNPROTECTED_ATTRS$1:\n                return (memberValue.length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Integer({ name: (names.version || EMPTY_STRING) }),\n                EncryptedContentInfo.schema(names.encryptedContentInfo || {}),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.unprotectedAttrs || EMPTY_STRING),\n                            value: Attribute.schema()\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$L);\n        const asn1 = asn1js.compareSchema(schema, schema, EncryptedData.schema({\n            names: {\n                version: VERSION$d,\n                encryptedContentInfo: {\n                    names: {\n                        blockName: ENCRYPTED_CONTENT_INFO$1\n                    }\n                },\n                unprotectedAttrs: UNPROTECTED_ATTRS$1\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.version = asn1.result.version.valueBlock.valueDec;\n        this.encryptedContentInfo = new EncryptedContentInfo({ schema: asn1.result.encryptedContentInfo });\n        if (UNPROTECTED_ATTRS$1 in asn1.result)\n            this.unprotectedAttrs = Array.from(asn1.result.unprotectedAttrs, element => new Attribute({ schema: element }));\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(new asn1js.Integer({ value: this.version }));\n        outputArray.push(this.encryptedContentInfo.toSchema());\n        if (this.unprotectedAttrs) {\n            outputArray.push(new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                value: Array.from(this.unprotectedAttrs, o => o.toSchema())\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            version: this.version,\n            encryptedContentInfo: this.encryptedContentInfo.toJSON()\n        };\n        if (this.unprotectedAttrs)\n            res.unprotectedAttrs = Array.from(this.unprotectedAttrs, o => o.toJSON());\n        return res;\n    }\n    async encrypt(parameters, crypto = getCrypto(true)) {\n        ArgumentError.assert(parameters, \"parameters\", \"object\");\n        const encryptParams = {\n            ...parameters,\n            contentType: \"1.2.840.113549.1.7.1\",\n        };\n        this.encryptedContentInfo = await crypto.encryptEncryptedContentInfo(encryptParams);\n    }\n    async decrypt(parameters, crypto = getCrypto(true)) {\n        ArgumentError.assert(parameters, \"parameters\", \"object\");\n        const decryptParams = {\n            ...parameters,\n            encryptedContentInfo: this.encryptedContentInfo,\n        };\n        return crypto.decryptEncryptedContentInfo(decryptParams);\n    }\n}\nEncryptedData.CLASS_NAME = \"EncryptedData\";\n\nconst ENCRYPTION_ALGORITHM = \"encryptionAlgorithm\";\nconst ENCRYPTED_DATA = \"encryptedData\";\nconst PARSED_VALUE$2 = \"parsedValue\";\nconst CLEAR_PROPS$K = [\n    ENCRYPTION_ALGORITHM,\n    ENCRYPTED_DATA,\n];\nclass PKCS8ShroudedKeyBag extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.encryptionAlgorithm = pvutils.getParametersValue(parameters, ENCRYPTION_ALGORITHM, PKCS8ShroudedKeyBag.defaultValues(ENCRYPTION_ALGORITHM));\n        this.encryptedData = pvutils.getParametersValue(parameters, ENCRYPTED_DATA, PKCS8ShroudedKeyBag.defaultValues(ENCRYPTED_DATA));\n        if (PARSED_VALUE$2 in parameters) {\n            this.parsedValue = pvutils.getParametersValue(parameters, PARSED_VALUE$2, PKCS8ShroudedKeyBag.defaultValues(PARSED_VALUE$2));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ENCRYPTION_ALGORITHM:\n                return (new AlgorithmIdentifier());\n            case ENCRYPTED_DATA:\n                return (new asn1js.OctetString());\n            case PARSED_VALUE$2:\n                return {};\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case ENCRYPTION_ALGORITHM:\n                return ((AlgorithmIdentifier.compareWithDefault(\"algorithmId\", memberValue.algorithmId)) &&\n                    ((\"algorithmParams\" in memberValue) === false));\n            case ENCRYPTED_DATA:\n                return (memberValue.isEqual(PKCS8ShroudedKeyBag.defaultValues(memberName)));\n            case PARSED_VALUE$2:\n                return ((memberValue instanceof Object) && (Object.keys(memberValue).length === 0));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                AlgorithmIdentifier.schema(names.encryptionAlgorithm || {\n                    names: {\n                        blockName: ENCRYPTION_ALGORITHM\n                    }\n                }),\n                new asn1js.Choice({\n                    value: [\n                        new asn1js.OctetString({ name: (names.encryptedData || ENCRYPTED_DATA) }),\n                        new asn1js.OctetString({\n                            idBlock: {\n                                isConstructed: true\n                            },\n                            name: (names.encryptedData || ENCRYPTED_DATA)\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$K);\n        const asn1 = asn1js.compareSchema(schema, schema, PKCS8ShroudedKeyBag.schema({\n            names: {\n                encryptionAlgorithm: {\n                    names: {\n                        blockName: ENCRYPTION_ALGORITHM\n                    }\n                },\n                encryptedData: ENCRYPTED_DATA\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.encryptionAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.encryptionAlgorithm });\n        this.encryptedData = asn1.result.encryptedData;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                this.encryptionAlgorithm.toSchema(),\n                this.encryptedData\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            encryptionAlgorithm: this.encryptionAlgorithm.toJSON(),\n            encryptedData: this.encryptedData.toJSON(),\n        };\n    }\n    async parseInternalValues(parameters, crypto = getCrypto(true)) {\n        const cmsEncrypted = new EncryptedData({\n            encryptedContentInfo: new EncryptedContentInfo({\n                contentEncryptionAlgorithm: this.encryptionAlgorithm,\n                encryptedContent: this.encryptedData\n            })\n        });\n        const decryptedData = await cmsEncrypted.decrypt(parameters, crypto);\n        this.parsedValue = PrivateKeyInfo.fromBER(decryptedData);\n    }\n    async makeInternalValues(parameters, crypto = getCrypto(true)) {\n        if (!this.parsedValue) {\n            throw new Error(\"Please initialize \\\"parsedValue\\\" first\");\n        }\n        const cmsEncrypted = new EncryptedData();\n        const encryptParams = {\n            ...parameters,\n            contentToEncrypt: this.parsedValue.toSchema().toBER(false),\n        };\n        await cmsEncrypted.encrypt(encryptParams, crypto);\n        if (!cmsEncrypted.encryptedContentInfo.encryptedContent) {\n            throw new Error(\"The filed `encryptedContent` in EncryptedContentInfo is empty\");\n        }\n        this.encryptionAlgorithm = cmsEncrypted.encryptedContentInfo.contentEncryptionAlgorithm;\n        this.encryptedData = cmsEncrypted.encryptedContentInfo.encryptedContent;\n    }\n}\nPKCS8ShroudedKeyBag.CLASS_NAME = \"PKCS8ShroudedKeyBag\";\n\nconst SECRET_TYPE_ID = \"secretTypeId\";\nconst SECRET_VALUE = \"secretValue\";\nconst CLEAR_PROPS$J = [\n    SECRET_TYPE_ID,\n    SECRET_VALUE,\n];\nclass SecretBag extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.secretTypeId = pvutils.getParametersValue(parameters, SECRET_TYPE_ID, SecretBag.defaultValues(SECRET_TYPE_ID));\n        this.secretValue = pvutils.getParametersValue(parameters, SECRET_VALUE, SecretBag.defaultValues(SECRET_VALUE));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case SECRET_TYPE_ID:\n                return EMPTY_STRING;\n            case SECRET_VALUE:\n                return (new asn1js.Any());\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case SECRET_TYPE_ID:\n                return (memberValue === EMPTY_STRING);\n            case SECRET_VALUE:\n                return (memberValue instanceof asn1js.Any);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.id || \"id\") }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [new asn1js.Any({ name: (names.value || \"value\") })]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$J);\n        const asn1 = asn1js.compareSchema(schema, schema, SecretBag.schema({\n            names: {\n                id: SECRET_TYPE_ID,\n                value: SECRET_VALUE\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.secretTypeId = asn1.result.secretTypeId.valueBlock.toString();\n        this.secretValue = asn1.result.secretValue;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                new asn1js.ObjectIdentifier({ value: this.secretTypeId }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [this.secretValue.toSchema()]\n                })\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            secretTypeId: this.secretTypeId,\n            secretValue: this.secretValue.toJSON()\n        };\n    }\n}\nSecretBag.CLASS_NAME = \"SecretBag\";\n\nclass SafeBagValueFactory {\n    static getItems() {\n        if (!this.items) {\n            this.items = {};\n            SafeBagValueFactory.register(\"1.2.840.113549.1.12.10.1.1\", PrivateKeyInfo);\n            SafeBagValueFactory.register(\"1.2.840.113549.1.12.10.1.2\", PKCS8ShroudedKeyBag);\n            SafeBagValueFactory.register(\"1.2.840.113549.1.12.10.1.3\", CertBag);\n            SafeBagValueFactory.register(\"1.2.840.113549.1.12.10.1.4\", CRLBag);\n            SafeBagValueFactory.register(\"1.2.840.113549.1.12.10.1.5\", SecretBag);\n            SafeBagValueFactory.register(\"1.2.840.113549.1.12.10.1.6\", SafeContents);\n        }\n        return this.items;\n    }\n    static register(id, type) {\n        this.getItems()[id] = type;\n    }\n    static find(id) {\n        return this.getItems()[id] || null;\n    }\n}\n\nconst BAG_ID = \"bagId\";\nconst BAG_VALUE = \"bagValue\";\nconst BAG_ATTRIBUTES = \"bagAttributes\";\nconst CLEAR_PROPS$I = [\n    BAG_ID,\n    BAG_VALUE,\n    BAG_ATTRIBUTES\n];\nclass SafeBag extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.bagId = pvutils.getParametersValue(parameters, BAG_ID, SafeBag.defaultValues(BAG_ID));\n        this.bagValue = pvutils.getParametersValue(parameters, BAG_VALUE, SafeBag.defaultValues(BAG_VALUE));\n        if (BAG_ATTRIBUTES in parameters) {\n            this.bagAttributes = pvutils.getParametersValue(parameters, BAG_ATTRIBUTES, SafeBag.defaultValues(BAG_ATTRIBUTES));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case BAG_ID:\n                return EMPTY_STRING;\n            case BAG_VALUE:\n                return (new asn1js.Any());\n            case BAG_ATTRIBUTES:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case BAG_ID:\n                return (memberValue === EMPTY_STRING);\n            case BAG_VALUE:\n                return (memberValue instanceof asn1js.Any);\n            case BAG_ATTRIBUTES:\n                return (memberValue.length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.bagId || BAG_ID) }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [new asn1js.Any({ name: (names.bagValue || BAG_VALUE) })]\n                }),\n                new asn1js.Set({\n                    optional: true,\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.bagAttributes || BAG_ATTRIBUTES),\n                            value: Attribute.schema()\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$I);\n        const asn1 = asn1js.compareSchema(schema, schema, SafeBag.schema({\n            names: {\n                bagId: BAG_ID,\n                bagValue: BAG_VALUE,\n                bagAttributes: BAG_ATTRIBUTES\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.bagId = asn1.result.bagId.valueBlock.toString();\n        const bagType = SafeBagValueFactory.find(this.bagId);\n        if (!bagType) {\n            throw new Error(`Invalid BAG_ID for SafeBag: ${this.bagId}`);\n        }\n        this.bagValue = new bagType({ schema: asn1.result.bagValue });\n        if (BAG_ATTRIBUTES in asn1.result) {\n            this.bagAttributes = Array.from(asn1.result.bagAttributes, element => new Attribute({ schema: element }));\n        }\n    }\n    toSchema() {\n        const outputArray = [\n            new asn1js.ObjectIdentifier({ value: this.bagId }),\n            new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [this.bagValue.toSchema()]\n            })\n        ];\n        if (this.bagAttributes) {\n            outputArray.push(new asn1js.Set({\n                value: Array.from(this.bagAttributes, o => o.toSchema())\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const output = {\n            bagId: this.bagId,\n            bagValue: this.bagValue.toJSON()\n        };\n        if (this.bagAttributes) {\n            output.bagAttributes = Array.from(this.bagAttributes, o => o.toJSON());\n        }\n        return output;\n    }\n}\nSafeBag.CLASS_NAME = \"SafeBag\";\n\nconst SAFE_BUGS = \"safeBags\";\nclass SafeContents extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.safeBags = pvutils.getParametersValue(parameters, SAFE_BUGS, SafeContents.defaultValues(SAFE_BUGS));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case SAFE_BUGS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case SAFE_BUGS:\n                return (memberValue.length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Repeated({\n                    name: (names.safeBags || EMPTY_STRING),\n                    value: SafeBag.schema()\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, [\n            SAFE_BUGS\n        ]);\n        const asn1 = asn1js.compareSchema(schema, schema, SafeContents.schema({\n            names: {\n                safeBags: SAFE_BUGS\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.safeBags = Array.from(asn1.result.safeBags, element => new SafeBag({ schema: element }));\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: Array.from(this.safeBags, o => o.toSchema())\n        }));\n    }\n    toJSON() {\n        return {\n            safeBags: Array.from(this.safeBags, o => o.toJSON())\n        };\n    }\n}\nSafeContents.CLASS_NAME = \"SafeContents\";\n\nconst OTHER_CERT_FORMAT = \"otherCertFormat\";\nconst OTHER_CERT = \"otherCert\";\nconst CLEAR_PROPS$H = [\n    OTHER_CERT_FORMAT,\n    OTHER_CERT\n];\nclass OtherCertificateFormat extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.otherCertFormat = pvutils.getParametersValue(parameters, OTHER_CERT_FORMAT, OtherCertificateFormat.defaultValues(OTHER_CERT_FORMAT));\n        this.otherCert = pvutils.getParametersValue(parameters, OTHER_CERT, OtherCertificateFormat.defaultValues(OTHER_CERT));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case OTHER_CERT_FORMAT:\n                return EMPTY_STRING;\n            case OTHER_CERT:\n                return new asn1js.Any();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.otherCertFormat || OTHER_CERT_FORMAT) }),\n                new asn1js.Any({ name: (names.otherCert || OTHER_CERT) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$H);\n        const asn1 = asn1js.compareSchema(schema, schema, OtherCertificateFormat.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.otherCertFormat = asn1.result.otherCertFormat.valueBlock.toString();\n        this.otherCert = asn1.result.otherCert;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                new asn1js.ObjectIdentifier({ value: this.otherCertFormat }),\n                this.otherCert\n            ]\n        }));\n    }\n    toJSON() {\n        const res = {\n            otherCertFormat: this.otherCertFormat\n        };\n        if (!(this.otherCert instanceof asn1js.Any)) {\n            res.otherCert = this.otherCert.toJSON();\n        }\n        return res;\n    }\n}\n\nconst CERTIFICATES$1 = \"certificates\";\nconst CLEAR_PROPS$G = [\n    CERTIFICATES$1,\n];\nclass CertificateSet extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.certificates = pvutils.getParametersValue(parameters, CERTIFICATES$1, CertificateSet.defaultValues(CERTIFICATES$1));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case CERTIFICATES$1:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Set({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Repeated({\n                    name: (names.certificates || CERTIFICATES$1),\n                    value: new asn1js.Choice({\n                        value: [\n                            Certificate.schema(),\n                            new asn1js.Constructed({\n                                idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: 0\n                                },\n                                value: [\n                                    new asn1js.Any()\n                                ]\n                            }),\n                            new asn1js.Constructed({\n                                idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: 1\n                                },\n                                value: [\n                                    new asn1js.Sequence\n                                ]\n                            }),\n                            new asn1js.Constructed({\n                                idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: 2\n                                },\n                                value: AttributeCertificateV2.schema().valueBlock.value\n                            }),\n                            new asn1js.Constructed({\n                                idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: 3\n                                },\n                                value: OtherCertificateFormat.schema().valueBlock.value\n                            })\n                        ]\n                    })\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$G);\n        const asn1 = asn1js.compareSchema(schema, schema, CertificateSet.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.certificates = Array.from(asn1.result.certificates || [], (element) => {\n            const initialTagNumber = element.idBlock.tagNumber;\n            if (element.idBlock.tagClass === 1)\n                return new Certificate({ schema: element });\n            const elementSequence = new asn1js.Sequence({\n                value: element.valueBlock.value\n            });\n            switch (initialTagNumber) {\n                case 1:\n                    if (elementSequence.valueBlock.value[0].valueBlock.value[0].valueBlock.valueDec === 1) {\n                        return new AttributeCertificateV2({ schema: elementSequence });\n                    }\n                    else {\n                        return new AttributeCertificateV1({ schema: elementSequence });\n                    }\n                case 2:\n                    return new AttributeCertificateV2({ schema: elementSequence });\n                case 3:\n                    return new OtherCertificateFormat({ schema: elementSequence });\n            }\n            return element;\n        });\n    }\n    toSchema() {\n        return (new asn1js.Set({\n            value: Array.from(this.certificates, element => {\n                switch (true) {\n                    case (element instanceof Certificate):\n                        return element.toSchema();\n                    case (element instanceof AttributeCertificateV1):\n                        return new asn1js.Constructed({\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: 1\n                            },\n                            value: element.toSchema().valueBlock.value\n                        });\n                    case (element instanceof AttributeCertificateV2):\n                        return new asn1js.Constructed({\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: 2\n                            },\n                            value: element.toSchema().valueBlock.value\n                        });\n                    case (element instanceof OtherCertificateFormat):\n                        return new asn1js.Constructed({\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: 3\n                            },\n                            value: element.toSchema().valueBlock.value\n                        });\n                }\n                return element.toSchema();\n            })\n        }));\n    }\n    toJSON() {\n        return {\n            certificates: Array.from(this.certificates, o => o.toJSON())\n        };\n    }\n}\nCertificateSet.CLASS_NAME = \"CertificateSet\";\n\nconst OTHER_REV_INFO_FORMAT = \"otherRevInfoFormat\";\nconst OTHER_REV_INFO = \"otherRevInfo\";\nconst CLEAR_PROPS$F = [\n    OTHER_REV_INFO_FORMAT,\n    OTHER_REV_INFO\n];\nclass OtherRevocationInfoFormat extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.otherRevInfoFormat = pvutils.getParametersValue(parameters, OTHER_REV_INFO_FORMAT, OtherRevocationInfoFormat.defaultValues(OTHER_REV_INFO_FORMAT));\n        this.otherRevInfo = pvutils.getParametersValue(parameters, OTHER_REV_INFO, OtherRevocationInfoFormat.defaultValues(OTHER_REV_INFO));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case OTHER_REV_INFO_FORMAT:\n                return EMPTY_STRING;\n            case OTHER_REV_INFO:\n                return new asn1js.Any();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.otherRevInfoFormat || OTHER_REV_INFO_FORMAT) }),\n                new asn1js.Any({ name: (names.otherRevInfo || OTHER_REV_INFO) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$F);\n        const asn1 = asn1js.compareSchema(schema, schema, OtherRevocationInfoFormat.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.otherRevInfoFormat = asn1.result.otherRevInfoFormat.valueBlock.toString();\n        this.otherRevInfo = asn1.result.otherRevInfo;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                new asn1js.ObjectIdentifier({ value: this.otherRevInfoFormat }),\n                this.otherRevInfo\n            ]\n        }));\n    }\n    toJSON() {\n        const res = {\n            otherRevInfoFormat: this.otherRevInfoFormat\n        };\n        if (!(this.otherRevInfo instanceof asn1js.Any)) {\n            res.otherRevInfo = this.otherRevInfo.toJSON();\n        }\n        return res;\n    }\n}\nOtherRevocationInfoFormat.CLASS_NAME = \"OtherRevocationInfoFormat\";\n\nconst CRLS$3 = \"crls\";\nconst OTHER_REVOCATION_INFOS = \"otherRevocationInfos\";\nconst CLEAR_PROPS$E = [\n    CRLS$3\n];\nclass RevocationInfoChoices extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.crls = pvutils.getParametersValue(parameters, CRLS$3, RevocationInfoChoices.defaultValues(CRLS$3));\n        this.otherRevocationInfos = pvutils.getParametersValue(parameters, OTHER_REVOCATION_INFOS, RevocationInfoChoices.defaultValues(OTHER_REVOCATION_INFOS));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case CRLS$3:\n                return [];\n            case OTHER_REVOCATION_INFOS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Set({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Repeated({\n                    name: (names.crls || EMPTY_STRING),\n                    value: new asn1js.Choice({\n                        value: [\n                            CertificateRevocationList.schema(),\n                            new asn1js.Constructed({\n                                idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: 1\n                                },\n                                value: [\n                                    new asn1js.ObjectIdentifier(),\n                                    new asn1js.Any()\n                                ]\n                            })\n                        ]\n                    })\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$E);\n        const asn1 = asn1js.compareSchema(schema, schema, RevocationInfoChoices.schema({\n            names: {\n                crls: CRLS$3\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (asn1.result.crls) {\n            for (const element of asn1.result.crls) {\n                if (element.idBlock.tagClass === 1)\n                    this.crls.push(new CertificateRevocationList({ schema: element }));\n                else\n                    this.otherRevocationInfos.push(new OtherRevocationInfoFormat({ schema: element }));\n            }\n        }\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(...Array.from(this.crls, o => o.toSchema()));\n        outputArray.push(...Array.from(this.otherRevocationInfos, element => {\n            const schema = element.toSchema();\n            schema.idBlock.tagClass = 3;\n            schema.idBlock.tagNumber = 1;\n            return schema;\n        }));\n        return (new asn1js.Set({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        return {\n            crls: Array.from(this.crls, o => o.toJSON()),\n            otherRevocationInfos: Array.from(this.otherRevocationInfos, o => o.toJSON())\n        };\n    }\n}\nRevocationInfoChoices.CLASS_NAME = \"RevocationInfoChoices\";\n\nconst CERTS$3 = \"certs\";\nconst CRLS$2 = \"crls\";\nconst CLEAR_PROPS$D = [\n    CERTS$3,\n    CRLS$2,\n];\nclass OriginatorInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.crls = pvutils.getParametersValue(parameters, CRLS$2, OriginatorInfo.defaultValues(CRLS$2));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case CERTS$3:\n                return new CertificateSet();\n            case CRLS$2:\n                return new RevocationInfoChoices();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case CERTS$3:\n                return (memberValue.certificates.length === 0);\n            case CRLS$2:\n                return ((memberValue.crls.length === 0) && (memberValue.otherRevocationInfos.length === 0));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Constructed({\n                    name: (names.certs || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: CertificateSet.schema().valueBlock.value\n                }),\n                new asn1js.Constructed({\n                    name: (names.crls || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: RevocationInfoChoices.schema().valueBlock.value\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$D);\n        const asn1 = asn1js.compareSchema(schema, schema, OriginatorInfo.schema({\n            names: {\n                certs: CERTS$3,\n                crls: CRLS$2\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (CERTS$3 in asn1.result) {\n            this.certs = new CertificateSet({\n                schema: new asn1js.Set({\n                    value: asn1.result.certs.valueBlock.value\n                })\n            });\n        }\n        if (CRLS$2 in asn1.result) {\n            this.crls = new RevocationInfoChoices({\n                schema: new asn1js.Set({\n                    value: asn1.result.crls.valueBlock.value\n                })\n            });\n        }\n    }\n    toSchema() {\n        const sequenceValue = [];\n        if (this.certs) {\n            sequenceValue.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: this.certs.toSchema().valueBlock.value\n            }));\n        }\n        if (this.crls) {\n            sequenceValue.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                value: this.crls.toSchema().valueBlock.value\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: sequenceValue\n        }));\n    }\n    toJSON() {\n        const res = {};\n        if (this.certs) {\n            res.certs = this.certs.toJSON();\n        }\n        if (this.crls) {\n            res.crls = this.crls.toJSON();\n        }\n        return res;\n    }\n}\nOriginatorInfo.CLASS_NAME = \"OriginatorInfo\";\n\nconst ISSUER = \"issuer\";\nconst SERIAL_NUMBER$2 = \"serialNumber\";\nconst CLEAR_PROPS$C = [\n    ISSUER,\n    SERIAL_NUMBER$2,\n];\nclass IssuerAndSerialNumber extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.issuer = pvutils.getParametersValue(parameters, ISSUER, IssuerAndSerialNumber.defaultValues(ISSUER));\n        this.serialNumber = pvutils.getParametersValue(parameters, SERIAL_NUMBER$2, IssuerAndSerialNumber.defaultValues(SERIAL_NUMBER$2));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ISSUER:\n                return new RelativeDistinguishedNames();\n            case SERIAL_NUMBER$2:\n                return new asn1js.Integer();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                RelativeDistinguishedNames.schema(names.issuer || {}),\n                new asn1js.Integer({ name: (names.serialNumber || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$C);\n        const asn1 = asn1js.compareSchema(schema, schema, IssuerAndSerialNumber.schema({\n            names: {\n                issuer: {\n                    names: {\n                        blockName: ISSUER\n                    }\n                },\n                serialNumber: SERIAL_NUMBER$2\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.issuer = new RelativeDistinguishedNames({ schema: asn1.result.issuer });\n        this.serialNumber = asn1.result.serialNumber;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                this.issuer.toSchema(),\n                this.serialNumber\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            issuer: this.issuer.toJSON(),\n            serialNumber: this.serialNumber.toJSON(),\n        };\n    }\n}\nIssuerAndSerialNumber.CLASS_NAME = \"IssuerAndSerialNumber\";\n\nconst VARIANT$3 = \"variant\";\nconst VALUE$3 = \"value\";\nconst CLEAR_PROPS$B = [\n    \"blockName\"\n];\nclass RecipientIdentifier extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.variant = pvutils.getParametersValue(parameters, VARIANT$3, RecipientIdentifier.defaultValues(VARIANT$3));\n        if (VALUE$3 in parameters) {\n            this.value = pvutils.getParametersValue(parameters, VALUE$3, RecipientIdentifier.defaultValues(VALUE$3));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VARIANT$3:\n                return (-1);\n            case VALUE$3:\n                return {};\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case VARIANT$3:\n                return (memberValue === (-1));\n            case VALUE$3:\n                return (Object.keys(memberValue).length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Choice({\n            value: [\n                IssuerAndSerialNumber.schema({\n                    names: {\n                        blockName: (names.blockName || EMPTY_STRING)\n                    }\n                }),\n                new asn1js.Primitive({\n                    name: (names.blockName || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    }\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$B);\n        const asn1 = asn1js.compareSchema(schema, schema, RecipientIdentifier.schema({\n            names: {\n                blockName: \"blockName\"\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (asn1.result.blockName.idBlock.tagClass === 1) {\n            this.variant = 1;\n            this.value = new IssuerAndSerialNumber({ schema: asn1.result.blockName });\n        }\n        else {\n            this.variant = 2;\n            this.value = new asn1js.OctetString({ valueHex: asn1.result.blockName.valueBlock.valueHex });\n        }\n    }\n    toSchema() {\n        switch (this.variant) {\n            case 1:\n                if (!(this.value instanceof IssuerAndSerialNumber)) {\n                    throw new Error(\"Incorrect type of RecipientIdentifier.value. It should be IssuerAndSerialNumber.\");\n                }\n                return this.value.toSchema();\n            case 2:\n                if (!(this.value instanceof asn1js.OctetString)) {\n                    throw new Error(\"Incorrect type of RecipientIdentifier.value. It should be ASN.1 OctetString.\");\n                }\n                return new asn1js.Primitive({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    valueHex: this.value.valueBlock.valueHexView\n                });\n            default:\n                return new asn1js.Any();\n        }\n    }\n    toJSON() {\n        const res = {\n            variant: this.variant\n        };\n        if ((this.variant === 1 || this.variant === 2) && this.value) {\n            res.value = this.value.toJSON();\n        }\n        return res;\n    }\n}\nRecipientIdentifier.CLASS_NAME = \"RecipientIdentifier\";\n\nconst VERSION$c = \"version\";\nconst RID$1 = \"rid\";\nconst KEY_ENCRYPTION_ALGORITHM$3 = \"keyEncryptionAlgorithm\";\nconst ENCRYPTED_KEY$3 = \"encryptedKey\";\nconst RECIPIENT_CERTIFICATE$1 = \"recipientCertificate\";\nconst CLEAR_PROPS$A = [\n    VERSION$c,\n    RID$1,\n    KEY_ENCRYPTION_ALGORITHM$3,\n    ENCRYPTED_KEY$3,\n];\nclass KeyTransRecipientInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION$c, KeyTransRecipientInfo.defaultValues(VERSION$c));\n        this.rid = pvutils.getParametersValue(parameters, RID$1, KeyTransRecipientInfo.defaultValues(RID$1));\n        this.keyEncryptionAlgorithm = pvutils.getParametersValue(parameters, KEY_ENCRYPTION_ALGORITHM$3, KeyTransRecipientInfo.defaultValues(KEY_ENCRYPTION_ALGORITHM$3));\n        this.encryptedKey = pvutils.getParametersValue(parameters, ENCRYPTED_KEY$3, KeyTransRecipientInfo.defaultValues(ENCRYPTED_KEY$3));\n        this.recipientCertificate = pvutils.getParametersValue(parameters, RECIPIENT_CERTIFICATE$1, KeyTransRecipientInfo.defaultValues(RECIPIENT_CERTIFICATE$1));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$c:\n                return (-1);\n            case RID$1:\n                return {};\n            case KEY_ENCRYPTION_ALGORITHM$3:\n                return new AlgorithmIdentifier();\n            case ENCRYPTED_KEY$3:\n                return new asn1js.OctetString();\n            case RECIPIENT_CERTIFICATE$1:\n                return new Certificate();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case VERSION$c:\n                return (memberValue === KeyTransRecipientInfo.defaultValues(VERSION$c));\n            case RID$1:\n                return (Object.keys(memberValue).length === 0);\n            case KEY_ENCRYPTION_ALGORITHM$3:\n            case ENCRYPTED_KEY$3:\n                return memberValue.isEqual(KeyTransRecipientInfo.defaultValues(memberName));\n            case RECIPIENT_CERTIFICATE$1:\n                return false;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Integer({ name: (names.version || EMPTY_STRING) }),\n                RecipientIdentifier.schema(names.rid || {}),\n                AlgorithmIdentifier.schema(names.keyEncryptionAlgorithm || {}),\n                new asn1js.OctetString({ name: (names.encryptedKey || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$A);\n        const asn1 = asn1js.compareSchema(schema, schema, KeyTransRecipientInfo.schema({\n            names: {\n                version: VERSION$c,\n                rid: {\n                    names: {\n                        blockName: RID$1\n                    }\n                },\n                keyEncryptionAlgorithm: {\n                    names: {\n                        blockName: KEY_ENCRYPTION_ALGORITHM$3\n                    }\n                },\n                encryptedKey: ENCRYPTED_KEY$3\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.version = asn1.result.version.valueBlock.valueDec;\n        if (asn1.result.rid.idBlock.tagClass === 3) {\n            this.rid = new asn1js.OctetString({ valueHex: asn1.result.rid.valueBlock.valueHex });\n        }\n        else {\n            this.rid = new IssuerAndSerialNumber({ schema: asn1.result.rid });\n        }\n        this.keyEncryptionAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.keyEncryptionAlgorithm });\n        this.encryptedKey = asn1.result.encryptedKey;\n    }\n    toSchema() {\n        const outputArray = [];\n        if (this.rid instanceof IssuerAndSerialNumber) {\n            this.version = 0;\n            outputArray.push(new asn1js.Integer({ value: this.version }));\n            outputArray.push(this.rid.toSchema());\n        }\n        else {\n            this.version = 2;\n            outputArray.push(new asn1js.Integer({ value: this.version }));\n            outputArray.push(new asn1js.Primitive({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                valueHex: this.rid.valueBlock.valueHexView\n            }));\n        }\n        outputArray.push(this.keyEncryptionAlgorithm.toSchema());\n        outputArray.push(this.encryptedKey);\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        return {\n            version: this.version,\n            rid: this.rid.toJSON(),\n            keyEncryptionAlgorithm: this.keyEncryptionAlgorithm.toJSON(),\n            encryptedKey: this.encryptedKey.toJSON(),\n        };\n    }\n}\nKeyTransRecipientInfo.CLASS_NAME = \"KeyTransRecipientInfo\";\n\nconst ALGORITHM = \"algorithm\";\nconst PUBLIC_KEY = \"publicKey\";\nconst CLEAR_PROPS$z = [\n    ALGORITHM,\n    PUBLIC_KEY\n];\nclass OriginatorPublicKey extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.algorithm = pvutils.getParametersValue(parameters, ALGORITHM, OriginatorPublicKey.defaultValues(ALGORITHM));\n        this.publicKey = pvutils.getParametersValue(parameters, PUBLIC_KEY, OriginatorPublicKey.defaultValues(PUBLIC_KEY));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ALGORITHM:\n                return new AlgorithmIdentifier();\n            case PUBLIC_KEY:\n                return new asn1js.BitString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case ALGORITHM:\n            case PUBLIC_KEY:\n                return (memberValue.isEqual(OriginatorPublicKey.defaultValues(memberName)));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                AlgorithmIdentifier.schema(names.algorithm || {}),\n                new asn1js.BitString({ name: (names.publicKey || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$z);\n        const asn1 = asn1js.compareSchema(schema, schema, OriginatorPublicKey.schema({\n            names: {\n                algorithm: {\n                    names: {\n                        blockName: ALGORITHM\n                    }\n                },\n                publicKey: PUBLIC_KEY\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.algorithm = new AlgorithmIdentifier({ schema: asn1.result.algorithm });\n        this.publicKey = asn1.result.publicKey;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                this.algorithm.toSchema(),\n                this.publicKey\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            algorithm: this.algorithm.toJSON(),\n            publicKey: this.publicKey.toJSON(),\n        };\n    }\n}\nOriginatorPublicKey.CLASS_NAME = \"OriginatorPublicKey\";\n\nconst VARIANT$2 = \"variant\";\nconst VALUE$2 = \"value\";\nconst CLEAR_PROPS$y = [\n    \"blockName\",\n];\nclass OriginatorIdentifierOrKey extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.variant = pvutils.getParametersValue(parameters, VARIANT$2, OriginatorIdentifierOrKey.defaultValues(VARIANT$2));\n        if (VALUE$2 in parameters) {\n            this.value = pvutils.getParametersValue(parameters, VALUE$2, OriginatorIdentifierOrKey.defaultValues(VALUE$2));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VARIANT$2:\n                return (-1);\n            case VALUE$2:\n                return {};\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case VARIANT$2:\n                return (memberValue === (-1));\n            case VALUE$2:\n                return (Object.keys(memberValue).length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Choice({\n            value: [\n                IssuerAndSerialNumber.schema({\n                    names: {\n                        blockName: (names.blockName || EMPTY_STRING)\n                    }\n                }),\n                new asn1js.Primitive({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    name: (names.blockName || EMPTY_STRING)\n                }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    name: (names.blockName || EMPTY_STRING),\n                    value: OriginatorPublicKey.schema().valueBlock.value\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$y);\n        const asn1 = asn1js.compareSchema(schema, schema, OriginatorIdentifierOrKey.schema({\n            names: {\n                blockName: \"blockName\"\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (asn1.result.blockName.idBlock.tagClass === 1) {\n            this.variant = 1;\n            this.value = new IssuerAndSerialNumber({ schema: asn1.result.blockName });\n        }\n        else {\n            if (asn1.result.blockName.idBlock.tagNumber === 0) {\n                asn1.result.blockName.idBlock.tagClass = 1;\n                asn1.result.blockName.idBlock.tagNumber = 4;\n                this.variant = 2;\n                this.value = asn1.result.blockName;\n            }\n            else {\n                this.variant = 3;\n                this.value = new OriginatorPublicKey({\n                    schema: new asn1js.Sequence({\n                        value: asn1.result.blockName.valueBlock.value\n                    })\n                });\n            }\n        }\n    }\n    toSchema() {\n        switch (this.variant) {\n            case 1:\n                return this.value.toSchema();\n            case 2:\n                this.value.idBlock.tagClass = 3;\n                this.value.idBlock.tagNumber = 0;\n                return this.value;\n            case 3:\n                {\n                    const _schema = this.value.toSchema();\n                    _schema.idBlock.tagClass = 3;\n                    _schema.idBlock.tagNumber = 1;\n                    return _schema;\n                }\n            default:\n                return new asn1js.Any();\n        }\n    }\n    toJSON() {\n        const res = {\n            variant: this.variant\n        };\n        if ((this.variant === 1) || (this.variant === 2) || (this.variant === 3)) {\n            res.value = this.value.toJSON();\n        }\n        return res;\n    }\n}\nOriginatorIdentifierOrKey.CLASS_NAME = \"OriginatorIdentifierOrKey\";\n\nconst KEY_ATTR_ID = \"keyAttrId\";\nconst KEY_ATTR = \"keyAttr\";\nconst CLEAR_PROPS$x = [\n    KEY_ATTR_ID,\n    KEY_ATTR,\n];\nclass OtherKeyAttribute extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.keyAttrId = pvutils.getParametersValue(parameters, KEY_ATTR_ID, OtherKeyAttribute.defaultValues(KEY_ATTR_ID));\n        if (KEY_ATTR in parameters) {\n            this.keyAttr = pvutils.getParametersValue(parameters, KEY_ATTR, OtherKeyAttribute.defaultValues(KEY_ATTR));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case KEY_ATTR_ID:\n                return EMPTY_STRING;\n            case KEY_ATTR:\n                return {};\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case KEY_ATTR_ID:\n                return (typeof memberValue === \"string\" && memberValue === EMPTY_STRING);\n            case KEY_ATTR:\n                return (Object.keys(memberValue).length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            optional: (names.optional || true),\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.keyAttrId || EMPTY_STRING) }),\n                new asn1js.Any({\n                    optional: true,\n                    name: (names.keyAttr || EMPTY_STRING)\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$x);\n        const asn1 = asn1js.compareSchema(schema, schema, OtherKeyAttribute.schema({\n            names: {\n                keyAttrId: KEY_ATTR_ID,\n                keyAttr: KEY_ATTR\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.keyAttrId = asn1.result.keyAttrId.valueBlock.toString();\n        if (KEY_ATTR in asn1.result) {\n            this.keyAttr = asn1.result.keyAttr;\n        }\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(new asn1js.ObjectIdentifier({ value: this.keyAttrId }));\n        if (KEY_ATTR in this) {\n            outputArray.push(this.keyAttr);\n        }\n        return (new asn1js.Sequence({\n            value: outputArray,\n        }));\n    }\n    toJSON() {\n        const res = {\n            keyAttrId: this.keyAttrId\n        };\n        if (KEY_ATTR in this) {\n            res.keyAttr = this.keyAttr.toJSON();\n        }\n        return res;\n    }\n}\nOtherKeyAttribute.CLASS_NAME = \"OtherKeyAttribute\";\n\nconst SUBJECT_KEY_IDENTIFIER = \"subjectKeyIdentifier\";\nconst DATE$1 = \"date\";\nconst OTHER$1 = \"other\";\nconst CLEAR_PROPS$w = [\n    SUBJECT_KEY_IDENTIFIER,\n    DATE$1,\n    OTHER$1,\n];\nclass RecipientKeyIdentifier extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.subjectKeyIdentifier = pvutils.getParametersValue(parameters, SUBJECT_KEY_IDENTIFIER, RecipientKeyIdentifier.defaultValues(SUBJECT_KEY_IDENTIFIER));\n        if (DATE$1 in parameters) {\n            this.date = pvutils.getParametersValue(parameters, DATE$1, RecipientKeyIdentifier.defaultValues(DATE$1));\n        }\n        if (OTHER$1 in parameters) {\n            this.other = pvutils.getParametersValue(parameters, OTHER$1, RecipientKeyIdentifier.defaultValues(OTHER$1));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case SUBJECT_KEY_IDENTIFIER:\n                return new asn1js.OctetString();\n            case DATE$1:\n                return new asn1js.GeneralizedTime();\n            case OTHER$1:\n                return new OtherKeyAttribute();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case SUBJECT_KEY_IDENTIFIER:\n                return (memberValue.isEqual(RecipientKeyIdentifier.defaultValues(SUBJECT_KEY_IDENTIFIER)));\n            case DATE$1:\n                return ((memberValue.year === 0) &&\n                    (memberValue.month === 0) &&\n                    (memberValue.day === 0) &&\n                    (memberValue.hour === 0) &&\n                    (memberValue.minute === 0) &&\n                    (memberValue.second === 0) &&\n                    (memberValue.millisecond === 0));\n            case OTHER$1:\n                return ((memberValue.keyAttrId === EMPTY_STRING) && ((\"keyAttr\" in memberValue) === false));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.OctetString({ name: (names.subjectKeyIdentifier || EMPTY_STRING) }),\n                new asn1js.GeneralizedTime({\n                    optional: true,\n                    name: (names.date || EMPTY_STRING)\n                }),\n                OtherKeyAttribute.schema(names.other || {})\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$w);\n        const asn1 = asn1js.compareSchema(schema, schema, RecipientKeyIdentifier.schema({\n            names: {\n                subjectKeyIdentifier: SUBJECT_KEY_IDENTIFIER,\n                date: DATE$1,\n                other: {\n                    names: {\n                        blockName: OTHER$1\n                    }\n                }\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.subjectKeyIdentifier = asn1.result.subjectKeyIdentifier;\n        if (DATE$1 in asn1.result)\n            this.date = asn1.result.date;\n        if (OTHER$1 in asn1.result)\n            this.other = new OtherKeyAttribute({ schema: asn1.result.other });\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(this.subjectKeyIdentifier);\n        if (this.date) {\n            outputArray.push(this.date);\n        }\n        if (this.other) {\n            outputArray.push(this.other.toSchema());\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            subjectKeyIdentifier: this.subjectKeyIdentifier.toJSON()\n        };\n        if (this.date) {\n            res.date = this.date.toJSON();\n        }\n        if (this.other) {\n            res.other = this.other.toJSON();\n        }\n        return res;\n    }\n}\nRecipientKeyIdentifier.CLASS_NAME = \"RecipientKeyIdentifier\";\n\nconst VARIANT$1 = \"variant\";\nconst VALUE$1 = \"value\";\nconst CLEAR_PROPS$v = [\n    \"blockName\",\n];\nclass KeyAgreeRecipientIdentifier extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.variant = pvutils.getParametersValue(parameters, VARIANT$1, KeyAgreeRecipientIdentifier.defaultValues(VARIANT$1));\n        this.value = pvutils.getParametersValue(parameters, VALUE$1, KeyAgreeRecipientIdentifier.defaultValues(VALUE$1));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VARIANT$1:\n                return (-1);\n            case VALUE$1:\n                return {};\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case VARIANT$1:\n                return (memberValue === (-1));\n            case VALUE$1:\n                return (Object.keys(memberValue).length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Choice({\n            value: [\n                IssuerAndSerialNumber.schema(names.issuerAndSerialNumber || {\n                    names: {\n                        blockName: (names.blockName || EMPTY_STRING)\n                    }\n                }),\n                new asn1js.Constructed({\n                    name: (names.blockName || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: RecipientKeyIdentifier.schema(names.rKeyId || {\n                        names: {\n                            blockName: (names.blockName || EMPTY_STRING)\n                        }\n                    }).valueBlock.value\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$v);\n        const asn1 = asn1js.compareSchema(schema, schema, KeyAgreeRecipientIdentifier.schema({\n            names: {\n                blockName: \"blockName\"\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (asn1.result.blockName.idBlock.tagClass === 1) {\n            this.variant = 1;\n            this.value = new IssuerAndSerialNumber({ schema: asn1.result.blockName });\n        }\n        else {\n            this.variant = 2;\n            this.value = new RecipientKeyIdentifier({\n                schema: new asn1js.Sequence({\n                    value: asn1.result.blockName.valueBlock.value\n                })\n            });\n        }\n    }\n    toSchema() {\n        switch (this.variant) {\n            case 1:\n                return this.value.toSchema();\n            case 2:\n                return new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: this.value.toSchema().valueBlock.value\n                });\n            default:\n                return new asn1js.Any();\n        }\n    }\n    toJSON() {\n        const res = {\n            variant: this.variant,\n        };\n        if ((this.variant === 1) || (this.variant === 2)) {\n            res.value = this.value.toJSON();\n        }\n        return res;\n    }\n}\nKeyAgreeRecipientIdentifier.CLASS_NAME = \"KeyAgreeRecipientIdentifier\";\n\nconst RID = \"rid\";\nconst ENCRYPTED_KEY$2 = \"encryptedKey\";\nconst CLEAR_PROPS$u = [\n    RID,\n    ENCRYPTED_KEY$2,\n];\nclass RecipientEncryptedKey extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.rid = pvutils.getParametersValue(parameters, RID, RecipientEncryptedKey.defaultValues(RID));\n        this.encryptedKey = pvutils.getParametersValue(parameters, ENCRYPTED_KEY$2, RecipientEncryptedKey.defaultValues(ENCRYPTED_KEY$2));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case RID:\n                return new KeyAgreeRecipientIdentifier();\n            case ENCRYPTED_KEY$2:\n                return new asn1js.OctetString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case RID:\n                return ((memberValue.variant === (-1)) && ((\"value\" in memberValue) === false));\n            case ENCRYPTED_KEY$2:\n                return (memberValue.isEqual(RecipientEncryptedKey.defaultValues(ENCRYPTED_KEY$2)));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                KeyAgreeRecipientIdentifier.schema(names.rid || {}),\n                new asn1js.OctetString({ name: (names.encryptedKey || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$u);\n        const asn1 = asn1js.compareSchema(schema, schema, RecipientEncryptedKey.schema({\n            names: {\n                rid: {\n                    names: {\n                        blockName: RID\n                    }\n                },\n                encryptedKey: ENCRYPTED_KEY$2\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.rid = new KeyAgreeRecipientIdentifier({ schema: asn1.result.rid });\n        this.encryptedKey = asn1.result.encryptedKey;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                this.rid.toSchema(),\n                this.encryptedKey\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            rid: this.rid.toJSON(),\n            encryptedKey: this.encryptedKey.toJSON(),\n        };\n    }\n}\nRecipientEncryptedKey.CLASS_NAME = \"RecipientEncryptedKey\";\n\nconst ENCRYPTED_KEYS = \"encryptedKeys\";\nconst RECIPIENT_ENCRYPTED_KEYS = \"RecipientEncryptedKeys\";\nconst CLEAR_PROPS$t = [\n    RECIPIENT_ENCRYPTED_KEYS,\n];\nclass RecipientEncryptedKeys extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.encryptedKeys = pvutils.getParametersValue(parameters, ENCRYPTED_KEYS, RecipientEncryptedKeys.defaultValues(ENCRYPTED_KEYS));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ENCRYPTED_KEYS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case ENCRYPTED_KEYS:\n                return (memberValue.length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Repeated({\n                    name: (names.RecipientEncryptedKeys || EMPTY_STRING),\n                    value: RecipientEncryptedKey.schema()\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$t);\n        const asn1 = asn1js.compareSchema(schema, schema, RecipientEncryptedKeys.schema({\n            names: {\n                RecipientEncryptedKeys: RECIPIENT_ENCRYPTED_KEYS\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.encryptedKeys = Array.from(asn1.result.RecipientEncryptedKeys, element => new RecipientEncryptedKey({ schema: element }));\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: Array.from(this.encryptedKeys, o => o.toSchema())\n        }));\n    }\n    toJSON() {\n        return {\n            encryptedKeys: Array.from(this.encryptedKeys, o => o.toJSON())\n        };\n    }\n}\nRecipientEncryptedKeys.CLASS_NAME = \"RecipientEncryptedKeys\";\n\nconst VERSION$b = \"version\";\nconst ORIGINATOR = \"originator\";\nconst UKM = \"ukm\";\nconst KEY_ENCRYPTION_ALGORITHM$2 = \"keyEncryptionAlgorithm\";\nconst RECIPIENT_ENCRYPTED_KEY = \"recipientEncryptedKeys\";\nconst RECIPIENT_CERTIFICATE = \"recipientCertificate\";\nconst RECIPIENT_PUBLIC_KEY = \"recipientPublicKey\";\nconst CLEAR_PROPS$s = [\n    VERSION$b,\n    ORIGINATOR,\n    UKM,\n    KEY_ENCRYPTION_ALGORITHM$2,\n    RECIPIENT_ENCRYPTED_KEY,\n];\nclass KeyAgreeRecipientInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION$b, KeyAgreeRecipientInfo.defaultValues(VERSION$b));\n        this.originator = pvutils.getParametersValue(parameters, ORIGINATOR, KeyAgreeRecipientInfo.defaultValues(ORIGINATOR));\n        if (UKM in parameters) {\n            this.ukm = pvutils.getParametersValue(parameters, UKM, KeyAgreeRecipientInfo.defaultValues(UKM));\n        }\n        this.keyEncryptionAlgorithm = pvutils.getParametersValue(parameters, KEY_ENCRYPTION_ALGORITHM$2, KeyAgreeRecipientInfo.defaultValues(KEY_ENCRYPTION_ALGORITHM$2));\n        this.recipientEncryptedKeys = pvutils.getParametersValue(parameters, RECIPIENT_ENCRYPTED_KEY, KeyAgreeRecipientInfo.defaultValues(RECIPIENT_ENCRYPTED_KEY));\n        this.recipientCertificate = pvutils.getParametersValue(parameters, RECIPIENT_CERTIFICATE, KeyAgreeRecipientInfo.defaultValues(RECIPIENT_CERTIFICATE));\n        this.recipientPublicKey = pvutils.getParametersValue(parameters, RECIPIENT_PUBLIC_KEY, KeyAgreeRecipientInfo.defaultValues(RECIPIENT_PUBLIC_KEY));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$b:\n                return 0;\n            case ORIGINATOR:\n                return new OriginatorIdentifierOrKey();\n            case UKM:\n                return new asn1js.OctetString();\n            case KEY_ENCRYPTION_ALGORITHM$2:\n                return new AlgorithmIdentifier();\n            case RECIPIENT_ENCRYPTED_KEY:\n                return new RecipientEncryptedKeys();\n            case RECIPIENT_CERTIFICATE:\n                return new Certificate();\n            case RECIPIENT_PUBLIC_KEY:\n                return null;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case VERSION$b:\n                return (memberValue === 0);\n            case ORIGINATOR:\n                return ((memberValue.variant === (-1)) && ((\"value\" in memberValue) === false));\n            case UKM:\n                return (memberValue.isEqual(KeyAgreeRecipientInfo.defaultValues(UKM)));\n            case KEY_ENCRYPTION_ALGORITHM$2:\n                return ((memberValue.algorithmId === EMPTY_STRING) && ((\"algorithmParams\" in memberValue) === false));\n            case RECIPIENT_ENCRYPTED_KEY:\n                return (memberValue.encryptedKeys.length === 0);\n            case RECIPIENT_CERTIFICATE:\n                return false;\n            case RECIPIENT_PUBLIC_KEY:\n                return false;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: names.blockName || EMPTY_STRING,\n            value: [\n                new asn1js.Integer({ name: names.version || EMPTY_STRING }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [\n                        OriginatorIdentifierOrKey.schema(names.originator || {})\n                    ]\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: [new asn1js.OctetString({ name: names.ukm || EMPTY_STRING })]\n                }),\n                AlgorithmIdentifier.schema(names.keyEncryptionAlgorithm || {}),\n                RecipientEncryptedKeys.schema(names.recipientEncryptedKeys || {})\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$s);\n        const asn1 = asn1js.compareSchema(schema, schema, KeyAgreeRecipientInfo.schema({\n            names: {\n                version: VERSION$b,\n                originator: {\n                    names: {\n                        blockName: ORIGINATOR\n                    }\n                },\n                ukm: UKM,\n                keyEncryptionAlgorithm: {\n                    names: {\n                        blockName: KEY_ENCRYPTION_ALGORITHM$2\n                    }\n                },\n                recipientEncryptedKeys: {\n                    names: {\n                        blockName: RECIPIENT_ENCRYPTED_KEY\n                    }\n                }\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.version = asn1.result.version.valueBlock.valueDec;\n        this.originator = new OriginatorIdentifierOrKey({ schema: asn1.result.originator });\n        if (UKM in asn1.result)\n            this.ukm = asn1.result.ukm;\n        this.keyEncryptionAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.keyEncryptionAlgorithm });\n        this.recipientEncryptedKeys = new RecipientEncryptedKeys({ schema: asn1.result.recipientEncryptedKeys });\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(new asn1js.Integer({ value: this.version }));\n        outputArray.push(new asn1js.Constructed({\n            idBlock: {\n                tagClass: 3,\n                tagNumber: 0\n            },\n            value: [this.originator.toSchema()]\n        }));\n        if (this.ukm) {\n            outputArray.push(new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                value: [this.ukm]\n            }));\n        }\n        outputArray.push(this.keyEncryptionAlgorithm.toSchema());\n        outputArray.push(this.recipientEncryptedKeys.toSchema());\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            version: this.version,\n            originator: this.originator.toJSON(),\n            keyEncryptionAlgorithm: this.keyEncryptionAlgorithm.toJSON(),\n            recipientEncryptedKeys: this.recipientEncryptedKeys.toJSON(),\n        };\n        if (this.ukm) {\n            res.ukm = this.ukm.toJSON();\n        }\n        return res;\n    }\n}\nKeyAgreeRecipientInfo.CLASS_NAME = \"KeyAgreeRecipientInfo\";\n\nconst KEY_IDENTIFIER = \"keyIdentifier\";\nconst DATE = \"date\";\nconst OTHER = \"other\";\nconst CLEAR_PROPS$r = [\n    KEY_IDENTIFIER,\n    DATE,\n    OTHER,\n];\nclass KEKIdentifier extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.keyIdentifier = pvutils.getParametersValue(parameters, KEY_IDENTIFIER, KEKIdentifier.defaultValues(KEY_IDENTIFIER));\n        if (DATE in parameters) {\n            this.date = pvutils.getParametersValue(parameters, DATE, KEKIdentifier.defaultValues(DATE));\n        }\n        if (OTHER in parameters) {\n            this.other = pvutils.getParametersValue(parameters, OTHER, KEKIdentifier.defaultValues(OTHER));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case KEY_IDENTIFIER:\n                return new asn1js.OctetString();\n            case DATE:\n                return new asn1js.GeneralizedTime();\n            case OTHER:\n                return new OtherKeyAttribute();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case KEY_IDENTIFIER:\n                return (memberValue.isEqual(KEKIdentifier.defaultValues(KEY_IDENTIFIER)));\n            case DATE:\n                return ((memberValue.year === 0) &&\n                    (memberValue.month === 0) &&\n                    (memberValue.day === 0) &&\n                    (memberValue.hour === 0) &&\n                    (memberValue.minute === 0) &&\n                    (memberValue.second === 0) &&\n                    (memberValue.millisecond === 0));\n            case OTHER:\n                return ((memberValue.compareWithDefault(\"keyAttrId\", memberValue.keyAttrId)) &&\n                    ((\"keyAttr\" in memberValue) === false));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.OctetString({ name: (names.keyIdentifier || EMPTY_STRING) }),\n                new asn1js.GeneralizedTime({\n                    optional: true,\n                    name: (names.date || EMPTY_STRING)\n                }),\n                OtherKeyAttribute.schema(names.other || {})\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$r);\n        const asn1 = asn1js.compareSchema(schema, schema, KEKIdentifier.schema({\n            names: {\n                keyIdentifier: KEY_IDENTIFIER,\n                date: DATE,\n                other: {\n                    names: {\n                        blockName: OTHER\n                    }\n                }\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.keyIdentifier = asn1.result.keyIdentifier;\n        if (DATE in asn1.result)\n            this.date = asn1.result.date;\n        if (OTHER in asn1.result)\n            this.other = new OtherKeyAttribute({ schema: asn1.result.other });\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(this.keyIdentifier);\n        if (this.date) {\n            outputArray.push(this.date);\n        }\n        if (this.other) {\n            outputArray.push(this.other.toSchema());\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            keyIdentifier: this.keyIdentifier.toJSON()\n        };\n        if (this.date) {\n            res.date = this.date;\n        }\n        if (this.other) {\n            res.other = this.other.toJSON();\n        }\n        return res;\n    }\n}\nKEKIdentifier.CLASS_NAME = \"KEKIdentifier\";\n\nconst VERSION$a = \"version\";\nconst KEK_ID = \"kekid\";\nconst KEY_ENCRYPTION_ALGORITHM$1 = \"keyEncryptionAlgorithm\";\nconst ENCRYPTED_KEY$1 = \"encryptedKey\";\nconst PER_DEFINED_KEK = \"preDefinedKEK\";\nconst CLEAR_PROPS$q = [\n    VERSION$a,\n    KEK_ID,\n    KEY_ENCRYPTION_ALGORITHM$1,\n    ENCRYPTED_KEY$1,\n];\nclass KEKRecipientInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION$a, KEKRecipientInfo.defaultValues(VERSION$a));\n        this.kekid = pvutils.getParametersValue(parameters, KEK_ID, KEKRecipientInfo.defaultValues(KEK_ID));\n        this.keyEncryptionAlgorithm = pvutils.getParametersValue(parameters, KEY_ENCRYPTION_ALGORITHM$1, KEKRecipientInfo.defaultValues(KEY_ENCRYPTION_ALGORITHM$1));\n        this.encryptedKey = pvutils.getParametersValue(parameters, ENCRYPTED_KEY$1, KEKRecipientInfo.defaultValues(ENCRYPTED_KEY$1));\n        this.preDefinedKEK = pvutils.getParametersValue(parameters, PER_DEFINED_KEK, KEKRecipientInfo.defaultValues(PER_DEFINED_KEK));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$a:\n                return 0;\n            case KEK_ID:\n                return new KEKIdentifier();\n            case KEY_ENCRYPTION_ALGORITHM$1:\n                return new AlgorithmIdentifier();\n            case ENCRYPTED_KEY$1:\n                return new asn1js.OctetString();\n            case PER_DEFINED_KEK:\n                return EMPTY_BUFFER;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case \"KEKRecipientInfo\":\n                return (memberValue === KEKRecipientInfo.defaultValues(VERSION$a));\n            case KEK_ID:\n                return ((memberValue.compareWithDefault(\"keyIdentifier\", memberValue.keyIdentifier)) &&\n                    ((\"date\" in memberValue) === false) &&\n                    ((\"other\" in memberValue) === false));\n            case KEY_ENCRYPTION_ALGORITHM$1:\n                return ((memberValue.algorithmId === EMPTY_STRING) && ((\"algorithmParams\" in memberValue) === false));\n            case ENCRYPTED_KEY$1:\n                return (memberValue.isEqual(KEKRecipientInfo.defaultValues(ENCRYPTED_KEY$1)));\n            case PER_DEFINED_KEK:\n                return (memberValue.byteLength === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Integer({ name: (names.version || EMPTY_STRING) }),\n                KEKIdentifier.schema(names.kekid || {}),\n                AlgorithmIdentifier.schema(names.keyEncryptionAlgorithm || {}),\n                new asn1js.OctetString({ name: (names.encryptedKey || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$q);\n        const asn1 = asn1js.compareSchema(schema, schema, KEKRecipientInfo.schema({\n            names: {\n                version: VERSION$a,\n                kekid: {\n                    names: {\n                        blockName: KEK_ID\n                    }\n                },\n                keyEncryptionAlgorithm: {\n                    names: {\n                        blockName: KEY_ENCRYPTION_ALGORITHM$1\n                    }\n                },\n                encryptedKey: ENCRYPTED_KEY$1\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.version = asn1.result.version.valueBlock.valueDec;\n        this.kekid = new KEKIdentifier({ schema: asn1.result.kekid });\n        this.keyEncryptionAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.keyEncryptionAlgorithm });\n        this.encryptedKey = asn1.result.encryptedKey;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                new asn1js.Integer({ value: this.version }),\n                this.kekid.toSchema(),\n                this.keyEncryptionAlgorithm.toSchema(),\n                this.encryptedKey\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            version: this.version,\n            kekid: this.kekid.toJSON(),\n            keyEncryptionAlgorithm: this.keyEncryptionAlgorithm.toJSON(),\n            encryptedKey: this.encryptedKey.toJSON(),\n        };\n    }\n}\nKEKRecipientInfo.CLASS_NAME = \"KEKRecipientInfo\";\n\nconst VERSION$9 = \"version\";\nconst KEY_DERIVATION_ALGORITHM = \"keyDerivationAlgorithm\";\nconst KEY_ENCRYPTION_ALGORITHM = \"keyEncryptionAlgorithm\";\nconst ENCRYPTED_KEY = \"encryptedKey\";\nconst PASSWORD = \"password\";\nconst CLEAR_PROPS$p = [\n    VERSION$9,\n    KEY_DERIVATION_ALGORITHM,\n    KEY_ENCRYPTION_ALGORITHM,\n    ENCRYPTED_KEY\n];\nclass PasswordRecipientinfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION$9, PasswordRecipientinfo.defaultValues(VERSION$9));\n        if (KEY_DERIVATION_ALGORITHM in parameters) {\n            this.keyDerivationAlgorithm = pvutils.getParametersValue(parameters, KEY_DERIVATION_ALGORITHM, PasswordRecipientinfo.defaultValues(KEY_DERIVATION_ALGORITHM));\n        }\n        this.keyEncryptionAlgorithm = pvutils.getParametersValue(parameters, KEY_ENCRYPTION_ALGORITHM, PasswordRecipientinfo.defaultValues(KEY_ENCRYPTION_ALGORITHM));\n        this.encryptedKey = pvutils.getParametersValue(parameters, ENCRYPTED_KEY, PasswordRecipientinfo.defaultValues(ENCRYPTED_KEY));\n        this.password = pvutils.getParametersValue(parameters, PASSWORD, PasswordRecipientinfo.defaultValues(PASSWORD));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$9:\n                return (-1);\n            case KEY_DERIVATION_ALGORITHM:\n                return new AlgorithmIdentifier();\n            case KEY_ENCRYPTION_ALGORITHM:\n                return new AlgorithmIdentifier();\n            case ENCRYPTED_KEY:\n                return new asn1js.OctetString();\n            case PASSWORD:\n                return EMPTY_BUFFER;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case VERSION$9:\n                return (memberValue === (-1));\n            case KEY_DERIVATION_ALGORITHM:\n            case KEY_ENCRYPTION_ALGORITHM:\n                return ((memberValue.algorithmId === EMPTY_STRING) && ((\"algorithmParams\" in memberValue) === false));\n            case ENCRYPTED_KEY:\n                return (memberValue.isEqual(PasswordRecipientinfo.defaultValues(ENCRYPTED_KEY)));\n            case PASSWORD:\n                return (memberValue.byteLength === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Integer({ name: (names.version || EMPTY_STRING) }),\n                new asn1js.Constructed({\n                    name: (names.keyDerivationAlgorithm || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: AlgorithmIdentifier.schema().valueBlock.value\n                }),\n                AlgorithmIdentifier.schema(names.keyEncryptionAlgorithm || {}),\n                new asn1js.OctetString({ name: (names.encryptedKey || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$p);\n        const asn1 = asn1js.compareSchema(schema, schema, PasswordRecipientinfo.schema({\n            names: {\n                version: VERSION$9,\n                keyDerivationAlgorithm: KEY_DERIVATION_ALGORITHM,\n                keyEncryptionAlgorithm: {\n                    names: {\n                        blockName: KEY_ENCRYPTION_ALGORITHM\n                    }\n                },\n                encryptedKey: ENCRYPTED_KEY\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.version = asn1.result.version.valueBlock.valueDec;\n        if (KEY_DERIVATION_ALGORITHM in asn1.result) {\n            this.keyDerivationAlgorithm = new AlgorithmIdentifier({\n                schema: new asn1js.Sequence({\n                    value: asn1.result.keyDerivationAlgorithm.valueBlock.value\n                })\n            });\n        }\n        this.keyEncryptionAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.keyEncryptionAlgorithm });\n        this.encryptedKey = asn1.result.encryptedKey;\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(new asn1js.Integer({ value: this.version }));\n        if (this.keyDerivationAlgorithm) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: this.keyDerivationAlgorithm.toSchema().valueBlock.value\n            }));\n        }\n        outputArray.push(this.keyEncryptionAlgorithm.toSchema());\n        outputArray.push(this.encryptedKey);\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            version: this.version,\n            keyEncryptionAlgorithm: this.keyEncryptionAlgorithm.toJSON(),\n            encryptedKey: this.encryptedKey.toJSON(),\n        };\n        if (this.keyDerivationAlgorithm) {\n            res.keyDerivationAlgorithm = this.keyDerivationAlgorithm.toJSON();\n        }\n        return res;\n    }\n}\nPasswordRecipientinfo.CLASS_NAME = \"PasswordRecipientInfo\";\n\nconst ORI_TYPE = \"oriType\";\nconst ORI_VALUE = \"oriValue\";\nconst CLEAR_PROPS$o = [\n    ORI_TYPE,\n    ORI_VALUE\n];\nclass OtherRecipientInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.oriType = pvutils.getParametersValue(parameters, ORI_TYPE, OtherRecipientInfo.defaultValues(ORI_TYPE));\n        this.oriValue = pvutils.getParametersValue(parameters, ORI_VALUE, OtherRecipientInfo.defaultValues(ORI_VALUE));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case ORI_TYPE:\n                return EMPTY_STRING;\n            case ORI_VALUE:\n                return {};\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case ORI_TYPE:\n                return (memberValue === EMPTY_STRING);\n            case ORI_VALUE:\n                return (Object.keys(memberValue).length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.oriType || EMPTY_STRING) }),\n                new asn1js.Any({ name: (names.oriValue || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$o);\n        const asn1 = asn1js.compareSchema(schema, schema, OtherRecipientInfo.schema({\n            names: {\n                oriType: ORI_TYPE,\n                oriValue: ORI_VALUE\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.oriType = asn1.result.oriType.valueBlock.toString();\n        this.oriValue = asn1.result.oriValue;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                new asn1js.ObjectIdentifier({ value: this.oriType }),\n                this.oriValue\n            ]\n        }));\n    }\n    toJSON() {\n        const res = {\n            oriType: this.oriType\n        };\n        if (!OtherRecipientInfo.compareWithDefault(ORI_VALUE, this.oriValue)) {\n            res.oriValue = this.oriValue.toJSON();\n        }\n        return res;\n    }\n}\nOtherRecipientInfo.CLASS_NAME = \"OtherRecipientInfo\";\n\nconst VARIANT = \"variant\";\nconst VALUE = \"value\";\nconst CLEAR_PROPS$n = [\n    \"blockName\"\n];\nclass RecipientInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.variant = pvutils.getParametersValue(parameters, VARIANT, RecipientInfo.defaultValues(VARIANT));\n        if (VALUE in parameters) {\n            this.value = pvutils.getParametersValue(parameters, VALUE, RecipientInfo.defaultValues(VALUE));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VARIANT:\n                return (-1);\n            case VALUE:\n                return {};\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case VARIANT:\n                return (memberValue === RecipientInfo.defaultValues(memberName));\n            case VALUE:\n                return (Object.keys(memberValue).length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Choice({\n            value: [\n                KeyTransRecipientInfo.schema({\n                    names: {\n                        blockName: (names.blockName || EMPTY_STRING)\n                    }\n                }),\n                new asn1js.Constructed({\n                    name: (names.blockName || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: KeyAgreeRecipientInfo.schema().valueBlock.value\n                }),\n                new asn1js.Constructed({\n                    name: (names.blockName || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 2\n                    },\n                    value: KEKRecipientInfo.schema().valueBlock.value\n                }),\n                new asn1js.Constructed({\n                    name: (names.blockName || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 3\n                    },\n                    value: PasswordRecipientinfo.schema().valueBlock.value\n                }),\n                new asn1js.Constructed({\n                    name: (names.blockName || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 4\n                    },\n                    value: OtherRecipientInfo.schema().valueBlock.value\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$n);\n        const asn1 = asn1js.compareSchema(schema, schema, RecipientInfo.schema({\n            names: {\n                blockName: \"blockName\"\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (asn1.result.blockName.idBlock.tagClass === 1) {\n            this.variant = 1;\n            this.value = new KeyTransRecipientInfo({ schema: asn1.result.blockName });\n        }\n        else {\n            const blockSequence = new asn1js.Sequence({\n                value: asn1.result.blockName.valueBlock.value\n            });\n            switch (asn1.result.blockName.idBlock.tagNumber) {\n                case 1:\n                    this.variant = 2;\n                    this.value = new KeyAgreeRecipientInfo({ schema: blockSequence });\n                    break;\n                case 2:\n                    this.variant = 3;\n                    this.value = new KEKRecipientInfo({ schema: blockSequence });\n                    break;\n                case 3:\n                    this.variant = 4;\n                    this.value = new PasswordRecipientinfo({ schema: blockSequence });\n                    break;\n                case 4:\n                    this.variant = 5;\n                    this.value = new OtherRecipientInfo({ schema: blockSequence });\n                    break;\n                default:\n                    throw new Error(\"Incorrect structure of RecipientInfo block\");\n            }\n        }\n    }\n    toSchema() {\n        ParameterError.assertEmpty(this.value, \"value\", \"RecipientInfo\");\n        const _schema = this.value.toSchema();\n        switch (this.variant) {\n            case 1:\n                return _schema;\n            case 2:\n            case 3:\n            case 4:\n                _schema.idBlock.tagClass = 3;\n                _schema.idBlock.tagNumber = (this.variant - 1);\n                return _schema;\n            default:\n                return new asn1js.Any();\n        }\n    }\n    toJSON() {\n        const res = {\n            variant: this.variant\n        };\n        if (this.value && (this.variant >= 1) && (this.variant <= 4)) {\n            res.value = this.value.toJSON();\n        }\n        return res;\n    }\n}\nRecipientInfo.CLASS_NAME = \"RecipientInfo\";\n\nconst HASH_ALGORITHM$2 = \"hashAlgorithm\";\nconst MASK_GEN_ALGORITHM = \"maskGenAlgorithm\";\nconst P_SOURCE_ALGORITHM = \"pSourceAlgorithm\";\nconst CLEAR_PROPS$m = [\n    HASH_ALGORITHM$2,\n    MASK_GEN_ALGORITHM,\n    P_SOURCE_ALGORITHM\n];\nclass RSAESOAEPParams extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.hashAlgorithm = pvutils.getParametersValue(parameters, HASH_ALGORITHM$2, RSAESOAEPParams.defaultValues(HASH_ALGORITHM$2));\n        this.maskGenAlgorithm = pvutils.getParametersValue(parameters, MASK_GEN_ALGORITHM, RSAESOAEPParams.defaultValues(MASK_GEN_ALGORITHM));\n        this.pSourceAlgorithm = pvutils.getParametersValue(parameters, P_SOURCE_ALGORITHM, RSAESOAEPParams.defaultValues(P_SOURCE_ALGORITHM));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case HASH_ALGORITHM$2:\n                return new AlgorithmIdentifier({\n                    algorithmId: \"1.3.14.3.2.26\",\n                    algorithmParams: new asn1js.Null()\n                });\n            case MASK_GEN_ALGORITHM:\n                return new AlgorithmIdentifier({\n                    algorithmId: \"1.2.840.113549.1.1.8\",\n                    algorithmParams: (new AlgorithmIdentifier({\n                        algorithmId: \"1.3.14.3.2.26\",\n                        algorithmParams: new asn1js.Null()\n                    })).toSchema()\n                });\n            case P_SOURCE_ALGORITHM:\n                return new AlgorithmIdentifier({\n                    algorithmId: \"1.2.840.113549.1.1.9\",\n                    algorithmParams: new asn1js.OctetString({ valueHex: (new Uint8Array([0xda, 0x39, 0xa3, 0xee, 0x5e, 0x6b, 0x4b, 0x0d, 0x32, 0x55, 0xbf, 0xef, 0x95, 0x60, 0x18, 0x90, 0xaf, 0xd8, 0x07, 0x09])).buffer })\n                });\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    optional: true,\n                    value: [AlgorithmIdentifier.schema(names.hashAlgorithm || {})]\n                }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    optional: true,\n                    value: [AlgorithmIdentifier.schema(names.maskGenAlgorithm || {})]\n                }),\n                new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 2\n                    },\n                    optional: true,\n                    value: [AlgorithmIdentifier.schema(names.pSourceAlgorithm || {})]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$m);\n        const asn1 = asn1js.compareSchema(schema, schema, RSAESOAEPParams.schema({\n            names: {\n                hashAlgorithm: {\n                    names: {\n                        blockName: HASH_ALGORITHM$2\n                    }\n                },\n                maskGenAlgorithm: {\n                    names: {\n                        blockName: MASK_GEN_ALGORITHM\n                    }\n                },\n                pSourceAlgorithm: {\n                    names: {\n                        blockName: P_SOURCE_ALGORITHM\n                    }\n                }\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        if (HASH_ALGORITHM$2 in asn1.result)\n            this.hashAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.hashAlgorithm });\n        if (MASK_GEN_ALGORITHM in asn1.result)\n            this.maskGenAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.maskGenAlgorithm });\n        if (P_SOURCE_ALGORITHM in asn1.result)\n            this.pSourceAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.pSourceAlgorithm });\n    }\n    toSchema() {\n        const outputArray = [];\n        if (!this.hashAlgorithm.isEqual(RSAESOAEPParams.defaultValues(HASH_ALGORITHM$2))) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [this.hashAlgorithm.toSchema()]\n            }));\n        }\n        if (!this.maskGenAlgorithm.isEqual(RSAESOAEPParams.defaultValues(MASK_GEN_ALGORITHM))) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                value: [this.maskGenAlgorithm.toSchema()]\n            }));\n        }\n        if (!this.pSourceAlgorithm.isEqual(RSAESOAEPParams.defaultValues(P_SOURCE_ALGORITHM))) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 2\n                },\n                value: [this.pSourceAlgorithm.toSchema()]\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {};\n        if (!this.hashAlgorithm.isEqual(RSAESOAEPParams.defaultValues(HASH_ALGORITHM$2))) {\n            res.hashAlgorithm = this.hashAlgorithm.toJSON();\n        }\n        if (!this.maskGenAlgorithm.isEqual(RSAESOAEPParams.defaultValues(MASK_GEN_ALGORITHM))) {\n            res.maskGenAlgorithm = this.maskGenAlgorithm.toJSON();\n        }\n        if (!this.pSourceAlgorithm.isEqual(RSAESOAEPParams.defaultValues(P_SOURCE_ALGORITHM))) {\n            res.pSourceAlgorithm = this.pSourceAlgorithm.toJSON();\n        }\n        return res;\n    }\n}\nRSAESOAEPParams.CLASS_NAME = \"RSAESOAEPParams\";\n\nconst KEY_INFO = \"keyInfo\";\nconst ENTITY_U_INFO = \"entityUInfo\";\nconst SUPP_PUB_INFO = \"suppPubInfo\";\nconst CLEAR_PROPS$l = [\n    KEY_INFO,\n    ENTITY_U_INFO,\n    SUPP_PUB_INFO\n];\nclass ECCCMSSharedInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.keyInfo = pvutils.getParametersValue(parameters, KEY_INFO, ECCCMSSharedInfo.defaultValues(KEY_INFO));\n        if (ENTITY_U_INFO in parameters) {\n            this.entityUInfo = pvutils.getParametersValue(parameters, ENTITY_U_INFO, ECCCMSSharedInfo.defaultValues(ENTITY_U_INFO));\n        }\n        this.suppPubInfo = pvutils.getParametersValue(parameters, SUPP_PUB_INFO, ECCCMSSharedInfo.defaultValues(SUPP_PUB_INFO));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case KEY_INFO:\n                return new AlgorithmIdentifier();\n            case ENTITY_U_INFO:\n                return new asn1js.OctetString();\n            case SUPP_PUB_INFO:\n                return new asn1js.OctetString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case KEY_INFO:\n            case ENTITY_U_INFO:\n            case SUPP_PUB_INFO:\n                return (memberValue.isEqual(ECCCMSSharedInfo.defaultValues(memberName)));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                AlgorithmIdentifier.schema(names.keyInfo || {}),\n                new asn1js.Constructed({\n                    name: (names.entityUInfo || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    optional: true,\n                    value: [new asn1js.OctetString()]\n                }),\n                new asn1js.Constructed({\n                    name: (names.suppPubInfo || EMPTY_STRING),\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 2\n                    },\n                    value: [new asn1js.OctetString()]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$l);\n        const asn1 = asn1js.compareSchema(schema, schema, ECCCMSSharedInfo.schema({\n            names: {\n                keyInfo: {\n                    names: {\n                        blockName: KEY_INFO\n                    }\n                },\n                entityUInfo: ENTITY_U_INFO,\n                suppPubInfo: SUPP_PUB_INFO\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.keyInfo = new AlgorithmIdentifier({ schema: asn1.result.keyInfo });\n        if (ENTITY_U_INFO in asn1.result)\n            this.entityUInfo = asn1.result.entityUInfo.valueBlock.value[0];\n        this.suppPubInfo = asn1.result.suppPubInfo.valueBlock.value[0];\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(this.keyInfo.toSchema());\n        if (this.entityUInfo) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [this.entityUInfo]\n            }));\n        }\n        outputArray.push(new asn1js.Constructed({\n            idBlock: {\n                tagClass: 3,\n                tagNumber: 2\n            },\n            value: [this.suppPubInfo]\n        }));\n        return new asn1js.Sequence({\n            value: outputArray\n        });\n    }\n    toJSON() {\n        const res = {\n            keyInfo: this.keyInfo.toJSON(),\n            suppPubInfo: this.suppPubInfo.toJSON(),\n        };\n        if (this.entityUInfo) {\n            res.entityUInfo = this.entityUInfo.toJSON();\n        }\n        return res;\n    }\n}\nECCCMSSharedInfo.CLASS_NAME = \"ECCCMSSharedInfo\";\n\nconst VERSION$8 = \"version\";\nconst ORIGINATOR_INFO = \"originatorInfo\";\nconst RECIPIENT_INFOS = \"recipientInfos\";\nconst ENCRYPTED_CONTENT_INFO = \"encryptedContentInfo\";\nconst UNPROTECTED_ATTRS = \"unprotectedAttrs\";\nconst CLEAR_PROPS$k = [\n    VERSION$8,\n    ORIGINATOR_INFO,\n    RECIPIENT_INFOS,\n    ENCRYPTED_CONTENT_INFO,\n    UNPROTECTED_ATTRS\n];\nconst defaultEncryptionParams = {\n    kdfAlgorithm: \"SHA-512\",\n    kekEncryptionLength: 256\n};\nconst curveLengthByName = {\n    \"P-256\": 256,\n    \"P-384\": 384,\n    \"P-521\": 528\n};\nclass EnvelopedData extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION$8, EnvelopedData.defaultValues(VERSION$8));\n        if (ORIGINATOR_INFO in parameters) {\n            this.originatorInfo = pvutils.getParametersValue(parameters, ORIGINATOR_INFO, EnvelopedData.defaultValues(ORIGINATOR_INFO));\n        }\n        this.recipientInfos = pvutils.getParametersValue(parameters, RECIPIENT_INFOS, EnvelopedData.defaultValues(RECIPIENT_INFOS));\n        this.encryptedContentInfo = pvutils.getParametersValue(parameters, ENCRYPTED_CONTENT_INFO, EnvelopedData.defaultValues(ENCRYPTED_CONTENT_INFO));\n        if (UNPROTECTED_ATTRS in parameters) {\n            this.unprotectedAttrs = pvutils.getParametersValue(parameters, UNPROTECTED_ATTRS, EnvelopedData.defaultValues(UNPROTECTED_ATTRS));\n        }\n        this.policy = {\n            disableSplit: !!parameters.disableSplit,\n        };\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$8:\n                return 0;\n            case ORIGINATOR_INFO:\n                return new OriginatorInfo();\n            case RECIPIENT_INFOS:\n                return [];\n            case ENCRYPTED_CONTENT_INFO:\n                return new EncryptedContentInfo();\n            case UNPROTECTED_ATTRS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case VERSION$8:\n                return (memberValue === EnvelopedData.defaultValues(memberName));\n            case ORIGINATOR_INFO:\n                return ((memberValue.certs.certificates.length === 0) && (memberValue.crls.crls.length === 0));\n            case RECIPIENT_INFOS:\n            case UNPROTECTED_ATTRS:\n                return (memberValue.length === 0);\n            case ENCRYPTED_CONTENT_INFO:\n                return ((EncryptedContentInfo.compareWithDefault(\"contentType\", memberValue.contentType)) &&\n                    (EncryptedContentInfo.compareWithDefault(\"contentEncryptionAlgorithm\", memberValue.contentEncryptionAlgorithm) &&\n                        (EncryptedContentInfo.compareWithDefault(\"encryptedContent\", memberValue.encryptedContent))));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Integer({ name: (names.version || EMPTY_STRING) }),\n                new asn1js.Constructed({\n                    name: (names.originatorInfo || EMPTY_STRING),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: OriginatorInfo.schema().valueBlock.value\n                }),\n                new asn1js.Set({\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.recipientInfos || EMPTY_STRING),\n                            value: RecipientInfo.schema()\n                        })\n                    ]\n                }),\n                EncryptedContentInfo.schema(names.encryptedContentInfo || {}),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.unprotectedAttrs || EMPTY_STRING),\n                            value: Attribute.schema()\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$k);\n        const asn1 = asn1js.compareSchema(schema, schema, EnvelopedData.schema({\n            names: {\n                version: VERSION$8,\n                originatorInfo: ORIGINATOR_INFO,\n                recipientInfos: RECIPIENT_INFOS,\n                encryptedContentInfo: {\n                    names: {\n                        blockName: ENCRYPTED_CONTENT_INFO\n                    }\n                },\n                unprotectedAttrs: UNPROTECTED_ATTRS\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.version = asn1.result.version.valueBlock.valueDec;\n        if (ORIGINATOR_INFO in asn1.result) {\n            this.originatorInfo = new OriginatorInfo({\n                schema: new asn1js.Sequence({\n                    value: asn1.result.originatorInfo.valueBlock.value\n                })\n            });\n        }\n        this.recipientInfos = Array.from(asn1.result.recipientInfos, o => new RecipientInfo({ schema: o }));\n        this.encryptedContentInfo = new EncryptedContentInfo({ schema: asn1.result.encryptedContentInfo });\n        if (UNPROTECTED_ATTRS in asn1.result)\n            this.unprotectedAttrs = Array.from(asn1.result.unprotectedAttrs, o => new Attribute({ schema: o }));\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(new asn1js.Integer({ value: this.version }));\n        if (this.originatorInfo) {\n            outputArray.push(new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: this.originatorInfo.toSchema().valueBlock.value\n            }));\n        }\n        outputArray.push(new asn1js.Set({\n            value: Array.from(this.recipientInfos, o => o.toSchema())\n        }));\n        outputArray.push(this.encryptedContentInfo.toSchema());\n        if (this.unprotectedAttrs) {\n            outputArray.push(new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                value: Array.from(this.unprotectedAttrs, o => o.toSchema())\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            version: this.version,\n            recipientInfos: Array.from(this.recipientInfos, o => o.toJSON()),\n            encryptedContentInfo: this.encryptedContentInfo.toJSON(),\n        };\n        if (this.originatorInfo)\n            res.originatorInfo = this.originatorInfo.toJSON();\n        if (this.unprotectedAttrs)\n            res.unprotectedAttrs = Array.from(this.unprotectedAttrs, o => o.toJSON());\n        return res;\n    }\n    addRecipientByCertificate(certificate, parameters, variant, crypto = getCrypto(true)) {\n        const encryptionParameters = Object.assign({ useOAEP: true, oaepHashAlgorithm: \"SHA-512\" }, defaultEncryptionParams, parameters || {});\n        if (certificate.subjectPublicKeyInfo.algorithm.algorithmId.indexOf(\"1.2.840.113549\") !== (-1))\n            variant = 1;\n        else {\n            if (certificate.subjectPublicKeyInfo.algorithm.algorithmId.indexOf(\"1.2.840.10045\") !== (-1))\n                variant = 2;\n            else\n                throw new Error(`Unknown type of certificate's public key: ${certificate.subjectPublicKeyInfo.algorithm.algorithmId}`);\n        }\n        switch (variant) {\n            case 1:\n                {\n                    let algorithmId;\n                    let algorithmParams;\n                    if (encryptionParameters.useOAEP === true) {\n                        algorithmId = crypto.getOIDByAlgorithm({\n                            name: \"RSA-OAEP\"\n                        }, true, \"keyEncryptionAlgorithm\");\n                        const hashOID = crypto.getOIDByAlgorithm({\n                            name: encryptionParameters.oaepHashAlgorithm\n                        }, true, \"RSAES-OAEP-params\");\n                        const hashAlgorithm = new AlgorithmIdentifier({\n                            algorithmId: hashOID,\n                            algorithmParams: new asn1js.Null()\n                        });\n                        const rsaOAEPParams = new RSAESOAEPParams({\n                            hashAlgorithm,\n                            maskGenAlgorithm: new AlgorithmIdentifier({\n                                algorithmId: \"1.2.840.113549.1.1.8\",\n                                algorithmParams: hashAlgorithm.toSchema()\n                            })\n                        });\n                        algorithmParams = rsaOAEPParams.toSchema();\n                    }\n                    else {\n                        algorithmId = crypto.getOIDByAlgorithm({\n                            name: \"RSAES-PKCS1-v1_5\"\n                        });\n                        if (algorithmId === EMPTY_STRING)\n                            throw new Error(\"Can not find OID for RSAES-PKCS1-v1_5\");\n                        algorithmParams = new asn1js.Null();\n                    }\n                    const keyInfo = new KeyTransRecipientInfo({\n                        version: 0,\n                        rid: new IssuerAndSerialNumber({\n                            issuer: certificate.issuer,\n                            serialNumber: certificate.serialNumber\n                        }),\n                        keyEncryptionAlgorithm: new AlgorithmIdentifier({\n                            algorithmId,\n                            algorithmParams\n                        }),\n                        recipientCertificate: certificate,\n                    });\n                    this.recipientInfos.push(new RecipientInfo({\n                        variant: 1,\n                        value: keyInfo\n                    }));\n                }\n                break;\n            case 2:\n                {\n                    const recipientIdentifier = new KeyAgreeRecipientIdentifier({\n                        variant: 1,\n                        value: new IssuerAndSerialNumber({\n                            issuer: certificate.issuer,\n                            serialNumber: certificate.serialNumber\n                        })\n                    });\n                    this._addKeyAgreeRecipientInfo(recipientIdentifier, encryptionParameters, { recipientCertificate: certificate }, crypto);\n                }\n                break;\n            default:\n                throw new Error(`Unknown \"variant\" value: ${variant}`);\n        }\n        return true;\n    }\n    addRecipientByPreDefinedData(preDefinedData, parameters = {}, variant, crypto = getCrypto(true)) {\n        ArgumentError.assert(preDefinedData, \"preDefinedData\", \"ArrayBuffer\");\n        if (!preDefinedData.byteLength) {\n            throw new Error(\"Pre-defined data could have zero length\");\n        }\n        if (!parameters.keyIdentifier) {\n            const keyIdentifierBuffer = new ArrayBuffer(16);\n            const keyIdentifierView = new Uint8Array(keyIdentifierBuffer);\n            crypto.getRandomValues(keyIdentifierView);\n            parameters.keyIdentifier = keyIdentifierBuffer;\n        }\n        if (!parameters.hmacHashAlgorithm)\n            parameters.hmacHashAlgorithm = \"SHA-512\";\n        if (parameters.iterationCount === undefined) {\n            parameters.iterationCount = 2048;\n        }\n        if (!parameters.keyEncryptionAlgorithm) {\n            parameters.keyEncryptionAlgorithm = {\n                name: \"AES-KW\",\n                length: 256\n            };\n        }\n        if (!parameters.keyEncryptionAlgorithmParams)\n            parameters.keyEncryptionAlgorithmParams = new asn1js.Null();\n        switch (variant) {\n            case 1:\n                {\n                    const kekOID = crypto.getOIDByAlgorithm(parameters.keyEncryptionAlgorithm, true, \"keyEncryptionAlgorithm\");\n                    const keyInfo = new KEKRecipientInfo({\n                        version: 4,\n                        kekid: new KEKIdentifier({\n                            keyIdentifier: new asn1js.OctetString({ valueHex: parameters.keyIdentifier })\n                        }),\n                        keyEncryptionAlgorithm: new AlgorithmIdentifier({\n                            algorithmId: kekOID,\n                            algorithmParams: parameters.keyEncryptionAlgorithmParams\n                        }),\n                        preDefinedKEK: preDefinedData\n                    });\n                    this.recipientInfos.push(new RecipientInfo({\n                        variant: 3,\n                        value: keyInfo\n                    }));\n                }\n                break;\n            case 2:\n                {\n                    const pbkdf2OID = crypto.getOIDByAlgorithm({ name: \"PBKDF2\" }, true, \"keyDerivationAlgorithm\");\n                    const saltBuffer = new ArrayBuffer(64);\n                    const saltView = new Uint8Array(saltBuffer);\n                    crypto.getRandomValues(saltView);\n                    const hmacOID = crypto.getOIDByAlgorithm({\n                        name: \"HMAC\",\n                        hash: {\n                            name: parameters.hmacHashAlgorithm\n                        }\n                    }, true, \"hmacHashAlgorithm\");\n                    const pbkdf2Params = new PBKDF2Params({\n                        salt: new asn1js.OctetString({ valueHex: saltBuffer }),\n                        iterationCount: parameters.iterationCount,\n                        prf: new AlgorithmIdentifier({\n                            algorithmId: hmacOID,\n                            algorithmParams: new asn1js.Null()\n                        })\n                    });\n                    const kekOID = crypto.getOIDByAlgorithm(parameters.keyEncryptionAlgorithm, true, \"keyEncryptionAlgorithm\");\n                    const keyInfo = new PasswordRecipientinfo({\n                        version: 0,\n                        keyDerivationAlgorithm: new AlgorithmIdentifier({\n                            algorithmId: pbkdf2OID,\n                            algorithmParams: pbkdf2Params.toSchema()\n                        }),\n                        keyEncryptionAlgorithm: new AlgorithmIdentifier({\n                            algorithmId: kekOID,\n                            algorithmParams: parameters.keyEncryptionAlgorithmParams\n                        }),\n                        password: preDefinedData\n                    });\n                    this.recipientInfos.push(new RecipientInfo({\n                        variant: 4,\n                        value: keyInfo\n                    }));\n                }\n                break;\n            default:\n                throw new Error(`Unknown value for \"variant\": ${variant}`);\n        }\n    }\n    addRecipientByKeyIdentifier(key, keyId, parameters, crypto = getCrypto(true)) {\n        const encryptionParameters = Object.assign({}, defaultEncryptionParams, parameters || {});\n        const recipientIdentifier = new KeyAgreeRecipientIdentifier({\n            variant: 2,\n            value: new RecipientKeyIdentifier({\n                subjectKeyIdentifier: new asn1js.OctetString({ valueHex: keyId }),\n            })\n        });\n        this._addKeyAgreeRecipientInfo(recipientIdentifier, encryptionParameters, { recipientPublicKey: key }, crypto);\n    }\n    _addKeyAgreeRecipientInfo(recipientIdentifier, encryptionParameters, extraRecipientInfoParams, crypto = getCrypto(true)) {\n        const encryptedKey = new RecipientEncryptedKey({\n            rid: recipientIdentifier\n        });\n        const aesKWoid = crypto.getOIDByAlgorithm({\n            name: \"AES-KW\",\n            length: encryptionParameters.kekEncryptionLength\n        }, true, \"keyEncryptionAlgorithm\");\n        const aesKW = new AlgorithmIdentifier({\n            algorithmId: aesKWoid,\n        });\n        const ecdhOID = crypto.getOIDByAlgorithm({\n            name: \"ECDH\",\n            kdf: encryptionParameters.kdfAlgorithm\n        }, true, \"KeyAgreeRecipientInfo\");\n        const ukmBuffer = new ArrayBuffer(64);\n        const ukmView = new Uint8Array(ukmBuffer);\n        crypto.getRandomValues(ukmView);\n        const recipientInfoParams = {\n            version: 3,\n            ukm: new asn1js.OctetString({ valueHex: ukmBuffer }),\n            keyEncryptionAlgorithm: new AlgorithmIdentifier({\n                algorithmId: ecdhOID,\n                algorithmParams: aesKW.toSchema()\n            }),\n            recipientEncryptedKeys: new RecipientEncryptedKeys({\n                encryptedKeys: [encryptedKey]\n            })\n        };\n        const keyInfo = new KeyAgreeRecipientInfo(Object.assign(recipientInfoParams, extraRecipientInfoParams));\n        this.recipientInfos.push(new RecipientInfo({\n            variant: 2,\n            value: keyInfo\n        }));\n    }\n    async encrypt(contentEncryptionAlgorithm, contentToEncrypt, crypto = getCrypto(true)) {\n        const ivBuffer = new ArrayBuffer(16);\n        const ivView = new Uint8Array(ivBuffer);\n        crypto.getRandomValues(ivView);\n        const contentView = new Uint8Array(contentToEncrypt);\n        const contentEncryptionOID = crypto.getOIDByAlgorithm(contentEncryptionAlgorithm, true, \"contentEncryptionAlgorithm\");\n        const sessionKey = await crypto.generateKey(contentEncryptionAlgorithm, true, [\"encrypt\"]);\n        const encryptedContent = await crypto.encrypt({\n            name: contentEncryptionAlgorithm.name,\n            iv: ivView\n        }, sessionKey, contentView);\n        const exportedSessionKey = await crypto.exportKey(\"raw\", sessionKey);\n        this.version = 2;\n        this.encryptedContentInfo = new EncryptedContentInfo({\n            disableSplit: this.policy.disableSplit,\n            contentType: \"1.2.840.113549.1.7.1\",\n            contentEncryptionAlgorithm: new AlgorithmIdentifier({\n                algorithmId: contentEncryptionOID,\n                algorithmParams: new asn1js.OctetString({ valueHex: ivBuffer })\n            }),\n            encryptedContent: new asn1js.OctetString({ valueHex: encryptedContent })\n        });\n        const SubKeyAgreeRecipientInfo = async (index) => {\n            const recipientInfo = this.recipientInfos[index].value;\n            let recipientCurve;\n            let recipientPublicKey;\n            if (recipientInfo.recipientPublicKey) {\n                recipientCurve = recipientInfo.recipientPublicKey.algorithm.namedCurve;\n                recipientPublicKey = recipientInfo.recipientPublicKey;\n            }\n            else if (recipientInfo.recipientCertificate) {\n                const curveObject = recipientInfo.recipientCertificate.subjectPublicKeyInfo.algorithm.algorithmParams;\n                if (curveObject.constructor.blockName() !== asn1js.ObjectIdentifier.blockName())\n                    throw new Error(`Incorrect \"recipientCertificate\" for index ${index}`);\n                const curveOID = curveObject.valueBlock.toString();\n                switch (curveOID) {\n                    case \"1.2.840.10045.3.1.7\":\n                        recipientCurve = \"P-256\";\n                        break;\n                    case \"1.3.132.0.34\":\n                        recipientCurve = \"P-384\";\n                        break;\n                    case \"1.3.132.0.35\":\n                        recipientCurve = \"P-521\";\n                        break;\n                    default:\n                        throw new Error(`Incorrect curve OID for index ${index}`);\n                }\n                recipientPublicKey = await recipientInfo.recipientCertificate.getPublicKey({\n                    algorithm: {\n                        algorithm: {\n                            name: \"ECDH\",\n                            namedCurve: recipientCurve\n                        },\n                        usages: []\n                    }\n                }, crypto);\n            }\n            else {\n                throw new Error(\"Unsupported RecipientInfo\");\n            }\n            const recipientCurveLength = curveLengthByName[recipientCurve];\n            const ecdhKeys = await crypto.generateKey({ name: \"ECDH\", namedCurve: recipientCurve }, true, [\"deriveBits\"]);\n            const exportedECDHPublicKey = await crypto.exportKey(\"spki\", ecdhKeys.publicKey);\n            const derivedBits = await crypto.deriveBits({\n                name: \"ECDH\",\n                public: recipientPublicKey\n            }, ecdhKeys.privateKey, recipientCurveLength);\n            const aesKWAlgorithm = new AlgorithmIdentifier({ schema: recipientInfo.keyEncryptionAlgorithm.algorithmParams });\n            const kwAlgorithm = crypto.getAlgorithmByOID(aesKWAlgorithm.algorithmId, true, \"aesKWAlgorithm\");\n            let kwLength = kwAlgorithm.length;\n            const kwLengthBuffer = new ArrayBuffer(4);\n            const kwLengthView = new Uint8Array(kwLengthBuffer);\n            for (let j = 3; j >= 0; j--) {\n                kwLengthView[j] = kwLength;\n                kwLength >>= 8;\n            }\n            const eccInfo = new ECCCMSSharedInfo({\n                keyInfo: new AlgorithmIdentifier({\n                    algorithmId: aesKWAlgorithm.algorithmId\n                }),\n                entityUInfo: recipientInfo.ukm,\n                suppPubInfo: new asn1js.OctetString({ valueHex: kwLengthBuffer })\n            });\n            const encodedInfo = eccInfo.toSchema().toBER(false);\n            const ecdhAlgorithm = crypto.getAlgorithmByOID(recipientInfo.keyEncryptionAlgorithm.algorithmId, true, \"ecdhAlgorithm\");\n            const derivedKeyRaw = await kdf(ecdhAlgorithm.kdf, derivedBits, kwAlgorithm.length, encodedInfo, crypto);\n            const awsKW = await crypto.importKey(\"raw\", derivedKeyRaw, { name: \"AES-KW\" }, true, [\"wrapKey\"]);\n            const wrappedKey = await crypto.wrapKey(\"raw\", sessionKey, awsKW, { name: \"AES-KW\" });\n            const originator = new OriginatorIdentifierOrKey();\n            originator.variant = 3;\n            originator.value = OriginatorPublicKey.fromBER(exportedECDHPublicKey);\n            recipientInfo.originator = originator;\n            recipientInfo.recipientEncryptedKeys.encryptedKeys[0].encryptedKey = new asn1js.OctetString({ valueHex: wrappedKey });\n            return { ecdhPrivateKey: ecdhKeys.privateKey };\n        };\n        const SubKeyTransRecipientInfo = async (index) => {\n            const recipientInfo = this.recipientInfos[index].value;\n            const algorithmParameters = crypto.getAlgorithmByOID(recipientInfo.keyEncryptionAlgorithm.algorithmId, true, \"keyEncryptionAlgorithm\");\n            if (algorithmParameters.name === \"RSA-OAEP\") {\n                const schema = recipientInfo.keyEncryptionAlgorithm.algorithmParams;\n                const rsaOAEPParams = new RSAESOAEPParams({ schema });\n                algorithmParameters.hash = crypto.getAlgorithmByOID(rsaOAEPParams.hashAlgorithm.algorithmId);\n                if ((\"name\" in algorithmParameters.hash) === false)\n                    throw new Error(`Incorrect OID for hash algorithm: ${rsaOAEPParams.hashAlgorithm.algorithmId}`);\n            }\n            try {\n                const publicKey = await recipientInfo.recipientCertificate.getPublicKey({\n                    algorithm: {\n                        algorithm: algorithmParameters,\n                        usages: [\"encrypt\", \"wrapKey\"]\n                    }\n                }, crypto);\n                const encryptedKey = await crypto.encrypt(publicKey.algorithm, publicKey, exportedSessionKey);\n                recipientInfo.encryptedKey = new asn1js.OctetString({ valueHex: encryptedKey });\n            }\n            catch {\n            }\n        };\n        const SubKEKRecipientInfo = async (index) => {\n            const recipientInfo = this.recipientInfos[index].value;\n            const kekAlgorithm = crypto.getAlgorithmByOID(recipientInfo.keyEncryptionAlgorithm.algorithmId, true, \"kekAlgorithm\");\n            const kekKey = await crypto.importKey(\"raw\", new Uint8Array(recipientInfo.preDefinedKEK), kekAlgorithm, true, [\"wrapKey\"]);\n            const wrappedKey = await crypto.wrapKey(\"raw\", sessionKey, kekKey, kekAlgorithm);\n            recipientInfo.encryptedKey = new asn1js.OctetString({ valueHex: wrappedKey });\n        };\n        const SubPasswordRecipientinfo = async (index) => {\n            const recipientInfo = this.recipientInfos[index].value;\n            let pbkdf2Params;\n            if (!recipientInfo.keyDerivationAlgorithm)\n                throw new Error(\"Please append encoded \\\"keyDerivationAlgorithm\\\"\");\n            if (!recipientInfo.keyDerivationAlgorithm.algorithmParams)\n                throw new Error(\"Incorrectly encoded \\\"keyDerivationAlgorithm\\\"\");\n            try {\n                pbkdf2Params = new PBKDF2Params({ schema: recipientInfo.keyDerivationAlgorithm.algorithmParams });\n            }\n            catch (ex) {\n                throw new Error(\"Incorrectly encoded \\\"keyDerivationAlgorithm\\\"\");\n            }\n            const passwordView = new Uint8Array(recipientInfo.password);\n            const derivationKey = await crypto.importKey(\"raw\", passwordView, \"PBKDF2\", false, [\"deriveKey\"]);\n            const kekAlgorithm = crypto.getAlgorithmByOID(recipientInfo.keyEncryptionAlgorithm.algorithmId, true, \"kekAlgorithm\");\n            let hmacHashAlgorithm = \"SHA-1\";\n            if (pbkdf2Params.prf) {\n                const prfAlgorithm = crypto.getAlgorithmByOID(pbkdf2Params.prf.algorithmId, true, \"prfAlgorithm\");\n                hmacHashAlgorithm = prfAlgorithm.hash.name;\n            }\n            const saltView = new Uint8Array(pbkdf2Params.salt.valueBlock.valueHex);\n            const iterations = pbkdf2Params.iterationCount;\n            const derivedKey = await crypto.deriveKey({\n                name: \"PBKDF2\",\n                hash: {\n                    name: hmacHashAlgorithm\n                },\n                salt: saltView,\n                iterations\n            }, derivationKey, kekAlgorithm, true, [\"wrapKey\"]);\n            const wrappedKey = await crypto.wrapKey(\"raw\", sessionKey, derivedKey, kekAlgorithm);\n            recipientInfo.encryptedKey = new asn1js.OctetString({ valueHex: wrappedKey });\n        };\n        const res = [];\n        for (let i = 0; i < this.recipientInfos.length; i++) {\n            switch (this.recipientInfos[i].variant) {\n                case 1:\n                    res.push(await SubKeyTransRecipientInfo(i));\n                    break;\n                case 2:\n                    res.push(await SubKeyAgreeRecipientInfo(i));\n                    break;\n                case 3:\n                    res.push(await SubKEKRecipientInfo(i));\n                    break;\n                case 4:\n                    res.push(await SubPasswordRecipientinfo(i));\n                    break;\n                default:\n                    throw new Error(`Unknown recipient type in array with index ${i}`);\n            }\n        }\n        return res;\n    }\n    async decrypt(recipientIndex, parameters, crypto = getCrypto(true)) {\n        const decryptionParameters = parameters || {};\n        if ((recipientIndex + 1) > this.recipientInfos.length) {\n            throw new Error(`Maximum value for \"index\" is: ${this.recipientInfos.length - 1}`);\n        }\n        const SubKeyAgreeRecipientInfo = async (index) => {\n            const recipientInfo = this.recipientInfos[index].value;\n            let curveOID;\n            let recipientCurve;\n            let recipientCurveLength;\n            const originator = recipientInfo.originator;\n            if (decryptionParameters.recipientCertificate) {\n                const curveObject = decryptionParameters.recipientCertificate.subjectPublicKeyInfo.algorithm.algorithmParams;\n                if (curveObject.constructor.blockName() !== asn1js.ObjectIdentifier.blockName()) {\n                    throw new Error(`Incorrect \"recipientCertificate\" for index ${index}`);\n                }\n                curveOID = curveObject.valueBlock.toString();\n            }\n            else if (originator.value.algorithm.algorithmParams) {\n                const curveObject = originator.value.algorithm.algorithmParams;\n                if (curveObject.constructor.blockName() !== asn1js.ObjectIdentifier.blockName()) {\n                    throw new Error(`Incorrect originator for index ${index}`);\n                }\n                curveOID = curveObject.valueBlock.toString();\n            }\n            else {\n                throw new Error(\"Parameter \\\"recipientCertificate\\\" is mandatory for \\\"KeyAgreeRecipientInfo\\\" if algorithm params are missing from originator\");\n            }\n            if (!decryptionParameters.recipientPrivateKey)\n                throw new Error(\"Parameter \\\"recipientPrivateKey\\\" is mandatory for \\\"KeyAgreeRecipientInfo\\\"\");\n            switch (curveOID) {\n                case \"1.2.840.10045.3.1.7\":\n                    recipientCurve = \"P-256\";\n                    recipientCurveLength = 256;\n                    break;\n                case \"1.3.132.0.34\":\n                    recipientCurve = \"P-384\";\n                    recipientCurveLength = 384;\n                    break;\n                case \"1.3.132.0.35\":\n                    recipientCurve = \"P-521\";\n                    recipientCurveLength = 528;\n                    break;\n                default:\n                    throw new Error(`Incorrect curve OID for index ${index}`);\n            }\n            let ecdhPrivateKey;\n            let keyCrypto = crypto;\n            if (BufferSourceConverter.isBufferSource(decryptionParameters.recipientPrivateKey)) {\n                ecdhPrivateKey = await crypto.importKey(\"pkcs8\", decryptionParameters.recipientPrivateKey, {\n                    name: \"ECDH\",\n                    namedCurve: recipientCurve\n                }, true, [\"deriveBits\"]);\n            }\n            else {\n                ecdhPrivateKey = decryptionParameters.recipientPrivateKey;\n                if (\"crypto\" in decryptionParameters && decryptionParameters.crypto) {\n                    keyCrypto = decryptionParameters.crypto.subtle;\n                }\n            }\n            if ((\"algorithmParams\" in originator.value.algorithm) === false)\n                originator.value.algorithm.algorithmParams = new asn1js.ObjectIdentifier({ value: curveOID });\n            const buffer = originator.value.toSchema().toBER(false);\n            const ecdhPublicKey = await crypto.importKey(\"spki\", buffer, {\n                name: \"ECDH\",\n                namedCurve: recipientCurve\n            }, true, []);\n            const sharedSecret = await keyCrypto.deriveBits({\n                name: \"ECDH\",\n                public: ecdhPublicKey\n            }, ecdhPrivateKey, recipientCurveLength);\n            async function applyKDF(includeAlgorithmParams) {\n                includeAlgorithmParams = includeAlgorithmParams || false;\n                const aesKWAlgorithm = new AlgorithmIdentifier({ schema: recipientInfo.keyEncryptionAlgorithm.algorithmParams });\n                const kwAlgorithm = crypto.getAlgorithmByOID(aesKWAlgorithm.algorithmId, true, \"kwAlgorithm\");\n                let kwLength = kwAlgorithm.length;\n                const kwLengthBuffer = new ArrayBuffer(4);\n                const kwLengthView = new Uint8Array(kwLengthBuffer);\n                for (let j = 3; j >= 0; j--) {\n                    kwLengthView[j] = kwLength;\n                    kwLength >>= 8;\n                }\n                const keyInfoAlgorithm = {\n                    algorithmId: aesKWAlgorithm.algorithmId\n                };\n                if (includeAlgorithmParams) {\n                    keyInfoAlgorithm.algorithmParams = new asn1js.Null();\n                }\n                const eccInfo = new ECCCMSSharedInfo({\n                    keyInfo: new AlgorithmIdentifier(keyInfoAlgorithm),\n                    entityUInfo: recipientInfo.ukm,\n                    suppPubInfo: new asn1js.OctetString({ valueHex: kwLengthBuffer })\n                });\n                const encodedInfo = eccInfo.toSchema().toBER(false);\n                const ecdhAlgorithm = crypto.getAlgorithmByOID(recipientInfo.keyEncryptionAlgorithm.algorithmId, true, \"ecdhAlgorithm\");\n                if (!ecdhAlgorithm.name) {\n                    throw new Error(`Incorrect OID for key encryption algorithm: ${recipientInfo.keyEncryptionAlgorithm.algorithmId}`);\n                }\n                return kdf(ecdhAlgorithm.kdf, sharedSecret, kwAlgorithm.length, encodedInfo, crypto);\n            }\n            const kdfResult = await applyKDF();\n            const importAesKwKey = async (kdfResult) => {\n                return crypto.importKey(\"raw\", kdfResult, { name: \"AES-KW\" }, true, [\"unwrapKey\"]);\n            };\n            const aesKwKey = await importAesKwKey(kdfResult);\n            const unwrapSessionKey = async (aesKwKey) => {\n                const algorithmId = this.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId;\n                const contentEncryptionAlgorithm = crypto.getAlgorithmByOID(algorithmId, true, \"contentEncryptionAlgorithm\");\n                return crypto.unwrapKey(\"raw\", recipientInfo.recipientEncryptedKeys.encryptedKeys[0].encryptedKey.valueBlock.valueHexView, aesKwKey, { name: \"AES-KW\" }, contentEncryptionAlgorithm, true, [\"decrypt\"]);\n            };\n            try {\n                return await unwrapSessionKey(aesKwKey);\n            }\n            catch {\n                const kdfResult = await applyKDF(true);\n                const aesKwKey = await importAesKwKey(kdfResult);\n                return unwrapSessionKey(aesKwKey);\n            }\n        };\n        const SubKeyTransRecipientInfo = async (index) => {\n            const recipientInfo = this.recipientInfos[index].value;\n            if (!decryptionParameters.recipientPrivateKey) {\n                throw new Error(\"Parameter \\\"recipientPrivateKey\\\" is mandatory for \\\"KeyTransRecipientInfo\\\"\");\n            }\n            const algorithmParameters = crypto.getAlgorithmByOID(recipientInfo.keyEncryptionAlgorithm.algorithmId, true, \"keyEncryptionAlgorithm\");\n            if (algorithmParameters.name === \"RSA-OAEP\") {\n                const schema = recipientInfo.keyEncryptionAlgorithm.algorithmParams;\n                const rsaOAEPParams = new RSAESOAEPParams({ schema });\n                algorithmParameters.hash = crypto.getAlgorithmByOID(rsaOAEPParams.hashAlgorithm.algorithmId);\n                if ((\"name\" in algorithmParameters.hash) === false)\n                    throw new Error(`Incorrect OID for hash algorithm: ${rsaOAEPParams.hashAlgorithm.algorithmId}`);\n            }\n            let privateKey;\n            let keyCrypto = crypto;\n            if (BufferSourceConverter.isBufferSource(decryptionParameters.recipientPrivateKey)) {\n                privateKey = await crypto.importKey(\"pkcs8\", decryptionParameters.recipientPrivateKey, algorithmParameters, true, [\"decrypt\"]);\n            }\n            else {\n                privateKey = decryptionParameters.recipientPrivateKey;\n                if (\"crypto\" in decryptionParameters && decryptionParameters.crypto) {\n                    keyCrypto = decryptionParameters.crypto.subtle;\n                }\n            }\n            const sessionKey = await keyCrypto.decrypt(privateKey.algorithm, privateKey, recipientInfo.encryptedKey.valueBlock.valueHexView);\n            const algorithmId = this.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId;\n            const contentEncryptionAlgorithm = crypto.getAlgorithmByOID(algorithmId, true, \"contentEncryptionAlgorithm\");\n            if ((\"name\" in contentEncryptionAlgorithm) === false)\n                throw new Error(`Incorrect \"contentEncryptionAlgorithm\": ${algorithmId}`);\n            return crypto.importKey(\"raw\", sessionKey, contentEncryptionAlgorithm, true, [\"decrypt\"]);\n        };\n        const SubKEKRecipientInfo = async (index) => {\n            const recipientInfo = this.recipientInfos[index].value;\n            if (!decryptionParameters.preDefinedData)\n                throw new Error(\"Parameter \\\"preDefinedData\\\" is mandatory for \\\"KEKRecipientInfo\\\"\");\n            const kekAlgorithm = crypto.getAlgorithmByOID(recipientInfo.keyEncryptionAlgorithm.algorithmId, true, \"kekAlgorithm\");\n            const importedKey = await crypto.importKey(\"raw\", decryptionParameters.preDefinedData, kekAlgorithm, true, [\"unwrapKey\"]);\n            const algorithmId = this.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId;\n            const contentEncryptionAlgorithm = crypto.getAlgorithmByOID(algorithmId, true, \"contentEncryptionAlgorithm\");\n            if (!contentEncryptionAlgorithm.name) {\n                throw new Error(`Incorrect \"contentEncryptionAlgorithm\": ${algorithmId}`);\n            }\n            return crypto.unwrapKey(\"raw\", recipientInfo.encryptedKey.valueBlock.valueHexView, importedKey, kekAlgorithm, contentEncryptionAlgorithm, true, [\"decrypt\"]);\n        };\n        const SubPasswordRecipientinfo = async (index) => {\n            const recipientInfo = this.recipientInfos[index].value;\n            let pbkdf2Params;\n            if (!decryptionParameters.preDefinedData) {\n                throw new Error(\"Parameter \\\"preDefinedData\\\" is mandatory for \\\"KEKRecipientInfo\\\"\");\n            }\n            if (!recipientInfo.keyDerivationAlgorithm) {\n                throw new Error(\"Please append encoded \\\"keyDerivationAlgorithm\\\"\");\n            }\n            if (!recipientInfo.keyDerivationAlgorithm.algorithmParams) {\n                throw new Error(\"Incorrectly encoded \\\"keyDerivationAlgorithm\\\"\");\n            }\n            try {\n                pbkdf2Params = new PBKDF2Params({ schema: recipientInfo.keyDerivationAlgorithm.algorithmParams });\n            }\n            catch (ex) {\n                throw new Error(\"Incorrectly encoded \\\"keyDerivationAlgorithm\\\"\");\n            }\n            const pbkdf2Key = await crypto.importKey(\"raw\", decryptionParameters.preDefinedData, \"PBKDF2\", false, [\"deriveKey\"]);\n            const kekAlgorithm = crypto.getAlgorithmByOID(recipientInfo.keyEncryptionAlgorithm.algorithmId, true, \"keyEncryptionAlgorithm\");\n            const hmacHashAlgorithm = pbkdf2Params.prf\n                ? crypto.getAlgorithmByOID(pbkdf2Params.prf.algorithmId, true, \"prfAlgorithm\").hash.name\n                : \"SHA-1\";\n            const saltView = new Uint8Array(pbkdf2Params.salt.valueBlock.valueHex);\n            const iterations = pbkdf2Params.iterationCount;\n            const kekKey = await crypto.deriveKey({\n                name: \"PBKDF2\",\n                hash: {\n                    name: hmacHashAlgorithm\n                },\n                salt: saltView,\n                iterations\n            }, pbkdf2Key, kekAlgorithm, true, [\"unwrapKey\"]);\n            const algorithmId = this.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId;\n            const contentEncryptionAlgorithm = crypto.getAlgorithmByOID(algorithmId, true, \"contentEncryptionAlgorithm\");\n            return crypto.unwrapKey(\"raw\", recipientInfo.encryptedKey.valueBlock.valueHexView, kekKey, kekAlgorithm, contentEncryptionAlgorithm, true, [\"decrypt\"]);\n        };\n        let unwrappedKey;\n        switch (this.recipientInfos[recipientIndex].variant) {\n            case 1:\n                unwrappedKey = await SubKeyTransRecipientInfo(recipientIndex);\n                break;\n            case 2:\n                unwrappedKey = await SubKeyAgreeRecipientInfo(recipientIndex);\n                break;\n            case 3:\n                unwrappedKey = await SubKEKRecipientInfo(recipientIndex);\n                break;\n            case 4:\n                unwrappedKey = await SubPasswordRecipientinfo(recipientIndex);\n                break;\n            default:\n                throw new Error(`Unknown recipient type in array with index ${recipientIndex}`);\n        }\n        const algorithmId = this.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId;\n        const contentEncryptionAlgorithm = crypto.getAlgorithmByOID(algorithmId, true, \"contentEncryptionAlgorithm\");\n        const ivBuffer = this.encryptedContentInfo.contentEncryptionAlgorithm.algorithmParams.valueBlock.valueHex;\n        const ivView = new Uint8Array(ivBuffer);\n        if (!this.encryptedContentInfo.encryptedContent) {\n            throw new Error(\"Required property `encryptedContent` is empty\");\n        }\n        const dataBuffer = this.encryptedContentInfo.getEncryptedContent();\n        return crypto.decrypt({\n            name: contentEncryptionAlgorithm.name,\n            iv: ivView\n        }, unwrappedKey, dataBuffer);\n    }\n}\nEnvelopedData.CLASS_NAME = \"EnvelopedData\";\n\nconst SAFE_CONTENTS = \"safeContents\";\nconst PARSED_VALUE$1 = \"parsedValue\";\nconst CONTENT_INFOS = \"contentInfos\";\nclass AuthenticatedSafe extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.safeContents = pvutils.getParametersValue(parameters, SAFE_CONTENTS, AuthenticatedSafe.defaultValues(SAFE_CONTENTS));\n        if (PARSED_VALUE$1 in parameters) {\n            this.parsedValue = pvutils.getParametersValue(parameters, PARSED_VALUE$1, AuthenticatedSafe.defaultValues(PARSED_VALUE$1));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case SAFE_CONTENTS:\n                return [];\n            case PARSED_VALUE$1:\n                return {};\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case SAFE_CONTENTS:\n                return (memberValue.length === 0);\n            case PARSED_VALUE$1:\n                return ((memberValue instanceof Object) && (Object.keys(memberValue).length === 0));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Repeated({\n                    name: (names.contentInfos || EMPTY_STRING),\n                    value: ContentInfo.schema()\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, [\n            CONTENT_INFOS\n        ]);\n        const asn1 = asn1js.compareSchema(schema, schema, AuthenticatedSafe.schema({\n            names: {\n                contentInfos: CONTENT_INFOS\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.safeContents = Array.from(asn1.result.contentInfos, element => new ContentInfo({ schema: element }));\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: Array.from(this.safeContents, o => o.toSchema())\n        }));\n    }\n    toJSON() {\n        return {\n            safeContents: Array.from(this.safeContents, o => o.toJSON())\n        };\n    }\n    async parseInternalValues(parameters, crypto = getCrypto(true)) {\n        ParameterError.assert(parameters, SAFE_CONTENTS);\n        ArgumentError.assert(parameters.safeContents, SAFE_CONTENTS, \"Array\");\n        if (parameters.safeContents.length !== this.safeContents.length) {\n            throw new ArgumentError(\"Length of \\\"parameters.safeContents\\\" must be equal to \\\"this.safeContents.length\\\"\");\n        }\n        this.parsedValue = {\n            safeContents: [],\n        };\n        for (const [index, content] of this.safeContents.entries()) {\n            const safeContent = parameters.safeContents[index];\n            const errorTarget = `parameters.safeContents[${index}]`;\n            switch (content.contentType) {\n                case id_ContentType_Data:\n                    {\n                        ArgumentError.assert(content.content, \"this.safeContents[j].content\", asn1js.OctetString);\n                        const authSafeContent = content.content.getValue();\n                        this.parsedValue.safeContents.push({\n                            privacyMode: 0,\n                            value: SafeContents.fromBER(authSafeContent)\n                        });\n                    }\n                    break;\n                case id_ContentType_EnvelopedData:\n                    {\n                        const cmsEnveloped = new EnvelopedData({ schema: content.content });\n                        ParameterError.assert(errorTarget, safeContent, \"recipientCertificate\", \"recipientKey\");\n                        const envelopedData = safeContent;\n                        const recipientCertificate = envelopedData.recipientCertificate;\n                        const recipientKey = envelopedData.recipientKey;\n                        const decrypted = await cmsEnveloped.decrypt(0, {\n                            recipientCertificate,\n                            recipientPrivateKey: recipientKey\n                        }, crypto);\n                        this.parsedValue.safeContents.push({\n                            privacyMode: 2,\n                            value: SafeContents.fromBER(decrypted),\n                        });\n                    }\n                    break;\n                case id_ContentType_EncryptedData:\n                    {\n                        const cmsEncrypted = new EncryptedData({ schema: content.content });\n                        ParameterError.assert(errorTarget, safeContent, \"password\");\n                        const password = safeContent.password;\n                        const decrypted = await cmsEncrypted.decrypt({\n                            password\n                        }, crypto);\n                        this.parsedValue.safeContents.push({\n                            privacyMode: 1,\n                            value: SafeContents.fromBER(decrypted),\n                        });\n                    }\n                    break;\n                default:\n                    throw new Error(`Unknown \"contentType\" for AuthenticatedSafe: \" ${content.contentType}`);\n            }\n        }\n    }\n    async makeInternalValues(parameters, crypto = getCrypto(true)) {\n        if (!(this.parsedValue)) {\n            throw new Error(\"Please run \\\"parseValues\\\" first or add \\\"parsedValue\\\" manually\");\n        }\n        ArgumentError.assert(this.parsedValue, \"this.parsedValue\", \"object\");\n        ArgumentError.assert(this.parsedValue.safeContents, \"this.parsedValue.safeContents\", \"Array\");\n        ArgumentError.assert(parameters, \"parameters\", \"object\");\n        ParameterError.assert(parameters, \"safeContents\");\n        ArgumentError.assert(parameters.safeContents, \"parameters.safeContents\", \"Array\");\n        if (parameters.safeContents.length !== this.parsedValue.safeContents.length) {\n            throw new ArgumentError(\"Length of \\\"parameters.safeContents\\\" must be equal to \\\"this.parsedValue.safeContents\\\"\");\n        }\n        this.safeContents = [];\n        for (const [index, content] of this.parsedValue.safeContents.entries()) {\n            ParameterError.assert(\"content\", content, \"privacyMode\", \"value\");\n            ArgumentError.assert(content.value, \"content.value\", SafeContents);\n            switch (content.privacyMode) {\n                case 0:\n                    {\n                        const contentBuffer = content.value.toSchema().toBER(false);\n                        this.safeContents.push(new ContentInfo({\n                            contentType: \"1.2.840.113549.1.7.1\",\n                            content: new asn1js.OctetString({ valueHex: contentBuffer })\n                        }));\n                    }\n                    break;\n                case 1:\n                    {\n                        const cmsEncrypted = new EncryptedData();\n                        const currentParameters = parameters.safeContents[index];\n                        currentParameters.contentToEncrypt = content.value.toSchema().toBER(false);\n                        await cmsEncrypted.encrypt(currentParameters, crypto);\n                        this.safeContents.push(new ContentInfo({\n                            contentType: \"1.2.840.113549.1.7.6\",\n                            content: cmsEncrypted.toSchema()\n                        }));\n                    }\n                    break;\n                case 2:\n                    {\n                        const cmsEnveloped = new EnvelopedData();\n                        const contentToEncrypt = content.value.toSchema().toBER(false);\n                        const safeContent = parameters.safeContents[index];\n                        ParameterError.assert(`parameters.safeContents[${index}]`, safeContent, \"encryptingCertificate\", \"encryptionAlgorithm\");\n                        switch (true) {\n                            case (safeContent.encryptionAlgorithm.name.toLowerCase() === \"aes-cbc\"):\n                            case (safeContent.encryptionAlgorithm.name.toLowerCase() === \"aes-gcm\"):\n                                break;\n                            default:\n                                throw new Error(`Incorrect parameter \"encryptionAlgorithm\" in \"parameters.safeContents[i]\": ${safeContent.encryptionAlgorithm}`);\n                        }\n                        switch (true) {\n                            case (safeContent.encryptionAlgorithm.length === 128):\n                            case (safeContent.encryptionAlgorithm.length === 192):\n                            case (safeContent.encryptionAlgorithm.length === 256):\n                                break;\n                            default:\n                                throw new Error(`Incorrect parameter \"encryptionAlgorithm.length\" in \"parameters.safeContents[i]\": ${safeContent.encryptionAlgorithm.length}`);\n                        }\n                        const encryptionAlgorithm = safeContent.encryptionAlgorithm;\n                        cmsEnveloped.addRecipientByCertificate(safeContent.encryptingCertificate, {}, undefined, crypto);\n                        await cmsEnveloped.encrypt(encryptionAlgorithm, contentToEncrypt, crypto);\n                        this.safeContents.push(new ContentInfo({\n                            contentType: \"1.2.840.113549.1.7.3\",\n                            content: cmsEnveloped.toSchema()\n                        }));\n                    }\n                    break;\n                default:\n                    throw new Error(`Incorrect value for \"content.privacyMode\": ${content.privacyMode}`);\n            }\n        }\n        return this;\n    }\n}\nAuthenticatedSafe.CLASS_NAME = \"AuthenticatedSafe\";\n\nconst HASH_ALGORITHM$1 = \"hashAlgorithm\";\nconst ISSUER_NAME_HASH = \"issuerNameHash\";\nconst ISSUER_KEY_HASH = \"issuerKeyHash\";\nconst SERIAL_NUMBER$1 = \"serialNumber\";\nconst CLEAR_PROPS$j = [\n    HASH_ALGORITHM$1,\n    ISSUER_NAME_HASH,\n    ISSUER_KEY_HASH,\n    SERIAL_NUMBER$1,\n];\nclass CertID extends PkiObject {\n    static async create(certificate, parameters, crypto = getCrypto(true)) {\n        const certID = new CertID();\n        await certID.createForCertificate(certificate, parameters, crypto);\n        return certID;\n    }\n    constructor(parameters = {}) {\n        super();\n        this.hashAlgorithm = pvutils.getParametersValue(parameters, HASH_ALGORITHM$1, CertID.defaultValues(HASH_ALGORITHM$1));\n        this.issuerNameHash = pvutils.getParametersValue(parameters, ISSUER_NAME_HASH, CertID.defaultValues(ISSUER_NAME_HASH));\n        this.issuerKeyHash = pvutils.getParametersValue(parameters, ISSUER_KEY_HASH, CertID.defaultValues(ISSUER_KEY_HASH));\n        this.serialNumber = pvutils.getParametersValue(parameters, SERIAL_NUMBER$1, CertID.defaultValues(SERIAL_NUMBER$1));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case HASH_ALGORITHM$1:\n                return new AlgorithmIdentifier();\n            case ISSUER_NAME_HASH:\n            case ISSUER_KEY_HASH:\n                return new asn1js.OctetString();\n            case SERIAL_NUMBER$1:\n                return new asn1js.Integer();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case HASH_ALGORITHM$1:\n                return ((memberValue.algorithmId === EMPTY_STRING) && ((\"algorithmParams\" in memberValue) === false));\n            case ISSUER_NAME_HASH:\n            case ISSUER_KEY_HASH:\n            case SERIAL_NUMBER$1:\n                return (memberValue.isEqual(CertID.defaultValues(SERIAL_NUMBER$1)));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                AlgorithmIdentifier.schema(names.hashAlgorithmObject || {\n                    names: {\n                        blockName: (names.hashAlgorithm || EMPTY_STRING)\n                    }\n                }),\n                new asn1js.OctetString({ name: (names.issuerNameHash || EMPTY_STRING) }),\n                new asn1js.OctetString({ name: (names.issuerKeyHash || EMPTY_STRING) }),\n                new asn1js.Integer({ name: (names.serialNumber || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$j);\n        const asn1 = asn1js.compareSchema(schema, schema, CertID.schema({\n            names: {\n                hashAlgorithm: HASH_ALGORITHM$1,\n                issuerNameHash: ISSUER_NAME_HASH,\n                issuerKeyHash: ISSUER_KEY_HASH,\n                serialNumber: SERIAL_NUMBER$1\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.hashAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.hashAlgorithm });\n        this.issuerNameHash = asn1.result.issuerNameHash;\n        this.issuerKeyHash = asn1.result.issuerKeyHash;\n        this.serialNumber = asn1.result.serialNumber;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                this.hashAlgorithm.toSchema(),\n                this.issuerNameHash,\n                this.issuerKeyHash,\n                this.serialNumber\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            hashAlgorithm: this.hashAlgorithm.toJSON(),\n            issuerNameHash: this.issuerNameHash.toJSON(),\n            issuerKeyHash: this.issuerKeyHash.toJSON(),\n            serialNumber: this.serialNumber.toJSON(),\n        };\n    }\n    isEqual(certificateID) {\n        if (this.hashAlgorithm.algorithmId !== certificateID.hashAlgorithm.algorithmId) {\n            return false;\n        }\n        if (!pvtsutils.BufferSourceConverter.isEqual(this.issuerNameHash.valueBlock.valueHexView, certificateID.issuerNameHash.valueBlock.valueHexView)) {\n            return false;\n        }\n        if (!pvtsutils.BufferSourceConverter.isEqual(this.issuerKeyHash.valueBlock.valueHexView, certificateID.issuerKeyHash.valueBlock.valueHexView)) {\n            return false;\n        }\n        if (!this.serialNumber.isEqual(certificateID.serialNumber)) {\n            return false;\n        }\n        return true;\n    }\n    async createForCertificate(certificate, parameters, crypto = getCrypto(true)) {\n        ParameterError.assert(parameters, HASH_ALGORITHM$1, \"issuerCertificate\");\n        const hashOID = crypto.getOIDByAlgorithm({ name: parameters.hashAlgorithm }, true, \"hashAlgorithm\");\n        this.hashAlgorithm = new AlgorithmIdentifier({\n            algorithmId: hashOID,\n            algorithmParams: new asn1js.Null()\n        });\n        const issuerCertificate = parameters.issuerCertificate;\n        this.serialNumber = certificate.serialNumber;\n        const hashIssuerName = await crypto.digest({ name: parameters.hashAlgorithm }, issuerCertificate.subject.toSchema().toBER(false));\n        this.issuerNameHash = new asn1js.OctetString({ valueHex: hashIssuerName });\n        const issuerKeyBuffer = issuerCertificate.subjectPublicKeyInfo.subjectPublicKey.valueBlock.valueHexView;\n        const hashIssuerKey = await crypto.digest({ name: parameters.hashAlgorithm }, issuerKeyBuffer);\n        this.issuerKeyHash = new asn1js.OctetString({ valueHex: hashIssuerKey });\n    }\n}\nCertID.CLASS_NAME = \"CertID\";\n\nconst CERT_ID = \"certID\";\nconst CERT_STATUS = \"certStatus\";\nconst THIS_UPDATE = \"thisUpdate\";\nconst NEXT_UPDATE = \"nextUpdate\";\nconst SINGLE_EXTENSIONS = \"singleExtensions\";\nconst CLEAR_PROPS$i = [\n    CERT_ID,\n    CERT_STATUS,\n    THIS_UPDATE,\n    NEXT_UPDATE,\n    SINGLE_EXTENSIONS,\n];\nclass SingleResponse extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.certID = pvutils.getParametersValue(parameters, CERT_ID, SingleResponse.defaultValues(CERT_ID));\n        this.certStatus = pvutils.getParametersValue(parameters, CERT_STATUS, SingleResponse.defaultValues(CERT_STATUS));\n        this.thisUpdate = pvutils.getParametersValue(parameters, THIS_UPDATE, SingleResponse.defaultValues(THIS_UPDATE));\n        if (NEXT_UPDATE in parameters) {\n            this.nextUpdate = pvutils.getParametersValue(parameters, NEXT_UPDATE, SingleResponse.defaultValues(NEXT_UPDATE));\n        }\n        if (SINGLE_EXTENSIONS in parameters) {\n            this.singleExtensions = pvutils.getParametersValue(parameters, SINGLE_EXTENSIONS, SingleResponse.defaultValues(SINGLE_EXTENSIONS));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case CERT_ID:\n                return new CertID();\n            case CERT_STATUS:\n                return {};\n            case THIS_UPDATE:\n            case NEXT_UPDATE:\n                return new Date(0, 0, 0);\n            case SINGLE_EXTENSIONS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case CERT_ID:\n                return ((CertID.compareWithDefault(\"hashAlgorithm\", memberValue.hashAlgorithm)) &&\n                    (CertID.compareWithDefault(\"issuerNameHash\", memberValue.issuerNameHash)) &&\n                    (CertID.compareWithDefault(\"issuerKeyHash\", memberValue.issuerKeyHash)) &&\n                    (CertID.compareWithDefault(\"serialNumber\", memberValue.serialNumber)));\n            case CERT_STATUS:\n                return (Object.keys(memberValue).length === 0);\n            case THIS_UPDATE:\n            case NEXT_UPDATE:\n                return (memberValue === SingleResponse.defaultValues(memberName));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                CertID.schema(names.certID || {}),\n                new asn1js.Choice({\n                    value: [\n                        new asn1js.Primitive({\n                            name: (names.certStatus || EMPTY_STRING),\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: 0\n                            },\n                        }),\n                        new asn1js.Constructed({\n                            name: (names.certStatus || EMPTY_STRING),\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: 1\n                            },\n                            value: [\n                                new asn1js.GeneralizedTime(),\n                                new asn1js.Constructed({\n                                    optional: true,\n                                    idBlock: {\n                                        tagClass: 3,\n                                        tagNumber: 0\n                                    },\n                                    value: [new asn1js.Enumerated()]\n                                })\n                            ]\n                        }),\n                        new asn1js.Primitive({\n                            name: (names.certStatus || EMPTY_STRING),\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: 2\n                            },\n                            lenBlock: { length: 1 }\n                        })\n                    ]\n                }),\n                new asn1js.GeneralizedTime({ name: (names.thisUpdate || EMPTY_STRING) }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [new asn1js.GeneralizedTime({ name: (names.nextUpdate || EMPTY_STRING) })]\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: [Extensions.schema(names.singleExtensions || {})]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$i);\n        const asn1 = asn1js.compareSchema(schema, schema, SingleResponse.schema({\n            names: {\n                certID: {\n                    names: {\n                        blockName: CERT_ID\n                    }\n                },\n                certStatus: CERT_STATUS,\n                thisUpdate: THIS_UPDATE,\n                nextUpdate: NEXT_UPDATE,\n                singleExtensions: {\n                    names: {\n                        blockName: SINGLE_EXTENSIONS\n                    }\n                }\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.certID = new CertID({ schema: asn1.result.certID });\n        this.certStatus = asn1.result.certStatus;\n        this.thisUpdate = asn1.result.thisUpdate.toDate();\n        if (NEXT_UPDATE in asn1.result)\n            this.nextUpdate = asn1.result.nextUpdate.toDate();\n        if (SINGLE_EXTENSIONS in asn1.result)\n            this.singleExtensions = Array.from(asn1.result.singleExtensions.valueBlock.value, element => new Extension({ schema: element }));\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(this.certID.toSchema());\n        outputArray.push(this.certStatus);\n        outputArray.push(new asn1js.GeneralizedTime({ valueDate: this.thisUpdate }));\n        if (this.nextUpdate) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [new asn1js.GeneralizedTime({ valueDate: this.nextUpdate })]\n            }));\n        }\n        if (this.singleExtensions) {\n            outputArray.push(new asn1js.Sequence({\n                value: Array.from(this.singleExtensions, o => o.toSchema())\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            certID: this.certID.toJSON(),\n            certStatus: this.certStatus.toJSON(),\n            thisUpdate: this.thisUpdate\n        };\n        if (this.nextUpdate) {\n            res.nextUpdate = this.nextUpdate;\n        }\n        if (this.singleExtensions) {\n            res.singleExtensions = Array.from(this.singleExtensions, o => o.toJSON());\n        }\n        return res;\n    }\n}\nSingleResponse.CLASS_NAME = \"SingleResponse\";\n\nconst TBS$2 = \"tbs\";\nconst VERSION$7 = \"version\";\nconst RESPONDER_ID = \"responderID\";\nconst PRODUCED_AT = \"producedAt\";\nconst RESPONSES = \"responses\";\nconst RESPONSE_EXTENSIONS = \"responseExtensions\";\nconst RESPONSE_DATA = \"ResponseData\";\nconst RESPONSE_DATA_VERSION = `${RESPONSE_DATA}.${VERSION$7}`;\nconst RESPONSE_DATA_RESPONDER_ID = `${RESPONSE_DATA}.${RESPONDER_ID}`;\nconst RESPONSE_DATA_PRODUCED_AT = `${RESPONSE_DATA}.${PRODUCED_AT}`;\nconst RESPONSE_DATA_RESPONSES = `${RESPONSE_DATA}.${RESPONSES}`;\nconst RESPONSE_DATA_RESPONSE_EXTENSIONS = `${RESPONSE_DATA}.${RESPONSE_EXTENSIONS}`;\nconst CLEAR_PROPS$h = [\n    RESPONSE_DATA,\n    RESPONSE_DATA_VERSION,\n    RESPONSE_DATA_RESPONDER_ID,\n    RESPONSE_DATA_PRODUCED_AT,\n    RESPONSE_DATA_RESPONSES,\n    RESPONSE_DATA_RESPONSE_EXTENSIONS\n];\nclass ResponseData extends PkiObject {\n    get tbs() {\n        return pvtsutils.BufferSourceConverter.toArrayBuffer(this.tbsView);\n    }\n    set tbs(value) {\n        this.tbsView = new Uint8Array(value);\n    }\n    constructor(parameters = {}) {\n        super();\n        this.tbsView = new Uint8Array(pvutils.getParametersValue(parameters, TBS$2, ResponseData.defaultValues(TBS$2)));\n        if (VERSION$7 in parameters) {\n            this.version = pvutils.getParametersValue(parameters, VERSION$7, ResponseData.defaultValues(VERSION$7));\n        }\n        this.responderID = pvutils.getParametersValue(parameters, RESPONDER_ID, ResponseData.defaultValues(RESPONDER_ID));\n        this.producedAt = pvutils.getParametersValue(parameters, PRODUCED_AT, ResponseData.defaultValues(PRODUCED_AT));\n        this.responses = pvutils.getParametersValue(parameters, RESPONSES, ResponseData.defaultValues(RESPONSES));\n        if (RESPONSE_EXTENSIONS in parameters) {\n            this.responseExtensions = pvutils.getParametersValue(parameters, RESPONSE_EXTENSIONS, ResponseData.defaultValues(RESPONSE_EXTENSIONS));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$7:\n                return 0;\n            case TBS$2:\n                return EMPTY_BUFFER;\n            case RESPONDER_ID:\n                return {};\n            case PRODUCED_AT:\n                return new Date(0, 0, 0);\n            case RESPONSES:\n            case RESPONSE_EXTENSIONS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case TBS$2:\n                return (memberValue.byteLength === 0);\n            case RESPONDER_ID:\n                return (Object.keys(memberValue).length === 0);\n            case PRODUCED_AT:\n                return (memberValue === ResponseData.defaultValues(memberName));\n            case RESPONSES:\n            case RESPONSE_EXTENSIONS:\n                return (memberValue.length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || RESPONSE_DATA),\n            value: [\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [new asn1js.Integer({ name: (names.version || RESPONSE_DATA_VERSION) })]\n                }),\n                new asn1js.Choice({\n                    value: [\n                        new asn1js.Constructed({\n                            name: (names.responderID || RESPONSE_DATA_RESPONDER_ID),\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: 1\n                            },\n                            value: [RelativeDistinguishedNames.schema(names.ResponseDataByName || {\n                                    names: {\n                                        blockName: \"ResponseData.byName\"\n                                    }\n                                })]\n                        }),\n                        new asn1js.Constructed({\n                            name: (names.responderID || RESPONSE_DATA_RESPONDER_ID),\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: 2\n                            },\n                            value: [new asn1js.OctetString({ name: (names.ResponseDataByKey || \"ResponseData.byKey\") })]\n                        })\n                    ]\n                }),\n                new asn1js.GeneralizedTime({ name: (names.producedAt || RESPONSE_DATA_PRODUCED_AT) }),\n                new asn1js.Sequence({\n                    value: [\n                        new asn1js.Repeated({\n                            name: RESPONSE_DATA_RESPONSES,\n                            value: SingleResponse.schema(names.response || {})\n                        })\n                    ]\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: [Extensions.schema(names.extensions || {\n                            names: {\n                                blockName: RESPONSE_DATA_RESPONSE_EXTENSIONS\n                            }\n                        })]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$h);\n        const asn1 = asn1js.compareSchema(schema, schema, ResponseData.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.tbsView = asn1.result.ResponseData.valueBeforeDecodeView;\n        if (RESPONSE_DATA_VERSION in asn1.result)\n            this.version = asn1.result[RESPONSE_DATA_VERSION].valueBlock.valueDec;\n        if (asn1.result[RESPONSE_DATA_RESPONDER_ID].idBlock.tagNumber === 1)\n            this.responderID = new RelativeDistinguishedNames({ schema: asn1.result[RESPONSE_DATA_RESPONDER_ID].valueBlock.value[0] });\n        else\n            this.responderID = asn1.result[RESPONSE_DATA_RESPONDER_ID].valueBlock.value[0];\n        this.producedAt = asn1.result[RESPONSE_DATA_PRODUCED_AT].toDate();\n        this.responses = Array.from(asn1.result[RESPONSE_DATA_RESPONSES], element => new SingleResponse({ schema: element }));\n        if (RESPONSE_DATA_RESPONSE_EXTENSIONS in asn1.result)\n            this.responseExtensions = Array.from(asn1.result[RESPONSE_DATA_RESPONSE_EXTENSIONS].valueBlock.value, element => new Extension({ schema: element }));\n    }\n    toSchema(encodeFlag = false) {\n        let tbsSchema;\n        if (encodeFlag === false) {\n            if (!this.tbsView.byteLength) {\n                return ResponseData.schema();\n            }\n            const asn1 = asn1js.fromBER(this.tbsView);\n            AsnError.assert(asn1, \"TBS Response Data\");\n            tbsSchema = asn1.result;\n        }\n        else {\n            const outputArray = [];\n            if (VERSION$7 in this) {\n                outputArray.push(new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [new asn1js.Integer({ value: this.version })]\n                }));\n            }\n            if (this.responderID instanceof RelativeDistinguishedNames) {\n                outputArray.push(new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: [this.responderID.toSchema()]\n                }));\n            }\n            else {\n                outputArray.push(new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 2\n                    },\n                    value: [this.responderID]\n                }));\n            }\n            outputArray.push(new asn1js.GeneralizedTime({ valueDate: this.producedAt }));\n            outputArray.push(new asn1js.Sequence({\n                value: Array.from(this.responses, o => o.toSchema())\n            }));\n            if (this.responseExtensions) {\n                outputArray.push(new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: [new asn1js.Sequence({\n                            value: Array.from(this.responseExtensions, o => o.toSchema())\n                        })]\n                }));\n            }\n            tbsSchema = new asn1js.Sequence({\n                value: outputArray\n            });\n        }\n        return tbsSchema;\n    }\n    toJSON() {\n        const res = {};\n        if (VERSION$7 in this) {\n            res.version = this.version;\n        }\n        if (this.responderID) {\n            res.responderID = this.responderID;\n        }\n        if (this.producedAt) {\n            res.producedAt = this.producedAt;\n        }\n        if (this.responses) {\n            res.responses = Array.from(this.responses, o => o.toJSON());\n        }\n        if (this.responseExtensions) {\n            res.responseExtensions = Array.from(this.responseExtensions, o => o.toJSON());\n        }\n        return res;\n    }\n}\nResponseData.CLASS_NAME = \"ResponseData\";\n\nconst TRUSTED_CERTS = \"trustedCerts\";\nconst CERTS$2 = \"certs\";\nconst CRLS$1 = \"crls\";\nconst OCSPS$1 = \"ocsps\";\nconst CHECK_DATE = \"checkDate\";\nconst FIND_ORIGIN = \"findOrigin\";\nconst FIND_ISSUER = \"findIssuer\";\nvar ChainValidationCode;\n(function (ChainValidationCode) {\n    ChainValidationCode[ChainValidationCode[\"unknown\"] = -1] = \"unknown\";\n    ChainValidationCode[ChainValidationCode[\"success\"] = 0] = \"success\";\n    ChainValidationCode[ChainValidationCode[\"noRevocation\"] = 11] = \"noRevocation\";\n    ChainValidationCode[ChainValidationCode[\"noPath\"] = 60] = \"noPath\";\n    ChainValidationCode[ChainValidationCode[\"noValidPath\"] = 97] = \"noValidPath\";\n})(ChainValidationCode || (ChainValidationCode = {}));\nclass ChainValidationError extends Error {\n    constructor(code, message) {\n        super(message);\n        this.name = ChainValidationError.NAME;\n        this.code = code;\n        this.message = message;\n    }\n}\nChainValidationError.NAME = \"ChainValidationError\";\nfunction isTrusted(cert, trustedList) {\n    for (let i = 0; i < trustedList.length; i++) {\n        if (pvtsutils.BufferSourceConverter.isEqual(cert.tbsView, trustedList[i].tbsView)) {\n            return true;\n        }\n    }\n    return false;\n}\nclass CertificateChainValidationEngine {\n    constructor(parameters = {}) {\n        this.trustedCerts = pvutils.getParametersValue(parameters, TRUSTED_CERTS, this.defaultValues(TRUSTED_CERTS));\n        this.certs = pvutils.getParametersValue(parameters, CERTS$2, this.defaultValues(CERTS$2));\n        this.crls = pvutils.getParametersValue(parameters, CRLS$1, this.defaultValues(CRLS$1));\n        this.ocsps = pvutils.getParametersValue(parameters, OCSPS$1, this.defaultValues(OCSPS$1));\n        this.checkDate = pvutils.getParametersValue(parameters, CHECK_DATE, this.defaultValues(CHECK_DATE));\n        this.findOrigin = pvutils.getParametersValue(parameters, FIND_ORIGIN, this.defaultValues(FIND_ORIGIN));\n        this.findIssuer = pvutils.getParametersValue(parameters, FIND_ISSUER, this.defaultValues(FIND_ISSUER));\n    }\n    static defaultFindOrigin(certificate, validationEngine) {\n        if (certificate.tbsView.byteLength === 0) {\n            certificate.tbsView = new Uint8Array(certificate.encodeTBS().toBER());\n        }\n        for (const localCert of validationEngine.certs) {\n            if (localCert.tbsView.byteLength === 0) {\n                localCert.tbsView = new Uint8Array(localCert.encodeTBS().toBER());\n            }\n            if (pvtsutils.BufferSourceConverter.isEqual(certificate.tbsView, localCert.tbsView))\n                return \"Intermediate Certificates\";\n        }\n        for (const trustedCert of validationEngine.trustedCerts) {\n            if (trustedCert.tbsView.byteLength === 0)\n                trustedCert.tbsView = new Uint8Array(trustedCert.encodeTBS().toBER());\n            if (pvtsutils.BufferSourceConverter.isEqual(certificate.tbsView, trustedCert.tbsView))\n                return \"Trusted Certificates\";\n        }\n        return \"Unknown\";\n    }\n    async defaultFindIssuer(certificate, validationEngine, crypto = getCrypto(true)) {\n        const result = [];\n        let keyIdentifier = null;\n        let authorityCertIssuer = null;\n        let authorityCertSerialNumber = null;\n        if (certificate.subject.isEqual(certificate.issuer)) {\n            try {\n                const verificationResult = await certificate.verify(undefined, crypto);\n                if (verificationResult) {\n                    return [certificate];\n                }\n            }\n            catch (ex) {\n            }\n        }\n        if (certificate.extensions) {\n            for (const extension of certificate.extensions) {\n                if (extension.extnID === id_AuthorityKeyIdentifier && extension.parsedValue instanceof AuthorityKeyIdentifier) {\n                    if (extension.parsedValue.keyIdentifier) {\n                        keyIdentifier = extension.parsedValue.keyIdentifier;\n                    }\n                    else {\n                        if (extension.parsedValue.authorityCertIssuer) {\n                            authorityCertIssuer = extension.parsedValue.authorityCertIssuer;\n                        }\n                        if (extension.parsedValue.authorityCertSerialNumber) {\n                            authorityCertSerialNumber = extension.parsedValue.authorityCertSerialNumber;\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n        function checkCertificate(possibleIssuer) {\n            if (keyIdentifier !== null) {\n                if (possibleIssuer.extensions) {\n                    let extensionFound = false;\n                    for (const extension of possibleIssuer.extensions) {\n                        if (extension.extnID === id_SubjectKeyIdentifier && extension.parsedValue) {\n                            extensionFound = true;\n                            if (pvtsutils.BufferSourceConverter.isEqual(extension.parsedValue.valueBlock.valueHex, keyIdentifier.valueBlock.valueHexView)) {\n                                result.push(possibleIssuer);\n                            }\n                            break;\n                        }\n                    }\n                    if (extensionFound) {\n                        return;\n                    }\n                }\n            }\n            let authorityCertSerialNumberEqual = false;\n            if (authorityCertSerialNumber !== null)\n                authorityCertSerialNumberEqual = possibleIssuer.serialNumber.isEqual(authorityCertSerialNumber);\n            if (authorityCertIssuer !== null) {\n                if (possibleIssuer.subject.isEqual(authorityCertIssuer)) {\n                    if (authorityCertSerialNumberEqual)\n                        result.push(possibleIssuer);\n                }\n            }\n            else {\n                if (certificate.issuer.isEqual(possibleIssuer.subject))\n                    result.push(possibleIssuer);\n            }\n        }\n        for (const trustedCert of validationEngine.trustedCerts) {\n            checkCertificate(trustedCert);\n        }\n        for (const intermediateCert of validationEngine.certs) {\n            checkCertificate(intermediateCert);\n        }\n        for (let i = result.length - 1; i >= 0; i--) {\n            try {\n                const verificationResult = await certificate.verify(result[i], crypto);\n                if (verificationResult === false)\n                    result.splice(i, 1);\n            }\n            catch (ex) {\n                result.splice(i, 1);\n            }\n        }\n        return result;\n    }\n    defaultValues(memberName) {\n        switch (memberName) {\n            case TRUSTED_CERTS:\n                return [];\n            case CERTS$2:\n                return [];\n            case CRLS$1:\n                return [];\n            case OCSPS$1:\n                return [];\n            case CHECK_DATE:\n                return new Date();\n            case FIND_ORIGIN:\n                return CertificateChainValidationEngine.defaultFindOrigin;\n            case FIND_ISSUER:\n                return this.defaultFindIssuer;\n            default:\n                throw new Error(`Invalid member name for CertificateChainValidationEngine class: ${memberName}`);\n        }\n    }\n    async sort(passedWhenNotRevValues = false, crypto = getCrypto(true)) {\n        const localCerts = [];\n        const buildPath = async (certificate, crypto) => {\n            const result = [];\n            function checkUnique(array) {\n                let unique = true;\n                for (let i = 0; i < array.length; i++) {\n                    for (let j = 0; j < array.length; j++) {\n                        if (j === i)\n                            continue;\n                        if (array[i] === array[j]) {\n                            unique = false;\n                            break;\n                        }\n                    }\n                    if (!unique)\n                        break;\n                }\n                return unique;\n            }\n            if (isTrusted(certificate, this.trustedCerts)) {\n                return [[certificate]];\n            }\n            const findIssuerResult = await this.findIssuer(certificate, this, crypto);\n            if (findIssuerResult.length === 0) {\n                throw new Error(\"No valid certificate paths found\");\n            }\n            for (let i = 0; i < findIssuerResult.length; i++) {\n                if (pvtsutils.BufferSourceConverter.isEqual(findIssuerResult[i].tbsView, certificate.tbsView)) {\n                    result.push([findIssuerResult[i]]);\n                    continue;\n                }\n                const buildPathResult = await buildPath(findIssuerResult[i], crypto);\n                for (let j = 0; j < buildPathResult.length; j++) {\n                    const copy = buildPathResult[j].slice();\n                    copy.splice(0, 0, findIssuerResult[i]);\n                    if (checkUnique(copy))\n                        result.push(copy);\n                    else\n                        result.push(buildPathResult[j]);\n                }\n            }\n            return result;\n        };\n        const findCRL = async (certificate) => {\n            const issuerCertificates = [];\n            const crls = [];\n            const crlsAndCertificates = [];\n            issuerCertificates.push(...localCerts.filter(element => certificate.issuer.isEqual(element.subject)));\n            if (issuerCertificates.length === 0) {\n                return {\n                    status: 1,\n                    statusMessage: \"No certificate's issuers\"\n                };\n            }\n            crls.push(...this.crls.filter(o => o.issuer.isEqual(certificate.issuer)));\n            if (crls.length === 0) {\n                return {\n                    status: 2,\n                    statusMessage: \"No CRLs for specific certificate issuer\"\n                };\n            }\n            for (let i = 0; i < crls.length; i++) {\n                const crl = crls[i];\n                if (crl.nextUpdate && crl.nextUpdate.value < this.checkDate) {\n                    continue;\n                }\n                for (let j = 0; j < issuerCertificates.length; j++) {\n                    try {\n                        const result = await crls[i].verify({ issuerCertificate: issuerCertificates[j] }, crypto);\n                        if (result) {\n                            crlsAndCertificates.push({\n                                crl: crls[i],\n                                certificate: issuerCertificates[j]\n                            });\n                            break;\n                        }\n                    }\n                    catch (ex) {\n                    }\n                }\n            }\n            if (crlsAndCertificates.length) {\n                return {\n                    status: 0,\n                    statusMessage: EMPTY_STRING,\n                    result: crlsAndCertificates\n                };\n            }\n            return {\n                status: 3,\n                statusMessage: \"No valid CRLs found\"\n            };\n        };\n        const findOCSP = async (certificate, issuerCertificate) => {\n            const hashAlgorithm = crypto.getAlgorithmByOID(certificate.signatureAlgorithm.algorithmId);\n            if (!hashAlgorithm.name) {\n                return 1;\n            }\n            if (!hashAlgorithm.hash) {\n                return 1;\n            }\n            for (let i = 0; i < this.ocsps.length; i++) {\n                const ocsp = this.ocsps[i];\n                const result = await ocsp.getCertificateStatus(certificate, issuerCertificate, crypto);\n                if (result.isForCertificate) {\n                    if (result.status === 0)\n                        return 0;\n                    return 1;\n                }\n            }\n            return 2;\n        };\n        async function checkForCA(certificate, needToCheckCRL = false) {\n            let isCA = false;\n            let mustBeCA = false;\n            let keyUsagePresent = false;\n            let cRLSign = false;\n            if (certificate.extensions) {\n                for (let j = 0; j < certificate.extensions.length; j++) {\n                    const extension = certificate.extensions[j];\n                    if (extension.critical && !extension.parsedValue) {\n                        return {\n                            result: false,\n                            resultCode: 6,\n                            resultMessage: `Unable to parse critical certificate extension: ${extension.extnID}`\n                        };\n                    }\n                    if (extension.extnID === id_KeyUsage) {\n                        keyUsagePresent = true;\n                        const view = new Uint8Array(extension.parsedValue.valueBlock.valueHex);\n                        if ((view[0] & 0x04) === 0x04)\n                            mustBeCA = true;\n                        if ((view[0] & 0x02) === 0x02)\n                            cRLSign = true;\n                    }\n                    if (extension.extnID === id_BasicConstraints) {\n                        if (\"cA\" in extension.parsedValue) {\n                            if (extension.parsedValue.cA === true)\n                                isCA = true;\n                        }\n                    }\n                }\n                if ((mustBeCA === true) && (isCA === false)) {\n                    return {\n                        result: false,\n                        resultCode: 3,\n                        resultMessage: \"Unable to build certificate chain - using \\\"keyCertSign\\\" flag set without BasicConstraints\"\n                    };\n                }\n                if ((keyUsagePresent === true) && (isCA === true) && (mustBeCA === false)) {\n                    return {\n                        result: false,\n                        resultCode: 4,\n                        resultMessage: \"Unable to build certificate chain - \\\"keyCertSign\\\" flag was not set\"\n                    };\n                }\n                if ((isCA === true) && (keyUsagePresent === true) && ((needToCheckCRL) && (cRLSign === false))) {\n                    return {\n                        result: false,\n                        resultCode: 5,\n                        resultMessage: \"Unable to build certificate chain - intermediate certificate must have \\\"cRLSign\\\" key usage flag\"\n                    };\n                }\n            }\n            if (isCA === false) {\n                return {\n                    result: false,\n                    resultCode: 7,\n                    resultMessage: \"Unable to build certificate chain - more than one possible end-user certificate\"\n                };\n            }\n            return {\n                result: true,\n                resultCode: 0,\n                resultMessage: EMPTY_STRING\n            };\n        }\n        const basicCheck = async (path, checkDate) => {\n            for (let i = 0; i < path.length; i++) {\n                if ((path[i].notBefore.value > checkDate) ||\n                    (path[i].notAfter.value < checkDate)) {\n                    return {\n                        result: false,\n                        resultCode: 8,\n                        resultMessage: \"The certificate is either not yet valid or expired\"\n                    };\n                }\n            }\n            if (path.length < 2) {\n                return {\n                    result: false,\n                    resultCode: 9,\n                    resultMessage: \"Too short certificate path\"\n                };\n            }\n            for (let i = (path.length - 2); i >= 0; i--) {\n                if (path[i].issuer.isEqual(path[i].subject) === false) {\n                    if (path[i].issuer.isEqual(path[i + 1].subject) === false) {\n                        return {\n                            result: false,\n                            resultCode: 10,\n                            resultMessage: \"Incorrect name chaining\"\n                        };\n                    }\n                }\n            }\n            if ((this.crls.length !== 0) || (this.ocsps.length !== 0)) {\n                for (let i = 0; i < (path.length - 1); i++) {\n                    let ocspResult = 2;\n                    let crlResult = {\n                        status: 0,\n                        statusMessage: EMPTY_STRING\n                    };\n                    if (this.ocsps.length !== 0) {\n                        ocspResult = await findOCSP(path[i], path[i + 1]);\n                        switch (ocspResult) {\n                            case 0:\n                                continue;\n                            case 1:\n                                return {\n                                    result: false,\n                                    resultCode: 12,\n                                    resultMessage: \"One of certificates was revoked via OCSP response\"\n                                };\n                        }\n                    }\n                    if (this.crls.length !== 0) {\n                        crlResult = await findCRL(path[i]);\n                        if (crlResult.status === 0 && crlResult.result) {\n                            for (let j = 0; j < crlResult.result.length; j++) {\n                                const isCertificateRevoked = crlResult.result[j].crl.isCertificateRevoked(path[i]);\n                                if (isCertificateRevoked) {\n                                    return {\n                                        result: false,\n                                        resultCode: 12,\n                                        resultMessage: \"One of certificates had been revoked\"\n                                    };\n                                }\n                                const isCertificateCA = await checkForCA(crlResult.result[j].certificate, true);\n                                if (isCertificateCA.result === false) {\n                                    return {\n                                        result: false,\n                                        resultCode: 13,\n                                        resultMessage: \"CRL issuer certificate is not a CA certificate or does not have crlSign flag\"\n                                    };\n                                }\n                            }\n                        }\n                        else {\n                            if (passedWhenNotRevValues === false) {\n                                throw new ChainValidationError(ChainValidationCode.noRevocation, `No revocation values found for one of certificates: ${crlResult.statusMessage}`);\n                            }\n                        }\n                    }\n                    else {\n                        if (ocspResult === 2) {\n                            return {\n                                result: false,\n                                resultCode: 11,\n                                resultMessage: \"No revocation values found for one of certificates\"\n                            };\n                        }\n                    }\n                    if ((ocspResult === 2) && (crlResult.status === 2) && passedWhenNotRevValues) {\n                        const issuerCertificate = path[i + 1];\n                        let extensionFound = false;\n                        if (issuerCertificate.extensions) {\n                            for (const extension of issuerCertificate.extensions) {\n                                switch (extension.extnID) {\n                                    case id_CRLDistributionPoints:\n                                    case id_FreshestCRL:\n                                    case id_AuthorityInfoAccess:\n                                        extensionFound = true;\n                                        break;\n                                }\n                            }\n                        }\n                        if (extensionFound) {\n                            throw new ChainValidationError(ChainValidationCode.noRevocation, `No revocation values found for one of certificates: ${crlResult.statusMessage}`);\n                        }\n                    }\n                }\n            }\n            for (const [i, cert] of path.entries()) {\n                if (!i) {\n                    continue;\n                }\n                const result = await checkForCA(cert);\n                if (!result.result) {\n                    return {\n                        result: false,\n                        resultCode: 14,\n                        resultMessage: \"One of intermediate certificates is not a CA certificate\"\n                    };\n                }\n            }\n            return {\n                result: true\n            };\n        };\n        localCerts.push(...this.trustedCerts);\n        localCerts.push(...this.certs);\n        for (let i = 0; i < localCerts.length; i++) {\n            for (let j = 0; j < localCerts.length; j++) {\n                if (i === j)\n                    continue;\n                if (pvtsutils.BufferSourceConverter.isEqual(localCerts[i].tbsView, localCerts[j].tbsView)) {\n                    localCerts.splice(j, 1);\n                    i = 0;\n                    break;\n                }\n            }\n        }\n        const leafCert = localCerts[localCerts.length - 1];\n        let result;\n        const certificatePath = [leafCert];\n        result = await buildPath(leafCert, crypto);\n        if (result.length === 0) {\n            throw new ChainValidationError(ChainValidationCode.noPath, \"Unable to find certificate path\");\n        }\n        for (let i = result.length - 1; i >= 0; i--) {\n            let found = false;\n            for (let j = 0; j < (result[i]).length; j++) {\n                const certificate = (result[i])[j];\n                for (let k = 0; k < this.trustedCerts.length; k++) {\n                    if (pvtsutils.BufferSourceConverter.isEqual(certificate.tbsView, this.trustedCerts[k].tbsView)) {\n                        found = true;\n                        break;\n                    }\n                }\n                if (found)\n                    break;\n            }\n            if (!found) {\n                result.splice(i, 1);\n            }\n        }\n        if (result.length === 0) {\n            throw new ChainValidationError(ChainValidationCode.noValidPath, \"No valid certificate paths found\");\n        }\n        let shortestLength = result[0].length;\n        let shortestIndex = 0;\n        for (let i = 0; i < result.length; i++) {\n            if (result[i].length < shortestLength) {\n                shortestLength = result[i].length;\n                shortestIndex = i;\n            }\n        }\n        for (let i = 0; i < result[shortestIndex].length; i++)\n            certificatePath.push((result[shortestIndex])[i]);\n        result = await basicCheck(certificatePath, this.checkDate);\n        if (result.result === false)\n            throw result;\n        return certificatePath;\n    }\n    async verify(parameters = {}, crypto = getCrypto(true)) {\n        function compareDNSName(name, constraint) {\n            const namePrepared = stringPrep(name);\n            const constraintPrepared = stringPrep(constraint);\n            const nameSplitted = namePrepared.split(\".\");\n            const constraintSplitted = constraintPrepared.split(\".\");\n            const nameLen = nameSplitted.length;\n            const constrLen = constraintSplitted.length;\n            if ((nameLen === 0) || (constrLen === 0) || (nameLen < constrLen)) {\n                return false;\n            }\n            for (let i = 0; i < nameLen; i++) {\n                if (nameSplitted[i].length === 0) {\n                    return false;\n                }\n            }\n            for (let i = 0; i < constrLen; i++) {\n                if (constraintSplitted[i].length === 0) {\n                    if (i === 0) {\n                        if (constrLen === 1) {\n                            return false;\n                        }\n                        continue;\n                    }\n                    return false;\n                }\n            }\n            for (let i = 0; i < constrLen; i++) {\n                if (constraintSplitted[constrLen - 1 - i].length === 0) {\n                    continue;\n                }\n                if (nameSplitted[nameLen - 1 - i].localeCompare(constraintSplitted[constrLen - 1 - i]) !== 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        function compareRFC822Name(name, constraint) {\n            const namePrepared = stringPrep(name);\n            const constraintPrepared = stringPrep(constraint);\n            const nameSplitted = namePrepared.split(\"@\");\n            const constraintSplitted = constraintPrepared.split(\"@\");\n            if ((nameSplitted.length === 0) || (constraintSplitted.length === 0) || (nameSplitted.length < constraintSplitted.length))\n                return false;\n            if (constraintSplitted.length === 1) {\n                const result = compareDNSName(nameSplitted[1], constraintSplitted[0]);\n                if (result) {\n                    const ns = nameSplitted[1].split(\".\");\n                    const cs = constraintSplitted[0].split(\".\");\n                    if (cs[0].length === 0)\n                        return true;\n                    return ns.length === cs.length;\n                }\n                return false;\n            }\n            return (namePrepared.localeCompare(constraintPrepared) === 0);\n        }\n        function compareUniformResourceIdentifier(name, constraint) {\n            let namePrepared = stringPrep(name);\n            const constraintPrepared = stringPrep(constraint);\n            const ns = namePrepared.split(\"/\");\n            const cs = constraintPrepared.split(\"/\");\n            if (cs.length > 1)\n                return false;\n            if (ns.length > 1) {\n                for (let i = 0; i < ns.length; i++) {\n                    if ((ns[i].length > 0) && (ns[i].charAt(ns[i].length - 1) !== \":\")) {\n                        const nsPort = ns[i].split(\":\");\n                        namePrepared = nsPort[0];\n                        break;\n                    }\n                }\n            }\n            const result = compareDNSName(namePrepared, constraintPrepared);\n            if (result) {\n                const nameSplitted = namePrepared.split(\".\");\n                const constraintSplitted = constraintPrepared.split(\".\");\n                if (constraintSplitted[0].length === 0)\n                    return true;\n                return nameSplitted.length === constraintSplitted.length;\n            }\n            return false;\n        }\n        function compareIPAddress(name, constraint) {\n            const nameView = name.valueBlock.valueHexView;\n            const constraintView = constraint.valueBlock.valueHexView;\n            if ((nameView.length === 4) && (constraintView.length === 8)) {\n                for (let i = 0; i < 4; i++) {\n                    if ((nameView[i] ^ constraintView[i]) & constraintView[i + 4])\n                        return false;\n                }\n                return true;\n            }\n            if ((nameView.length === 16) && (constraintView.length === 32)) {\n                for (let i = 0; i < 16; i++) {\n                    if ((nameView[i] ^ constraintView[i]) & constraintView[i + 16])\n                        return false;\n                }\n                return true;\n            }\n            return false;\n        }\n        function compareDirectoryName(name, constraint) {\n            if ((name.typesAndValues.length === 0) || (constraint.typesAndValues.length === 0))\n                return true;\n            if (name.typesAndValues.length < constraint.typesAndValues.length)\n                return false;\n            let result = true;\n            let nameStart = 0;\n            for (let i = 0; i < constraint.typesAndValues.length; i++) {\n                let localResult = false;\n                for (let j = nameStart; j < name.typesAndValues.length; j++) {\n                    localResult = name.typesAndValues[j].isEqual(constraint.typesAndValues[i]);\n                    if (name.typesAndValues[j].type === constraint.typesAndValues[i].type)\n                        result = result && localResult;\n                    if (localResult === true) {\n                        if ((nameStart === 0) || (nameStart === j)) {\n                            nameStart = j + 1;\n                            break;\n                        }\n                        else\n                            return false;\n                    }\n                }\n                if (localResult === false)\n                    return false;\n            }\n            return (nameStart === 0) ? false : result;\n        }\n        try {\n            if (this.certs.length === 0)\n                throw new Error(\"Empty certificate array\");\n            const passedWhenNotRevValues = parameters.passedWhenNotRevValues || false;\n            const initialPolicySet = parameters.initialPolicySet || [id_AnyPolicy];\n            const initialExplicitPolicy = parameters.initialExplicitPolicy || false;\n            const initialPolicyMappingInhibit = parameters.initialPolicyMappingInhibit || false;\n            const initialInhibitPolicy = parameters.initialInhibitPolicy || false;\n            const initialPermittedSubtreesSet = parameters.initialPermittedSubtreesSet || [];\n            const initialExcludedSubtreesSet = parameters.initialExcludedSubtreesSet || [];\n            const initialRequiredNameForms = parameters.initialRequiredNameForms || [];\n            let explicitPolicyIndicator = initialExplicitPolicy;\n            let policyMappingInhibitIndicator = initialPolicyMappingInhibit;\n            let inhibitAnyPolicyIndicator = initialInhibitPolicy;\n            const pendingConstraints = [\n                false,\n                false,\n                false,\n            ];\n            let explicitPolicyPending = 0;\n            let policyMappingInhibitPending = 0;\n            let inhibitAnyPolicyPending = 0;\n            let permittedSubtrees = initialPermittedSubtreesSet;\n            let excludedSubtrees = initialExcludedSubtreesSet;\n            const requiredNameForms = initialRequiredNameForms;\n            let pathDepth = 1;\n            this.certs = await this.sort(passedWhenNotRevValues, crypto);\n            const allPolicies = [];\n            allPolicies.push(id_AnyPolicy);\n            const policiesAndCerts = [];\n            const anyPolicyArray = new Array(this.certs.length - 1);\n            for (let ii = 0; ii < (this.certs.length - 1); ii++)\n                anyPolicyArray[ii] = true;\n            policiesAndCerts.push(anyPolicyArray);\n            const policyMappings = new Array(this.certs.length - 1);\n            const certPolicies = new Array(this.certs.length - 1);\n            let explicitPolicyStart = (explicitPolicyIndicator) ? (this.certs.length - 1) : (-1);\n            for (let i = (this.certs.length - 2); i >= 0; i--, pathDepth++) {\n                const cert = this.certs[i];\n                if (cert.extensions) {\n                    for (let j = 0; j < cert.extensions.length; j++) {\n                        const extension = cert.extensions[j];\n                        if (extension.extnID === id_CertificatePolicies) {\n                            certPolicies[i] = extension.parsedValue;\n                            for (let s = 0; s < allPolicies.length; s++) {\n                                if (allPolicies[s] === id_AnyPolicy) {\n                                    delete (policiesAndCerts[s])[i];\n                                    break;\n                                }\n                            }\n                            for (let k = 0; k < extension.parsedValue.certificatePolicies.length; k++) {\n                                let policyIndex = (-1);\n                                const policyId = extension.parsedValue.certificatePolicies[k].policyIdentifier;\n                                for (let s = 0; s < allPolicies.length; s++) {\n                                    if (policyId === allPolicies[s]) {\n                                        policyIndex = s;\n                                        break;\n                                    }\n                                }\n                                if (policyIndex === (-1)) {\n                                    allPolicies.push(policyId);\n                                    const certArray = new Array(this.certs.length - 1);\n                                    certArray[i] = true;\n                                    policiesAndCerts.push(certArray);\n                                }\n                                else\n                                    (policiesAndCerts[policyIndex])[i] = true;\n                            }\n                        }\n                        if (extension.extnID === id_PolicyMappings) {\n                            if (policyMappingInhibitIndicator) {\n                                return {\n                                    result: false,\n                                    resultCode: 98,\n                                    resultMessage: \"Policy mapping prohibited\"\n                                };\n                            }\n                            policyMappings[i] = extension.parsedValue;\n                        }\n                        if (extension.extnID === id_PolicyConstraints) {\n                            if (explicitPolicyIndicator === false) {\n                                if (extension.parsedValue.requireExplicitPolicy === 0) {\n                                    explicitPolicyIndicator = true;\n                                    explicitPolicyStart = i;\n                                }\n                                else {\n                                    if (pendingConstraints[0] === false) {\n                                        pendingConstraints[0] = true;\n                                        explicitPolicyPending = extension.parsedValue.requireExplicitPolicy;\n                                    }\n                                    else\n                                        explicitPolicyPending = (explicitPolicyPending > extension.parsedValue.requireExplicitPolicy) ? extension.parsedValue.requireExplicitPolicy : explicitPolicyPending;\n                                }\n                                if (extension.parsedValue.inhibitPolicyMapping === 0)\n                                    policyMappingInhibitIndicator = true;\n                                else {\n                                    if (pendingConstraints[1] === false) {\n                                        pendingConstraints[1] = true;\n                                        policyMappingInhibitPending = extension.parsedValue.inhibitPolicyMapping + 1;\n                                    }\n                                    else\n                                        policyMappingInhibitPending = (policyMappingInhibitPending > (extension.parsedValue.inhibitPolicyMapping + 1)) ? (extension.parsedValue.inhibitPolicyMapping + 1) : policyMappingInhibitPending;\n                                }\n                            }\n                        }\n                        if (extension.extnID === id_InhibitAnyPolicy) {\n                            if (inhibitAnyPolicyIndicator === false) {\n                                if (extension.parsedValue.valueBlock.valueDec === 0)\n                                    inhibitAnyPolicyIndicator = true;\n                                else {\n                                    if (pendingConstraints[2] === false) {\n                                        pendingConstraints[2] = true;\n                                        inhibitAnyPolicyPending = extension.parsedValue.valueBlock.valueDec;\n                                    }\n                                    else\n                                        inhibitAnyPolicyPending = (inhibitAnyPolicyPending > extension.parsedValue.valueBlock.valueDec) ? extension.parsedValue.valueBlock.valueDec : inhibitAnyPolicyPending;\n                                }\n                            }\n                        }\n                    }\n                    if (inhibitAnyPolicyIndicator === true) {\n                        let policyIndex = (-1);\n                        for (let searchAnyPolicy = 0; searchAnyPolicy < allPolicies.length; searchAnyPolicy++) {\n                            if (allPolicies[searchAnyPolicy] === id_AnyPolicy) {\n                                policyIndex = searchAnyPolicy;\n                                break;\n                            }\n                        }\n                        if (policyIndex !== (-1))\n                            delete (policiesAndCerts[0])[i];\n                    }\n                    if (explicitPolicyIndicator === false) {\n                        if (pendingConstraints[0] === true) {\n                            explicitPolicyPending--;\n                            if (explicitPolicyPending === 0) {\n                                explicitPolicyIndicator = true;\n                                explicitPolicyStart = i;\n                                pendingConstraints[0] = false;\n                            }\n                        }\n                    }\n                    if (policyMappingInhibitIndicator === false) {\n                        if (pendingConstraints[1] === true) {\n                            policyMappingInhibitPending--;\n                            if (policyMappingInhibitPending === 0) {\n                                policyMappingInhibitIndicator = true;\n                                pendingConstraints[1] = false;\n                            }\n                        }\n                    }\n                    if (inhibitAnyPolicyIndicator === false) {\n                        if (pendingConstraints[2] === true) {\n                            inhibitAnyPolicyPending--;\n                            if (inhibitAnyPolicyPending === 0) {\n                                inhibitAnyPolicyIndicator = true;\n                                pendingConstraints[2] = false;\n                            }\n                        }\n                    }\n                }\n            }\n            for (let i = 0; i < (this.certs.length - 1); i++) {\n                if ((i < (this.certs.length - 2)) && (typeof policyMappings[i + 1] !== \"undefined\")) {\n                    for (let k = 0; k < policyMappings[i + 1].mappings.length; k++) {\n                        if ((policyMappings[i + 1].mappings[k].issuerDomainPolicy === id_AnyPolicy) || (policyMappings[i + 1].mappings[k].subjectDomainPolicy === id_AnyPolicy)) {\n                            return {\n                                result: false,\n                                resultCode: 99,\n                                resultMessage: \"The \\\"anyPolicy\\\" should not be a part of policy mapping scheme\"\n                            };\n                        }\n                        let issuerDomainPolicyIndex = (-1);\n                        let subjectDomainPolicyIndex = (-1);\n                        for (let n = 0; n < allPolicies.length; n++) {\n                            if (allPolicies[n] === policyMappings[i + 1].mappings[k].issuerDomainPolicy)\n                                issuerDomainPolicyIndex = n;\n                            if (allPolicies[n] === policyMappings[i + 1].mappings[k].subjectDomainPolicy)\n                                subjectDomainPolicyIndex = n;\n                        }\n                        if (typeof (policiesAndCerts[issuerDomainPolicyIndex])[i] !== \"undefined\")\n                            delete (policiesAndCerts[issuerDomainPolicyIndex])[i];\n                        for (let j = 0; j < certPolicies[i].certificatePolicies.length; j++) {\n                            if (policyMappings[i + 1].mappings[k].subjectDomainPolicy === certPolicies[i].certificatePolicies[j].policyIdentifier) {\n                                if ((issuerDomainPolicyIndex !== (-1)) && (subjectDomainPolicyIndex !== (-1))) {\n                                    for (let m = 0; m <= i; m++) {\n                                        if (typeof (policiesAndCerts[subjectDomainPolicyIndex])[m] !== \"undefined\") {\n                                            (policiesAndCerts[issuerDomainPolicyIndex])[m] = true;\n                                            delete (policiesAndCerts[subjectDomainPolicyIndex])[m];\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            for (let i = 0; i < allPolicies.length; i++) {\n                if (allPolicies[i] === id_AnyPolicy) {\n                    for (let j = 0; j < explicitPolicyStart; j++)\n                        delete (policiesAndCerts[i])[j];\n                }\n            }\n            const authConstrPolicies = [];\n            for (let i = 0; i < policiesAndCerts.length; i++) {\n                let found = true;\n                for (let j = 0; j < (this.certs.length - 1); j++) {\n                    let anyPolicyFound = false;\n                    if ((j < explicitPolicyStart) && (allPolicies[i] === id_AnyPolicy) && (allPolicies.length > 1)) {\n                        found = false;\n                        break;\n                    }\n                    if (typeof (policiesAndCerts[i])[j] === \"undefined\") {\n                        if (j >= explicitPolicyStart) {\n                            for (let k = 0; k < allPolicies.length; k++) {\n                                if (allPolicies[k] === id_AnyPolicy) {\n                                    if ((policiesAndCerts[k])[j] === true)\n                                        anyPolicyFound = true;\n                                    break;\n                                }\n                            }\n                        }\n                        if (!anyPolicyFound) {\n                            found = false;\n                            break;\n                        }\n                    }\n                }\n                if (found === true)\n                    authConstrPolicies.push(allPolicies[i]);\n            }\n            let userConstrPolicies = [];\n            if ((initialPolicySet.length === 1) && (initialPolicySet[0] === id_AnyPolicy) && (explicitPolicyIndicator === false))\n                userConstrPolicies = initialPolicySet;\n            else {\n                if ((authConstrPolicies.length === 1) && (authConstrPolicies[0] === id_AnyPolicy))\n                    userConstrPolicies = initialPolicySet;\n                else {\n                    for (let i = 0; i < authConstrPolicies.length; i++) {\n                        for (let j = 0; j < initialPolicySet.length; j++) {\n                            if ((initialPolicySet[j] === authConstrPolicies[i]) || (initialPolicySet[j] === id_AnyPolicy)) {\n                                userConstrPolicies.push(authConstrPolicies[i]);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            const policyResult = {\n                result: (userConstrPolicies.length > 0),\n                resultCode: 0,\n                resultMessage: (userConstrPolicies.length > 0) ? EMPTY_STRING : \"Zero \\\"userConstrPolicies\\\" array, no intersections with \\\"authConstrPolicies\\\"\",\n                authConstrPolicies,\n                userConstrPolicies,\n                explicitPolicyIndicator,\n                policyMappings,\n                certificatePath: this.certs\n            };\n            if (userConstrPolicies.length === 0)\n                return policyResult;\n            if (policyResult.result === false)\n                return policyResult;\n            pathDepth = 1;\n            for (let i = (this.certs.length - 2); i >= 0; i--, pathDepth++) {\n                const cert = this.certs[i];\n                let subjectAltNames = [];\n                let certPermittedSubtrees = [];\n                let certExcludedSubtrees = [];\n                if (cert.extensions) {\n                    for (let j = 0; j < cert.extensions.length; j++) {\n                        const extension = cert.extensions[j];\n                        if (extension.extnID === id_NameConstraints) {\n                            if (\"permittedSubtrees\" in extension.parsedValue)\n                                certPermittedSubtrees = certPermittedSubtrees.concat(extension.parsedValue.permittedSubtrees);\n                            if (\"excludedSubtrees\" in extension.parsedValue)\n                                certExcludedSubtrees = certExcludedSubtrees.concat(extension.parsedValue.excludedSubtrees);\n                        }\n                        if (extension.extnID === id_SubjectAltName)\n                            subjectAltNames = subjectAltNames.concat(extension.parsedValue.altNames);\n                    }\n                }\n                let formFound = (requiredNameForms.length <= 0);\n                for (let j = 0; j < requiredNameForms.length; j++) {\n                    switch (requiredNameForms[j].base.type) {\n                        case 4:\n                            {\n                                if (requiredNameForms[j].base.value.typesAndValues.length !== cert.subject.typesAndValues.length)\n                                    continue;\n                                formFound = true;\n                                for (let k = 0; k < cert.subject.typesAndValues.length; k++) {\n                                    if (cert.subject.typesAndValues[k].type !== requiredNameForms[j].base.value.typesAndValues[k].type) {\n                                        formFound = false;\n                                        break;\n                                    }\n                                }\n                                if (formFound === true)\n                                    break;\n                            }\n                            break;\n                        default:\n                    }\n                }\n                if (formFound === false) {\n                    policyResult.result = false;\n                    policyResult.resultCode = 21;\n                    policyResult.resultMessage = \"No necessary name form found\";\n                    throw policyResult;\n                }\n                const constrGroups = [\n                    [],\n                    [],\n                    [],\n                    [],\n                    [],\n                ];\n                for (let j = 0; j < permittedSubtrees.length; j++) {\n                    switch (permittedSubtrees[j].base.type) {\n                        case 1:\n                            constrGroups[0].push(permittedSubtrees[j]);\n                            break;\n                        case 2:\n                            constrGroups[1].push(permittedSubtrees[j]);\n                            break;\n                        case 4:\n                            constrGroups[2].push(permittedSubtrees[j]);\n                            break;\n                        case 6:\n                            constrGroups[3].push(permittedSubtrees[j]);\n                            break;\n                        case 7:\n                            constrGroups[4].push(permittedSubtrees[j]);\n                            break;\n                        default:\n                    }\n                }\n                for (let p = 0; p < 5; p++) {\n                    let groupPermitted = false;\n                    let valueExists = false;\n                    const group = constrGroups[p];\n                    for (let j = 0; j < group.length; j++) {\n                        switch (p) {\n                            case 0:\n                                if (subjectAltNames.length > 0) {\n                                    for (let k = 0; k < subjectAltNames.length; k++) {\n                                        if (subjectAltNames[k].type === 1) {\n                                            valueExists = true;\n                                            groupPermitted = groupPermitted || compareRFC822Name(subjectAltNames[k].value, group[j].base.value);\n                                        }\n                                    }\n                                }\n                                else {\n                                    for (let k = 0; k < cert.subject.typesAndValues.length; k++) {\n                                        if ((cert.subject.typesAndValues[k].type === \"1.2.840.113549.1.9.1\") ||\n                                            (cert.subject.typesAndValues[k].type === \"0.9.2342.19200300.100.1.3\")) {\n                                            valueExists = true;\n                                            groupPermitted = groupPermitted || compareRFC822Name(cert.subject.typesAndValues[k].value.valueBlock.value, group[j].base.value);\n                                        }\n                                    }\n                                }\n                                break;\n                            case 1:\n                                if (subjectAltNames.length > 0) {\n                                    for (let k = 0; k < subjectAltNames.length; k++) {\n                                        if (subjectAltNames[k].type === 2) {\n                                            valueExists = true;\n                                            groupPermitted = groupPermitted || compareDNSName(subjectAltNames[k].value, group[j].base.value);\n                                        }\n                                    }\n                                }\n                                break;\n                            case 2:\n                                valueExists = true;\n                                groupPermitted = compareDirectoryName(cert.subject, group[j].base.value);\n                                break;\n                            case 3:\n                                if (subjectAltNames.length > 0) {\n                                    for (let k = 0; k < subjectAltNames.length; k++) {\n                                        if (subjectAltNames[k].type === 6) {\n                                            valueExists = true;\n                                            groupPermitted = groupPermitted || compareUniformResourceIdentifier(subjectAltNames[k].value, group[j].base.value);\n                                        }\n                                    }\n                                }\n                                break;\n                            case 4:\n                                if (subjectAltNames.length > 0) {\n                                    for (let k = 0; k < subjectAltNames.length; k++) {\n                                        if (subjectAltNames[k].type === 7) {\n                                            valueExists = true;\n                                            groupPermitted = groupPermitted || compareIPAddress(subjectAltNames[k].value, group[j].base.value);\n                                        }\n                                    }\n                                }\n                                break;\n                            default:\n                        }\n                        if (groupPermitted)\n                            break;\n                    }\n                    if ((groupPermitted === false) && (group.length > 0) && valueExists) {\n                        policyResult.result = false;\n                        policyResult.resultCode = 41;\n                        policyResult.resultMessage = \"Failed to meet \\\"permitted sub-trees\\\" name constraint\";\n                        throw policyResult;\n                    }\n                }\n                let excluded = false;\n                for (let j = 0; j < excludedSubtrees.length; j++) {\n                    switch (excludedSubtrees[j].base.type) {\n                        case 1:\n                            if (subjectAltNames.length >= 0) {\n                                for (let k = 0; k < subjectAltNames.length; k++) {\n                                    if (subjectAltNames[k].type === 1)\n                                        excluded = excluded || compareRFC822Name(subjectAltNames[k].value, excludedSubtrees[j].base.value);\n                                }\n                            }\n                            else {\n                                for (let k = 0; k < cert.subject.typesAndValues.length; k++) {\n                                    if ((cert.subject.typesAndValues[k].type === \"1.2.840.113549.1.9.1\") ||\n                                        (cert.subject.typesAndValues[k].type === \"0.9.2342.19200300.100.1.3\"))\n                                        excluded = excluded || compareRFC822Name(cert.subject.typesAndValues[k].value.valueBlock.value, excludedSubtrees[j].base.value);\n                                }\n                            }\n                            break;\n                        case 2:\n                            if (subjectAltNames.length > 0) {\n                                for (let k = 0; k < subjectAltNames.length; k++) {\n                                    if (subjectAltNames[k].type === 2)\n                                        excluded = excluded || compareDNSName(subjectAltNames[k].value, excludedSubtrees[j].base.value);\n                                }\n                            }\n                            break;\n                        case 4:\n                            excluded = excluded || compareDirectoryName(cert.subject, excludedSubtrees[j].base.value);\n                            break;\n                        case 6:\n                            if (subjectAltNames.length > 0) {\n                                for (let k = 0; k < subjectAltNames.length; k++) {\n                                    if (subjectAltNames[k].type === 6)\n                                        excluded = excluded || compareUniformResourceIdentifier(subjectAltNames[k].value, excludedSubtrees[j].base.value);\n                                }\n                            }\n                            break;\n                        case 7:\n                            if (subjectAltNames.length > 0) {\n                                for (let k = 0; k < subjectAltNames.length; k++) {\n                                    if (subjectAltNames[k].type === 7)\n                                        excluded = excluded || compareIPAddress(subjectAltNames[k].value, excludedSubtrees[j].base.value);\n                                }\n                            }\n                            break;\n                        default:\n                    }\n                    if (excluded)\n                        break;\n                }\n                if (excluded === true) {\n                    policyResult.result = false;\n                    policyResult.resultCode = 42;\n                    policyResult.resultMessage = \"Failed to meet \\\"excluded sub-trees\\\" name constraint\";\n                    throw policyResult;\n                }\n                permittedSubtrees = permittedSubtrees.concat(certPermittedSubtrees);\n                excludedSubtrees = excludedSubtrees.concat(certExcludedSubtrees);\n            }\n            return policyResult;\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                if (error instanceof ChainValidationError) {\n                    return {\n                        result: false,\n                        resultCode: error.code,\n                        resultMessage: error.message,\n                        error: error,\n                    };\n                }\n                return {\n                    result: false,\n                    resultCode: ChainValidationCode.unknown,\n                    resultMessage: error.message,\n                    error: error,\n                };\n            }\n            if (error && typeof error === \"object\" && \"resultMessage\" in error) {\n                return error;\n            }\n            return {\n                result: false,\n                resultCode: -1,\n                resultMessage: `${error}`,\n            };\n        }\n    }\n}\n\nconst TBS_RESPONSE_DATA = \"tbsResponseData\";\nconst SIGNATURE_ALGORITHM$3 = \"signatureAlgorithm\";\nconst SIGNATURE$2 = \"signature\";\nconst CERTS$1 = \"certs\";\nconst BASIC_OCSP_RESPONSE = \"BasicOCSPResponse\";\nconst BASIC_OCSP_RESPONSE_TBS_RESPONSE_DATA = `${BASIC_OCSP_RESPONSE}.${TBS_RESPONSE_DATA}`;\nconst BASIC_OCSP_RESPONSE_SIGNATURE_ALGORITHM = `${BASIC_OCSP_RESPONSE}.${SIGNATURE_ALGORITHM$3}`;\nconst BASIC_OCSP_RESPONSE_SIGNATURE = `${BASIC_OCSP_RESPONSE}.${SIGNATURE$2}`;\nconst BASIC_OCSP_RESPONSE_CERTS = `${BASIC_OCSP_RESPONSE}.${CERTS$1}`;\nconst CLEAR_PROPS$g = [\n    BASIC_OCSP_RESPONSE_TBS_RESPONSE_DATA,\n    BASIC_OCSP_RESPONSE_SIGNATURE_ALGORITHM,\n    BASIC_OCSP_RESPONSE_SIGNATURE,\n    BASIC_OCSP_RESPONSE_CERTS\n];\nclass BasicOCSPResponse extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.tbsResponseData = pvutils.getParametersValue(parameters, TBS_RESPONSE_DATA, BasicOCSPResponse.defaultValues(TBS_RESPONSE_DATA));\n        this.signatureAlgorithm = pvutils.getParametersValue(parameters, SIGNATURE_ALGORITHM$3, BasicOCSPResponse.defaultValues(SIGNATURE_ALGORITHM$3));\n        this.signature = pvutils.getParametersValue(parameters, SIGNATURE$2, BasicOCSPResponse.defaultValues(SIGNATURE$2));\n        if (CERTS$1 in parameters) {\n            this.certs = pvutils.getParametersValue(parameters, CERTS$1, BasicOCSPResponse.defaultValues(CERTS$1));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case TBS_RESPONSE_DATA:\n                return new ResponseData();\n            case SIGNATURE_ALGORITHM$3:\n                return new AlgorithmIdentifier();\n            case SIGNATURE$2:\n                return new asn1js.BitString();\n            case CERTS$1:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case \"type\":\n                {\n                    let comparisonResult = ((ResponseData.compareWithDefault(\"tbs\", memberValue.tbs)) &&\n                        (ResponseData.compareWithDefault(\"responderID\", memberValue.responderID)) &&\n                        (ResponseData.compareWithDefault(\"producedAt\", memberValue.producedAt)) &&\n                        (ResponseData.compareWithDefault(\"responses\", memberValue.responses)));\n                    if (\"responseExtensions\" in memberValue)\n                        comparisonResult = comparisonResult && (ResponseData.compareWithDefault(\"responseExtensions\", memberValue.responseExtensions));\n                    return comparisonResult;\n                }\n            case SIGNATURE_ALGORITHM$3:\n                return ((memberValue.algorithmId === EMPTY_STRING) && ((\"algorithmParams\" in memberValue) === false));\n            case SIGNATURE$2:\n                return (memberValue.isEqual(BasicOCSPResponse.defaultValues(memberName)));\n            case CERTS$1:\n                return (memberValue.length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || BASIC_OCSP_RESPONSE),\n            value: [\n                ResponseData.schema(names.tbsResponseData || {\n                    names: {\n                        blockName: BASIC_OCSP_RESPONSE_TBS_RESPONSE_DATA\n                    }\n                }),\n                AlgorithmIdentifier.schema(names.signatureAlgorithm || {\n                    names: {\n                        blockName: BASIC_OCSP_RESPONSE_SIGNATURE_ALGORITHM\n                    }\n                }),\n                new asn1js.BitString({ name: (names.signature || BASIC_OCSP_RESPONSE_SIGNATURE) }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [\n                        new asn1js.Sequence({\n                            value: [new asn1js.Repeated({\n                                    name: BASIC_OCSP_RESPONSE_CERTS,\n                                    value: Certificate.schema(names.certs || {})\n                                })]\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$g);\n        const asn1 = asn1js.compareSchema(schema, schema, BasicOCSPResponse.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.tbsResponseData = new ResponseData({ schema: asn1.result[BASIC_OCSP_RESPONSE_TBS_RESPONSE_DATA] });\n        this.signatureAlgorithm = new AlgorithmIdentifier({ schema: asn1.result[BASIC_OCSP_RESPONSE_SIGNATURE_ALGORITHM] });\n        this.signature = asn1.result[BASIC_OCSP_RESPONSE_SIGNATURE];\n        if (BASIC_OCSP_RESPONSE_CERTS in asn1.result) {\n            this.certs = Array.from(asn1.result[BASIC_OCSP_RESPONSE_CERTS], element => new Certificate({ schema: element }));\n        }\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(this.tbsResponseData.toSchema());\n        outputArray.push(this.signatureAlgorithm.toSchema());\n        outputArray.push(this.signature);\n        if (this.certs) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [\n                    new asn1js.Sequence({\n                        value: Array.from(this.certs, o => o.toSchema())\n                    })\n                ]\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            tbsResponseData: this.tbsResponseData.toJSON(),\n            signatureAlgorithm: this.signatureAlgorithm.toJSON(),\n            signature: this.signature.toJSON(),\n        };\n        if (this.certs) {\n            res.certs = Array.from(this.certs, o => o.toJSON());\n        }\n        return res;\n    }\n    async getCertificateStatus(certificate, issuerCertificate, crypto = getCrypto(true)) {\n        const result = {\n            isForCertificate: false,\n            status: 2\n        };\n        const hashesObject = {};\n        const certIDs = [];\n        for (const response of this.tbsResponseData.responses) {\n            const hashAlgorithm = crypto.getAlgorithmByOID(response.certID.hashAlgorithm.algorithmId, true, \"CertID.hashAlgorithm\");\n            if (!hashesObject[hashAlgorithm.name]) {\n                hashesObject[hashAlgorithm.name] = 1;\n                const certID = new CertID();\n                certIDs.push(certID);\n                await certID.createForCertificate(certificate, {\n                    hashAlgorithm: hashAlgorithm.name,\n                    issuerCertificate\n                }, crypto);\n            }\n        }\n        for (const response of this.tbsResponseData.responses) {\n            for (const id of certIDs) {\n                if (response.certID.isEqual(id)) {\n                    result.isForCertificate = true;\n                    try {\n                        switch (response.certStatus.idBlock.isConstructed) {\n                            case true:\n                                if (response.certStatus.idBlock.tagNumber === 1)\n                                    result.status = 1;\n                                break;\n                            case false:\n                                switch (response.certStatus.idBlock.tagNumber) {\n                                    case 0:\n                                        result.status = 0;\n                                        break;\n                                    case 2:\n                                        result.status = 2;\n                                        break;\n                                    default:\n                                }\n                                break;\n                            default:\n                        }\n                    }\n                    catch (ex) {\n                    }\n                    return result;\n                }\n            }\n        }\n        return result;\n    }\n    async sign(privateKey, hashAlgorithm = \"SHA-1\", crypto = getCrypto(true)) {\n        if (!privateKey) {\n            throw new Error(\"Need to provide a private key for signing\");\n        }\n        const signatureParams = await crypto.getSignatureParameters(privateKey, hashAlgorithm);\n        const algorithm = signatureParams.parameters.algorithm;\n        if (!(\"name\" in algorithm)) {\n            throw new Error(\"Empty algorithm\");\n        }\n        this.signatureAlgorithm = signatureParams.signatureAlgorithm;\n        this.tbsResponseData.tbsView = new Uint8Array(this.tbsResponseData.toSchema(true).toBER());\n        const signature = await crypto.signWithPrivateKey(this.tbsResponseData.tbsView, privateKey, { algorithm });\n        this.signature = new asn1js.BitString({ valueHex: signature });\n    }\n    async verify(params = {}, crypto = getCrypto(true)) {\n        let signerCert = null;\n        let certIndex = -1;\n        const trustedCerts = params.trustedCerts || [];\n        if (!this.certs) {\n            throw new Error(\"No certificates attached to the BasicOCSPResponse\");\n        }\n        switch (true) {\n            case (this.tbsResponseData.responderID instanceof RelativeDistinguishedNames):\n                for (const [index, certificate] of this.certs.entries()) {\n                    if (certificate.subject.isEqual(this.tbsResponseData.responderID)) {\n                        certIndex = index;\n                        break;\n                    }\n                }\n                break;\n            case (this.tbsResponseData.responderID instanceof asn1js.OctetString):\n                for (const [index, cert] of this.certs.entries()) {\n                    const hash = await crypto.digest({ name: \"sha-1\" }, cert.subjectPublicKeyInfo.subjectPublicKey.valueBlock.valueHexView);\n                    if (pvutils.isEqualBuffer(hash, this.tbsResponseData.responderID.valueBlock.valueHex)) {\n                        certIndex = index;\n                        break;\n                    }\n                }\n                break;\n            default:\n                throw new Error(\"Wrong value for responderID\");\n        }\n        if (certIndex === (-1))\n            throw new Error(\"Correct certificate was not found in OCSP response\");\n        signerCert = this.certs[certIndex];\n        const additionalCerts = [signerCert];\n        for (const cert of this.certs) {\n            const caCert = await checkCA(cert, signerCert);\n            if (caCert) {\n                additionalCerts.push(caCert);\n            }\n        }\n        const certChain = new CertificateChainValidationEngine({\n            certs: additionalCerts,\n            trustedCerts,\n        });\n        const verificationResult = await certChain.verify({}, crypto);\n        if (!verificationResult.result) {\n            throw new Error(\"Validation of signer's certificate failed\");\n        }\n        return crypto.verifyWithPublicKey(this.tbsResponseData.tbsView, this.signature, this.certs[certIndex].subjectPublicKeyInfo, this.signatureAlgorithm);\n    }\n}\nBasicOCSPResponse.CLASS_NAME = \"BasicOCSPResponse\";\n\nconst TBS$1 = \"tbs\";\nconst VERSION$6 = \"version\";\nconst SUBJECT = \"subject\";\nconst SPKI = \"subjectPublicKeyInfo\";\nconst ATTRIBUTES$1 = \"attributes\";\nconst SIGNATURE_ALGORITHM$2 = \"signatureAlgorithm\";\nconst SIGNATURE_VALUE = \"signatureValue\";\nconst CSR_INFO = \"CertificationRequestInfo\";\nconst CSR_INFO_VERSION = `${CSR_INFO}.version`;\nconst CSR_INFO_SUBJECT = `${CSR_INFO}.subject`;\nconst CSR_INFO_SPKI = `${CSR_INFO}.subjectPublicKeyInfo`;\nconst CSR_INFO_ATTRS = `${CSR_INFO}.attributes`;\nconst CLEAR_PROPS$f = [\n    CSR_INFO,\n    CSR_INFO_VERSION,\n    CSR_INFO_SUBJECT,\n    CSR_INFO_SPKI,\n    CSR_INFO_ATTRS,\n    SIGNATURE_ALGORITHM$2,\n    SIGNATURE_VALUE\n];\nfunction CertificationRequestInfo(parameters = {}) {\n    const names = pvutils.getParametersValue(parameters, \"names\", {});\n    return (new asn1js.Sequence({\n        name: (names.CertificationRequestInfo || CSR_INFO),\n        value: [\n            new asn1js.Integer({ name: (names.CertificationRequestInfoVersion || CSR_INFO_VERSION) }),\n            RelativeDistinguishedNames.schema(names.subject || {\n                names: {\n                    blockName: CSR_INFO_SUBJECT\n                }\n            }),\n            PublicKeyInfo.schema({\n                names: {\n                    blockName: CSR_INFO_SPKI\n                }\n            }),\n            new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [\n                    new asn1js.Repeated({\n                        optional: true,\n                        name: (names.CertificationRequestInfoAttributes || CSR_INFO_ATTRS),\n                        value: Attribute.schema(names.attributes || {})\n                    })\n                ]\n            })\n        ]\n    }));\n}\nclass CertificationRequest extends PkiObject {\n    get tbs() {\n        return pvtsutils.BufferSourceConverter.toArrayBuffer(this.tbsView);\n    }\n    set tbs(value) {\n        this.tbsView = new Uint8Array(value);\n    }\n    constructor(parameters = {}) {\n        super();\n        this.tbsView = new Uint8Array(pvutils.getParametersValue(parameters, TBS$1, CertificationRequest.defaultValues(TBS$1)));\n        this.version = pvutils.getParametersValue(parameters, VERSION$6, CertificationRequest.defaultValues(VERSION$6));\n        this.subject = pvutils.getParametersValue(parameters, SUBJECT, CertificationRequest.defaultValues(SUBJECT));\n        this.subjectPublicKeyInfo = pvutils.getParametersValue(parameters, SPKI, CertificationRequest.defaultValues(SPKI));\n        if (ATTRIBUTES$1 in parameters) {\n            this.attributes = pvutils.getParametersValue(parameters, ATTRIBUTES$1, CertificationRequest.defaultValues(ATTRIBUTES$1));\n        }\n        this.signatureAlgorithm = pvutils.getParametersValue(parameters, SIGNATURE_ALGORITHM$2, CertificationRequest.defaultValues(SIGNATURE_ALGORITHM$2));\n        this.signatureValue = pvutils.getParametersValue(parameters, SIGNATURE_VALUE, CertificationRequest.defaultValues(SIGNATURE_VALUE));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case TBS$1:\n                return EMPTY_BUFFER;\n            case VERSION$6:\n                return 0;\n            case SUBJECT:\n                return new RelativeDistinguishedNames();\n            case SPKI:\n                return new PublicKeyInfo();\n            case ATTRIBUTES$1:\n                return [];\n            case SIGNATURE_ALGORITHM$2:\n                return new AlgorithmIdentifier();\n            case SIGNATURE_VALUE:\n                return new asn1js.BitString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            value: [\n                CertificationRequestInfo(names.certificationRequestInfo || {}),\n                new asn1js.Sequence({\n                    name: (names.signatureAlgorithm || SIGNATURE_ALGORITHM$2),\n                    value: [\n                        new asn1js.ObjectIdentifier(),\n                        new asn1js.Any({ optional: true })\n                    ]\n                }),\n                new asn1js.BitString({ name: (names.signatureValue || SIGNATURE_VALUE) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$f);\n        const asn1 = asn1js.compareSchema(schema, schema, CertificationRequest.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.tbsView = asn1.result.CertificationRequestInfo.valueBeforeDecodeView;\n        this.version = asn1.result[CSR_INFO_VERSION].valueBlock.valueDec;\n        this.subject = new RelativeDistinguishedNames({ schema: asn1.result[CSR_INFO_SUBJECT] });\n        this.subjectPublicKeyInfo = new PublicKeyInfo({ schema: asn1.result[CSR_INFO_SPKI] });\n        if (CSR_INFO_ATTRS in asn1.result) {\n            this.attributes = Array.from(asn1.result[CSR_INFO_ATTRS], element => new Attribute({ schema: element }));\n        }\n        this.signatureAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.signatureAlgorithm });\n        this.signatureValue = asn1.result.signatureValue;\n    }\n    encodeTBS() {\n        const outputArray = [\n            new asn1js.Integer({ value: this.version }),\n            this.subject.toSchema(),\n            this.subjectPublicKeyInfo.toSchema()\n        ];\n        if (ATTRIBUTES$1 in this) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: Array.from(this.attributes || [], o => o.toSchema())\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toSchema(encodeFlag = false) {\n        let tbsSchema;\n        if (encodeFlag === false) {\n            if (this.tbsView.byteLength === 0) {\n                return CertificationRequest.schema();\n            }\n            const asn1 = asn1js.fromBER(this.tbsView);\n            AsnError.assert(asn1, \"PKCS#10 Certificate Request\");\n            tbsSchema = asn1.result;\n        }\n        else {\n            tbsSchema = this.encodeTBS();\n        }\n        return (new asn1js.Sequence({\n            value: [\n                tbsSchema,\n                this.signatureAlgorithm.toSchema(),\n                this.signatureValue\n            ]\n        }));\n    }\n    toJSON() {\n        const object = {\n            tbs: pvtsutils.Convert.ToHex(this.tbsView),\n            version: this.version,\n            subject: this.subject.toJSON(),\n            subjectPublicKeyInfo: this.subjectPublicKeyInfo.toJSON(),\n            signatureAlgorithm: this.signatureAlgorithm.toJSON(),\n            signatureValue: this.signatureValue.toJSON(),\n        };\n        if (ATTRIBUTES$1 in this) {\n            object.attributes = Array.from(this.attributes || [], o => o.toJSON());\n        }\n        return object;\n    }\n    async sign(privateKey, hashAlgorithm = \"SHA-1\", crypto = getCrypto(true)) {\n        if (!privateKey) {\n            throw new Error(\"Need to provide a private key for signing\");\n        }\n        const signatureParams = await crypto.getSignatureParameters(privateKey, hashAlgorithm);\n        const parameters = signatureParams.parameters;\n        this.signatureAlgorithm = signatureParams.signatureAlgorithm;\n        this.tbsView = new Uint8Array(this.encodeTBS().toBER());\n        const signature = await crypto.signWithPrivateKey(this.tbsView, privateKey, parameters);\n        this.signatureValue = new asn1js.BitString({ valueHex: signature });\n    }\n    async verify(crypto = getCrypto(true)) {\n        return crypto.verifyWithPublicKey(this.tbsView, this.signatureValue, this.subjectPublicKeyInfo, this.signatureAlgorithm);\n    }\n    async getPublicKey(parameters, crypto = getCrypto(true)) {\n        return crypto.getPublicKey(this.subjectPublicKeyInfo, this.signatureAlgorithm, parameters);\n    }\n}\nCertificationRequest.CLASS_NAME = \"CertificationRequest\";\n\nconst DIGEST_ALGORITHM$1 = \"digestAlgorithm\";\nconst DIGEST = \"digest\";\nconst CLEAR_PROPS$e = [\n    DIGEST_ALGORITHM$1,\n    DIGEST\n];\nclass DigestInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.digestAlgorithm = pvutils.getParametersValue(parameters, DIGEST_ALGORITHM$1, DigestInfo.defaultValues(DIGEST_ALGORITHM$1));\n        this.digest = pvutils.getParametersValue(parameters, DIGEST, DigestInfo.defaultValues(DIGEST));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case DIGEST_ALGORITHM$1:\n                return new AlgorithmIdentifier();\n            case DIGEST:\n                return new asn1js.OctetString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case DIGEST_ALGORITHM$1:\n                return ((AlgorithmIdentifier.compareWithDefault(\"algorithmId\", memberValue.algorithmId)) &&\n                    ((\"algorithmParams\" in memberValue) === false));\n            case DIGEST:\n                return (memberValue.isEqual(DigestInfo.defaultValues(memberName)));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                AlgorithmIdentifier.schema(names.digestAlgorithm || {\n                    names: {\n                        blockName: DIGEST_ALGORITHM$1\n                    }\n                }),\n                new asn1js.OctetString({ name: (names.digest || DIGEST) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$e);\n        const asn1 = asn1js.compareSchema(schema, schema, DigestInfo.schema({\n            names: {\n                digestAlgorithm: {\n                    names: {\n                        blockName: DIGEST_ALGORITHM$1\n                    }\n                },\n                digest: DIGEST\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.digestAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.digestAlgorithm });\n        this.digest = asn1.result.digest;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                this.digestAlgorithm.toSchema(),\n                this.digest\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            digestAlgorithm: this.digestAlgorithm.toJSON(),\n            digest: this.digest.toJSON(),\n        };\n    }\n}\nDigestInfo.CLASS_NAME = \"DigestInfo\";\n\nconst E_CONTENT_TYPE = \"eContentType\";\nconst E_CONTENT = \"eContent\";\nconst CLEAR_PROPS$d = [\n    E_CONTENT_TYPE,\n    E_CONTENT,\n];\nclass EncapsulatedContentInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.eContentType = pvutils.getParametersValue(parameters, E_CONTENT_TYPE, EncapsulatedContentInfo.defaultValues(E_CONTENT_TYPE));\n        if (E_CONTENT in parameters) {\n            this.eContent = pvutils.getParametersValue(parameters, E_CONTENT, EncapsulatedContentInfo.defaultValues(E_CONTENT));\n            if ((this.eContent.idBlock.tagClass === 1) &&\n                (this.eContent.idBlock.tagNumber === 4)) {\n                if (this.eContent.idBlock.isConstructed === false) {\n                    const constrString = new asn1js.OctetString({\n                        idBlock: { isConstructed: true },\n                        isConstructed: true\n                    });\n                    let offset = 0;\n                    const viewHex = this.eContent.valueBlock.valueHexView.slice().buffer;\n                    let length = viewHex.byteLength;\n                    while (length > 0) {\n                        const pieceView = new Uint8Array(viewHex, offset, ((offset + 65536) > viewHex.byteLength) ? (viewHex.byteLength - offset) : 65536);\n                        const _array = new ArrayBuffer(pieceView.length);\n                        const _view = new Uint8Array(_array);\n                        for (let i = 0; i < _view.length; i++) {\n                            _view[i] = pieceView[i];\n                        }\n                        constrString.valueBlock.value.push(new asn1js.OctetString({ valueHex: _array }));\n                        length -= pieceView.length;\n                        offset += pieceView.length;\n                    }\n                    this.eContent = constrString;\n                }\n            }\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case E_CONTENT_TYPE:\n                return EMPTY_STRING;\n            case E_CONTENT:\n                return new asn1js.OctetString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case E_CONTENT_TYPE:\n                return (memberValue === EMPTY_STRING);\n            case E_CONTENT:\n                {\n                    if ((memberValue.idBlock.tagClass === 1) && (memberValue.idBlock.tagNumber === 4))\n                        return (memberValue.isEqual(EncapsulatedContentInfo.defaultValues(E_CONTENT)));\n                    return false;\n                }\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.eContentType || EMPTY_STRING) }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [\n                        new asn1js.Any({ name: (names.eContent || EMPTY_STRING) })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$d);\n        const asn1 = asn1js.compareSchema(schema, schema, EncapsulatedContentInfo.schema({\n            names: {\n                eContentType: E_CONTENT_TYPE,\n                eContent: E_CONTENT\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.eContentType = asn1.result.eContentType.valueBlock.toString();\n        if (E_CONTENT in asn1.result)\n            this.eContent = asn1.result.eContent;\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(new asn1js.ObjectIdentifier({ value: this.eContentType }));\n        if (this.eContent) {\n            if (EncapsulatedContentInfo.compareWithDefault(E_CONTENT, this.eContent) === false) {\n                outputArray.push(new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [this.eContent]\n                }));\n            }\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            eContentType: this.eContentType\n        };\n        if (this.eContent && EncapsulatedContentInfo.compareWithDefault(E_CONTENT, this.eContent) === false) {\n            res.eContent = this.eContent.toJSON();\n        }\n        return res;\n    }\n}\nEncapsulatedContentInfo.CLASS_NAME = \"EncapsulatedContentInfo\";\n\nclass KeyBag extends PrivateKeyInfo {\n    constructor(parameters = {}) {\n        super(parameters);\n    }\n}\n\nconst MAC = \"mac\";\nconst MAC_SALT = \"macSalt\";\nconst ITERATIONS = \"iterations\";\nconst CLEAR_PROPS$c = [\n    MAC,\n    MAC_SALT,\n    ITERATIONS\n];\nclass MacData extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.mac = pvutils.getParametersValue(parameters, MAC, MacData.defaultValues(MAC));\n        this.macSalt = pvutils.getParametersValue(parameters, MAC_SALT, MacData.defaultValues(MAC_SALT));\n        if (ITERATIONS in parameters) {\n            this.iterations = pvutils.getParametersValue(parameters, ITERATIONS, MacData.defaultValues(ITERATIONS));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case MAC:\n                return new DigestInfo();\n            case MAC_SALT:\n                return new asn1js.OctetString();\n            case ITERATIONS:\n                return 1;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case MAC:\n                return ((DigestInfo.compareWithDefault(\"digestAlgorithm\", memberValue.digestAlgorithm)) &&\n                    (DigestInfo.compareWithDefault(\"digest\", memberValue.digest)));\n            case MAC_SALT:\n                return (memberValue.isEqual(MacData.defaultValues(memberName)));\n            case ITERATIONS:\n                return (memberValue === MacData.defaultValues(memberName));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            optional: (names.optional || true),\n            value: [\n                DigestInfo.schema(names.mac || {\n                    names: {\n                        blockName: MAC\n                    }\n                }),\n                new asn1js.OctetString({ name: (names.macSalt || MAC_SALT) }),\n                new asn1js.Integer({\n                    optional: true,\n                    name: (names.iterations || ITERATIONS)\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$c);\n        const asn1 = asn1js.compareSchema(schema, schema, MacData.schema({\n            names: {\n                mac: {\n                    names: {\n                        blockName: MAC\n                    }\n                },\n                macSalt: MAC_SALT,\n                iterations: ITERATIONS\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.mac = new DigestInfo({ schema: asn1.result.mac });\n        this.macSalt = asn1.result.macSalt;\n        if (ITERATIONS in asn1.result)\n            this.iterations = asn1.result.iterations.valueBlock.valueDec;\n    }\n    toSchema() {\n        const outputArray = [\n            this.mac.toSchema(),\n            this.macSalt\n        ];\n        if (this.iterations !== undefined) {\n            outputArray.push(new asn1js.Integer({ value: this.iterations }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            mac: this.mac.toJSON(),\n            macSalt: this.macSalt.toJSON(),\n        };\n        if (this.iterations !== undefined) {\n            res.iterations = this.iterations;\n        }\n        return res;\n    }\n}\nMacData.CLASS_NAME = \"MacData\";\n\nconst HASH_ALGORITHM = \"hashAlgorithm\";\nconst HASHED_MESSAGE = \"hashedMessage\";\nconst CLEAR_PROPS$b = [\n    HASH_ALGORITHM,\n    HASHED_MESSAGE,\n];\nclass MessageImprint extends PkiObject {\n    static async create(hashAlgorithm, message, crypto = getCrypto(true)) {\n        const hashAlgorithmOID = crypto.getOIDByAlgorithm({ name: hashAlgorithm }, true, \"hashAlgorithm\");\n        const hashedMessage = await crypto.digest(hashAlgorithm, message);\n        const res = new MessageImprint({\n            hashAlgorithm: new AlgorithmIdentifier({\n                algorithmId: hashAlgorithmOID,\n                algorithmParams: new asn1js.Null(),\n            }),\n            hashedMessage: new asn1js.OctetString({ valueHex: hashedMessage })\n        });\n        return res;\n    }\n    constructor(parameters = {}) {\n        super();\n        this.hashAlgorithm = pvutils.getParametersValue(parameters, HASH_ALGORITHM, MessageImprint.defaultValues(HASH_ALGORITHM));\n        this.hashedMessage = pvutils.getParametersValue(parameters, HASHED_MESSAGE, MessageImprint.defaultValues(HASHED_MESSAGE));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case HASH_ALGORITHM:\n                return new AlgorithmIdentifier();\n            case HASHED_MESSAGE:\n                return new asn1js.OctetString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case HASH_ALGORITHM:\n                return ((memberValue.algorithmId === EMPTY_STRING) && ((\"algorithmParams\" in memberValue) === false));\n            case HASHED_MESSAGE:\n                return (memberValue.isEqual(MessageImprint.defaultValues(memberName)) === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                AlgorithmIdentifier.schema(names.hashAlgorithm || {}),\n                new asn1js.OctetString({ name: (names.hashedMessage || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$b);\n        const asn1 = asn1js.compareSchema(schema, schema, MessageImprint.schema({\n            names: {\n                hashAlgorithm: {\n                    names: {\n                        blockName: HASH_ALGORITHM\n                    }\n                },\n                hashedMessage: HASHED_MESSAGE\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.hashAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.hashAlgorithm });\n        this.hashedMessage = asn1.result.hashedMessage;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                this.hashAlgorithm.toSchema(),\n                this.hashedMessage\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            hashAlgorithm: this.hashAlgorithm.toJSON(),\n            hashedMessage: this.hashedMessage.toJSON(),\n        };\n    }\n}\nMessageImprint.CLASS_NAME = \"MessageImprint\";\n\nconst REQ_CERT = \"reqCert\";\nconst SINGLE_REQUEST_EXTENSIONS = \"singleRequestExtensions\";\nconst CLEAR_PROPS$a = [\n    REQ_CERT,\n    SINGLE_REQUEST_EXTENSIONS,\n];\nclass Request extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.reqCert = pvutils.getParametersValue(parameters, REQ_CERT, Request.defaultValues(REQ_CERT));\n        if (SINGLE_REQUEST_EXTENSIONS in parameters) {\n            this.singleRequestExtensions = pvutils.getParametersValue(parameters, SINGLE_REQUEST_EXTENSIONS, Request.defaultValues(SINGLE_REQUEST_EXTENSIONS));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case REQ_CERT:\n                return new CertID();\n            case SINGLE_REQUEST_EXTENSIONS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case REQ_CERT:\n                return (memberValue.isEqual(Request.defaultValues(memberName)));\n            case SINGLE_REQUEST_EXTENSIONS:\n                return (memberValue.length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                CertID.schema(names.reqCert || {}),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [Extension.schema(names.extensions || {\n                            names: {\n                                blockName: (names.singleRequestExtensions || EMPTY_STRING)\n                            }\n                        })]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$a);\n        const asn1 = asn1js.compareSchema(schema, schema, Request.schema({\n            names: {\n                reqCert: {\n                    names: {\n                        blockName: REQ_CERT\n                    }\n                },\n                extensions: {\n                    names: {\n                        blockName: SINGLE_REQUEST_EXTENSIONS\n                    }\n                }\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.reqCert = new CertID({ schema: asn1.result.reqCert });\n        if (SINGLE_REQUEST_EXTENSIONS in asn1.result) {\n            this.singleRequestExtensions = Array.from(asn1.result.singleRequestExtensions.valueBlock.value, element => new Extension({ schema: element }));\n        }\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(this.reqCert.toSchema());\n        if (this.singleRequestExtensions) {\n            outputArray.push(new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [\n                    new asn1js.Sequence({\n                        value: Array.from(this.singleRequestExtensions, o => o.toSchema())\n                    })\n                ]\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            reqCert: this.reqCert.toJSON()\n        };\n        if (this.singleRequestExtensions) {\n            res.singleRequestExtensions = Array.from(this.singleRequestExtensions, o => o.toJSON());\n        }\n        return res;\n    }\n}\nRequest.CLASS_NAME = \"Request\";\n\nconst TBS = \"tbs\";\nconst VERSION$5 = \"version\";\nconst REQUESTOR_NAME = \"requestorName\";\nconst REQUEST_LIST = \"requestList\";\nconst REQUEST_EXTENSIONS = \"requestExtensions\";\nconst TBS_REQUEST$1 = \"TBSRequest\";\nconst TBS_REQUEST_VERSION = `${TBS_REQUEST$1}.${VERSION$5}`;\nconst TBS_REQUEST_REQUESTOR_NAME = `${TBS_REQUEST$1}.${REQUESTOR_NAME}`;\nconst TBS_REQUEST_REQUESTS = `${TBS_REQUEST$1}.requests`;\nconst TBS_REQUEST_REQUEST_EXTENSIONS = `${TBS_REQUEST$1}.${REQUEST_EXTENSIONS}`;\nconst CLEAR_PROPS$9 = [\n    TBS_REQUEST$1,\n    TBS_REQUEST_VERSION,\n    TBS_REQUEST_REQUESTOR_NAME,\n    TBS_REQUEST_REQUESTS,\n    TBS_REQUEST_REQUEST_EXTENSIONS\n];\nclass TBSRequest extends PkiObject {\n    get tbs() {\n        return pvtsutils.BufferSourceConverter.toArrayBuffer(this.tbsView);\n    }\n    set tbs(value) {\n        this.tbsView = new Uint8Array(value);\n    }\n    constructor(parameters = {}) {\n        super();\n        this.tbsView = new Uint8Array(pvutils.getParametersValue(parameters, TBS, TBSRequest.defaultValues(TBS)));\n        if (VERSION$5 in parameters) {\n            this.version = pvutils.getParametersValue(parameters, VERSION$5, TBSRequest.defaultValues(VERSION$5));\n        }\n        if (REQUESTOR_NAME in parameters) {\n            this.requestorName = pvutils.getParametersValue(parameters, REQUESTOR_NAME, TBSRequest.defaultValues(REQUESTOR_NAME));\n        }\n        this.requestList = pvutils.getParametersValue(parameters, REQUEST_LIST, TBSRequest.defaultValues(REQUEST_LIST));\n        if (REQUEST_EXTENSIONS in parameters) {\n            this.requestExtensions = pvutils.getParametersValue(parameters, REQUEST_EXTENSIONS, TBSRequest.defaultValues(REQUEST_EXTENSIONS));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case TBS:\n                return EMPTY_BUFFER;\n            case VERSION$5:\n                return 0;\n            case REQUESTOR_NAME:\n                return new GeneralName();\n            case REQUEST_LIST:\n            case REQUEST_EXTENSIONS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case TBS:\n                return (memberValue.byteLength === 0);\n            case VERSION$5:\n                return (memberValue === TBSRequest.defaultValues(memberName));\n            case REQUESTOR_NAME:\n                return ((memberValue.type === GeneralName.defaultValues(\"type\")) && (Object.keys(memberValue.value).length === 0));\n            case REQUEST_LIST:\n            case REQUEST_EXTENSIONS:\n                return (memberValue.length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || TBS_REQUEST$1),\n            value: [\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [new asn1js.Integer({ name: (names.TBSRequestVersion || TBS_REQUEST_VERSION) })]\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: [GeneralName.schema(names.requestorName || {\n                            names: {\n                                blockName: TBS_REQUEST_REQUESTOR_NAME\n                            }\n                        })]\n                }),\n                new asn1js.Sequence({\n                    name: (names.requestList || \"TBSRequest.requestList\"),\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.requests || TBS_REQUEST_REQUESTS),\n                            value: Request.schema(names.requestNames || {})\n                        })\n                    ]\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 2\n                    },\n                    value: [Extensions.schema(names.extensions || {\n                            names: {\n                                blockName: (names.requestExtensions || TBS_REQUEST_REQUEST_EXTENSIONS)\n                            }\n                        })]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$9);\n        const asn1 = asn1js.compareSchema(schema, schema, TBSRequest.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.tbsView = asn1.result.TBSRequest.valueBeforeDecodeView;\n        if (TBS_REQUEST_VERSION in asn1.result)\n            this.version = asn1.result[TBS_REQUEST_VERSION].valueBlock.valueDec;\n        if (TBS_REQUEST_REQUESTOR_NAME in asn1.result)\n            this.requestorName = new GeneralName({ schema: asn1.result[TBS_REQUEST_REQUESTOR_NAME] });\n        this.requestList = Array.from(asn1.result[TBS_REQUEST_REQUESTS], element => new Request({ schema: element }));\n        if (TBS_REQUEST_REQUEST_EXTENSIONS in asn1.result)\n            this.requestExtensions = Array.from(asn1.result[TBS_REQUEST_REQUEST_EXTENSIONS].valueBlock.value, element => new Extension({ schema: element }));\n    }\n    toSchema(encodeFlag = false) {\n        let tbsSchema;\n        if (encodeFlag === false) {\n            if (this.tbsView.byteLength === 0)\n                return TBSRequest.schema();\n            const asn1 = asn1js.fromBER(this.tbsView);\n            AsnError.assert(asn1, \"TBS Request\");\n            if (!(asn1.result instanceof asn1js.Sequence)) {\n                throw new Error(\"ASN.1 result should be SEQUENCE\");\n            }\n            tbsSchema = asn1.result;\n        }\n        else {\n            const outputArray = [];\n            if (this.version !== undefined) {\n                outputArray.push(new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [new asn1js.Integer({ value: this.version })]\n                }));\n            }\n            if (this.requestorName) {\n                outputArray.push(new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: [this.requestorName.toSchema()]\n                }));\n            }\n            outputArray.push(new asn1js.Sequence({\n                value: Array.from(this.requestList, o => o.toSchema())\n            }));\n            if (this.requestExtensions) {\n                outputArray.push(new asn1js.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 2\n                    },\n                    value: [\n                        new asn1js.Sequence({\n                            value: Array.from(this.requestExtensions, o => o.toSchema())\n                        })\n                    ]\n                }));\n            }\n            tbsSchema = new asn1js.Sequence({\n                value: outputArray\n            });\n        }\n        return tbsSchema;\n    }\n    toJSON() {\n        const res = {};\n        if (this.version != undefined)\n            res.version = this.version;\n        if (this.requestorName) {\n            res.requestorName = this.requestorName.toJSON();\n        }\n        res.requestList = Array.from(this.requestList, o => o.toJSON());\n        if (this.requestExtensions) {\n            res.requestExtensions = Array.from(this.requestExtensions, o => o.toJSON());\n        }\n        return res;\n    }\n}\nTBSRequest.CLASS_NAME = \"TBSRequest\";\n\nconst SIGNATURE_ALGORITHM$1 = \"signatureAlgorithm\";\nconst SIGNATURE$1 = \"signature\";\nconst CERTS = \"certs\";\nclass Signature extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.signatureAlgorithm = pvutils.getParametersValue(parameters, SIGNATURE_ALGORITHM$1, Signature.defaultValues(SIGNATURE_ALGORITHM$1));\n        this.signature = pvutils.getParametersValue(parameters, SIGNATURE$1, Signature.defaultValues(SIGNATURE$1));\n        if (CERTS in parameters) {\n            this.certs = pvutils.getParametersValue(parameters, CERTS, Signature.defaultValues(CERTS));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case SIGNATURE_ALGORITHM$1:\n                return new AlgorithmIdentifier();\n            case SIGNATURE$1:\n                return new asn1js.BitString();\n            case CERTS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case SIGNATURE_ALGORITHM$1:\n                return ((memberValue.algorithmId === EMPTY_STRING) && ((\"algorithmParams\" in memberValue) === false));\n            case SIGNATURE$1:\n                return (memberValue.isEqual(Signature.defaultValues(memberName)));\n            case CERTS:\n                return (memberValue.length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                AlgorithmIdentifier.schema(names.signatureAlgorithm || {}),\n                new asn1js.BitString({ name: (names.signature || EMPTY_STRING) }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [\n                        new asn1js.Sequence({\n                            value: [new asn1js.Repeated({\n                                    name: (names.certs || EMPTY_STRING),\n                                    value: Certificate.schema({})\n                                })]\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, [\n            SIGNATURE_ALGORITHM$1,\n            SIGNATURE$1,\n            CERTS\n        ]);\n        const asn1 = asn1js.compareSchema(schema, schema, Signature.schema({\n            names: {\n                signatureAlgorithm: {\n                    names: {\n                        blockName: SIGNATURE_ALGORITHM$1\n                    }\n                },\n                signature: SIGNATURE$1,\n                certs: CERTS\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.signatureAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.signatureAlgorithm });\n        this.signature = asn1.result.signature;\n        if (CERTS in asn1.result)\n            this.certs = Array.from(asn1.result.certs, element => new Certificate({ schema: element }));\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(this.signatureAlgorithm.toSchema());\n        outputArray.push(this.signature);\n        if (this.certs) {\n            outputArray.push(new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [\n                    new asn1js.Sequence({\n                        value: Array.from(this.certs, o => o.toSchema())\n                    })\n                ]\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            signatureAlgorithm: this.signatureAlgorithm.toJSON(),\n            signature: this.signature.toJSON(),\n        };\n        if (this.certs) {\n            res.certs = Array.from(this.certs, o => o.toJSON());\n        }\n        return res;\n    }\n}\nSignature.CLASS_NAME = \"Signature\";\n\nconst TBS_REQUEST = \"tbsRequest\";\nconst OPTIONAL_SIGNATURE = \"optionalSignature\";\nconst CLEAR_PROPS$8 = [\n    TBS_REQUEST,\n    OPTIONAL_SIGNATURE\n];\nclass OCSPRequest extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.tbsRequest = pvutils.getParametersValue(parameters, TBS_REQUEST, OCSPRequest.defaultValues(TBS_REQUEST));\n        if (OPTIONAL_SIGNATURE in parameters) {\n            this.optionalSignature = pvutils.getParametersValue(parameters, OPTIONAL_SIGNATURE, OCSPRequest.defaultValues(OPTIONAL_SIGNATURE));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case TBS_REQUEST:\n                return new TBSRequest();\n            case OPTIONAL_SIGNATURE:\n                return new Signature();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case TBS_REQUEST:\n                return ((TBSRequest.compareWithDefault(\"tbs\", memberValue.tbs)) &&\n                    (TBSRequest.compareWithDefault(\"version\", memberValue.version)) &&\n                    (TBSRequest.compareWithDefault(\"requestorName\", memberValue.requestorName)) &&\n                    (TBSRequest.compareWithDefault(\"requestList\", memberValue.requestList)) &&\n                    (TBSRequest.compareWithDefault(\"requestExtensions\", memberValue.requestExtensions)));\n            case OPTIONAL_SIGNATURE:\n                return ((Signature.compareWithDefault(\"signatureAlgorithm\", memberValue.signatureAlgorithm)) &&\n                    (Signature.compareWithDefault(\"signature\", memberValue.signature)) &&\n                    (Signature.compareWithDefault(\"certs\", memberValue.certs)));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: names.blockName || \"OCSPRequest\",\n            value: [\n                TBSRequest.schema(names.tbsRequest || {\n                    names: {\n                        blockName: TBS_REQUEST\n                    }\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [\n                        Signature.schema(names.optionalSignature || {\n                            names: {\n                                blockName: OPTIONAL_SIGNATURE\n                            }\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$8);\n        const asn1 = asn1js.compareSchema(schema, schema, OCSPRequest.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.tbsRequest = new TBSRequest({ schema: asn1.result.tbsRequest });\n        if (OPTIONAL_SIGNATURE in asn1.result)\n            this.optionalSignature = new Signature({ schema: asn1.result.optionalSignature });\n    }\n    toSchema(encodeFlag = false) {\n        const outputArray = [];\n        outputArray.push(this.tbsRequest.toSchema(encodeFlag));\n        if (this.optionalSignature)\n            outputArray.push(new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [\n                    this.optionalSignature.toSchema()\n                ]\n            }));\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            tbsRequest: this.tbsRequest.toJSON()\n        };\n        if (this.optionalSignature) {\n            res.optionalSignature = this.optionalSignature.toJSON();\n        }\n        return res;\n    }\n    async createForCertificate(certificate, parameters, crypto = getCrypto(true)) {\n        const certID = new CertID();\n        await certID.createForCertificate(certificate, parameters, crypto);\n        this.tbsRequest.requestList.push(new Request({\n            reqCert: certID,\n        }));\n    }\n    async sign(privateKey, hashAlgorithm = \"SHA-1\", crypto = getCrypto(true)) {\n        ParameterError.assertEmpty(privateKey, \"privateKey\", \"OCSPRequest.sign method\");\n        if (!this.optionalSignature) {\n            throw new Error(\"Need to create \\\"optionalSignature\\\" field before signing\");\n        }\n        const signatureParams = await crypto.getSignatureParameters(privateKey, hashAlgorithm);\n        const parameters = signatureParams.parameters;\n        this.optionalSignature.signatureAlgorithm = signatureParams.signatureAlgorithm;\n        const tbs = this.tbsRequest.toSchema(true).toBER(false);\n        const signature = await crypto.signWithPrivateKey(tbs, privateKey, parameters);\n        this.optionalSignature.signature = new asn1js.BitString({ valueHex: signature });\n    }\n    verify() {\n    }\n}\nOCSPRequest.CLASS_NAME = \"OCSPRequest\";\n\nconst RESPONSE_TYPE = \"responseType\";\nconst RESPONSE = \"response\";\nconst CLEAR_PROPS$7 = [\n    RESPONSE_TYPE,\n    RESPONSE\n];\nclass ResponseBytes extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.responseType = pvutils.getParametersValue(parameters, RESPONSE_TYPE, ResponseBytes.defaultValues(RESPONSE_TYPE));\n        this.response = pvutils.getParametersValue(parameters, RESPONSE, ResponseBytes.defaultValues(RESPONSE));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case RESPONSE_TYPE:\n                return EMPTY_STRING;\n            case RESPONSE:\n                return new asn1js.OctetString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case RESPONSE_TYPE:\n                return (memberValue === EMPTY_STRING);\n            case RESPONSE:\n                return (memberValue.isEqual(ResponseBytes.defaultValues(memberName)));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.ObjectIdentifier({ name: (names.responseType || EMPTY_STRING) }),\n                new asn1js.OctetString({ name: (names.response || EMPTY_STRING) })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$7);\n        const asn1 = asn1js.compareSchema(schema, schema, ResponseBytes.schema({\n            names: {\n                responseType: RESPONSE_TYPE,\n                response: RESPONSE\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.responseType = asn1.result.responseType.valueBlock.toString();\n        this.response = asn1.result.response;\n    }\n    toSchema() {\n        return (new asn1js.Sequence({\n            value: [\n                new asn1js.ObjectIdentifier({ value: this.responseType }),\n                this.response\n            ]\n        }));\n    }\n    toJSON() {\n        return {\n            responseType: this.responseType,\n            response: this.response.toJSON(),\n        };\n    }\n}\nResponseBytes.CLASS_NAME = \"ResponseBytes\";\n\nconst RESPONSE_STATUS = \"responseStatus\";\nconst RESPONSE_BYTES = \"responseBytes\";\nclass OCSPResponse extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.responseStatus = pvutils.getParametersValue(parameters, RESPONSE_STATUS, OCSPResponse.defaultValues(RESPONSE_STATUS));\n        if (RESPONSE_BYTES in parameters) {\n            this.responseBytes = pvutils.getParametersValue(parameters, RESPONSE_BYTES, OCSPResponse.defaultValues(RESPONSE_BYTES));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case RESPONSE_STATUS:\n                return new asn1js.Enumerated();\n            case RESPONSE_BYTES:\n                return new ResponseBytes();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case RESPONSE_STATUS:\n                return (memberValue.isEqual(OCSPResponse.defaultValues(memberName)));\n            case RESPONSE_BYTES:\n                return ((ResponseBytes.compareWithDefault(\"responseType\", memberValue.responseType)) &&\n                    (ResponseBytes.compareWithDefault(\"response\", memberValue.response)));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || \"OCSPResponse\"),\n            value: [\n                new asn1js.Enumerated({ name: (names.responseStatus || RESPONSE_STATUS) }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [\n                        ResponseBytes.schema(names.responseBytes || {\n                            names: {\n                                blockName: RESPONSE_BYTES\n                            }\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, [\n            RESPONSE_STATUS,\n            RESPONSE_BYTES\n        ]);\n        const asn1 = asn1js.compareSchema(schema, schema, OCSPResponse.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.responseStatus = asn1.result.responseStatus;\n        if (RESPONSE_BYTES in asn1.result)\n            this.responseBytes = new ResponseBytes({ schema: asn1.result.responseBytes });\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(this.responseStatus);\n        if (this.responseBytes) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [this.responseBytes.toSchema()]\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            responseStatus: this.responseStatus.toJSON()\n        };\n        if (this.responseBytes) {\n            res.responseBytes = this.responseBytes.toJSON();\n        }\n        return res;\n    }\n    async getCertificateStatus(certificate, issuerCertificate, crypto = getCrypto(true)) {\n        let basicResponse;\n        const result = {\n            isForCertificate: false,\n            status: 2\n        };\n        if (!this.responseBytes)\n            return result;\n        if (this.responseBytes.responseType !== id_PKIX_OCSP_Basic)\n            return result;\n        try {\n            const asn1Basic = asn1js.fromBER(this.responseBytes.response.valueBlock.valueHexView);\n            AsnError.assert(asn1Basic, \"Basic OCSP response\");\n            basicResponse = new BasicOCSPResponse({ schema: asn1Basic.result });\n        }\n        catch (ex) {\n            return result;\n        }\n        return basicResponse.getCertificateStatus(certificate, issuerCertificate, crypto);\n    }\n    async sign(privateKey, hashAlgorithm, crypto = getCrypto(true)) {\n        var _a;\n        if (this.responseBytes && this.responseBytes.responseType === id_PKIX_OCSP_Basic) {\n            const basicResponse = BasicOCSPResponse.fromBER(this.responseBytes.response.valueBlock.valueHexView);\n            return basicResponse.sign(privateKey, hashAlgorithm, crypto);\n        }\n        throw new Error(`Unknown ResponseBytes type: ${((_a = this.responseBytes) === null || _a === void 0 ? void 0 : _a.responseType) || \"Unknown\"}`);\n    }\n    async verify(issuerCertificate = null, crypto = getCrypto(true)) {\n        var _a;\n        if ((RESPONSE_BYTES in this) === false)\n            throw new Error(\"Empty ResponseBytes field\");\n        if (this.responseBytes && this.responseBytes.responseType === id_PKIX_OCSP_Basic) {\n            const basicResponse = BasicOCSPResponse.fromBER(this.responseBytes.response.valueBlock.valueHexView);\n            if (issuerCertificate !== null) {\n                if (!basicResponse.certs) {\n                    basicResponse.certs = [];\n                }\n                basicResponse.certs.push(issuerCertificate);\n            }\n            return basicResponse.verify({}, crypto);\n        }\n        throw new Error(`Unknown ResponseBytes type: ${((_a = this.responseBytes) === null || _a === void 0 ? void 0 : _a.responseType) || \"Unknown\"}`);\n    }\n}\nOCSPResponse.CLASS_NAME = \"OCSPResponse\";\n\nconst TYPE = \"type\";\nconst ATTRIBUTES = \"attributes\";\nconst ENCODED_VALUE = \"encodedValue\";\nconst CLEAR_PROPS$6 = [\n    ATTRIBUTES\n];\nclass SignedAndUnsignedAttributes extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.type = pvutils.getParametersValue(parameters, TYPE, SignedAndUnsignedAttributes.defaultValues(TYPE));\n        this.attributes = pvutils.getParametersValue(parameters, ATTRIBUTES, SignedAndUnsignedAttributes.defaultValues(ATTRIBUTES));\n        this.encodedValue = pvutils.getParametersValue(parameters, ENCODED_VALUE, SignedAndUnsignedAttributes.defaultValues(ENCODED_VALUE));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case TYPE:\n                return (-1);\n            case ATTRIBUTES:\n                return [];\n            case ENCODED_VALUE:\n                return EMPTY_BUFFER;\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case TYPE:\n                return (memberValue === SignedAndUnsignedAttributes.defaultValues(TYPE));\n            case ATTRIBUTES:\n                return (memberValue.length === 0);\n            case ENCODED_VALUE:\n                return (memberValue.byteLength === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Constructed({\n            name: (names.blockName || EMPTY_STRING),\n            optional: true,\n            idBlock: {\n                tagClass: 3,\n                tagNumber: names.tagNumber || 0\n            },\n            value: [\n                new asn1js.Repeated({\n                    name: (names.attributes || EMPTY_STRING),\n                    value: Attribute.schema()\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$6);\n        const asn1 = asn1js.compareSchema(schema, schema, SignedAndUnsignedAttributes.schema({\n            names: {\n                tagNumber: this.type,\n                attributes: ATTRIBUTES\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.type = asn1.result.idBlock.tagNumber;\n        this.encodedValue = pvtsutils.BufferSourceConverter.toArrayBuffer(asn1.result.valueBeforeDecodeView);\n        const encodedView = new Uint8Array(this.encodedValue);\n        encodedView[0] = 0x31;\n        if ((ATTRIBUTES in asn1.result) === false) {\n            if (this.type === 0)\n                throw new Error(\"Wrong structure of SignedUnsignedAttributes\");\n            else\n                return;\n        }\n        this.attributes = Array.from(asn1.result.attributes, element => new Attribute({ schema: element }));\n    }\n    toSchema() {\n        if (SignedAndUnsignedAttributes.compareWithDefault(TYPE, this.type) || SignedAndUnsignedAttributes.compareWithDefault(ATTRIBUTES, this.attributes))\n            throw new Error(\"Incorrectly initialized \\\"SignedAndUnsignedAttributes\\\" class\");\n        return (new asn1js.Constructed({\n            optional: true,\n            idBlock: {\n                tagClass: 3,\n                tagNumber: this.type\n            },\n            value: Array.from(this.attributes, o => o.toSchema())\n        }));\n    }\n    toJSON() {\n        if (SignedAndUnsignedAttributes.compareWithDefault(TYPE, this.type) || SignedAndUnsignedAttributes.compareWithDefault(ATTRIBUTES, this.attributes))\n            throw new Error(\"Incorrectly initialized \\\"SignedAndUnsignedAttributes\\\" class\");\n        return {\n            type: this.type,\n            attributes: Array.from(this.attributes, o => o.toJSON())\n        };\n    }\n}\nSignedAndUnsignedAttributes.CLASS_NAME = \"SignedAndUnsignedAttributes\";\n\nconst VERSION$4 = \"version\";\nconst SID = \"sid\";\nconst DIGEST_ALGORITHM = \"digestAlgorithm\";\nconst SIGNED_ATTRS = \"signedAttrs\";\nconst SIGNATURE_ALGORITHM = \"signatureAlgorithm\";\nconst SIGNATURE = \"signature\";\nconst UNSIGNED_ATTRS = \"unsignedAttrs\";\nconst SIGNER_INFO = \"SignerInfo\";\nconst SIGNER_INFO_VERSION = `${SIGNER_INFO}.${VERSION$4}`;\nconst SIGNER_INFO_SID = `${SIGNER_INFO}.${SID}`;\nconst SIGNER_INFO_DIGEST_ALGORITHM = `${SIGNER_INFO}.${DIGEST_ALGORITHM}`;\nconst SIGNER_INFO_SIGNED_ATTRS = `${SIGNER_INFO}.${SIGNED_ATTRS}`;\nconst SIGNER_INFO_SIGNATURE_ALGORITHM = `${SIGNER_INFO}.${SIGNATURE_ALGORITHM}`;\nconst SIGNER_INFO_SIGNATURE = `${SIGNER_INFO}.${SIGNATURE}`;\nconst SIGNER_INFO_UNSIGNED_ATTRS = `${SIGNER_INFO}.${UNSIGNED_ATTRS}`;\nconst CLEAR_PROPS$5 = [\n    SIGNER_INFO_VERSION,\n    SIGNER_INFO_SID,\n    SIGNER_INFO_DIGEST_ALGORITHM,\n    SIGNER_INFO_SIGNED_ATTRS,\n    SIGNER_INFO_SIGNATURE_ALGORITHM,\n    SIGNER_INFO_SIGNATURE,\n    SIGNER_INFO_UNSIGNED_ATTRS\n];\nclass SignerInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION$4, SignerInfo.defaultValues(VERSION$4));\n        this.sid = pvutils.getParametersValue(parameters, SID, SignerInfo.defaultValues(SID));\n        this.digestAlgorithm = pvutils.getParametersValue(parameters, DIGEST_ALGORITHM, SignerInfo.defaultValues(DIGEST_ALGORITHM));\n        if (SIGNED_ATTRS in parameters) {\n            this.signedAttrs = pvutils.getParametersValue(parameters, SIGNED_ATTRS, SignerInfo.defaultValues(SIGNED_ATTRS));\n        }\n        this.signatureAlgorithm = pvutils.getParametersValue(parameters, SIGNATURE_ALGORITHM, SignerInfo.defaultValues(SIGNATURE_ALGORITHM));\n        this.signature = pvutils.getParametersValue(parameters, SIGNATURE, SignerInfo.defaultValues(SIGNATURE));\n        if (UNSIGNED_ATTRS in parameters) {\n            this.unsignedAttrs = pvutils.getParametersValue(parameters, UNSIGNED_ATTRS, SignerInfo.defaultValues(UNSIGNED_ATTRS));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$4:\n                return 0;\n            case SID:\n                return new asn1js.Any();\n            case DIGEST_ALGORITHM:\n                return new AlgorithmIdentifier();\n            case SIGNED_ATTRS:\n                return new SignedAndUnsignedAttributes({ type: 0 });\n            case SIGNATURE_ALGORITHM:\n                return new AlgorithmIdentifier();\n            case SIGNATURE:\n                return new asn1js.OctetString();\n            case UNSIGNED_ATTRS:\n                return new SignedAndUnsignedAttributes({ type: 1 });\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case VERSION$4:\n                return (SignerInfo.defaultValues(VERSION$4) === memberValue);\n            case SID:\n                return (memberValue instanceof asn1js.Any);\n            case DIGEST_ALGORITHM:\n                if ((memberValue instanceof AlgorithmIdentifier) === false)\n                    return false;\n                return memberValue.isEqual(SignerInfo.defaultValues(DIGEST_ALGORITHM));\n            case SIGNED_ATTRS:\n                return ((SignedAndUnsignedAttributes.compareWithDefault(\"type\", memberValue.type))\n                    && (SignedAndUnsignedAttributes.compareWithDefault(\"attributes\", memberValue.attributes))\n                    && (SignedAndUnsignedAttributes.compareWithDefault(\"encodedValue\", memberValue.encodedValue)));\n            case SIGNATURE_ALGORITHM:\n                if ((memberValue instanceof AlgorithmIdentifier) === false)\n                    return false;\n                return memberValue.isEqual(SignerInfo.defaultValues(SIGNATURE_ALGORITHM));\n            case SIGNATURE:\n            case UNSIGNED_ATTRS:\n                return ((SignedAndUnsignedAttributes.compareWithDefault(\"type\", memberValue.type))\n                    && (SignedAndUnsignedAttributes.compareWithDefault(\"attributes\", memberValue.attributes))\n                    && (SignedAndUnsignedAttributes.compareWithDefault(\"encodedValue\", memberValue.encodedValue)));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: SIGNER_INFO,\n            value: [\n                new asn1js.Integer({ name: (names.version || SIGNER_INFO_VERSION) }),\n                new asn1js.Choice({\n                    value: [\n                        IssuerAndSerialNumber.schema(names.sidSchema || {\n                            names: {\n                                blockName: SIGNER_INFO_SID\n                            }\n                        }),\n                        new asn1js.Choice({\n                            value: [\n                                new asn1js.Constructed({\n                                    optional: true,\n                                    name: (names.sid || SIGNER_INFO_SID),\n                                    idBlock: {\n                                        tagClass: 3,\n                                        tagNumber: 0\n                                    },\n                                    value: [new asn1js.OctetString()]\n                                }),\n                                new asn1js.Primitive({\n                                    optional: true,\n                                    name: (names.sid || SIGNER_INFO_SID),\n                                    idBlock: {\n                                        tagClass: 3,\n                                        tagNumber: 0\n                                    }\n                                }),\n                            ]\n                        }),\n                    ]\n                }),\n                AlgorithmIdentifier.schema(names.digestAlgorithm || {\n                    names: {\n                        blockName: SIGNER_INFO_DIGEST_ALGORITHM\n                    }\n                }),\n                SignedAndUnsignedAttributes.schema(names.signedAttrs || {\n                    names: {\n                        blockName: SIGNER_INFO_SIGNED_ATTRS,\n                        tagNumber: 0\n                    }\n                }),\n                AlgorithmIdentifier.schema(names.signatureAlgorithm || {\n                    names: {\n                        blockName: SIGNER_INFO_SIGNATURE_ALGORITHM\n                    }\n                }),\n                new asn1js.OctetString({ name: (names.signature || SIGNER_INFO_SIGNATURE) }),\n                SignedAndUnsignedAttributes.schema(names.unsignedAttrs || {\n                    names: {\n                        blockName: SIGNER_INFO_UNSIGNED_ATTRS,\n                        tagNumber: 1\n                    }\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$5);\n        const asn1 = asn1js.compareSchema(schema, schema, SignerInfo.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.version = asn1.result[SIGNER_INFO_VERSION].valueBlock.valueDec;\n        const currentSid = asn1.result[SIGNER_INFO_SID];\n        if (currentSid.idBlock.tagClass === 1)\n            this.sid = new IssuerAndSerialNumber({ schema: currentSid });\n        else\n            this.sid = currentSid;\n        this.digestAlgorithm = new AlgorithmIdentifier({ schema: asn1.result[SIGNER_INFO_DIGEST_ALGORITHM] });\n        if (SIGNER_INFO_SIGNED_ATTRS in asn1.result)\n            this.signedAttrs = new SignedAndUnsignedAttributes({ type: 0, schema: asn1.result[SIGNER_INFO_SIGNED_ATTRS] });\n        this.signatureAlgorithm = new AlgorithmIdentifier({ schema: asn1.result[SIGNER_INFO_SIGNATURE_ALGORITHM] });\n        this.signature = asn1.result[SIGNER_INFO_SIGNATURE];\n        if (SIGNER_INFO_UNSIGNED_ATTRS in asn1.result)\n            this.unsignedAttrs = new SignedAndUnsignedAttributes({ type: 1, schema: asn1.result[SIGNER_INFO_UNSIGNED_ATTRS] });\n    }\n    toSchema() {\n        if (SignerInfo.compareWithDefault(SID, this.sid))\n            throw new Error(\"Incorrectly initialized \\\"SignerInfo\\\" class\");\n        const outputArray = [];\n        outputArray.push(new asn1js.Integer({ value: this.version }));\n        if (this.sid instanceof IssuerAndSerialNumber)\n            outputArray.push(this.sid.toSchema());\n        else\n            outputArray.push(this.sid);\n        outputArray.push(this.digestAlgorithm.toSchema());\n        if (this.signedAttrs) {\n            if (SignerInfo.compareWithDefault(SIGNED_ATTRS, this.signedAttrs) === false)\n                outputArray.push(this.signedAttrs.toSchema());\n        }\n        outputArray.push(this.signatureAlgorithm.toSchema());\n        outputArray.push(this.signature);\n        if (this.unsignedAttrs) {\n            if (SignerInfo.compareWithDefault(UNSIGNED_ATTRS, this.unsignedAttrs) === false)\n                outputArray.push(this.unsignedAttrs.toSchema());\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        if (SignerInfo.compareWithDefault(SID, this.sid)) {\n            throw new Error(\"Incorrectly initialized \\\"SignerInfo\\\" class\");\n        }\n        const res = {\n            version: this.version,\n            digestAlgorithm: this.digestAlgorithm.toJSON(),\n            signatureAlgorithm: this.signatureAlgorithm.toJSON(),\n            signature: this.signature.toJSON(),\n        };\n        if (!(this.sid instanceof asn1js.Any))\n            res.sid = this.sid.toJSON();\n        if (this.signedAttrs && SignerInfo.compareWithDefault(SIGNED_ATTRS, this.signedAttrs) === false) {\n            res.signedAttrs = this.signedAttrs.toJSON();\n        }\n        if (this.unsignedAttrs && SignerInfo.compareWithDefault(UNSIGNED_ATTRS, this.unsignedAttrs) === false) {\n            res.unsignedAttrs = this.unsignedAttrs.toJSON();\n        }\n        return res;\n    }\n}\nSignerInfo.CLASS_NAME = \"SignerInfo\";\n\nconst VERSION$3 = \"version\";\nconst POLICY = \"policy\";\nconst MESSAGE_IMPRINT$1 = \"messageImprint\";\nconst SERIAL_NUMBER = \"serialNumber\";\nconst GEN_TIME = \"genTime\";\nconst ORDERING = \"ordering\";\nconst NONCE$1 = \"nonce\";\nconst ACCURACY = \"accuracy\";\nconst TSA = \"tsa\";\nconst EXTENSIONS$1 = \"extensions\";\nconst TST_INFO = \"TSTInfo\";\nconst TST_INFO_VERSION = `${TST_INFO}.${VERSION$3}`;\nconst TST_INFO_POLICY = `${TST_INFO}.${POLICY}`;\nconst TST_INFO_MESSAGE_IMPRINT = `${TST_INFO}.${MESSAGE_IMPRINT$1}`;\nconst TST_INFO_SERIAL_NUMBER = `${TST_INFO}.${SERIAL_NUMBER}`;\nconst TST_INFO_GEN_TIME = `${TST_INFO}.${GEN_TIME}`;\nconst TST_INFO_ACCURACY = `${TST_INFO}.${ACCURACY}`;\nconst TST_INFO_ORDERING = `${TST_INFO}.${ORDERING}`;\nconst TST_INFO_NONCE = `${TST_INFO}.${NONCE$1}`;\nconst TST_INFO_TSA = `${TST_INFO}.${TSA}`;\nconst TST_INFO_EXTENSIONS = `${TST_INFO}.${EXTENSIONS$1}`;\nconst CLEAR_PROPS$4 = [\n    TST_INFO_VERSION,\n    TST_INFO_POLICY,\n    TST_INFO_MESSAGE_IMPRINT,\n    TST_INFO_SERIAL_NUMBER,\n    TST_INFO_GEN_TIME,\n    TST_INFO_ACCURACY,\n    TST_INFO_ORDERING,\n    TST_INFO_NONCE,\n    TST_INFO_TSA,\n    TST_INFO_EXTENSIONS\n];\nclass TSTInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION$3, TSTInfo.defaultValues(VERSION$3));\n        this.policy = pvutils.getParametersValue(parameters, POLICY, TSTInfo.defaultValues(POLICY));\n        this.messageImprint = pvutils.getParametersValue(parameters, MESSAGE_IMPRINT$1, TSTInfo.defaultValues(MESSAGE_IMPRINT$1));\n        this.serialNumber = pvutils.getParametersValue(parameters, SERIAL_NUMBER, TSTInfo.defaultValues(SERIAL_NUMBER));\n        this.genTime = pvutils.getParametersValue(parameters, GEN_TIME, TSTInfo.defaultValues(GEN_TIME));\n        if (ACCURACY in parameters) {\n            this.accuracy = pvutils.getParametersValue(parameters, ACCURACY, TSTInfo.defaultValues(ACCURACY));\n        }\n        if (ORDERING in parameters) {\n            this.ordering = pvutils.getParametersValue(parameters, ORDERING, TSTInfo.defaultValues(ORDERING));\n        }\n        if (NONCE$1 in parameters) {\n            this.nonce = pvutils.getParametersValue(parameters, NONCE$1, TSTInfo.defaultValues(NONCE$1));\n        }\n        if (TSA in parameters) {\n            this.tsa = pvutils.getParametersValue(parameters, TSA, TSTInfo.defaultValues(TSA));\n        }\n        if (EXTENSIONS$1 in parameters) {\n            this.extensions = pvutils.getParametersValue(parameters, EXTENSIONS$1, TSTInfo.defaultValues(EXTENSIONS$1));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$3:\n                return 0;\n            case POLICY:\n                return EMPTY_STRING;\n            case MESSAGE_IMPRINT$1:\n                return new MessageImprint();\n            case SERIAL_NUMBER:\n                return new asn1js.Integer();\n            case GEN_TIME:\n                return new Date(0, 0, 0);\n            case ACCURACY:\n                return new Accuracy();\n            case ORDERING:\n                return false;\n            case NONCE$1:\n                return new asn1js.Integer();\n            case TSA:\n                return new GeneralName();\n            case EXTENSIONS$1:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case VERSION$3:\n            case POLICY:\n            case GEN_TIME:\n            case ORDERING:\n                return (memberValue === TSTInfo.defaultValues(ORDERING));\n            case MESSAGE_IMPRINT$1:\n                return ((MessageImprint.compareWithDefault(HASH_ALGORITHM, memberValue.hashAlgorithm)) &&\n                    (MessageImprint.compareWithDefault(HASHED_MESSAGE, memberValue.hashedMessage)));\n            case SERIAL_NUMBER:\n            case NONCE$1:\n                return (memberValue.isEqual(TSTInfo.defaultValues(NONCE$1)));\n            case ACCURACY:\n                return ((Accuracy.compareWithDefault(SECONDS, memberValue.seconds)) &&\n                    (Accuracy.compareWithDefault(MILLIS, memberValue.millis)) &&\n                    (Accuracy.compareWithDefault(MICROS, memberValue.micros)));\n            case TSA:\n                return ((GeneralName.compareWithDefault(TYPE$4, memberValue.type)) &&\n                    (GeneralName.compareWithDefault(VALUE$5, memberValue.value)));\n            case EXTENSIONS$1:\n                return (memberValue.length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || TST_INFO),\n            value: [\n                new asn1js.Integer({ name: (names.version || TST_INFO_VERSION) }),\n                new asn1js.ObjectIdentifier({ name: (names.policy || TST_INFO_POLICY) }),\n                MessageImprint.schema(names.messageImprint || {\n                    names: {\n                        blockName: TST_INFO_MESSAGE_IMPRINT\n                    }\n                }),\n                new asn1js.Integer({ name: (names.serialNumber || TST_INFO_SERIAL_NUMBER) }),\n                new asn1js.GeneralizedTime({ name: (names.genTime || TST_INFO_GEN_TIME) }),\n                Accuracy.schema(names.accuracy || {\n                    names: {\n                        blockName: TST_INFO_ACCURACY\n                    }\n                }),\n                new asn1js.Boolean({\n                    name: (names.ordering || TST_INFO_ORDERING),\n                    optional: true\n                }),\n                new asn1js.Integer({\n                    name: (names.nonce || TST_INFO_NONCE),\n                    optional: true\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [GeneralName.schema(names.tsa || {\n                            names: {\n                                blockName: TST_INFO_TSA\n                            }\n                        })]\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.extensions || TST_INFO_EXTENSIONS),\n                            value: Extension.schema(names.extension || {})\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$4);\n        const asn1 = asn1js.compareSchema(schema, schema, TSTInfo.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.version = asn1.result[TST_INFO_VERSION].valueBlock.valueDec;\n        this.policy = asn1.result[TST_INFO_POLICY].valueBlock.toString();\n        this.messageImprint = new MessageImprint({ schema: asn1.result[TST_INFO_MESSAGE_IMPRINT] });\n        this.serialNumber = asn1.result[TST_INFO_SERIAL_NUMBER];\n        this.genTime = asn1.result[TST_INFO_GEN_TIME].toDate();\n        if (TST_INFO_ACCURACY in asn1.result)\n            this.accuracy = new Accuracy({ schema: asn1.result[TST_INFO_ACCURACY] });\n        if (TST_INFO_ORDERING in asn1.result)\n            this.ordering = asn1.result[TST_INFO_ORDERING].valueBlock.value;\n        if (TST_INFO_NONCE in asn1.result)\n            this.nonce = asn1.result[TST_INFO_NONCE];\n        if (TST_INFO_TSA in asn1.result)\n            this.tsa = new GeneralName({ schema: asn1.result[TST_INFO_TSA] });\n        if (TST_INFO_EXTENSIONS in asn1.result)\n            this.extensions = Array.from(asn1.result[TST_INFO_EXTENSIONS], element => new Extension({ schema: element }));\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(new asn1js.Integer({ value: this.version }));\n        outputArray.push(new asn1js.ObjectIdentifier({ value: this.policy }));\n        outputArray.push(this.messageImprint.toSchema());\n        outputArray.push(this.serialNumber);\n        outputArray.push(new asn1js.GeneralizedTime({ valueDate: this.genTime }));\n        if (this.accuracy)\n            outputArray.push(this.accuracy.toSchema());\n        if (this.ordering !== undefined)\n            outputArray.push(new asn1js.Boolean({ value: this.ordering }));\n        if (this.nonce)\n            outputArray.push(this.nonce);\n        if (this.tsa) {\n            outputArray.push(new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: [this.tsa.toSchema()]\n            }));\n        }\n        if (this.extensions) {\n            outputArray.push(new asn1js.Constructed({\n                optional: true,\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                value: Array.from(this.extensions, o => o.toSchema())\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            version: this.version,\n            policy: this.policy,\n            messageImprint: this.messageImprint.toJSON(),\n            serialNumber: this.serialNumber.toJSON(),\n            genTime: this.genTime\n        };\n        if (this.accuracy)\n            res.accuracy = this.accuracy.toJSON();\n        if (this.ordering !== undefined)\n            res.ordering = this.ordering;\n        if (this.nonce)\n            res.nonce = this.nonce.toJSON();\n        if (this.tsa)\n            res.tsa = this.tsa.toJSON();\n        if (this.extensions)\n            res.extensions = Array.from(this.extensions, o => o.toJSON());\n        return res;\n    }\n    async verify(params, crypto = getCrypto(true)) {\n        if (!params.data) {\n            throw new Error(\"\\\"data\\\" is a mandatory attribute for TST_INFO verification\");\n        }\n        const data = params.data;\n        if (params.notBefore) {\n            if (this.genTime < params.notBefore)\n                throw new Error(\"Generation time for TSTInfo object is less than notBefore value\");\n        }\n        if (params.notAfter) {\n            if (this.genTime > params.notAfter)\n                throw new Error(\"Generation time for TSTInfo object is more than notAfter value\");\n        }\n        const shaAlgorithm = crypto.getAlgorithmByOID(this.messageImprint.hashAlgorithm.algorithmId, true, \"MessageImprint.hashAlgorithm\");\n        const hash = await crypto.digest(shaAlgorithm.name, new Uint8Array(data));\n        return pvtsutils.BufferSourceConverter.isEqual(hash, this.messageImprint.hashedMessage.valueBlock.valueHexView);\n    }\n}\nTSTInfo.CLASS_NAME = \"TSTInfo\";\n\nconst VERSION$2 = \"version\";\nconst DIGEST_ALGORITHMS = \"digestAlgorithms\";\nconst ENCAP_CONTENT_INFO = \"encapContentInfo\";\nconst CERTIFICATES = \"certificates\";\nconst CRLS = \"crls\";\nconst SIGNER_INFOS = \"signerInfos\";\nconst OCSPS = \"ocsps\";\nconst SIGNED_DATA = \"SignedData\";\nconst SIGNED_DATA_VERSION = `${SIGNED_DATA}.${VERSION$2}`;\nconst SIGNED_DATA_DIGEST_ALGORITHMS = `${SIGNED_DATA}.${DIGEST_ALGORITHMS}`;\nconst SIGNED_DATA_ENCAP_CONTENT_INFO = `${SIGNED_DATA}.${ENCAP_CONTENT_INFO}`;\nconst SIGNED_DATA_CERTIFICATES = `${SIGNED_DATA}.${CERTIFICATES}`;\nconst SIGNED_DATA_CRLS = `${SIGNED_DATA}.${CRLS}`;\nconst SIGNED_DATA_SIGNER_INFOS = `${SIGNED_DATA}.${SIGNER_INFOS}`;\nconst CLEAR_PROPS$3 = [\n    SIGNED_DATA_VERSION,\n    SIGNED_DATA_DIGEST_ALGORITHMS,\n    SIGNED_DATA_ENCAP_CONTENT_INFO,\n    SIGNED_DATA_CERTIFICATES,\n    SIGNED_DATA_CRLS,\n    SIGNED_DATA_SIGNER_INFOS\n];\nclass SignedDataVerifyError extends Error {\n    constructor({ message, code = 0, date = new Date(), signatureVerified = null, signerCertificate = null, signerCertificateVerified = null, timestampSerial = null, certificatePath = [], }) {\n        super(message);\n        this.name = \"SignedDataVerifyError\";\n        this.date = date;\n        this.code = code;\n        this.timestampSerial = timestampSerial;\n        this.signatureVerified = signatureVerified;\n        this.signerCertificate = signerCertificate;\n        this.signerCertificateVerified = signerCertificateVerified;\n        this.certificatePath = certificatePath;\n    }\n}\nclass SignedData extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION$2, SignedData.defaultValues(VERSION$2));\n        this.digestAlgorithms = pvutils.getParametersValue(parameters, DIGEST_ALGORITHMS, SignedData.defaultValues(DIGEST_ALGORITHMS));\n        this.encapContentInfo = pvutils.getParametersValue(parameters, ENCAP_CONTENT_INFO, SignedData.defaultValues(ENCAP_CONTENT_INFO));\n        if (CERTIFICATES in parameters) {\n            this.certificates = pvutils.getParametersValue(parameters, CERTIFICATES, SignedData.defaultValues(CERTIFICATES));\n        }\n        if (CRLS in parameters) {\n            this.crls = pvutils.getParametersValue(parameters, CRLS, SignedData.defaultValues(CRLS));\n        }\n        if (OCSPS in parameters) {\n            this.ocsps = pvutils.getParametersValue(parameters, OCSPS, SignedData.defaultValues(OCSPS));\n        }\n        this.signerInfos = pvutils.getParametersValue(parameters, SIGNER_INFOS, SignedData.defaultValues(SIGNER_INFOS));\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$2:\n                return 0;\n            case DIGEST_ALGORITHMS:\n                return [];\n            case ENCAP_CONTENT_INFO:\n                return new EncapsulatedContentInfo();\n            case CERTIFICATES:\n                return [];\n            case CRLS:\n                return [];\n            case OCSPS:\n                return [];\n            case SIGNER_INFOS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case VERSION$2:\n                return (memberValue === SignedData.defaultValues(VERSION$2));\n            case ENCAP_CONTENT_INFO:\n                return EncapsulatedContentInfo.compareWithDefault(\"eContentType\", memberValue.eContentType) &&\n                    EncapsulatedContentInfo.compareWithDefault(\"eContent\", memberValue.eContent);\n            case DIGEST_ALGORITHMS:\n            case CERTIFICATES:\n            case CRLS:\n            case OCSPS:\n            case SIGNER_INFOS:\n                return (memberValue.length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        if (names.optional === undefined) {\n            names.optional = false;\n        }\n        return (new asn1js.Sequence({\n            name: (names.blockName || SIGNED_DATA),\n            optional: names.optional,\n            value: [\n                new asn1js.Integer({ name: (names.version || SIGNED_DATA_VERSION) }),\n                new asn1js.Set({\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.digestAlgorithms || SIGNED_DATA_DIGEST_ALGORITHMS),\n                            value: AlgorithmIdentifier.schema()\n                        })\n                    ]\n                }),\n                EncapsulatedContentInfo.schema(names.encapContentInfo || {\n                    names: {\n                        blockName: SIGNED_DATA_ENCAP_CONTENT_INFO\n                    }\n                }),\n                new asn1js.Constructed({\n                    name: (names.certificates || SIGNED_DATA_CERTIFICATES),\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: CertificateSet.schema().valueBlock.value\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 1\n                    },\n                    value: RevocationInfoChoices.schema(names.crls || {\n                        names: {\n                            crls: SIGNED_DATA_CRLS\n                        }\n                    }).valueBlock.value\n                }),\n                new asn1js.Set({\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.signerInfos || SIGNED_DATA_SIGNER_INFOS),\n                            value: SignerInfo.schema()\n                        })\n                    ]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$3);\n        const asn1 = asn1js.compareSchema(schema, schema, SignedData.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.version = asn1.result[SIGNED_DATA_VERSION].valueBlock.valueDec;\n        if (SIGNED_DATA_DIGEST_ALGORITHMS in asn1.result)\n            this.digestAlgorithms = Array.from(asn1.result[SIGNED_DATA_DIGEST_ALGORITHMS], algorithm => new AlgorithmIdentifier({ schema: algorithm }));\n        this.encapContentInfo = new EncapsulatedContentInfo({ schema: asn1.result[SIGNED_DATA_ENCAP_CONTENT_INFO] });\n        if (SIGNED_DATA_CERTIFICATES in asn1.result) {\n            const certificateSet = new CertificateSet({\n                schema: new asn1js.Set({\n                    value: asn1.result[SIGNED_DATA_CERTIFICATES].valueBlock.value\n                })\n            });\n            this.certificates = certificateSet.certificates.slice(0);\n        }\n        if (SIGNED_DATA_CRLS in asn1.result) {\n            this.crls = Array.from(asn1.result[SIGNED_DATA_CRLS], (crl) => {\n                if (crl.idBlock.tagClass === 1)\n                    return new CertificateRevocationList({ schema: crl });\n                crl.idBlock.tagClass = 1;\n                crl.idBlock.tagNumber = 16;\n                return new OtherRevocationInfoFormat({ schema: crl });\n            });\n        }\n        if (SIGNED_DATA_SIGNER_INFOS in asn1.result)\n            this.signerInfos = Array.from(asn1.result[SIGNED_DATA_SIGNER_INFOS], signerInfoSchema => new SignerInfo({ schema: signerInfoSchema }));\n    }\n    toSchema(encodeFlag = false) {\n        const outputArray = [];\n        if ((this.certificates && this.certificates.length && this.certificates.some(o => o instanceof OtherCertificateFormat))\n            || (this.crls && this.crls.length && this.crls.some(o => o instanceof OtherRevocationInfoFormat))) {\n            this.version = 5;\n        }\n        else if (this.certificates && this.certificates.length && this.certificates.some(o => o instanceof AttributeCertificateV2)) {\n            this.version = 4;\n        }\n        else if ((this.certificates && this.certificates.length && this.certificates.some(o => o instanceof AttributeCertificateV1))\n            || this.signerInfos.some(o => o.version === 3)\n            || this.encapContentInfo.eContentType !== SignedData.ID_DATA) {\n            this.version = 3;\n        }\n        else {\n            this.version = 1;\n        }\n        outputArray.push(new asn1js.Integer({ value: this.version }));\n        outputArray.push(new asn1js.Set({\n            value: Array.from(this.digestAlgorithms, algorithm => algorithm.toSchema())\n        }));\n        outputArray.push(this.encapContentInfo.toSchema());\n        if (this.certificates) {\n            const certificateSet = new CertificateSet({ certificates: this.certificates });\n            const certificateSetSchema = certificateSet.toSchema();\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: certificateSetSchema.valueBlock.value\n            }));\n        }\n        if (this.crls) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 1\n                },\n                value: Array.from(this.crls, crl => {\n                    if (crl instanceof OtherRevocationInfoFormat) {\n                        const crlSchema = crl.toSchema();\n                        crlSchema.idBlock.tagClass = 3;\n                        crlSchema.idBlock.tagNumber = 1;\n                        return crlSchema;\n                    }\n                    return crl.toSchema(encodeFlag);\n                })\n            }));\n        }\n        outputArray.push(new asn1js.Set({\n            value: Array.from(this.signerInfos, signerInfo => signerInfo.toSchema())\n        }));\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            version: this.version,\n            digestAlgorithms: Array.from(this.digestAlgorithms, algorithm => algorithm.toJSON()),\n            encapContentInfo: this.encapContentInfo.toJSON(),\n            signerInfos: Array.from(this.signerInfos, signerInfo => signerInfo.toJSON()),\n        };\n        if (this.certificates) {\n            res.certificates = Array.from(this.certificates, certificate => certificate.toJSON());\n        }\n        if (this.crls) {\n            res.crls = Array.from(this.crls, crl => crl.toJSON());\n        }\n        return res;\n    }\n    async verify({ signer = (-1), data = (EMPTY_BUFFER), trustedCerts = [], checkDate = (new Date()), checkChain = false, passedWhenNotRevValues = false, extendedMode = false, findOrigin = null, findIssuer = null } = {}, crypto = getCrypto(true)) {\n        let signerCert = null;\n        let timestampSerial = null;\n        try {\n            let messageDigestValue = EMPTY_BUFFER;\n            let shaAlgorithm = EMPTY_STRING;\n            let certificatePath = [];\n            const signerInfo = this.signerInfos[signer];\n            if (!signerInfo) {\n                throw new SignedDataVerifyError({\n                    date: checkDate,\n                    code: 1,\n                    message: \"Unable to get signer by supplied index\",\n                });\n            }\n            if (!this.certificates) {\n                throw new SignedDataVerifyError({\n                    date: checkDate,\n                    code: 2,\n                    message: \"No certificates attached to this signed data\",\n                });\n            }\n            if (signerInfo.sid instanceof IssuerAndSerialNumber) {\n                for (const certificate of this.certificates) {\n                    if (!(certificate instanceof Certificate))\n                        continue;\n                    if ((certificate.issuer.isEqual(signerInfo.sid.issuer)) &&\n                        (certificate.serialNumber.isEqual(signerInfo.sid.serialNumber))) {\n                        signerCert = certificate;\n                        break;\n                    }\n                }\n            }\n            else {\n                const sid = signerInfo.sid;\n                const keyId = sid.idBlock.isConstructed\n                    ? sid.valueBlock.value[0].valueBlock.valueHex\n                    : sid.valueBlock.valueHex;\n                for (const certificate of this.certificates) {\n                    if (!(certificate instanceof Certificate)) {\n                        continue;\n                    }\n                    const digest = await crypto.digest({ name: \"sha-1\" }, certificate.subjectPublicKeyInfo.subjectPublicKey.valueBlock.valueHexView);\n                    if (pvutils.isEqualBuffer(digest, keyId)) {\n                        signerCert = certificate;\n                        break;\n                    }\n                }\n            }\n            if (!signerCert) {\n                throw new SignedDataVerifyError({\n                    date: checkDate,\n                    code: 3,\n                    message: \"Unable to find signer certificate\",\n                });\n            }\n            if (this.encapContentInfo.eContentType === id_eContentType_TSTInfo) {\n                if (!this.encapContentInfo.eContent) {\n                    throw new SignedDataVerifyError({\n                        date: checkDate,\n                        code: 15,\n                        message: \"Error during verification: TSTInfo eContent is empty\",\n                        signatureVerified: null,\n                        signerCertificate: signerCert,\n                        timestampSerial,\n                        signerCertificateVerified: true\n                    });\n                }\n                let tstInfo;\n                try {\n                    tstInfo = TSTInfo.fromBER(this.encapContentInfo.eContent.valueBlock.valueHexView);\n                }\n                catch (ex) {\n                    throw new SignedDataVerifyError({\n                        date: checkDate,\n                        code: 15,\n                        message: \"Error during verification: TSTInfo wrong ASN.1 schema \",\n                        signatureVerified: null,\n                        signerCertificate: signerCert,\n                        timestampSerial,\n                        signerCertificateVerified: true\n                    });\n                }\n                checkDate = tstInfo.genTime;\n                timestampSerial = tstInfo.serialNumber.valueBlock.valueHexView.slice();\n                if (data.byteLength === 0) {\n                    throw new SignedDataVerifyError({\n                        date: checkDate,\n                        code: 4,\n                        message: \"Missed detached data input array\",\n                    });\n                }\n                if (!(await tstInfo.verify({ data }, crypto))) {\n                    throw new SignedDataVerifyError({\n                        date: checkDate,\n                        code: 15,\n                        message: \"Error during verification: TSTInfo verification is failed\",\n                        signatureVerified: false,\n                        signerCertificate: signerCert,\n                        timestampSerial,\n                        signerCertificateVerified: true\n                    });\n                }\n            }\n            if (checkChain) {\n                const certs = this.certificates.filter(certificate => (certificate instanceof Certificate && !!checkCA(certificate, signerCert)));\n                const chainParams = {\n                    checkDate,\n                    certs,\n                    trustedCerts,\n                };\n                if (findIssuer) {\n                    chainParams.findIssuer = findIssuer;\n                }\n                if (findOrigin) {\n                    chainParams.findOrigin = findOrigin;\n                }\n                const chainEngine = new CertificateChainValidationEngine(chainParams);\n                chainEngine.certs.push(signerCert);\n                if (this.crls) {\n                    for (const crl of this.crls) {\n                        if (\"thisUpdate\" in crl)\n                            chainEngine.crls.push(crl);\n                        else {\n                            if (crl.otherRevInfoFormat === id_PKIX_OCSP_Basic)\n                                chainEngine.ocsps.push(new BasicOCSPResponse({ schema: crl.otherRevInfo }));\n                        }\n                    }\n                }\n                if (this.ocsps) {\n                    chainEngine.ocsps.push(...(this.ocsps));\n                }\n                const verificationResult = await chainEngine.verify({ passedWhenNotRevValues }, crypto)\n                    .catch(e => {\n                    throw new SignedDataVerifyError({\n                        date: checkDate,\n                        code: 5,\n                        message: `Validation of signer's certificate failed with error: ${((e instanceof Object) ? e.resultMessage : e)}`,\n                        signerCertificate: signerCert,\n                        signerCertificateVerified: false\n                    });\n                });\n                if (verificationResult.certificatePath) {\n                    certificatePath = verificationResult.certificatePath;\n                }\n                if (!verificationResult.result)\n                    throw new SignedDataVerifyError({\n                        date: checkDate,\n                        code: 5,\n                        message: `Validation of signer's certificate failed: ${verificationResult.resultMessage}`,\n                        signerCertificate: signerCert,\n                        signerCertificateVerified: false\n                    });\n            }\n            const signerInfoHashAlgorithm = crypto.getAlgorithmByOID(signerInfo.digestAlgorithm.algorithmId);\n            if (!(\"name\" in signerInfoHashAlgorithm)) {\n                throw new SignedDataVerifyError({\n                    date: checkDate,\n                    code: 7,\n                    message: `Unsupported signature algorithm: ${signerInfo.digestAlgorithm.algorithmId}`,\n                    signerCertificate: signerCert,\n                    signerCertificateVerified: true\n                });\n            }\n            shaAlgorithm = signerInfoHashAlgorithm.name;\n            const eContent = this.encapContentInfo.eContent;\n            if (eContent) {\n                if ((eContent.idBlock.tagClass === 1) &&\n                    (eContent.idBlock.tagNumber === 4)) {\n                    data = eContent.getValue();\n                }\n                else\n                    data = eContent.valueBlock.valueBeforeDecodeView;\n            }\n            else {\n                if (data.byteLength === 0) {\n                    throw new SignedDataVerifyError({\n                        date: checkDate,\n                        code: 8,\n                        message: \"Missed detached data input array\",\n                        signerCertificate: signerCert,\n                        signerCertificateVerified: true\n                    });\n                }\n            }\n            if (signerInfo.signedAttrs) {\n                let foundContentType = false;\n                let foundMessageDigest = false;\n                for (const attribute of signerInfo.signedAttrs.attributes) {\n                    if (attribute.type === \"1.2.840.113549.1.9.3\")\n                        foundContentType = true;\n                    if (attribute.type === \"1.2.840.113549.1.9.4\") {\n                        foundMessageDigest = true;\n                        messageDigestValue = attribute.values[0].valueBlock.valueHex;\n                    }\n                    if (foundContentType && foundMessageDigest)\n                        break;\n                }\n                if (foundContentType === false) {\n                    throw new SignedDataVerifyError({\n                        date: checkDate,\n                        code: 9,\n                        message: \"Attribute \\\"content-type\\\" is a mandatory attribute for \\\"signed attributes\\\"\",\n                        signerCertificate: signerCert,\n                        signerCertificateVerified: true\n                    });\n                }\n                if (foundMessageDigest === false) {\n                    throw new SignedDataVerifyError({\n                        date: checkDate,\n                        code: 10,\n                        message: \"Attribute \\\"message-digest\\\" is a mandatory attribute for \\\"signed attributes\\\"\",\n                        signatureVerified: null,\n                        signerCertificate: signerCert,\n                        signerCertificateVerified: true\n                    });\n                }\n            }\n            if (signerInfo.signedAttrs) {\n                const messageDigest = await crypto.digest(shaAlgorithm, new Uint8Array(data));\n                if (!pvutils.isEqualBuffer(messageDigest, messageDigestValue)) {\n                    throw new SignedDataVerifyError({\n                        date: checkDate,\n                        code: 15,\n                        message: \"Error during verification: Message digest doesn't match\",\n                        signatureVerified: null,\n                        signerCertificate: signerCert,\n                        timestampSerial,\n                        signerCertificateVerified: true\n                    });\n                }\n                data = signerInfo.signedAttrs.encodedValue;\n            }\n            const verifyResult = signerInfo.signatureAlgorithm.algorithmId === \"1.2.840.113549.1.1.1\"\n                ? await crypto.verifyWithPublicKey(data, signerInfo.signature, signerCert.subjectPublicKeyInfo, signerInfo.signatureAlgorithm, shaAlgorithm)\n                : await crypto.verifyWithPublicKey(data, signerInfo.signature, signerCert.subjectPublicKeyInfo, signerInfo.signatureAlgorithm);\n            if (extendedMode) {\n                return {\n                    date: checkDate,\n                    code: 14,\n                    message: EMPTY_STRING,\n                    signatureVerified: verifyResult,\n                    signerCertificate: signerCert,\n                    timestampSerial,\n                    signerCertificateVerified: true,\n                    certificatePath\n                };\n            }\n            else {\n                return verifyResult;\n            }\n        }\n        catch (e) {\n            if (e instanceof SignedDataVerifyError) {\n                throw e;\n            }\n            throw new SignedDataVerifyError({\n                date: checkDate,\n                code: 15,\n                message: `Error during verification: ${e instanceof Error ? e.message : e}`,\n                signatureVerified: null,\n                signerCertificate: signerCert,\n                timestampSerial,\n                signerCertificateVerified: true\n            });\n        }\n    }\n    async sign(privateKey, signerIndex, hashAlgorithm = \"SHA-1\", data = (EMPTY_BUFFER), crypto = getCrypto(true)) {\n        var _a;\n        if (!privateKey)\n            throw new Error(\"Need to provide a private key for signing\");\n        const signerInfo = this.signerInfos[signerIndex];\n        if (!signerInfo) {\n            throw new RangeError(\"SignerInfo index is out of range\");\n        }\n        if (!((_a = signerInfo.signedAttrs) === null || _a === void 0 ? void 0 : _a.attributes.length) && \"hash\" in privateKey.algorithm && \"hash\" in privateKey.algorithm && privateKey.algorithm.hash) {\n            hashAlgorithm = privateKey.algorithm.hash.name;\n        }\n        const hashAlgorithmOID = crypto.getOIDByAlgorithm({ name: hashAlgorithm }, true, \"hashAlgorithm\");\n        if ((this.digestAlgorithms.filter(algorithm => algorithm.algorithmId === hashAlgorithmOID)).length === 0) {\n            this.digestAlgorithms.push(new AlgorithmIdentifier({\n                algorithmId: hashAlgorithmOID,\n                algorithmParams: new asn1js.Null()\n            }));\n        }\n        signerInfo.digestAlgorithm = new AlgorithmIdentifier({\n            algorithmId: hashAlgorithmOID,\n            algorithmParams: new asn1js.Null()\n        });\n        const signatureParams = await crypto.getSignatureParameters(privateKey, hashAlgorithm);\n        const parameters = signatureParams.parameters;\n        signerInfo.signatureAlgorithm = signatureParams.signatureAlgorithm;\n        if (signerInfo.signedAttrs) {\n            if (signerInfo.signedAttrs.encodedValue.byteLength !== 0)\n                data = signerInfo.signedAttrs.encodedValue;\n            else {\n                data = signerInfo.signedAttrs.toSchema().toBER();\n                const view = pvtsutils.BufferSourceConverter.toUint8Array(data);\n                view[0] = 0x31;\n            }\n        }\n        else {\n            const eContent = this.encapContentInfo.eContent;\n            if (eContent) {\n                if ((eContent.idBlock.tagClass === 1) &&\n                    (eContent.idBlock.tagNumber === 4)) {\n                    data = eContent.getValue();\n                }\n                else\n                    data = eContent.valueBlock.valueBeforeDecodeView;\n            }\n            else {\n                if (data.byteLength === 0)\n                    throw new Error(\"Missed detached data input array\");\n            }\n        }\n        const signature = await crypto.signWithPrivateKey(data, privateKey, parameters);\n        signerInfo.signature = new asn1js.OctetString({ valueHex: signature });\n    }\n}\nSignedData.CLASS_NAME = \"SignedData\";\nSignedData.ID_DATA = id_ContentType_Data;\n\nconst VERSION$1 = \"version\";\nconst AUTH_SAFE = \"authSafe\";\nconst MAC_DATA = \"macData\";\nconst PARSED_VALUE = \"parsedValue\";\nconst CLERA_PROPS = [\n    VERSION$1,\n    AUTH_SAFE,\n    MAC_DATA\n];\nclass PFX extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION$1, PFX.defaultValues(VERSION$1));\n        this.authSafe = pvutils.getParametersValue(parameters, AUTH_SAFE, PFX.defaultValues(AUTH_SAFE));\n        if (MAC_DATA in parameters) {\n            this.macData = pvutils.getParametersValue(parameters, MAC_DATA, PFX.defaultValues(MAC_DATA));\n        }\n        if (PARSED_VALUE in parameters) {\n            this.parsedValue = pvutils.getParametersValue(parameters, PARSED_VALUE, PFX.defaultValues(PARSED_VALUE));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION$1:\n                return 3;\n            case AUTH_SAFE:\n                return (new ContentInfo());\n            case MAC_DATA:\n                return (new MacData());\n            case PARSED_VALUE:\n                return {};\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case VERSION$1:\n                return (memberValue === PFX.defaultValues(memberName));\n            case AUTH_SAFE:\n                return ((ContentInfo.compareWithDefault(\"contentType\", memberValue.contentType)) &&\n                    (ContentInfo.compareWithDefault(\"content\", memberValue.content)));\n            case MAC_DATA:\n                return ((MacData.compareWithDefault(\"mac\", memberValue.mac)) &&\n                    (MacData.compareWithDefault(\"macSalt\", memberValue.macSalt)) &&\n                    (MacData.compareWithDefault(\"iterations\", memberValue.iterations)));\n            case PARSED_VALUE:\n                return ((memberValue instanceof Object) && (Object.keys(memberValue).length === 0));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Integer({ name: (names.version || VERSION$1) }),\n                ContentInfo.schema(names.authSafe || {\n                    names: {\n                        blockName: AUTH_SAFE\n                    }\n                }),\n                MacData.schema(names.macData || {\n                    names: {\n                        blockName: MAC_DATA,\n                        optional: true\n                    }\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLERA_PROPS);\n        const asn1 = asn1js.compareSchema(schema, schema, PFX.schema({\n            names: {\n                version: VERSION$1,\n                authSafe: {\n                    names: {\n                        blockName: AUTH_SAFE\n                    }\n                },\n                macData: {\n                    names: {\n                        blockName: MAC_DATA\n                    }\n                }\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        this.version = asn1.result.version.valueBlock.valueDec;\n        this.authSafe = new ContentInfo({ schema: asn1.result.authSafe });\n        if (MAC_DATA in asn1.result)\n            this.macData = new MacData({ schema: asn1.result.macData });\n    }\n    toSchema() {\n        const outputArray = [\n            new asn1js.Integer({ value: this.version }),\n            this.authSafe.toSchema()\n        ];\n        if (this.macData) {\n            outputArray.push(this.macData.toSchema());\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const output = {\n            version: this.version,\n            authSafe: this.authSafe.toJSON()\n        };\n        if (this.macData) {\n            output.macData = this.macData.toJSON();\n        }\n        return output;\n    }\n    async makeInternalValues(parameters = {}, crypto = getCrypto(true)) {\n        ArgumentError.assert(parameters, \"parameters\", \"object\");\n        if (!this.parsedValue) {\n            throw new Error(\"Please call \\\"parseValues\\\" function first in order to make \\\"parsedValue\\\" data\");\n        }\n        ParameterError.assertEmpty(this.parsedValue.integrityMode, \"integrityMode\", \"parsedValue\");\n        ParameterError.assertEmpty(this.parsedValue.authenticatedSafe, \"authenticatedSafe\", \"parsedValue\");\n        switch (this.parsedValue.integrityMode) {\n            case 0:\n                {\n                    if (!(\"iterations\" in parameters))\n                        throw new ParameterError(\"iterations\");\n                    ParameterError.assertEmpty(parameters.pbkdf2HashAlgorithm, \"pbkdf2HashAlgorithm\");\n                    ParameterError.assertEmpty(parameters.hmacHashAlgorithm, \"hmacHashAlgorithm\");\n                    ParameterError.assertEmpty(parameters.password, \"password\");\n                    const saltBuffer = new ArrayBuffer(64);\n                    const saltView = new Uint8Array(saltBuffer);\n                    crypto.getRandomValues(saltView);\n                    const data = this.parsedValue.authenticatedSafe.toSchema().toBER(false);\n                    this.authSafe = new ContentInfo({\n                        contentType: ContentInfo.DATA,\n                        content: new asn1js.OctetString({ valueHex: data })\n                    });\n                    const result = await crypto.stampDataWithPassword({\n                        password: parameters.password,\n                        hashAlgorithm: parameters.hmacHashAlgorithm,\n                        salt: saltBuffer,\n                        iterationCount: parameters.iterations,\n                        contentToStamp: data\n                    });\n                    this.macData = new MacData({\n                        mac: new DigestInfo({\n                            digestAlgorithm: new AlgorithmIdentifier({\n                                algorithmId: crypto.getOIDByAlgorithm({ name: parameters.hmacHashAlgorithm }, true, \"hmacHashAlgorithm\"),\n                            }),\n                            digest: new asn1js.OctetString({ valueHex: result })\n                        }),\n                        macSalt: new asn1js.OctetString({ valueHex: saltBuffer }),\n                        iterations: parameters.iterations\n                    });\n                }\n                break;\n            case 1:\n                {\n                    if (!(\"signingCertificate\" in parameters)) {\n                        throw new ParameterError(\"signingCertificate\");\n                    }\n                    ParameterError.assertEmpty(parameters.privateKey, \"privateKey\");\n                    ParameterError.assertEmpty(parameters.hashAlgorithm, \"hashAlgorithm\");\n                    const toBeSigned = this.parsedValue.authenticatedSafe.toSchema().toBER(false);\n                    const cmsSigned = new SignedData({\n                        version: 1,\n                        encapContentInfo: new EncapsulatedContentInfo({\n                            eContentType: \"1.2.840.113549.1.7.1\",\n                            eContent: new asn1js.OctetString({ valueHex: toBeSigned })\n                        }),\n                        certificates: [parameters.signingCertificate]\n                    });\n                    const result = await crypto.digest({ name: parameters.hashAlgorithm }, new Uint8Array(toBeSigned));\n                    const signedAttr = [];\n                    signedAttr.push(new Attribute({\n                        type: \"1.2.840.113549.1.9.3\",\n                        values: [\n                            new asn1js.ObjectIdentifier({ value: \"1.2.840.113549.1.7.1\" })\n                        ]\n                    }));\n                    signedAttr.push(new Attribute({\n                        type: \"1.2.840.113549.1.9.5\",\n                        values: [\n                            new asn1js.UTCTime({ valueDate: new Date() })\n                        ]\n                    }));\n                    signedAttr.push(new Attribute({\n                        type: \"1.2.840.113549.1.9.4\",\n                        values: [\n                            new asn1js.OctetString({ valueHex: result })\n                        ]\n                    }));\n                    cmsSigned.signerInfos.push(new SignerInfo({\n                        version: 1,\n                        sid: new IssuerAndSerialNumber({\n                            issuer: parameters.signingCertificate.issuer,\n                            serialNumber: parameters.signingCertificate.serialNumber\n                        }),\n                        signedAttrs: new SignedAndUnsignedAttributes({\n                            type: 0,\n                            attributes: signedAttr\n                        })\n                    }));\n                    await cmsSigned.sign(parameters.privateKey, 0, parameters.hashAlgorithm, undefined, crypto);\n                    this.authSafe = new ContentInfo({\n                        contentType: \"1.2.840.113549.1.7.2\",\n                        content: cmsSigned.toSchema(true)\n                    });\n                }\n                break;\n            default:\n                throw new Error(`Parameter \"integrityMode\" has unknown value: ${this.parsedValue.integrityMode}`);\n        }\n    }\n    async parseInternalValues(parameters, crypto = getCrypto(true)) {\n        ArgumentError.assert(parameters, \"parameters\", \"object\");\n        if (parameters.checkIntegrity === undefined) {\n            parameters.checkIntegrity = true;\n        }\n        this.parsedValue = {};\n        switch (this.authSafe.contentType) {\n            case ContentInfo.DATA:\n                {\n                    ParameterError.assertEmpty(parameters.password, \"password\");\n                    this.parsedValue.integrityMode = 0;\n                    ArgumentError.assert(this.authSafe.content, \"authSafe.content\", asn1js.OctetString);\n                    const authSafeContent = this.authSafe.content.getValue();\n                    this.parsedValue.authenticatedSafe = AuthenticatedSafe.fromBER(authSafeContent);\n                    if (parameters.checkIntegrity) {\n                        if (!this.macData) {\n                            throw new Error(\"Absent \\\"macData\\\" value, can not check PKCS#12 data integrity\");\n                        }\n                        const hashAlgorithm = crypto.getAlgorithmByOID(this.macData.mac.digestAlgorithm.algorithmId, true, \"digestAlgorithm\");\n                        const result = await crypto.verifyDataStampedWithPassword({\n                            password: parameters.password,\n                            hashAlgorithm: hashAlgorithm.name,\n                            salt: BufferSourceConverter.toArrayBuffer(this.macData.macSalt.valueBlock.valueHexView),\n                            iterationCount: this.macData.iterations || 1,\n                            contentToVerify: authSafeContent,\n                            signatureToVerify: BufferSourceConverter.toArrayBuffer(this.macData.mac.digest.valueBlock.valueHexView),\n                        });\n                        if (!result) {\n                            throw new Error(\"Integrity for the PKCS#12 data is broken!\");\n                        }\n                    }\n                }\n                break;\n            case ContentInfo.SIGNED_DATA:\n                {\n                    this.parsedValue.integrityMode = 1;\n                    const cmsSigned = new SignedData({ schema: this.authSafe.content });\n                    const eContent = cmsSigned.encapContentInfo.eContent;\n                    ParameterError.assert(eContent, \"eContent\", \"cmsSigned.encapContentInfo\");\n                    ArgumentError.assert(eContent, \"eContent\", asn1js.OctetString);\n                    const data = eContent.getValue();\n                    this.parsedValue.authenticatedSafe = AuthenticatedSafe.fromBER(data);\n                    const ok = await cmsSigned.verify({ signer: 0, checkChain: false }, crypto);\n                    if (!ok) {\n                        throw new Error(\"Integrity for the PKCS#12 data is broken!\");\n                    }\n                }\n                break;\n            default:\n                throw new Error(`Incorrect value for \"this.authSafe.contentType\": ${this.authSafe.contentType}`);\n        }\n    }\n}\nPFX.CLASS_NAME = \"PFX\";\n\nconst STATUS$1 = \"status\";\nconst STATUS_STRINGS = \"statusStrings\";\nconst FAIL_INFO = \"failInfo\";\nconst CLEAR_PROPS$2 = [\n    STATUS$1,\n    STATUS_STRINGS,\n    FAIL_INFO\n];\nvar PKIStatus;\n(function (PKIStatus) {\n    PKIStatus[PKIStatus[\"granted\"] = 0] = \"granted\";\n    PKIStatus[PKIStatus[\"grantedWithMods\"] = 1] = \"grantedWithMods\";\n    PKIStatus[PKIStatus[\"rejection\"] = 2] = \"rejection\";\n    PKIStatus[PKIStatus[\"waiting\"] = 3] = \"waiting\";\n    PKIStatus[PKIStatus[\"revocationWarning\"] = 4] = \"revocationWarning\";\n    PKIStatus[PKIStatus[\"revocationNotification\"] = 5] = \"revocationNotification\";\n})(PKIStatus || (PKIStatus = {}));\nclass PKIStatusInfo extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.status = pvutils.getParametersValue(parameters, STATUS$1, PKIStatusInfo.defaultValues(STATUS$1));\n        if (STATUS_STRINGS in parameters) {\n            this.statusStrings = pvutils.getParametersValue(parameters, STATUS_STRINGS, PKIStatusInfo.defaultValues(STATUS_STRINGS));\n        }\n        if (FAIL_INFO in parameters) {\n            this.failInfo = pvutils.getParametersValue(parameters, FAIL_INFO, PKIStatusInfo.defaultValues(FAIL_INFO));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case STATUS$1:\n                return 2;\n            case STATUS_STRINGS:\n                return [];\n            case FAIL_INFO:\n                return new asn1js.BitString();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case STATUS$1:\n                return (memberValue === PKIStatusInfo.defaultValues(memberName));\n            case STATUS_STRINGS:\n                return (memberValue.length === 0);\n            case FAIL_INFO:\n                return (memberValue.isEqual(PKIStatusInfo.defaultValues(memberName)));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || EMPTY_STRING),\n            value: [\n                new asn1js.Integer({ name: (names.status || EMPTY_STRING) }),\n                new asn1js.Sequence({\n                    optional: true,\n                    value: [\n                        new asn1js.Repeated({\n                            name: (names.statusStrings || EMPTY_STRING),\n                            value: new asn1js.Utf8String()\n                        })\n                    ]\n                }),\n                new asn1js.BitString({\n                    name: (names.failInfo || EMPTY_STRING),\n                    optional: true\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$2);\n        const asn1 = asn1js.compareSchema(schema, schema, PKIStatusInfo.schema({\n            names: {\n                status: STATUS$1,\n                statusStrings: STATUS_STRINGS,\n                failInfo: FAIL_INFO\n            }\n        }));\n        AsnError.assertSchema(asn1, this.className);\n        const _status = asn1.result.status;\n        if ((_status.valueBlock.isHexOnly === true) ||\n            (_status.valueBlock.valueDec < 0) ||\n            (_status.valueBlock.valueDec > 5))\n            throw new Error(\"PKIStatusInfo \\\"status\\\" has invalid value\");\n        this.status = _status.valueBlock.valueDec;\n        if (STATUS_STRINGS in asn1.result)\n            this.statusStrings = asn1.result.statusStrings;\n        if (FAIL_INFO in asn1.result)\n            this.failInfo = asn1.result.failInfo;\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(new asn1js.Integer({ value: this.status }));\n        if (this.statusStrings) {\n            outputArray.push(new asn1js.Sequence({\n                optional: true,\n                value: this.statusStrings\n            }));\n        }\n        if (this.failInfo) {\n            outputArray.push(this.failInfo);\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            status: this.status\n        };\n        if (this.statusStrings) {\n            res.statusStrings = Array.from(this.statusStrings, o => o.toJSON());\n        }\n        if (this.failInfo) {\n            res.failInfo = this.failInfo.toJSON();\n        }\n        return res;\n    }\n}\nPKIStatusInfo.CLASS_NAME = \"PKIStatusInfo\";\n\nconst VERSION = \"version\";\nconst MESSAGE_IMPRINT = \"messageImprint\";\nconst REQ_POLICY = \"reqPolicy\";\nconst NONCE = \"nonce\";\nconst CERT_REQ = \"certReq\";\nconst EXTENSIONS = \"extensions\";\nconst TIME_STAMP_REQ = \"TimeStampReq\";\nconst TIME_STAMP_REQ_VERSION = `${TIME_STAMP_REQ}.${VERSION}`;\nconst TIME_STAMP_REQ_MESSAGE_IMPRINT = `${TIME_STAMP_REQ}.${MESSAGE_IMPRINT}`;\nconst TIME_STAMP_REQ_POLICY = `${TIME_STAMP_REQ}.${REQ_POLICY}`;\nconst TIME_STAMP_REQ_NONCE = `${TIME_STAMP_REQ}.${NONCE}`;\nconst TIME_STAMP_REQ_CERT_REQ = `${TIME_STAMP_REQ}.${CERT_REQ}`;\nconst TIME_STAMP_REQ_EXTENSIONS = `${TIME_STAMP_REQ}.${EXTENSIONS}`;\nconst CLEAR_PROPS$1 = [\n    TIME_STAMP_REQ_VERSION,\n    TIME_STAMP_REQ_MESSAGE_IMPRINT,\n    TIME_STAMP_REQ_POLICY,\n    TIME_STAMP_REQ_NONCE,\n    TIME_STAMP_REQ_CERT_REQ,\n    TIME_STAMP_REQ_EXTENSIONS,\n];\nclass TimeStampReq extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.version = pvutils.getParametersValue(parameters, VERSION, TimeStampReq.defaultValues(VERSION));\n        this.messageImprint = pvutils.getParametersValue(parameters, MESSAGE_IMPRINT, TimeStampReq.defaultValues(MESSAGE_IMPRINT));\n        if (REQ_POLICY in parameters) {\n            this.reqPolicy = pvutils.getParametersValue(parameters, REQ_POLICY, TimeStampReq.defaultValues(REQ_POLICY));\n        }\n        if (NONCE in parameters) {\n            this.nonce = pvutils.getParametersValue(parameters, NONCE, TimeStampReq.defaultValues(NONCE));\n        }\n        if (CERT_REQ in parameters) {\n            this.certReq = pvutils.getParametersValue(parameters, CERT_REQ, TimeStampReq.defaultValues(CERT_REQ));\n        }\n        if (EXTENSIONS in parameters) {\n            this.extensions = pvutils.getParametersValue(parameters, EXTENSIONS, TimeStampReq.defaultValues(EXTENSIONS));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case VERSION:\n                return 0;\n            case MESSAGE_IMPRINT:\n                return new MessageImprint();\n            case REQ_POLICY:\n                return EMPTY_STRING;\n            case NONCE:\n                return new asn1js.Integer();\n            case CERT_REQ:\n                return false;\n            case EXTENSIONS:\n                return [];\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case VERSION:\n            case REQ_POLICY:\n            case CERT_REQ:\n                return (memberValue === TimeStampReq.defaultValues(memberName));\n            case MESSAGE_IMPRINT:\n                return ((MessageImprint.compareWithDefault(\"hashAlgorithm\", memberValue.hashAlgorithm)) &&\n                    (MessageImprint.compareWithDefault(\"hashedMessage\", memberValue.hashedMessage)));\n            case NONCE:\n                return (memberValue.isEqual(TimeStampReq.defaultValues(memberName)));\n            case EXTENSIONS:\n                return (memberValue.length === 0);\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || TIME_STAMP_REQ),\n            value: [\n                new asn1js.Integer({ name: (names.version || TIME_STAMP_REQ_VERSION) }),\n                MessageImprint.schema(names.messageImprint || {\n                    names: {\n                        blockName: TIME_STAMP_REQ_MESSAGE_IMPRINT\n                    }\n                }),\n                new asn1js.ObjectIdentifier({\n                    name: (names.reqPolicy || TIME_STAMP_REQ_POLICY),\n                    optional: true\n                }),\n                new asn1js.Integer({\n                    name: (names.nonce || TIME_STAMP_REQ_NONCE),\n                    optional: true\n                }),\n                new asn1js.Boolean({\n                    name: (names.certReq || TIME_STAMP_REQ_CERT_REQ),\n                    optional: true\n                }),\n                new asn1js.Constructed({\n                    optional: true,\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: 0\n                    },\n                    value: [new asn1js.Repeated({\n                            name: (names.extensions || TIME_STAMP_REQ_EXTENSIONS),\n                            value: Extension.schema()\n                        })]\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS$1);\n        const asn1 = asn1js.compareSchema(schema, schema, TimeStampReq.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.version = asn1.result[TIME_STAMP_REQ_VERSION].valueBlock.valueDec;\n        this.messageImprint = new MessageImprint({ schema: asn1.result[TIME_STAMP_REQ_MESSAGE_IMPRINT] });\n        if (TIME_STAMP_REQ_POLICY in asn1.result)\n            this.reqPolicy = asn1.result[TIME_STAMP_REQ_POLICY].valueBlock.toString();\n        if (TIME_STAMP_REQ_NONCE in asn1.result)\n            this.nonce = asn1.result[TIME_STAMP_REQ_NONCE];\n        if (TIME_STAMP_REQ_CERT_REQ in asn1.result)\n            this.certReq = asn1.result[TIME_STAMP_REQ_CERT_REQ].valueBlock.value;\n        if (TIME_STAMP_REQ_EXTENSIONS in asn1.result)\n            this.extensions = Array.from(asn1.result[TIME_STAMP_REQ_EXTENSIONS], element => new Extension({ schema: element }));\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(new asn1js.Integer({ value: this.version }));\n        outputArray.push(this.messageImprint.toSchema());\n        if (this.reqPolicy)\n            outputArray.push(new asn1js.ObjectIdentifier({ value: this.reqPolicy }));\n        if (this.nonce)\n            outputArray.push(this.nonce);\n        if ((CERT_REQ in this) && (TimeStampReq.compareWithDefault(CERT_REQ, this.certReq) === false))\n            outputArray.push(new asn1js.Boolean({ value: this.certReq }));\n        if (this.extensions) {\n            outputArray.push(new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: 0\n                },\n                value: Array.from(this.extensions, o => o.toSchema())\n            }));\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            version: this.version,\n            messageImprint: this.messageImprint.toJSON()\n        };\n        if (this.reqPolicy !== undefined)\n            res.reqPolicy = this.reqPolicy;\n        if (this.nonce !== undefined)\n            res.nonce = this.nonce.toJSON();\n        if ((this.certReq !== undefined) && (TimeStampReq.compareWithDefault(CERT_REQ, this.certReq) === false))\n            res.certReq = this.certReq;\n        if (this.extensions) {\n            res.extensions = Array.from(this.extensions, o => o.toJSON());\n        }\n        return res;\n    }\n}\nTimeStampReq.CLASS_NAME = \"TimeStampReq\";\n\nconst STATUS = \"status\";\nconst TIME_STAMP_TOKEN = \"timeStampToken\";\nconst TIME_STAMP_RESP = \"TimeStampResp\";\nconst TIME_STAMP_RESP_STATUS = `${TIME_STAMP_RESP}.${STATUS}`;\nconst TIME_STAMP_RESP_TOKEN = `${TIME_STAMP_RESP}.${TIME_STAMP_TOKEN}`;\nconst CLEAR_PROPS = [\n    TIME_STAMP_RESP_STATUS,\n    TIME_STAMP_RESP_TOKEN\n];\nclass TimeStampResp extends PkiObject {\n    constructor(parameters = {}) {\n        super();\n        this.status = pvutils.getParametersValue(parameters, STATUS, TimeStampResp.defaultValues(STATUS));\n        if (TIME_STAMP_TOKEN in parameters) {\n            this.timeStampToken = pvutils.getParametersValue(parameters, TIME_STAMP_TOKEN, TimeStampResp.defaultValues(TIME_STAMP_TOKEN));\n        }\n        if (parameters.schema) {\n            this.fromSchema(parameters.schema);\n        }\n    }\n    static defaultValues(memberName) {\n        switch (memberName) {\n            case STATUS:\n                return new PKIStatusInfo();\n            case TIME_STAMP_TOKEN:\n                return new ContentInfo();\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static compareWithDefault(memberName, memberValue) {\n        switch (memberName) {\n            case STATUS:\n                return ((PKIStatusInfo.compareWithDefault(STATUS, memberValue.status)) &&\n                    ((\"statusStrings\" in memberValue) === false) &&\n                    ((\"failInfo\" in memberValue) === false));\n            case TIME_STAMP_TOKEN:\n                return ((memberValue.contentType === EMPTY_STRING) &&\n                    (memberValue.content instanceof asn1js.Any));\n            default:\n                return super.defaultValues(memberName);\n        }\n    }\n    static schema(parameters = {}) {\n        const names = pvutils.getParametersValue(parameters, \"names\", {});\n        return (new asn1js.Sequence({\n            name: (names.blockName || TIME_STAMP_RESP),\n            value: [\n                PKIStatusInfo.schema(names.status || {\n                    names: {\n                        blockName: TIME_STAMP_RESP_STATUS\n                    }\n                }),\n                ContentInfo.schema(names.timeStampToken || {\n                    names: {\n                        blockName: TIME_STAMP_RESP_TOKEN,\n                        optional: true\n                    }\n                })\n            ]\n        }));\n    }\n    fromSchema(schema) {\n        pvutils.clearProps(schema, CLEAR_PROPS);\n        const asn1 = asn1js.compareSchema(schema, schema, TimeStampResp.schema());\n        AsnError.assertSchema(asn1, this.className);\n        this.status = new PKIStatusInfo({ schema: asn1.result[TIME_STAMP_RESP_STATUS] });\n        if (TIME_STAMP_RESP_TOKEN in asn1.result)\n            this.timeStampToken = new ContentInfo({ schema: asn1.result[TIME_STAMP_RESP_TOKEN] });\n    }\n    toSchema() {\n        const outputArray = [];\n        outputArray.push(this.status.toSchema());\n        if (this.timeStampToken) {\n            outputArray.push(this.timeStampToken.toSchema());\n        }\n        return (new asn1js.Sequence({\n            value: outputArray\n        }));\n    }\n    toJSON() {\n        const res = {\n            status: this.status.toJSON()\n        };\n        if (this.timeStampToken) {\n            res.timeStampToken = this.timeStampToken.toJSON();\n        }\n        return res;\n    }\n    async sign(privateKey, hashAlgorithm, crypto = getCrypto(true)) {\n        this.assertContentType();\n        const signed = new SignedData({ schema: this.timeStampToken.content });\n        return signed.sign(privateKey, 0, hashAlgorithm, undefined, crypto);\n    }\n    async verify(verificationParameters = { signer: 0, trustedCerts: [], data: EMPTY_BUFFER }, crypto = getCrypto(true)) {\n        this.assertContentType();\n        const signed = new SignedData({ schema: this.timeStampToken.content });\n        return signed.verify(verificationParameters, crypto);\n    }\n    assertContentType() {\n        if (!this.timeStampToken) {\n            throw new Error(\"timeStampToken is absent in TSP response\");\n        }\n        if (this.timeStampToken.contentType !== id_ContentType_SignedData) {\n            throw new Error(`Wrong format of timeStampToken: ${this.timeStampToken.contentType}`);\n        }\n    }\n}\nTimeStampResp.CLASS_NAME = \"TimeStampResp\";\n\nfunction initCryptoEngine() {\n    if (typeof self !== \"undefined\") {\n        if (\"crypto\" in self) {\n            let engineName = \"webcrypto\";\n            if (\"webkitSubtle\" in self.crypto) {\n                engineName = \"safari\";\n            }\n            setEngine(engineName, new CryptoEngine({ name: engineName, crypto: crypto }));\n        }\n    }\n    else if (typeof crypto !== \"undefined\" && \"webcrypto\" in crypto) {\n        const name = \"NodeJS ^15\";\n        const nodeCrypto = crypto.webcrypto;\n        setEngine(name, new CryptoEngine({ name, crypto: nodeCrypto }));\n    }\n}\n\ninitCryptoEngine();\n\nexport { AbstractCryptoEngine, AccessDescription, Accuracy, AlgorithmIdentifier, AltName, ArgumentError, AsnError, AttCertValidityPeriod, Attribute, AttributeCertificateInfoV1, AttributeCertificateInfoV2, AttributeCertificateV1, AttributeCertificateV2, AttributeTypeAndValue, AuthenticatedSafe, AuthorityKeyIdentifier, BasicConstraints, BasicOCSPResponse, CAVersion, CRLBag, CRLDistributionPoints, CertBag, CertID, Certificate, CertificateChainValidationEngine, CertificatePolicies, CertificateRevocationList, CertificateSet, CertificateTemplate, CertificationRequest, ChainValidationCode, ChainValidationError, ContentInfo, CryptoEngine, DigestInfo, DistributionPoint, ECCCMSSharedInfo, ECNamedCurves, ECPrivateKey, ECPublicKey, EncapsulatedContentInfo, EncryptedContentInfo, EncryptedData, EnvelopedData, ExtKeyUsage, Extension, ExtensionValueFactory, Extensions, GeneralName, GeneralNames, GeneralSubtree, HASHED_MESSAGE, HASH_ALGORITHM, Holder, InfoAccess, IssuerAndSerialNumber, IssuerSerial, IssuingDistributionPoint, KEKIdentifier, KEKRecipientInfo, KeyAgreeRecipientIdentifier, KeyAgreeRecipientInfo, KeyBag, KeyTransRecipientInfo, MICROS, MILLIS, MacData, MessageImprint, NameConstraints, OCSPRequest, OCSPResponse, ObjectDigestInfo, OriginatorIdentifierOrKey, OriginatorInfo, OriginatorPublicKey, OtherCertificateFormat, OtherKeyAttribute, OtherPrimeInfo, OtherRecipientInfo, OtherRevocationInfoFormat, PBES2Params, PBKDF2Params, PFX, PKCS8ShroudedKeyBag, PKIStatus, PKIStatusInfo, POLICY_IDENTIFIER, POLICY_QUALIFIERS, ParameterError, PasswordRecipientinfo, PkiObject, PolicyConstraints, PolicyInformation, PolicyMapping, PolicyMappings, PolicyQualifierInfo, PrivateKeyInfo, PrivateKeyUsagePeriod, PublicKeyInfo, QCStatement, QCStatements, RDN, RSAESOAEPParams, RSAPrivateKey, RSAPublicKey, RSASSAPSSParams, RecipientEncryptedKey, RecipientEncryptedKeys, RecipientIdentifier, RecipientInfo, RecipientKeyIdentifier, RelativeDistinguishedNames, Request, ResponseBytes, ResponseData, RevocationInfoChoices, RevokedCertificate, SECONDS, SafeBag, SafeBagValueFactory, SafeContents, SecretBag, Signature, SignedAndUnsignedAttributes, SignedCertificateTimestamp, SignedCertificateTimestampList, SignedData, SignedDataVerifyError, SignerInfo, SingleResponse, SubjectDirectoryAttributes, TBSRequest, TSTInfo, TYPE$4 as TYPE, TYPE_AND_VALUES, Time, TimeStampReq, TimeStampResp, TimeType, V2Form, VALUE$5 as VALUE, VALUE_BEFORE_DECODE, checkCA, createCMSECDSASignature, createECDSASignatureFromCMS, engine, getAlgorithmByOID, getAlgorithmParameters, getCrypto, getEngine, getHashAlgorithm, getOIDByAlgorithm, getRandomValues, id_AnyPolicy, id_AuthorityInfoAccess, id_AuthorityKeyIdentifier, id_BaseCRLNumber, id_BasicConstraints, id_CRLBag_X509CRL, id_CRLDistributionPoints, id_CRLNumber, id_CRLReason, id_CertBag_AttributeCertificate, id_CertBag_SDSICertificate, id_CertBag_X509Certificate, id_CertificateIssuer, id_CertificatePolicies, id_ContentType_Data, id_ContentType_EncryptedData, id_ContentType_EnvelopedData, id_ContentType_SignedData, id_ExtKeyUsage, id_FreshestCRL, id_InhibitAnyPolicy, id_InvalidityDate, id_IssuerAltName, id_IssuingDistributionPoint, id_KeyUsage, id_MicrosoftAppPolicies, id_MicrosoftCaVersion, id_MicrosoftCertTemplateV1, id_MicrosoftCertTemplateV2, id_MicrosoftPrevCaCertHash, id_NameConstraints, id_PKIX_OCSP_Basic, id_PolicyConstraints, id_PolicyMappings, id_PrivateKeyUsagePeriod, id_QCStatements, id_SignedCertificateTimestampList, id_SubjectAltName, id_SubjectDirectoryAttributes, id_SubjectInfoAccess, id_SubjectKeyIdentifier, id_ad, id_ad_caIssuers, id_ad_ocsp, id_eContentType_TSTInfo, id_pkix, id_sha1, id_sha256, id_sha384, id_sha512, kdf, setEngine, stringPrep, verifySCTsForCertificate };\n","import * as pkijs from 'pkijs';\npkijs.setEngine('webcrypto', new pkijs.CryptoEngine({\n    name: 'webcrypto', crypto,\n    subtle: crypto.subtle\n}));\nimport * as pkijs_1 from 'pkijs';\nexport { pkijs_1 as pkijs };\n","const MAX_INT32 = 2 ** 32;\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer) => {\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexport function areEqual(buf1, buf2) {\n    if (buf1 === buf2) {\n        return true;\n    }\n    if (buf1.byteLength !== buf2.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < buf1.byteLength; i++) {\n        if (buf1[i] !== buf2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport const fromUTF8 = (input) => encoder.encode(input);\nexport const toUTF8 = (input) => decoder.decode(input);\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\n","import { encoder, decoder } from '../../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encodeBase64URL = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decodeBase64URL = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch (_a) {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n","import { encodeBase64 } from '#runtime/base64.js';\nexport const pemToCert = (cert) => {\n    const pem = /-----BEGIN (\\w*)-----([^-]*)-----END (\\w*)-----/g.exec(cert.toString());\n    if (pem && pem.length > 0) {\n        return pem[2].replace(/[\\n|\\r\\n]/g, '');\n    }\n    return '';\n};\nexport const certToPEM = (cert) => {\n    return `-----BEGIN CERTIFICATE-----\n${encodeBase64(cert).trim()}\n-----END CERTIFICATE-----`;\n};\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _COSEBase_encodedProtectedHeaders;\nimport { encoder } from '../cbor.js';\nexport class COSEBase {\n    constructor(protectedHeaders, unprotectedHeaders) {\n        this.unprotectedHeaders = unprotectedHeaders;\n        _COSEBase_encodedProtectedHeaders.set(this, void 0);\n        if (protectedHeaders instanceof Uint8Array) {\n            __classPrivateFieldSet(this, _COSEBase_encodedProtectedHeaders, protectedHeaders, \"f\");\n            this.protectedHeaders = protectedHeaders.length === 0 ?\n                new Map() :\n                encoder.decode(protectedHeaders);\n        }\n        else {\n            this.protectedHeaders = protectedHeaders;\n            __classPrivateFieldSet(this, _COSEBase_encodedProtectedHeaders, encoder.encode(protectedHeaders), \"f\");\n        }\n    }\n    get encodedProtectedHeaders() {\n        return __classPrivateFieldGet(this, _COSEBase_encodedProtectedHeaders, \"f\");\n    }\n    encode() {\n        return encoder.encode(this);\n    }\n}\n_COSEBase_encodedProtectedHeaders = new WeakMap();\n","const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'number'))) {\n        throw new TypeError(`\"${option}\" option must be an array of numbers`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n","import verify from \"#runtime/verify.js\";\nimport { importX509 } from 'jose';\nimport { pkijs } from '#runtime/pkijs.js';\nimport { decodeBase64 } from '#runtime/base64.js';\nimport { X509InvalidCertificateChain, X509NoMatchingCertificate } from '../util/errors.js';\nimport { certToPEM, pemToCert } from '../util/cert.js';\nimport { AlgorithmNames, Headers } from '../headers.js';\nimport { COSEBase } from './COSEBase.js';\nimport * as errors from \"../util/errors.js\";\nimport validateAlgorithms from '../lib/validate_algorithms.js';\nexport class SignatureBase extends COSEBase {\n    constructor(protectedHeaders, unprotectedHeaders, signature) {\n        super(protectedHeaders, unprotectedHeaders);\n        this.signature = signature;\n    }\n    get alg() {\n        return this.protectedHeaders.get(Headers.Algorithm) ||\n            this.unprotectedHeaders.get(Headers.Algorithm);\n    }\n    get algName() {\n        return this.alg ? AlgorithmNames.get(this.alg) : undefined;\n    }\n    get kid() {\n        return this.protectedHeaders.get(Headers.KeyID) ||\n            this.unprotectedHeaders.get(Headers.KeyID);\n    }\n    get x5bag() {\n        const x5bag = this.protectedHeaders.get(Headers.X5Bag) ||\n            this.unprotectedHeaders.get(Headers.X5Bag);\n        if (!x5bag) {\n            return;\n        }\n        return Array.isArray(x5bag) ? x5bag : [x5bag];\n    }\n    get x5chain() {\n        const x5chain = this.protectedHeaders.get(Headers.X5Chain) ||\n            this.unprotectedHeaders.get(Headers.X5Chain);\n        if (!x5chain) {\n            return;\n        }\n        return Array.isArray(x5chain) ? x5chain : [x5chain];\n    }\n    async verifyX509Chain(caRoots) {\n        const { x5chain } = this;\n        if (!x5chain || x5chain.length === 0) {\n            throw new X509NoMatchingCertificate();\n        }\n        const chainEngine = new pkijs.CertificateChainValidationEngine({\n            certs: x5chain.map((c) => pkijs.Certificate.fromBER(c)),\n            trustedCerts: caRoots.map((c) => pkijs.Certificate.fromBER(decodeBase64(pemToCert(c)))),\n        });\n        const chain = await chainEngine.verify();\n        if (!chain.result) {\n            throw new X509InvalidCertificateChain(chain.resultMessage);\n        }\n        const x509Cert = certToPEM(x5chain[0]);\n        const publicKey = await importX509(x509Cert, this.algName);\n        return { publicKey, raw: x5chain[0] };\n    }\n    async internalVerify(payload, key, options) {\n        if (!this.alg || !this.algName || !AlgorithmNames.has(this.alg)) {\n            throw new errors.COSEInvalid(`Unsupported algorithm ${this.alg}`);\n        }\n        const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n        if (algorithms && !algorithms.has(this.alg)) {\n            throw new errors.COSEAlgNotAllowed(`[${Headers.Algorithm}] (algorithm) Header Parameter not allowed`);\n        }\n        if (typeof key === 'function') {\n            key = await key(this);\n        }\n        const isValid = await verify(this.algName, key, this.signature, payload);\n        if (!isValid) {\n            throw new errors.COSESignatureVerificationFailed();\n        }\n    }\n}\n","import { encoder } from '../cbor.js';\nimport { COSEInvalid } from '../util/errors.js';\nexport const decode = (cose, expectedType) => {\n    let decoded = encoder.decode(cose);\n    if (Array.isArray(decoded)) {\n        const params = decoded;\n        decoded = new expectedType(...params);\n    }\n    if (!(decoded instanceof expectedType)) {\n        throw new COSEInvalid(`Unexpected CBOR tag. Expected tag ${expectedType.tag} (${expectedType.name}) but got ${decoded.tag}`);\n    }\n    return decoded;\n};\n","import { AlgorithmNames, Headers, ProtectedHeaders, UnprotectedHeaders } from '../headers.js';\nimport sign from '#runtime/sign.js';\nimport { SignatureBase } from './SignatureBase.js';\nimport { encoder, addExtension } from '../cbor.js';\nimport { decode } from \"./decode.js\";\nexport class Sign1 extends SignatureBase {\n    constructor(protectedHeaders, unprotectedHeaders, payload, signature) {\n        super(protectedHeaders, unprotectedHeaders, signature);\n        this.payload = payload;\n    }\n    getContentForEncoding() {\n        return [\n            this.encodedProtectedHeaders,\n            this.unprotectedHeaders,\n            this.payload,\n            this.signature,\n        ];\n    }\n    static Signature1(protectedHeaders, applicationHeaders, payload) {\n        return encoder.encode([\n            'Signature1',\n            protectedHeaders,\n            applicationHeaders,\n            payload,\n        ]);\n    }\n    async verify(key, options) {\n        var _a, _b;\n        const toBeSigned = Sign1.Signature1(this.encodedProtectedHeaders || new Uint8Array(), (_a = options === null || options === void 0 ? void 0 : options.externalAAD) !== null && _a !== void 0 ? _a : new Uint8Array(), (_b = options === null || options === void 0 ? void 0 : options.detachedPayload) !== null && _b !== void 0 ? _b : this.payload);\n        await this.internalVerify(toBeSigned, key, options);\n    }\n    async verifyX509(roots) {\n        const { publicKey } = await this.verifyX509Chain(roots);\n        return this.verify(publicKey);\n    }\n    static async sign(protectedHeaders, unprotectedHeaders, payload, key) {\n        const wProtectedHeaders = ProtectedHeaders.wrap(protectedHeaders);\n        if (!wProtectedHeaders.has(Headers.Algorithm)) {\n            throw new Error('The alg header must be set.');\n        }\n        const alg = AlgorithmNames.get(wProtectedHeaders.get(Headers.Algorithm));\n        const encodedProtectedHeaders = encoder.encode(wProtectedHeaders.esMap);\n        const unprotectedHeadersMap = UnprotectedHeaders.wrap(unprotectedHeaders).esMap;\n        const toBeSigned = Sign1.Signature1(encodedProtectedHeaders, new Uint8Array(), payload);\n        if (!alg) {\n            throw new Error('The alg header must be set.');\n        }\n        const signature = await sign(alg, key, toBeSigned);\n        return new Sign1(encodedProtectedHeaders, unprotectedHeadersMap, payload, signature);\n    }\n    static decode(cose) {\n        return decode(cose, Sign1);\n    }\n}\nSign1.tag = 18;\naddExtension({\n    Class: Sign1,\n    tag: Sign1.tag,\n    encode(instance, encodeFn) {\n        return encodeFn(instance.getContentForEncoding());\n    },\n    decode: (data) => {\n        return new Sign1(data[0], data[1], data[2], data[3]);\n    }\n});\n","import { SignatureBase } from './SignatureBase.js';\nimport { COSEBase } from './COSEBase.js';\nimport { UnprotectedHeaders, ProtectedHeaders, AlgorithmNames, Headers } from '../headers.js';\nimport sign from '#runtime/sign.js';\nimport { encoder, addExtension } from '../cbor.js';\nimport { decode } from './decode.js';\nimport * as errors from \"../util/errors.js\";\nexport class Sign extends COSEBase {\n    constructor(protectedHeaders, unprotectedHeaders, payload, signatures) {\n        super(protectedHeaders, unprotectedHeaders);\n        this.payload = payload;\n        this.signatures = signatures;\n    }\n    getContentForEncoding() {\n        return [\n            this.encodedProtectedHeaders,\n            this.unprotectedHeaders,\n            this.payload,\n            this.signatures.map((signature) => [\n                signature.protectedHeaders,\n                signature.unprotectedHeaders,\n                signature.signature\n            ]),\n        ];\n    }\n    async verify(key, options) {\n        for (const signature of this.signatures) {\n            try {\n                await signature.verify(key, this.encodedProtectedHeaders, this.payload, options);\n                return;\n            }\n            catch (err) { }\n        }\n        throw new errors.COSESignatureVerificationFailed();\n    }\n    async verifyX509(roots, options) {\n        for (const signature of this.signatures) {\n            try {\n                const { publicKey } = await signature.verifyX509Chain(roots);\n                await signature.verify(publicKey, this.encodedProtectedHeaders, this.payload, options);\n                return;\n            }\n            catch (err) { }\n        }\n        throw new errors.COSESignatureVerificationFailed();\n    }\n    static async sign(bodyProtectedHeader, unprotectedHeaders, payload, signers) {\n        const encodedProtectedHeaders = ProtectedHeaders.from(bodyProtectedHeader).encode();\n        const unprotectedHeadersMap = UnprotectedHeaders.from(unprotectedHeaders).esMap;\n        const signatures = await Promise.all(signers.map(async ({ key, protectedHeaders, unprotectedHeaders }) => {\n            return Signature.sign(encodedProtectedHeaders, protectedHeaders, unprotectedHeaders, payload, key);\n        }));\n        return new Sign(encodedProtectedHeaders, unprotectedHeadersMap, payload, signatures);\n    }\n    static decode(cose) {\n        return decode(cose, Sign);\n    }\n}\nSign.tag = 98;\nexport class Signature extends SignatureBase {\n    constructor(protectedHeaders, unprotectedHeaders, signature) {\n        super(protectedHeaders, unprotectedHeaders, signature);\n        this.unprotectedHeaders = unprotectedHeaders;\n        this.signature = signature;\n    }\n    static Signature(bodyProtectedHeaders, protectedHeaders, applicationHeaders, payload) {\n        return encoder.encode([\n            'Signature',\n            bodyProtectedHeaders || new Uint8Array(),\n            protectedHeaders || new Uint8Array(),\n            applicationHeaders || new Uint8Array(),\n            payload,\n        ]);\n    }\n    async verify(key, bodyProtectedHeaders, payload, options) {\n        const toBeSigned = Signature.Signature(bodyProtectedHeaders, this.encodedProtectedHeaders, new Uint8Array(), payload);\n        await this.internalVerify(toBeSigned, key, options);\n    }\n    static async sign(bodyProtectedHeaders, protectedHeaders, unprotectedHeaders, payload, key) {\n        const wProtectedHeaders = ProtectedHeaders.from(protectedHeaders);\n        const alg = AlgorithmNames.get(wProtectedHeaders.get(Headers.Algorithm));\n        const encodedProtectedHeaders = wProtectedHeaders.encode();\n        const unprotectedHeadersMapped = UnprotectedHeaders.from(unprotectedHeaders).esMap;\n        const toBeSigned = Signature.Signature(bodyProtectedHeaders, encodedProtectedHeaders, new Uint8Array(), payload);\n        if (!alg) {\n            throw new Error('The alg header must be set.');\n        }\n        const signature = await sign(alg, key, toBeSigned);\n        return new Signature(encodedProtectedHeaders, unprotectedHeadersMapped, signature);\n    }\n}\naddExtension({\n    Class: Sign,\n    tag: Sign.tag,\n    encode(instance, encode) {\n        return encode(instance.getContentForEncoding());\n    },\n    decode: (data) => {\n        const signatures = data[3].map(signature => new Signature(signature[0], signature[1], signature[2]));\n        return new Sign(data[0], data[1], data[2], signatures);\n    }\n});\n","import verify from \"#runtime/verify.js\";\nimport sign from '#runtime/sign.js';\nimport { addExtension, encoder } from '../cbor.js';\nimport { COSEBase } from './COSEBase.js';\nimport { Headers, MacProtectedHeaders, UnprotectedHeaders, MacAlgorithmNames } from '../headers.js';\nimport { areEqual } from \"../lib/buffer_utils.js\";\nimport * as errors from \"../util/errors.js\";\nimport validateAlgorithms from \"../lib/validate_algorithms.js\";\nimport { decode } from \"./decode.js\";\nexport class Mac0 extends COSEBase {\n    constructor(protectedHeaders, unprotectedHeaders, payload, tag) {\n        super(protectedHeaders, unprotectedHeaders);\n        this.payload = payload;\n        this.tag = tag;\n    }\n    static createMAC0(protectedHeaders, applicationHeaders, payload) {\n        return encoder.encode([\n            'MAC0',\n            protectedHeaders,\n            applicationHeaders,\n            payload,\n        ]);\n    }\n    getContentForEncoding() {\n        return [\n            this.encodedProtectedHeaders,\n            this.unprotectedHeaders,\n            this.payload,\n            this.tag,\n        ];\n    }\n    async verify(key, options) {\n        var _a, _b;\n        const mac0Structure = Mac0.createMAC0(this.encodedProtectedHeaders || new Uint8Array(), (_a = options === null || options === void 0 ? void 0 : options.externalAAD) !== null && _a !== void 0 ? _a : new Uint8Array(), (_b = options === null || options === void 0 ? void 0 : options.detachedPayload) !== null && _b !== void 0 ? _b : this.payload);\n        if (!this.alg || !this.algName || !MacAlgorithmNames.has(this.alg)) {\n            throw new errors.COSEInvalid(`Unsupported MAC algorithm ${this.alg}`);\n        }\n        const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n        if (algorithms && !algorithms.has(this.alg)) {\n            throw new errors.COSEAlgNotAllowed(`[${Headers.Algorithm}] (algorithm) Header Parameter not allowed`);\n        }\n        const isValid = await verify(this.algName, key, this.tag, mac0Structure);\n        if (!isValid) {\n            throw new errors.COSESignatureVerificationFailed('MAC0 signature verification failed');\n        }\n    }\n    get alg() {\n        return this.protectedHeaders.get(Headers.Algorithm) ||\n            this.unprotectedHeaders.get(Headers.Algorithm);\n    }\n    get algName() {\n        return this.alg ? MacAlgorithmNames.get(this.alg) : undefined;\n    }\n    hasSupportedAlg() {\n        return !!this.algName;\n    }\n    areEqual(mac0) {\n        return areEqual(this.tag, mac0.tag);\n    }\n    static async create(protectedHeaders, unprotectedHeaders, payload, key) {\n        const wProtectedHeaders = MacProtectedHeaders.wrap(protectedHeaders);\n        const alg = MacAlgorithmNames.get(wProtectedHeaders.get(Headers.Algorithm));\n        const encodedProtectedHeaders = encoder.encode(wProtectedHeaders.esMap);\n        const wUnprotectedHeaders = UnprotectedHeaders.wrap(unprotectedHeaders);\n        const toBeSigned = Mac0.createMAC0(encodedProtectedHeaders, new Uint8Array(), payload);\n        if (!alg) {\n            throw new Error(`The [${Headers.Algorithm}] (Algorithm) header must be set.`);\n        }\n        const tag = await sign(alg, key, toBeSigned);\n        return new Mac0(encodedProtectedHeaders, wUnprotectedHeaders.esMap, payload, tag);\n    }\n    static decode(cose) {\n        return decode(cose, Mac0);\n    }\n}\nMac0.tag = 17;\naddExtension({\n    Class: Mac0,\n    tag: Mac0.tag,\n    encode(instance, encodeFn) {\n        return encodeFn(instance.getContentForEncoding());\n    },\n    decode: (data) => {\n        return new Mac0(data[0], data[1], data[2], data[3]);\n    }\n});\n","import crypto from './webcrypto.js';\nexport default crypto.getRandomValues.bind(crypto);\n","import { COSENotSupported } from '../util/errors.js';\nimport random from '#runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A128GCMKW':\n        case 'A192GCM':\n        case 'A192GCMKW':\n        case 'A256GCM':\n        case 'A256GCMKW':\n            return 96;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return 128;\n        default:\n            throw new COSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n","import { COSEEncryptedInvalid } from '../util/errors.js';\nimport { bitLength } from './iv.js';\nconst checkIvLength = (enc, iv) => {\n    if (iv.length << 3 !== bitLength(enc)) {\n        throw new COSEEncryptedInvalid('Invalid Initialization Vector length');\n    }\n};\nexport default checkIvLength;\n","import { COSEInvalid } from '../../util/errors.js';\nconst checkCekLength = (cek, expected) => {\n    const actual = cek.byteLength << 3;\n    if (actual !== expected) {\n        throw new COSEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n    }\n};\nexport default checkCekLength;\n","const timingSafeEqual = (a, b) => {\n    if (!(a instanceof Uint8Array)) {\n        throw new TypeError('First argument must be a buffer');\n    }\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('Second argument must be a buffer');\n    }\n    if (a.length !== b.length) {\n        throw new TypeError('Input buffers must have the same length');\n    }\n    const len = a.length;\n    let out = 0;\n    let i = -1;\n    while (++i < len) {\n        out |= a[i] ^ b[i];\n    }\n    return out === 0;\n};\nexport default timingSafeEqual;\n","import { concat, uint64be } from '../../lib/buffer_utils.js';\nimport checkIvLength from '../../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport timingSafeEqual from './timing_safe_equal.js';\nimport { COSENotSupported, COSEDecryptionFailed, COSEEncryptedInvalid } from '../../util/errors.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../../lib/crypto_key.js';\nimport invalidKeyInput from '../../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const expectedTag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    let macCheckPassed;\n    try {\n        macCheckPassed = timingSafeEqual(tag, expectedTag);\n    }\n    catch (_a) {\n    }\n    if (!macCheckPassed) {\n        throw new COSEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        plaintext = new Uint8Array(await crypto.subtle.decrypt({ iv, name: 'AES-CBC' }, encKey, ciphertext));\n    }\n    catch (_b) {\n    }\n    if (!plaintext) {\n        throw new COSEDecryptionFailed();\n    }\n    return plaintext;\n}\nasync function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'decrypt');\n        encKey = cek;\n    }\n    try {\n        return new Uint8Array(await crypto.subtle.decrypt({\n            additionalData: aad,\n            iv,\n            name: 'AES-GCM',\n            tagLength: 128,\n        }, encKey, concat(ciphertext, tag)));\n    }\n    catch (_a) {\n        throw new COSEDecryptionFailed();\n    }\n}\nconst decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    if (!iv) {\n        throw new COSEEncryptedInvalid('COSE Initialization Vector missing');\n    }\n    if (!tag) {\n        throw new COSEEncryptedInvalid('COSE Authentication Tag missing');\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        default:\n            throw new COSENotSupported('COSEDecryptionFailed COSE Content Encryption Algorithm');\n    }\n};\nexport default decrypt;\n","import { concat, uint64be } from '../../lib/buffer_utils.js';\nimport checkIvLength from '../../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../../lib/crypto_key.js';\nimport invalidKeyInput from '../../lib/invalid_key_input.js';\nimport { COSENotSupported } from '../../util/errors.js';\nimport { types } from './is_key_like.js';\nasync function cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['encrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const ciphertext = new Uint8Array(await crypto.subtle.encrypt({\n        iv,\n        name: 'AES-CBC',\n    }, encKey, plaintext));\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const tag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    return { ciphertext, tag };\n}\nasync function gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['encrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'encrypt');\n        encKey = cek;\n    }\n    const encrypted = new Uint8Array(await crypto.subtle.encrypt({\n        additionalData: aad,\n        iv,\n        name: 'AES-GCM',\n        tagLength: 128,\n    }, encKey, plaintext));\n    const tag = encrypted.slice(-16);\n    const ciphertext = encrypted.slice(0, -16);\n    return { ciphertext, tag };\n}\nconst encrypt = async (enc, plaintext, cek, iv, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcEncrypt(enc, plaintext, cek, iv, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmEncrypt(enc, plaintext, cek, iv, aad);\n        default:\n            throw new COSENotSupported('Unsupported COSE Content Encryption Algorithm');\n    }\n};\nexport default encrypt;\n","import decrypt from \"#runtime/decrypt.js\";\nimport encrypt from \"#runtime/encrypt.js\";\nimport { concat } from '../lib/buffer_utils.js';\nimport { addExtension, encoder } from '../cbor.js';\nimport { COSEBase } from './COSEBase.js';\nimport * as errors from \"../util/errors.js\";\nimport validateAlgorithms from \"../lib/validate_algorithms.js\";\nimport generateIv from '../lib/iv.js';\nimport { Headers, EncryptionAlgorithmNames, EncryptProtectedHeaders, UnprotectedHeaders } from '../headers.js';\nimport { decode } from \"./decode.js\";\nexport class Encrypt0 extends COSEBase {\n    constructor(protectedHeaders, unprotectedHeaders, ciphertext) {\n        super(protectedHeaders, unprotectedHeaders);\n        this.ciphertext = ciphertext;\n    }\n    static createEncrypt0AAD(protectedHeaders, externalAAD) {\n        return encoder.encode([\n            'Encrypt0',\n            protectedHeaders,\n            externalAAD\n        ]);\n    }\n    getContentForEncoding() {\n        return [\n            this.encodedProtectedHeaders,\n            this.unprotectedHeaders,\n            this.ciphertext,\n        ];\n    }\n    static decode(cose) {\n        return decode(cose, Encrypt0);\n    }\n    async decrypt(key, options) {\n        var _a, _b, _c;\n        const ciphertextWithTag = (_a = options === null || options === void 0 ? void 0 : options.detachedPayload) !== null && _a !== void 0 ? _a : this.ciphertext;\n        const aad = Encrypt0.createEncrypt0AAD((_b = this.encodedProtectedHeaders) !== null && _b !== void 0 ? _b : new Uint8Array(), (_c = options === null || options === void 0 ? void 0 : options.externalAAD) !== null && _c !== void 0 ? _c : new Uint8Array());\n        if (!this.alg || !this.algName || !EncryptionAlgorithmNames.has(this.alg)) {\n            throw new errors.COSEInvalid(`Unsupported encryption algorithm ${this.alg}`);\n        }\n        const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n        if (algorithms && !algorithms.has(this.alg)) {\n            throw new errors.COSEAlgNotAllowed(`[${Headers.Algorithm}] (algorithm) Header Parameter not allowed`);\n        }\n        const iv = this.unprotectedHeaders.get(Headers.IV);\n        const tag = ciphertextWithTag.slice(-16);\n        const ciphertext = ciphertextWithTag.slice(0, -16);\n        return decrypt(this.algName, key, ciphertext, iv, tag, aad);\n    }\n    get alg() {\n        return this.protectedHeaders.get(Headers.Algorithm) ||\n            this.unprotectedHeaders.get(Headers.Algorithm);\n    }\n    get algName() {\n        return this.alg ? EncryptionAlgorithmNames.get(this.alg) : undefined;\n    }\n    hasSupportedAlg() {\n        return !!this.algName;\n    }\n    static async encrypt(protectedHeaders, unprotectedHeaders, content, key, externalAAD = new Uint8Array()) {\n        const wProtectedHeaders = EncryptProtectedHeaders.wrap(protectedHeaders);\n        const alg = EncryptionAlgorithmNames.get(wProtectedHeaders.get(Headers.Algorithm));\n        if (!alg) {\n            throw new Error(`The protected header [${Headers.Algorithm}] (Algorithm) must be valid.`);\n        }\n        const wUnprotectedHeaders = UnprotectedHeaders.wrap([...(unprotectedHeaders || [])]);\n        let iv = wUnprotectedHeaders.get(Headers.IV);\n        if (!iv) {\n            iv = generateIv(alg);\n            wUnprotectedHeaders.set(Headers.IV, iv);\n        }\n        const aad = Encrypt0.createEncrypt0AAD(encoder.encode(wProtectedHeaders.esMap), externalAAD);\n        const { ciphertext, tag } = await encrypt(alg, content, key, iv, aad);\n        const r = concat(ciphertext, tag);\n        return new Encrypt0(wProtectedHeaders.esMap, wUnprotectedHeaders.esMap, r);\n    }\n}\nEncrypt0.tag = 16;\naddExtension({\n    Class: Encrypt0,\n    tag: Encrypt0.tag,\n    encode(instance, encodeFn) {\n        return encodeFn(instance.getContentForEncoding());\n    },\n    decode: (data) => {\n        return new Encrypt0(...data);\n    }\n});\n","export var KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"OKP\"] = 1] = \"OKP\";\n    KeyType[KeyType[\"EC\"] = 2] = \"EC\";\n    KeyType[KeyType[\"OCT\"] = 4] = \"OCT\";\n    KeyType[KeyType[\"Reserved\"] = 0] = \"Reserved\";\n})(KeyType || (KeyType = {}));\nexport var JWKKeyType;\n(function (JWKKeyType) {\n    JWKKeyType[JWKKeyType[\"OKP\"] = 1] = \"OKP\";\n    JWKKeyType[JWKKeyType[\"EC\"] = 2] = \"EC\";\n    JWKKeyType[JWKKeyType[\"oct\"] = 4] = \"oct\";\n})(JWKKeyType || (JWKKeyType = {}));\n","export var Curve;\n(function (Curve) {\n    Curve[Curve[\"P-256\"] = 1] = \"P-256\";\n    Curve[Curve[\"P-384\"] = 2] = \"P-384\";\n    Curve[Curve[\"P-521\"] = 3] = \"P-521\";\n    Curve[Curve[\"X25519\"] = 4] = \"X25519\";\n    Curve[Curve[\"X448\"] = 5] = \"X448\";\n    Curve[Curve[\"Ed25519\"] = 6] = \"Ed25519\";\n    Curve[Curve[\"Ed448\"] = 7] = \"Ed448\";\n})(Curve || (Curve = {}));\n","export const reverseMap = (map) => new Map(Array.from(map).map(([k, v]) => [v, k]));\n","import { reverseMap } from \"../util/maps.js\";\nexport var COSEKeyParam;\n(function (COSEKeyParam) {\n    COSEKeyParam[COSEKeyParam[\"KeyType\"] = 1] = \"KeyType\";\n    COSEKeyParam[COSEKeyParam[\"KeyID\"] = 2] = \"KeyID\";\n    COSEKeyParam[COSEKeyParam[\"Algorithm\"] = 3] = \"Algorithm\";\n    COSEKeyParam[COSEKeyParam[\"KeyOps\"] = 4] = \"KeyOps\";\n    COSEKeyParam[COSEKeyParam[\"Curve\"] = -1] = \"Curve\";\n    COSEKeyParam[COSEKeyParam[\"BaseIV\"] = 5] = \"BaseIV\";\n    COSEKeyParam[COSEKeyParam[\"x\"] = -2] = \"x\";\n    COSEKeyParam[COSEKeyParam[\"y\"] = -3] = \"y\";\n    COSEKeyParam[COSEKeyParam[\"d\"] = -4] = \"d\";\n    COSEKeyParam[COSEKeyParam[\"k\"] = -1] = \"k\";\n})(COSEKeyParam || (COSEKeyParam = {}));\nexport var JWKParam;\n(function (JWKParam) {\n    JWKParam[JWKParam[\"kty\"] = 1] = \"kty\";\n    JWKParam[JWKParam[\"kid\"] = 2] = \"kid\";\n    JWKParam[JWKParam[\"alg\"] = 3] = \"alg\";\n    JWKParam[JWKParam[\"key_ops\"] = 4] = \"key_ops\";\n    JWKParam[JWKParam[\"base_iv\"] = 5] = \"base_iv\";\n    JWKParam[JWKParam[\"crv\"] = -1] = \"crv\";\n    JWKParam[JWKParam[\"x\"] = -2] = \"x\";\n    JWKParam[JWKParam[\"y\"] = -3] = \"y\";\n    JWKParam[JWKParam[\"d\"] = -4] = \"d\";\n    JWKParam[JWKParam[\"k\"] = -1] = \"k\";\n})(JWKParam || (JWKParam = {}));\nexport const KTYSpecificJWKParams = {\n    'EC': new Map([\n        [-1, 'crv'],\n        [-2, 'x'],\n        [-3, 'y'],\n        [-4, 'd'],\n    ]),\n    'OKP': new Map([\n        [-1, 'crv'],\n        [-2, 'x'],\n        [-3, 'y'],\n        [-4, 'd'],\n    ]),\n    'oct': new Map([\n        [-1, 'k'],\n    ]),\n};\nexport const KTYSpecificJWKParamsRev = Object.fromEntries(Object\n    .entries(KTYSpecificJWKParams)\n    .map(([k, v]) => [k, reverseMap(v)]));\n","export var KeyOps;\n(function (KeyOps) {\n    KeyOps[KeyOps[\"Sign\"] = 1] = \"Sign\";\n    KeyOps[KeyOps[\"Verify\"] = 2] = \"Verify\";\n    KeyOps[KeyOps[\"Encrypt\"] = 3] = \"Encrypt\";\n    KeyOps[KeyOps[\"Decrypt\"] = 4] = \"Decrypt\";\n    KeyOps[KeyOps[\"WrapKey\"] = 5] = \"WrapKey\";\n    KeyOps[KeyOps[\"UnwrapKey\"] = 6] = \"UnwrapKey\";\n    KeyOps[KeyOps[\"DeriveKey\"] = 7] = \"DeriveKey\";\n    KeyOps[KeyOps[\"DeriveBits\"] = 8] = \"DeriveBits\";\n    KeyOps[KeyOps[\"MACCreate\"] = 9] = \"MACCreate\";\n    KeyOps[KeyOps[\"MACVerify\"] = 10] = \"MACVerify\";\n})(KeyOps || (KeyOps = {}));\nexport const JWKKeyOps = new Map([\n    [KeyOps.Sign, 'sign'],\n    [KeyOps.Verify, 'verify'],\n    [KeyOps.Encrypt, 'encrypt'],\n    [KeyOps.Decrypt, 'decrypt'],\n    [KeyOps.WrapKey, 'wrapKey'],\n    [KeyOps.UnwrapKey, 'unwrapKey'],\n    [KeyOps.DeriveKey, 'deriveKey'],\n    [KeyOps.DeriveBits, 'deriveBits'],\n    [KeyOps.MACCreate, 'sign'],\n    [KeyOps.MACVerify, 'verify']\n]);\nexport const JWKKeyOpsToCOSE = new Map([\n    ['sign', [KeyOps.Sign, KeyOps.MACCreate]],\n    ['verify', [KeyOps.Verify, KeyOps.MACVerify]],\n    ['encrypt', [KeyOps.Encrypt]],\n    ['decrypt', [KeyOps.Decrypt]],\n    ['wrapKey', [KeyOps.WrapKey]],\n    ['unwrapKey', [KeyOps.UnwrapKey]],\n    ['deriveKey', [KeyOps.DeriveKey]],\n    ['deriveBits', [KeyOps.DeriveBits]],\n]);\n","import { JWKKeyType } from \"./kty.js\";\nimport { encoder } from '../cbor.js';\nimport { Curve } from \"./curve.js\";\nimport { TypedMap } from \"@jfromaniello/typedmap\";\nimport { Algorithms } from \"../headers.js\";\nimport { generateKeyPair, importJWK, exportJWK } from \"jose\";\nimport { COSEKeyParam, KTYSpecificJWKParamsRev, JWKParam, KTYSpecificJWKParams } from \"./params.js\";\nimport { JWKKeyOps, JWKKeyOpsToCOSE } from './key_ops.js';\nimport { decodeBase64URL, encodeBase64URL } from \"#runtime/base64.js\";\nconst toArray = (v) => Array.isArray(v) ? v : [v];\nexport const JWKFromCOSEValue = new Map([\n    ['kty', (value) => JWKKeyType[value]],\n    ['crv', (value) => Curve[value]],\n    ['alg', (value) => Algorithms[value]],\n    ['kid', (v) => typeof v === 'string' ? v : encodeBase64URL(v)],\n    ['key_ops', (v) => toArray(v).map((value) => JWKKeyOps.get(value))],\n    ...([\n        'x',\n        'y',\n        'd',\n        'k',\n    ].map((param) => [param, (v) => encodeBase64URL(v)]))\n]);\nexport const JWKToCOSEValue = new Map([\n    ['kty', (value) => JWKKeyType[value]],\n    ['crv', (value) => Curve[value]],\n    ['alg', (value) => Algorithms[value]],\n    ['kid', (v) => v],\n    ['key_ops', (v) => toArray(v).map((value) => JWKKeyOpsToCOSE.get(value)).flat()],\n    ...([\n        'x',\n        'y',\n        'd',\n        'k',\n    ].map((label) => [label, (v) => decodeBase64URL(v)]))\n]);\nexport class COSEKey extends TypedMap {\n    static import(data) {\n        if (data instanceof Uint8Array) {\n            return new COSEKey(encoder.decode(data));\n        }\n        else {\n            return new COSEKey(data);\n        }\n    }\n    static fromJWK(jwk) {\n        var _a;\n        const coseKey = new COSEKey();\n        const kty = jwk.kty;\n        for (const [key, value] of Object.entries(jwk)) {\n            const jwkKey = ((_a = KTYSpecificJWKParamsRev[kty]) === null || _a === void 0 ? void 0 : _a.get(key)) ||\n                JWKParam[key];\n            const formatter = JWKToCOSEValue.get(key);\n            if (jwkKey && formatter) {\n                coseKey.set(jwkKey, formatter(value));\n            }\n        }\n        return coseKey;\n    }\n    static async generate(alg, options = {}) {\n        const { privateKey, publicKey } = await generateKeyPair(Algorithms[alg], {\n            ...options !== null && options !== void 0 ? options : {},\n            extractable: true\n        });\n        return {\n            privateKey: COSEKey.fromJWK(await exportJWK(privateKey)),\n            publicKey: COSEKey.fromJWK(await exportJWK(publicKey)),\n        };\n    }\n    toJWK() {\n        var _a, _b;\n        const result = {};\n        const kty = JWKKeyType[this.get(COSEKeyParam.KeyType)];\n        for (const [key, value] of this) {\n            const jwkKey = (_b = (_a = KTYSpecificJWKParams[kty]) === null || _a === void 0 ? void 0 : _a.get(key)) !== null && _b !== void 0 ? _b : JWKParam[key];\n            const parser = JWKFromCOSEValue.get(jwkKey);\n            if (parser && jwkKey) {\n                const parsed = parser(value);\n                result[jwkKey] = parsed;\n            }\n        }\n        return result;\n    }\n    toKeyLike() {\n        return importJWK(this.toJWK());\n    }\n    encode() {\n        return encoder.encode(this.esMap);\n    }\n}\n","import { addExtension, encoder } from '../cbor.js';\nimport { COSEBase } from './COSEBase.js';\nimport * as errors from \"../util/errors.js\";\nimport validateAlgorithms from \"../lib/validate_algorithms.js\";\nimport { EncryptProtectedHeaders, EncryptionAlgorithmNames, Headers, UnprotectedHeaders } from '../headers.js';\nimport { decode } from \"./decode.js\";\nimport decrypt from '#runtime/decrypt.js';\nimport { COSEKeyParam } from '../key/index.js';\nimport { COSEKey } from \"../key/COSEKey.js\";\nimport { concat } from '../lib/buffer_utils.js';\nimport generateIv from '../lib/iv.js';\nimport encrypt from '#runtime/encrypt.js';\nexport class Encrypt extends COSEBase {\n    constructor(protectedHeaders, unprotectedHeaders, ciphertext, recipients) {\n        super(protectedHeaders, unprotectedHeaders);\n        this.ciphertext = ciphertext;\n        this.recipients = recipients;\n    }\n    static createAAD(protectedHeaders, externalAAD) {\n        return encoder.encode([\n            'Encrypt',\n            protectedHeaders,\n            externalAAD\n        ]);\n    }\n    getContentForEncoding() {\n        const mapRecipient = (r) => {\n            var _a;\n            const result = [\n                r.protectedHeaders,\n                r.unprotectedHeaders,\n                (_a = r.ciphertext) !== null && _a !== void 0 ? _a : new Uint8Array(),\n            ];\n            if (r.recipients && Array.isArray(r.recipients)) {\n                result.push(r.recipients.map(mapRecipient));\n            }\n            return result;\n        };\n        return [\n            this.encodedProtectedHeaders,\n            this.unprotectedHeaders,\n            this.ciphertext,\n            this.recipients.map(mapRecipient),\n        ];\n    }\n    static decode(cose) {\n        return decode(cose, Encrypt);\n    }\n    async decrypt(key, options) {\n        var _a, _b, _c;\n        if (this.recipients.length > 1 || this.recipients.some(r => r.unprotectedHeaders.get(Headers.Algorithm) !== -6)) {\n            throw new Error('Multiple recipients or recipient with non-direct algorithm not supported');\n        }\n        const ciphertextWithTag = (_a = options === null || options === void 0 ? void 0 : options.detachedPayload) !== null && _a !== void 0 ? _a : this.ciphertext;\n        const aad = Encrypt.createAAD((_b = this.encodedProtectedHeaders) !== null && _b !== void 0 ? _b : new Uint8Array(), (_c = options === null || options === void 0 ? void 0 : options.externalAAD) !== null && _c !== void 0 ? _c : new Uint8Array());\n        if (!this.alg || !this.algName || !EncryptionAlgorithmNames.has(this.alg)) {\n            throw new errors.COSEInvalid(`Unsupported encryption algorithm ${this.alg}`);\n        }\n        const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n        if (algorithms && !algorithms.has(this.alg)) {\n            throw new errors.COSEAlgNotAllowed(`[${Headers.Algorithm}] (algorithm) Header Parameter not allowed`);\n        }\n        let iv;\n        if (this.unprotectedHeaders.has(Headers.IV) && this.unprotectedHeaders.has(Headers.PartialIV)) {\n            throw new errors.COSEInvalid('IV and Partial IV must not both be present in the COSE message.');\n        }\n        else if (this.unprotectedHeaders.has(Headers.PartialIV)) {\n            if (!(key instanceof COSEKey) || !key.has(COSEKeyParam.BaseIV)) {\n                throw new errors.COSEInvalid('Key must be a COSEKey instance with Base IV to use Partial IV');\n            }\n            iv = concat(key.get(COSEKeyParam.BaseIV), this.unprotectedHeaders.get(Headers.PartialIV));\n        }\n        else if (this.unprotectedHeaders.has(Headers.IV)) {\n            iv = this.unprotectedHeaders.get(Headers.IV);\n        }\n        else {\n            throw new errors.COSEInvalid('IV or Partial IV must be present in the COSE message.');\n        }\n        const tag = ciphertextWithTag.slice(-16);\n        const ciphertext = ciphertextWithTag.slice(0, -16);\n        const decryptKey = key instanceof COSEKey ? (await key.toKeyLike()) : key;\n        return decrypt(this.algName, decryptKey, ciphertext, iv, tag, aad);\n    }\n    get alg() {\n        return this.protectedHeaders.get(Headers.Algorithm) ||\n            this.unprotectedHeaders.get(Headers.Algorithm);\n    }\n    get algName() {\n        return this.alg ? EncryptionAlgorithmNames.get(this.alg) : undefined;\n    }\n    hasSupportedAlg() {\n        return !!this.algName;\n    }\n    static async encrypt(protectedHeaders, unprotectedHeaders, content, key, externalAAD = new Uint8Array(), recipients) {\n        if (recipients.length > 1 || recipients.some(r => r.unprotectedHeaders.get(Headers.Algorithm) !== -6)) {\n            throw new Error('Multiple recipients or recipient with non-direct algorithm not supported');\n        }\n        const wProtectedHeaders = EncryptProtectedHeaders.wrap(protectedHeaders);\n        const alg = EncryptionAlgorithmNames.get(wProtectedHeaders.get(Headers.Algorithm));\n        if (!alg) {\n            throw new Error(`The protected header [${Headers.Algorithm}] (Algorithm) must be valid.`);\n        }\n        const wUnprotectedHeaders = UnprotectedHeaders.wrap([...(unprotectedHeaders || [])]);\n        let iv = wUnprotectedHeaders.get(Headers.IV);\n        if (!iv) {\n            const partialIV = wUnprotectedHeaders.get(Headers.PartialIV);\n            if (partialIV) {\n                if (!(key instanceof COSEKey) || !key.has(COSEKeyParam.BaseIV)) {\n                    throw new errors.COSEInvalid('Key must be a COSEKey instance with Base IV to use Partial IV');\n                }\n                iv = concat(key.get(COSEKeyParam.BaseIV), partialIV);\n            }\n            else {\n                iv = generateIv(alg);\n                wUnprotectedHeaders.set(Headers.IV, iv);\n            }\n        }\n        const aad = Encrypt.createAAD(encoder.encode(wProtectedHeaders.esMap), externalAAD);\n        const encryptKey = key instanceof COSEKey ? (await key.toKeyLike()) : key;\n        const { ciphertext, tag } = await encrypt(alg, content, encryptKey, iv, aad);\n        const r = concat(ciphertext, tag);\n        return new Encrypt(wProtectedHeaders.esMap, wUnprotectedHeaders.esMap, r, recipients);\n    }\n}\nEncrypt.tag = 96;\nexport class Recipient extends COSEBase {\n    constructor(protectedHeaders, unprotectedHeaders, ciphertext, recipients) {\n        super(protectedHeaders, unprotectedHeaders);\n        this.ciphertext = ciphertext;\n        this.recipients = recipients;\n    }\n    static create(protectedHeaders, unprotectedHeaders) {\n        const wProtectedHeaders = EncryptProtectedHeaders.wrap(protectedHeaders);\n        const wUnprotectedHeaders = UnprotectedHeaders.wrap(unprotectedHeaders);\n        return new Recipient(wProtectedHeaders.esMap, wUnprotectedHeaders.esMap);\n    }\n    get alg() {\n        return this.protectedHeaders.get(Headers.Algorithm) ||\n            this.unprotectedHeaders.get(Headers.Algorithm);\n    }\n    get algName() {\n        return this.alg && this.alg !== -6 ? EncryptionAlgorithmNames.get(this.alg) : undefined;\n    }\n    hasSupportedAlg() {\n        return !!this.algName;\n    }\n}\naddExtension({\n    Class: Encrypt,\n    tag: Encrypt.tag,\n    encode(instance, encodeFn) {\n        return encodeFn(instance.getContentForEncoding());\n    },\n    decode: (data) => {\n        const recipients = data[3].map(rec => new Recipient(rec[0], rec[1], rec[2], rec[3]));\n        return new Encrypt(data[0], data[1], data[2], recipients);\n    }\n});\n"],"names":["_assert","number","n","bool","b","bytes","lengths","hash","exists","instance","checkFinished","output","out","min","assert","cryptoBrowser","exports","crypto_1","require$$0","u8","arr","u32","createView","rotr","word","shift","hexes","v","i","bytesToHex","uint8a","hex","hexToBytes","array","j","hexByte","byte","nextTick","asyncLoop","iters","tick","cb","ts","diff","utf8ToBytes","str","toBytes","data","concatBytes","arrays","a","length","result","pad","Hash","isPlainObject","obj","checkOpts","defaults","opts","wrapConstructor","hashConstructor","hashC","message","tmp","wrapConstructorWithOpts","hashCons","msg","randomBytes","bytesLength","_assert_js_1","utils_js_1","require$$1","HMAC","_key","key","blockLen","buf","to","oHash","iHash","finished","destroyed","outputLen","hmac","pbkdf2_1","hmac_js_1","require$$2","pbkdf2Init","_password","_salt","_opts","c","dkLen","asyncTick","password","salt","DK","PRF","PRFSalt","pbkdf2Output","prfW","u","pbkdf2","view","ti","pos","Ti","ui","pbkdf2Async","_sha2","setBigUint64","byteOffset","value","isLE","_32n","_u32_max","wh","wl","h","l","SHA2","padOffset","buffer","len","take","dataView","oview","outLen","state","res","sha256","_sha2_js_1","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","offset","W15","W2","s0","s1","H","sigma1","T1","T2","SHA224","U32_MASK64","fromBig","le","split","lst","Ah","Al","toBig","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","sha512","_u64_js_1","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","assertNumber","isBytes","chain","args","id","wrap","encode","x","decode","alphabet","digits","input","letter","index","join","separator","from","padding","bits","chr","end","normalize","fn","convertRadix","d","carry","done","digit","digitBase","rounded","gcd","radix2carry","convertRadix2","mask","radix","num","radix2","revPadding","unsafeWrapper","checksum","payload","newChecksum","oldChecksum","genBase58","abc","XMR_BLOCK_LEN","block","slice","createBase58check","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","actualLength","lowered","sum","sepIndex","decodeUnsafe","decodeToBytes","encodeFromBytes","CODERS","coderTypeError","bytesToString","type","stringToBytes","bip39","_assert_1","sha256_1","sha512_1","require$$3","utils_1","require$$4","base_1","require$$5","isJapanese","wordlist","nfkd","norm","assertEntropy","entropy","generateMnemonic","strength","entropyToMnemonic","calcChecksum","bitsLeft","getCoder","mnemonicToEntropy","mnemonic","validateMnemonic","passphrase","mnemonicToSeed","mnemonicToSeedSync","english","MessageBroker","windowId","iframeType","__publicField","event","error","pendingRequest","handlers","handler","respond","responseData","messageId","respondingTo","response","toIframe","promise","resolve","reject","timeout","messageType","request","getWindowIdFromUrl","fragment","decoder","src","srcEnd","position","LEGACY_RECORD_INLINE_ID","RECORD_DEFINITIONS_ID","RECORD_INLINE_ID","BUNDLED_STRINGS_ID","PACKED_REFERENCE_TAG_ID","STOP_CODE","maxArraySize","maxMapSize","currentDecoder","currentStructures","srcString","srcStringStart","srcStringEnd","bundledStrings","referenceMap","currentExtensions","currentExtensionRanges","packedValues","restoreMapsAsObject","defaultOptions","sequentialMode","inlineObjectReadThreshold","Decoder","options","k","rec","map","safeKey","source","r","saveState","clearSource","checkedRead","forEach","values","lastPosition","size","defaultDecoder","read","token","majorType","getFloat16","multiplier","mult10","object","readBin","string","shortStringInJS","longStringInJS","readFixedString","structure","createStructureReader","readJustLength","recordDefinition","readBundleExt","loadShared","extension","Tag","packedValue","getPackedValues","validName","readObject","compiledReader","readStringJS","units","byte1","byte2","byte3","byte4","unit","fromCharCode","start","e","f","g","m","o","f32Array","u8Array","byte0","exponent","abs","tag","dateString","epochSec","fraction","existingStructure","glbl","packedTable","newPackedValues","startingPosition","target","refEntry","targetProperties","combine","SHARED_DATA_TAG_ID","isLittleEndianMachine","typedArrays","typedArrayTags","registerTypedArray","TypedArray","dvMethod","bytesPerElement","littleEndian","sizeShift","dv","elements","ta","method","bundlePosition","bundleLength","dataPosition","sharedData","updatedStructures","callback","savedSrcEnd","savedPosition","savedSrcStringStart","savedSrcStringEnd","savedSrcString","savedReferenceMap","savedBundledStrings","savedSrc","savedStructures","savedDecoder","savedSequentialMode","addExtension","textEncoder","extensions","extensionClasses","Buffer","hasNodeBuffer","ByteArrayAllocate","ByteArray","MAX_STRUCTURES","MAX_BUFFER_SIZE","throwOnIterable","targetView","safeEnd","MAX_BUNDLE_SIZE","hasNonLatin","RECORD_SYMBOL","Encoder","sharedStructures","hasSharedUpdate","structures","encodeUtf8","maxBytes","encoder","hasSharedStructures","maxSharedStructures","isSequential","samplingPackedValues","packedObjectMap","sharedValues","sharedPackedObjectMap","recordIdsToRemove","transitionsCount","serializationsSinceTransitionRebuild","encodeOptions","REUSE_BUFFER_MODE","sharedStructuresLength","keys","nextTransition","transition","findRepetitiveStrings","writeArrayHeader","valuesArray","THROW_ON_ITERABLE","writeBundles","makeRoom","serialized","insertIds","returnBuffer","RESET_BUFFER_MODE","threshold","status","packedPosition","strLength","extStart","twoByte","headerSize","c1","c2","strPosition","useFloat32","xShifted","referee","idsToInsert","constructor","writeObject","entryValue","extensionClass","entry","isBlob","json","writeBuffer","vals","objectOffset","skipValues","newTransitions","parentRecordId","recordId","newSize","newBuffer","chunkThreshold","continuedChunkThreshold","startEncoding","encodeObjectAsIterable","encodeObjectAsAsyncIterable","iterateProperties","finalIterable","useRecords","writeEntityLength","tryEncode","restartEncoding","restart","encodeIterable","encodedValue","reader","next","asyncValue","lastVersion","structuresCopy","SharedData","saveResults","existingShared","majorValue","version","BlobConstructor","packedStatus","includeKeys","date","seconds","set","regex","arrayBuffer","typedArray","typedArrayEncoder","definitions","nextId","distanceToMove","lastEnd","writeStrings","decodeAddExtension","defaultEncoder","ed25519_CURVE","P","N","Gx","Gy","_a","_d","L","L2","err","isBig","isStr","abytes","u8n","u8fr","padh","_ch","ch","hl","al","ai","hi","n1","n2","toU8","cr","subtle","arrs","big","arange","max","M","modN","invert","md","q","callHash","name","etc","apoint","p","Point","B256","_Point","ex","ey","ez","et","zip215","normed","lastByte","y","bytesToNumLE","y2","isValid","uvRatio","isXOdd","isLastByteOdd","X","Y","Z","T","X2","Y2","Z2","Z4","aX2","left","right","XY","ZT","other","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","I","x1y1","X3","Y3","T3","Z3","safe","wNAF","z","iz","numTo32bLE","pow2","power","pow_2_252_3","b2","b4","b5","b10","b20","b40","b80","b160","b240","b250","RM1","v3","v7","pow","vx2","root1","root2","useRoot1","useRoot2","noRoot","modL_LE","sha512a","sha512s","hash2extK","hashed","head","scalar","point","pointBytes","getExtendedPublicKeyAsync","priv","getExtendedPublicKey","getPublicKeyAsync","hashFinishA","_sign","rBytes","R","S","signAsync","privKey","veriOpts","_verify","sig","pub","SB","hashable","verifyAsync","messages","utils","w","W","scalarBits","pwindows","pwindowSize","precompute","points","Gpows","ctneg","cnd","comp","pow_2_w","maxNum","shiftBy","wbits","off","offF","offP","isEven","isNeg","defaultErrorConfig","createNeverThrowError","config","maybeStack","__awaiter","thisArg","_arguments","generator","adopt","fulfilled","step","rejected","__values","__await","__asyncGenerator","verb","awaitReturn","resume","settle","fulfill","__asyncDelegator","__asyncValues","ResultAsync","newPromise","Ok","errorFn","Err","asyncResultList","combineResultAsyncList","combineResultAsyncListWithAllErrors","newRes","newValue","ok","_err","t","successCallback","failureCallback","errAsync","combineResultList","resultList","acc","list","combineResultListWithAllErrors","Result","fromThrowable","combineWithAllErrors","_f","_value","_v","_","_ok","self","ed25519Header","coseEncoder","decodeAndVerifyCoseSign1","coseSign1","verifyingKey","externalAad","coseElements","protectedHeaders","unprotectedHeaders","signature","toBeSigned","decodedPayload","CoseSign1Decoder","encodeSign1","signingKey","payloadCbor","CoseSign1Encoder","aexists","aoutput","clean","rotl","hasHexBuiltin","asciis","asciiToBase16","char","createHasher","HashMD","SHA256_IV","SHA384_IV","SHA512_IV","_l","K512","u64.split","u64.rotrSH","u64.shrSH","u64.rotrSL","u64.shrSL","u64.rotrBH","u64.rotrBL","u64.add4L","u64.add4H","u64.add5L","u64.add5H","u64.add","u64.add3L","u64.add3H","sha384","Reflect","factory","root","global","sloppyModeThis","exporter","makeExporter","previous","functionThis","indirectEvalThis","hasOwn","supportsSymbol","toPrimitiveSymbol","iteratorSymbol","supportsCreate","supportsProto","downLevel","HashMap","MakeDictionary","functionPrototype","_Map","CreateMapPolyfill","_Set","CreateSetPolyfill","_WeakMap","CreateWeakMapPolyfill","registrySymbol","metadataRegistry","GetOrCreateMetadataRegistry","metadataProvider","CreateMetadataProvider","decorate","decorators","propertyKey","attributes","IsUndefined","IsArray","IsConstructor","DecorateConstructor","IsObject","IsNull","ToPropertyKey","DecorateProperty","metadata","metadataKey","metadataValue","decorator","IsPropertyKey","OrdinaryDefineOwnMetadata","defineMetadata","hasMetadata","OrdinaryHasMetadata","hasOwnMetadata","OrdinaryHasOwnMetadata","getMetadata","OrdinaryGetMetadata","getOwnMetadata","OrdinaryGetOwnMetadata","getMetadataKeys","OrdinaryMetadataKeys","getOwnMetadataKeys","OrdinaryOwnMetadataKeys","deleteMetadata","provider","GetMetadataProvider","decorated","descriptor","MetadataKey","O","parent","OrdinaryGetPrototypeOf","ToBoolean","MetadataValue","ownKeys","parentKeys","_i","ownKeys_1","hasKey","parentKeys_1","Type","IsSymbol","ToPrimitive","PreferredType","hint","exoticToPrim","GetMethod","OrdinaryToPrimitive","valueOf","toString_2","toString_1","IsCallable","argument","ToString","SameValueZero","func","GetIterator","iterator","IteratorValue","iterResult","IteratorStep","IteratorClose","proto","prototype","prototypeProto","CreateMetadataRegistry","fallback","CreateFallbackProvider","first","second","rest","targetProviderMap","registry","registerProvider","getProvider","setProvider","getProviderNoCache","providerMap","hasProvider","existingProvider","targetMetadata","OrdinaryDeleteMetadata","GetOrCreateMetadataMap","Create","createdTargetMetadata","metadataMap","keysObj","nextValue","reflect","metadataOwner","metadataPropertySet","registeredProvider","cacheSentinel","arraySentinel","MapIterator","selector","Map","getKey","getValue","getEntry","insert","Set","UUID_SIZE","rootKey","CreateUniqueKey","WeakMap","table","GetOrCreateWeakMapTable","CreateUUID","create","FillRandomBytes","GenRandomBytes","ARRAY_BUFFER_NAME","BufferSourceConverter","aView","bView","buffers","STRING_TYPE","HEX_REGEX","BASE64_REGEX","BASE64URL_REGEX","Utf8Converter","text","uintArray","encodedString","Utf16Converter","code","Convert","enc","binary","base64","formatted","base64url","stringLength","resultView","hexString","padCount","totalByteLength","item","prev","cur","currentPos","item2","isEqual","bytes1","bytes2","b1","getParametersValue","parameters","defaultValue","bufferToHexCodes","inputBuffer","inputOffset","inputLength","insertSpace","utilFromBase","inputBase","utilToBase","base","reserved","internalReserved","internalValue","biggest","retBuf","retView","basis","utilConcatBuf","outputLength","prevLength","utilConcatView","views","utilDecodeTC","condition1","condition2","bigIntBuffer","bigIntView","bigInt","smallIntBuffer","smallIntView","utilEncodeTC","modValue","smallInt","tempBuf","tempView","isEqualBuffer","inputBuffer1","inputBuffer2","view1","view2","padNumber","inputNumber","fullLength","dif","base64Template","base64UrlTemplate","toBase64","useUrlTemplate","skipPadding","skipLeadingZeros","flag1","flag2","template","nonZeroPosition","chr1","chr2","chr3","enc1","enc2","enc3","enc4","fromBase64","cutTailZeros","indexOf","toSearch","test","incoming","nonZeroStart","arrayBufferToString","resultString","element","stringToArrayBuffer","resultBuffer","log2","nearestPowerOf2","floor","round","clearProps","propsArray","prop","assertBigInt","concat","checkBufferParams","baseBlock","ViewWriter","powers2","digitsString","NAME","VALUE_HEX_VIEW","IS_HEX_ONLY","ID_BLOCK","TAG_CLASS","TAG_NUMBER","IS_CONSTRUCTED","FROM_BER","TO_BER","LOCAL","EMPTY_STRING","EMPTY_BUFFER","EMPTY_VIEW","END_OF_CONTENT_NAME","OCTET_STRING_NAME","BIT_STRING_NAME","HexBlock","BaseClass","_b","params","pvtsutils.BufferSourceConverter","endLength","sizeOnly","pvtsutils.Convert","LocalBaseBlock","blockLength","warnings","valueBeforeDecode","ValueBlock","_inputBuffer","_inputOffset","_inputLength","_sizeOnly","_writer","LocalIdentificationBlock","idBlock","_c","firstOctet","encodedBuf","pvutils.utilToBase","encodedView","curView","inputView","intBuffer","tagNumberMask","count","intTagNumberBuffer","tagNumberBufferMaxLength","tempBufferView","pvutils.utilFromBase","LocalLengthBlock","lenBlock","lenOffset","lengthBufferView","typeStore","BaseBlock","optional","primitiveSchema","valueBlockType","resultOffset","writer","prepareIndefiniteForm","idBlockBuf","valueBlockBuf","lenBlockBuf","thisRaw","otherRaw","pvutils.isEqualBuffer","BaseStringBlock","stringValueBlockType","LocalPrimitiveValueBlock","isHexOnly","_a$w","Primitive","localChangeType","inputObject","newType","newObject","localFromBER","incomingOffset","returnObject","newASN1Type","fromBER","checkLen","indefiniteLength","LocalConstructedValueBlock","isIndefiniteForm","currentOffset","_a$v","Constructed","blockName","LocalEndOfContentValueBlock","_a$u","EndOfContent","_a$t","Null","LocalBooleanValueBlock","octet","pvutils.utilDecodeTC","_a$s","Boolean","LocalOctetStringValueBlock","isConstructed","currentBlockName","_a$r","asn","content","OctetString","LocalBitStringValueBlock","unusedBits","valueBlock","_a$q","valueHex","bitsStr","BitString","_a$p","viewAdd","firstView","secondView","firstViewCopy","firstViewCopyLength","secondViewCopy","secondViewCopyLength","counter","pvutils.utilConcatView","power2","viewSub","LocalIntegerValueBlock","pvutils.utilEncodeTC","expectedLength","updatedView","firstBit","bitNumber","currentByte","asn1View","flag","byteNumber","_a$o","Integer","bigIntValue","secondInt","integer","_a$n","Enumerated","LocalSidValueBlock","valueDec","isFirstSid","sidValue","LocalObjectIdentifierValueBlock","sidBlock","retBuffers","valueBuf","pos1","pos2","sid","plus","parsedSID","sidStr","_a$m","ObjectIdentifier","LocalRelativeSidValueBlock","LocalRelativeObjectIdentifierValueBlock","_a$l","RelativeObjectIdentifier","_a$k","Sequence","_a$j","LocalStringValueBlock","LocalSimpleStringValueBlock","LocalSimpleStringBlock","inputString","strLen","LocalUtf8StringValueBlock","_a$i","Utf8String","LocalBmpStringValueBlock","_a$h","BmpString","LocalUniversalStringValueBlock","copyBuffer","valueView","valueHexView","codeBuf","codeView","_a$g","UniversalString","_a$f","NumericString","_a$e","PrintableString","_a$d","TeletexString","_a$c","VideotexString","_a$b","IA5String","_a$a","GraphicString","_a$9","VisibleString","_a$8","GeneralString","_a$7","CharacterString","_a$6","UTCTime","valueDate","inputDate","parserArray","year","outputArray","pvutils.padNumber","_a$5","GeneralizedTime","utcDate","isUTC","timeString","dateTimeString","fractionPart","parser","hourDifference","minuteDifference","differencePosition","differenceString","fractionPointPosition","fractionPartCheck","fractionResult","tempDate","_a$4","DATE","_a$3","TimeOfDay","_a$2","DateTime","_a$1","Duration","TIME","Any","Choice","Repeated","local","RawData","compareSchema","inputData","inputSchema","_result","encodedId","schemaView","admission","maxLength","_optional","arrayRoot","asn1","verifySchema","AsnTypeTypes","AsnPropTypes","asn1js.BitString","octetSize","octets","param","asn1js.OctetString","AsnAnyConverter","asn1js.Null","schema","asn1js.fromBER","AsnIntegerConverter","asn1js.Integer","AsnEnumeratedConverter","asn1js.Enumerated","AsnIntegerArrayBufferConverter","AsnBitStringConverter","AsnObjectIdentifierConverter","asn1js.ObjectIdentifier","AsnBooleanConverter","asn1js.Boolean","AsnOctetStringConverter","AsnConstructedOctetStringConverter","createStringConverter","Asn1Type","AsnUtf8StringConverter","asn1js.Utf8String","AsnBmpStringConverter","asn1js.BmpString","AsnUniversalStringConverter","asn1js.UniversalString","AsnNumericStringConverter","asn1js.NumericString","AsnPrintableStringConverter","asn1js.PrintableString","AsnTeletexStringConverter","asn1js.TeletexString","AsnVideotexStringConverter","asn1js.VideotexString","AsnIA5StringConverter","asn1js.IA5String","AsnGraphicStringConverter","asn1js.GraphicString","AsnVisibleStringConverter","asn1js.VisibleString","AsnGeneralStringConverter","asn1js.GeneralString","AsnCharacterStringConverter","asn1js.CharacterString","AsnUTCTimeConverter","asn1js.UTCTime","AsnGeneralizedTimeConverter","asn1js.GeneralizedTime","AsnNullConverter","defaultConverter","isConvertible","isTypeOfArray","isArrayEqual","AsnSchemaStorage","checkSchema","parentSchema","useNames","asn1Value","asn1Item","Asn1TypeName","asn1js","asn1js.Any","Container","asn1js.Set","asn1js.Sequence","asn1js.Repeated","asn1js.Constructed","asn1js.Primitive","isRepeated","asn1js.Choice","schemaStorage","AsnType","AsnProp","copyOptions","converters.defaultConverter","AsnSchemaValidationError","AsnParser","asn1Parsed","asn1Schema","targetSchema","asn1ComparedSchema","asn1js.compareSchema","itemType","converter","asn1SchemaValue","schemaItem","schemaItemType","newItem","newItemAsn","AsnSerializer","asn1js.BaseBlock","objProp","asnSchema","items","AsnArray","AsnConvert","__decorate","desc","IpConverter","ip","parts","part","missing","longestZeroStart","longestZeroLength","currentZeroStart","currentZeroLength","before","after","addr","prefixStr","match","uint8","half","addrBytes","maskBytes","prefixLen","RelativeDistinguishedName_1","RDNSequence_1","Name_1","DirectoryString","AttributeValue","AttributeTypeAndValue$1","AttributeTypeAndValue","RelativeDistinguishedName","RDNSequence","Name","AsnIpConverter","OtherName","EDIPartyName","GeneralName","id_pkix","id_pe","id_kp","id_ad","id_ad_ocsp","id_ad_caIssuers","id_ad_timeStamping","id_ad_caRepository","id_ce","AuthorityInfoAccessSyntax_1","id_pe_authorityInfoAccess","AccessDescription$1","AccessDescription","AuthorityInfoAccessSyntax","id_ce_authorityKeyIdentifier","KeyIdentifier","AuthorityKeyIdentifier$1","AuthorityKeyIdentifier","id_ce_basicConstraints","BasicConstraints$1","BasicConstraints","GeneralNames_1","GeneralNames","CertificateIssuer_1","CertificateIssuer","CertificatePolicies_1","id_ce_certificatePolicies","DisplayText","NoticeReference","UserNotice","Qualifier","PolicyQualifierInfo$1","PolicyQualifierInfo","PolicyInformation$1","PolicyInformation","CertificatePolicies","CRLNumber","BaseCRLNumber","CRLDistributionPoints_1","id_ce_cRLDistributionPoints","ReasonFlags","Reason","flags","DistributionPointName","DistributionPoint$1","DistributionPoint","CRLDistributionPoints","FreshestCRL_1","FreshestCRL","IssuingDistributionPoint$1","IssuingDistributionPoint","CRLReasons","CRLReason","reason","ExtendedKeyUsage_1","id_ce_extKeyUsage","ExtendedKeyUsage","id_kp_serverAuth","id_kp_clientAuth","id_kp_codeSigning","id_kp_emailProtection","id_kp_timeStamping","id_kp_OCSPSigning","InhibitAnyPolicy","InvalidityDate","IssueAlternativeName_1","IssueAlternativeName","id_ce_keyUsage","KeyUsageFlags","KeyUsage","GeneralSubtrees_1","GeneralSubtree$1","GeneralSubtree","GeneralSubtrees","NameConstraints$1","NameConstraints","PolicyConstraints$1","PolicyConstraints","PolicyMappings_1","PolicyMapping$1","PolicyMapping","PolicyMappings","SubjectAlternativeName_1","id_ce_subjectAltName","SubjectAlternativeName","Attribute$3","Attribute","SubjectDirectoryAttributes_1","SubjectDirectoryAttributes","id_ce_subjectKeyIdentifier","SubjectKeyIdentifier","PrivateKeyUsagePeriod$1","PrivateKeyUsagePeriod","EntrustInfoFlags","EntrustInfo","EntrustVersionInfo","SubjectInfoAccessSyntax_1","SubjectInfoAccessSyntax","AlgorithmIdentifier$1","AlgorithmIdentifier","pvtsutils.isEqual","SubjectPublicKeyInfo","Time","time","Validity","Extensions_1","Extension$2","Extension","Extensions","Version","TBSCertificate","Certificate$1","Certificate","RevokedCertificate$1","RevokedCertificate","TBSCertList","CertificateList","IssuerAndSerialNumber$1","IssuerAndSerialNumber","SignerIdentifier","CMSVersion","DigestAlgorithmIdentifier","SignatureAlgorithmIdentifier","KeyEncryptionAlgorithmIdentifier","ContentEncryptionAlgorithmIdentifier","MessageAuthenticationCodeAlgorithm","KeyDerivationAlgorithmIdentifier","Attribute$2","SignerInfos_1","SignerInfo$1","SignerInfo","SignerInfos","SigningTime","CounterSignature","ACClearAttrs","AttrSpec_1","AttrSpec","AAControls","IssuerSerial$1","IssuerSerial","DigestedObjectType","ObjectDigestInfo$1","ObjectDigestInfo","V2Form$1","V2Form","AttCertIssuer","AttCertValidityPeriod$1","AttCertValidityPeriod","Holder$1","Holder","AttCertVersion","AttributeCertificateInfo","AttributeCertificate","ClassListFlags","ClassList","SecurityCategory","Clearance","IetfAttrSyntaxValueChoices","IetfAttrSyntax","Targets_1","TargetCert","Target","Targets","ProxyInfo_1","ProxyInfo","RoleSyntax","SvceAuthInfo","CertificateSet_1","OtherCertificateFormat$1","OtherCertificateFormat","CertificateChoices","CertificateSet","ContentInfo$1","ContentInfo","EncapsulatedContent","EncapsulatedContentInfo$1","EncapsulatedContentInfo","EncryptedContent","EncryptedContentInfo$1","EncryptedContentInfo","OtherKeyAttribute$1","OtherKeyAttribute","RecipientEncryptedKeys_1","RecipientKeyIdentifier$1","RecipientKeyIdentifier","KeyAgreeRecipientIdentifier","RecipientEncryptedKey$1","RecipientEncryptedKey","RecipientEncryptedKeys","OriginatorPublicKey$1","OriginatorPublicKey","OriginatorIdentifierOrKey","KeyAgreeRecipientInfo$1","KeyAgreeRecipientInfo","RecipientIdentifier","KeyTransRecipientInfo$1","KeyTransRecipientInfo","KEKIdentifier$1","KEKIdentifier","KEKRecipientInfo$1","KEKRecipientInfo","PasswordRecipientInfo","OtherRecipientInfo$1","OtherRecipientInfo","RecipientInfo","RecipientInfos_1","RecipientInfos","RevocationInfoChoices_1","OtherRevocationInfoFormat$1","OtherRevocationInfoFormat","RevocationInfoChoice","RevocationInfoChoices","OriginatorInfo$1","OriginatorInfo","UnprotectedAttributes_1","UnprotectedAttributes","EnvelopedData$1","EnvelopedData","id_data","id_signedData","DigestAlgorithmIdentifiers_1","DigestAlgorithmIdentifiers","SignedData$1","SignedData","id_ecPublicKey","id_ecdsaWithSHA1","id_ecdsaWithSHA224","id_ecdsaWithSHA256","id_ecdsaWithSHA384","id_ecdsaWithSHA512","id_secp256r1","id_secp384r1","id_secp521r1","algorithm","ecdsaWithSHA1","oid.id_ecdsaWithSHA1","oid.id_ecdsaWithSHA224","ecdsaWithSHA256","oid.id_ecdsaWithSHA256","ecdsaWithSHA384","oid.id_ecdsaWithSHA384","ecdsaWithSHA512","oid.id_ecdsaWithSHA512","FieldID","ECPoint","Curve","ECPVer","SpecifiedECDomain","ECParameters","ECPrivateKey$1","ECPrivateKey","ECDSASigValue","id_pkcs_1","id_rsaEncryption","id_RSAES_OAEP","id_pSpecified","id_RSASSA_PSS","id_md2WithRSAEncryption","id_md5WithRSAEncryption","id_sha1WithRSAEncryption","id_sha224WithRSAEncryption","id_sha256WithRSAEncryption","id_sha384WithRSAEncryption","id_sha512WithRSAEncryption","id_sha512_224WithRSAEncryption","id_sha512_256WithRSAEncryption","id_sha1","id_sha224","id_sha256","id_sha384","id_sha512","id_sha512_224","id_sha512_256","id_md2","id_md5","id_mgf1","oid.id_md2","oid.id_md5","sha1","oid.id_sha1","oid.id_sha224","oid.id_sha256","oid.id_sha384","oid.id_sha512","oid.id_sha512_224","oid.id_sha512_256","mgf1SHA1","oid.id_mgf1","pSpecifiedEmpty","oid.id_pSpecified","oid.id_rsaEncryption","oid.id_md2WithRSAEncryption","oid.id_md5WithRSAEncryption","oid.id_sha1WithRSAEncryption","oid.id_sha512_224WithRSAEncryption","oid.id_sha512_256WithRSAEncryption","oid.id_sha384WithRSAEncryption","oid.id_sha512WithRSAEncryption","RsaEsOaepParams","RsaSaPssParams","DigestInfo$1","DigestInfo","OtherPrimeInfos_1","OtherPrimeInfo$1","OtherPrimeInfo","OtherPrimeInfos","RSAPrivateKey$1","RSAPrivateKey","RSAPublicKey$1","RSAPublicKey","Lifecycle","Lifecycle$1","extendStatics","__extends","__","__generator","body","op","__read","ar","__spread","INJECTION_TOKEN_METADATA_KEY","getParamInfo","injectionTokens","isClassProvider","isFactoryProvider","DelayedConstructor","createObject","_this","init","delayedObject","install","isNormalToken","isTokenDescriptor","isTransformDescriptor","isConstructorToken","isTokenProvider","isValueProvider","isProvider","RegistryBase","Registry","_super","ResolutionContext","formatDependency","idx","argName","composeErrorMessage","indent","formatErrorCtor","ctor","paramIdx","dep","isDisposable","disposeFun","PreResolutionInterceptors","PostResolutionInterceptors","Interceptors","typeInfo","InternalDependencyContainer","providerOrConstructor","path","tokenProvider","currentToken","registration","useClass","context","isOptional","resolutionType","e_1","remainingInterceptors","interceptor","e_1_1","e_2","e_2_1","isSingleton","isContainerScoped","returnInstance","resolved","registrations","result_1","recursive","e_3","e_3_1","e_4","childContainer","e_4_1","promises","disposable","maybePromise","paramInfo","injectable","PKCS12AttrSet_1","PKCS12Attribute","PKCS12AttrSet","AuthenticatedSafe_1","AuthenticatedSafe","CertBag$1","CertBag","CRLBag$1","CRLBag","EncryptedPrivateKeyInfo$1","EncryptedData","EncryptedPrivateKeyInfo","Attributes_1","PrivateKey","Attributes","PrivateKeyInfo$1","PrivateKeyInfo","KeyBag","PKCS8ShroudedKeyBag","SecretBag$1","SecretBag","MacData$1","MacData","PFX$1","PFX","SafeContents_1","SafeBag$1","SafeBag","SafeContents","ExtensionRequest_1","ExtendedCertificateAttributes_1","SMIMECapabilities_1","id_pkcs9","id_pkcs9_at_challengePassword","id_pkcs9_at_extensionRequest","PKCS9String","x509.DirectoryString","Pkcs7PDU","cms.ContentInfo","UserPKCS12","pfx.PFX","pkcs8.EncryptedPrivateKeyInfo","EmailAddress","UnstructuredName","UnstructuredAddress","DateOfBirth","PlaceOfBirth","Gender","CountryOfCitizenship","CountryOfResidence","Pseudonym","ContentType","x509.Time","SequenceNumber","cms.SignerInfo","ChallengePassword","ExtensionRequest","x509.Extensions","ExtendedCertificateAttributes","cms.Attribute","FriendlyName","SMIMECapability","x509.AlgorithmIdentifier","SMIMECapabilities","CertificationRequestInfo$1","CertificationRequestInfo","CertificationRequest$1","CertificationRequest","diAlgorithm","AlgorithmProvider","container","alg","unknown","diAlgorithmProvider","EcAlgorithm_1","idVersionOne","idBrainpoolP160r1","idBrainpoolP160t1","idBrainpoolP192r1","idBrainpoolP192t1","idBrainpoolP224r1","idBrainpoolP224t1","idBrainpoolP256r1","idBrainpoolP256t1","idBrainpoolP320r1","idBrainpoolP320t1","idBrainpoolP384r1","idBrainpoolP384t1","idBrainpoolP512r1","idBrainpoolP512t1","brainpoolP160r1","brainpoolP160t1","brainpoolP192r1","brainpoolP192t1","brainpoolP224r1","brainpoolP224t1","brainpoolP256r1","brainpoolP256t1","brainpoolP320r1","brainpoolP320t1","brainpoolP384r1","brainpoolP384t1","brainpoolP512r1","brainpoolP512t1","ECDSA","EcAlgorithm","asn1Ecc.ecdsaWithSHA1","asn1Ecc.ecdsaWithSHA256","asn1Ecc.ecdsaWithSHA384","asn1Ecc.ecdsaWithSHA512","asn1Ecc.id_secp256r1","asn1Ecc.id_secp384r1","asn1Ecc.id_secp521r1","asn1Ecc.id_ecPublicKey","asn1Ecc.ECParameters","asn1Ecc.id_ecdsaWithSHA1","asn1Ecc.id_ecdsaWithSHA256","asn1Ecc.id_ecdsaWithSHA384","asn1Ecc.id_ecdsaWithSHA512","VALUE","TextObject","DefaultAlgorithmSerializer","OidSerializer","ecAlg","oid","asn1Rsa.id_sha1","asn1Rsa.id_sha224","asn1Rsa.id_sha256","asn1Rsa.id_sha384","asn1Rsa.id_sha512","asn1Rsa.id_rsaEncryption","asn1Rsa.id_sha1WithRSAEncryption","asn1Rsa.id_sha224WithRSAEncryption","asn1Rsa.id_sha256WithRSAEncryption","asn1Rsa.id_sha384WithRSAEncryption","asn1Rsa.id_sha512WithRSAEncryption","asn1Ecc.id_ecdsaWithSHA224","asn1X509.id_kp_serverAuth","asn1X509.id_kp_clientAuth","asn1X509.id_kp_codeSigning","asn1X509.id_kp_emailProtection","asn1X509.id_kp_timeStamping","asn1X509.id_kp_OCSPSigning","asn1Cms.id_signedData","TextConverter","deep","objValue","keyValue","row","AsnData","format","raw","Extension$1","CryptoProvider","callbackfn","crypto","cryptoProvider","OID_REGEX","isOID","NameIdentifier","names","idOrName","replaceUnknownCharacter","escape","extraNames","Name$1","rdn","jsonItem","attr","matches","level","lastChar","asnRdn","typeId","asnAttr","processedValue","quotedMatches","ERR_GN_CONSTRUCTOR","ERR_GN_STRING_FORMAT","ERR_GUID","GUID_REGEX","id_GUID","id_UPN","DNS","DN","EMAIL","IP","URL","GUID","UPN","REGISTERED_ID","derName","asnName","asn1X509.Name","asn1X509.GeneralName","asn1X509.OtherName","guid","asn1X509.DirectoryString","asn1X509.GeneralNames","nameObj","field","rPaddingTag","rEolChars","rNameTag","rBeginTag","rEndTag","rEolGroup","rHeaderKey","rHeaderValue","rBase64Chars","rBase64","rPem","PemConverter","pem","pattern","pemStruct","headersString","headers","lastHeader","header","rawData","raws","upperCaseType","sliced","rows","PemData","stringRaw","PublicKey","spki","keyUsages","asnSpki","convertSpkiToRsaPkcs1","algProv","rsaPublicKey","modulus","AuthorityKeyIdentifierExtension","critical","asn1X509.AuthorityKeyIdentifier","asn1X509.KeyIdentifier","asn1X509.id_ce_authorityKeyIdentifier","certId","certIdName","aki","BasicConstraintsExtension","ExtendedKeyUsageExtension","asn1X509.ExtendedKeyUsage","asn1X509.id_ce_extKeyUsage","KeyUsagesExtension","SubjectKeyIdentifierExtension","publicKey","asn1X509.SubjectKeyIdentifier","identifier","asn1X509.id_ce_subjectKeyIdentifier","SubjectAlternativeNameExtension","asn1X509.id_ce_subjectAltName","asn1X509.SubjectAlternativeName","namesObj","ExtensionFactory","CertificatePolicyExtension","asnPolicies","asn1X509.CertificatePolicies","policies","asn1X509.PolicyInformation","asn1X509.id_ce_certificatePolicies","CRLDistributionPointsExtension","dps","url","asn1X509.DistributionPoint","asn1X509.DistributionPointName","asn1X509.CRLDistributionPoints","asn1X509.id_ce_cRLDistributionPoints","crlExt","dp","dpObj","issuer","AuthorityInfoAccessExtension","asn1X509.AuthorityInfoAccessSyntax","asn1X509.id_pe_authorityInfoAccess","addAccessDescriptions","asn1X509.id_ad_ocsp","asn1X509.id_ad_caIssuers","asn1X509.id_ad_timeStamping","asn1X509.id_ad_caRepository","accessDescription","addUrlsToObject","urls","indexedKey","asn1X509.AccessDescription","Attribute$1","ChallengePasswordAttribute","asnPkcs9.ChallengePassword","asnPkcs9.id_pkcs9_at_challengePassword","ExtensionsAttribute","asn1X509.Extensions","asn1X509.Extension","asnPkcs9.id_pkcs9_at_extensionRequest","AttributeFactory","attribute","diAsnSignatureFormatter","AsnDefaultSignatureFormatter","RsaAlgorithm_1","RsaAlgorithm","saltLength","hashAlgorithm","asn1Rsa.RsaSaPssParams","asn1Rsa.id_mgf1","pssParams","asn1Rsa.id_RSASSA_PSS","ShaAlgorithm","AsnEcSignatureFormatter","pointSize","positive","namedCurve","ecSignature","uint8Signature","ecSigValue","idX25519","idX448","idEd25519","idEd448","EdAlgorithm","Pkcs10CertificateRequest","ext","signatureFormatters","signatureFormatter","req","tbs","attrs","attrObj","X509Certificate","serialNumberBytes","notBefore","notAfter","keyAlgorithm","paramsKey","cert","extObj","X509Certificates","signedData","asn1Cms.SignedData","asn1Cms.id_data","asn1Cms.EncapsulatedContent","asn1Cms.CertificateSet","asn1Cms.CertificateChoices","cms","asn1Cms.ContentInfo","contentInfo","asn1Cms.CMSVersion","X509ChainBuilder","current","thumbprint","thumbprint2","akiExt","skiExt","sanExt","X509CrlReason","asn1X509.id_ce_basicConstraints","asn1X509.id_ce_keyUsage","_TypedMap","entries","__privateAdd","_map","__privateGet","depth","inspect","className","newOptions","inner","TypedMap","addExtInt","Headers","Algorithms","MacAlgorithms","EncryptionAlgorithms","EncryptionAlgorithmNames","MacAlgorithmNames","AlgorithmNames","ProtectedHeaders","EncryptProtectedHeaders","MacProtectedHeaders","UnprotectedHeaders","COSEError","COSEAlgNotAllowed","COSENotSupported","X509NoMatchingCertificate","X509InvalidCertificateChain","COSEDecryptionFailed","COSEEncryptedInvalid","COSEInvalid","COSESignatureVerificationFailed","subtleDsa","crypto$2","isCryptoKey","checkKeyLength","modulusLength","unusable","isAlgorithm","getHashLength","getNamedCurve","checkUsage","usages","expected","last","checkSigCryptoKey","checkEncCryptoKey","actual","types","invalidKeyInput$1","getCryptoKey","usage","invalidKeyInput","sign","cryptoKey","getSignKey","subtleAlgorithm","verify","getVerifyKey","crypto$1","encodeBase64","unencoded","CHUNK_SIZE","decodeBase64","encoded","JOSEError","JOSENotSupported","isObjectLike","isObject","formatPEM","b64","newlined","findOid","keyData","sub","genericImport","replace","keyFormat","fromSPKI","getElement","seq","nextPart","parseElement","byteLength","numberOfDigits","spkiFromX509","tbsCertificate","getSPKI","x509","fromX509","cause","subtleMapping","jwk","parse","importX509","importJWK","octAsKeyObject","asKeyObject","decodeBase64URL","keyToJWK","key_ops","use","exportJWK","getModulusLengthOption","generateKeyPair","crv","generate","ByteStream","hexMap","temp","stream","initialSize","streamViewLength","subarrayView","start_","length_","backward_","backward","patternLength","patternArray","equal","equalStart","patterns","valid","patternFound","currentLength","firstIn","firstNotIn","leftPattern","rightPattern","currentPositionLeft","leftPatterns","rightPatterns","inputLeftPatterns","inputRightPatterns","searchPattern","replacePattern","findAllResult","patternDifference","changedBuffer","changedView","currentPosition","pow2_24","SeqStream","gap","changeLength","negative","SHA1_IV","SHA1_W","K","SHA1","sha1n","sha256n","sha512n","sha384n","ArgumentError","typeNames","ParameterError","fields","AsnError","PkiObject","memberName","stringPrep","isSpace","cutResult","TYPE$5","VALUE$6","pvutils.getParametersValue","pvutils.clearProps","_object","compareTo","stringBlockNames","isStringPair","thisName","value1","value2","TYPE_AND_VALUES","VALUE_BEFORE_DECODE","RDN","RelativeDistinguishedNames","memberValue","typeAndValue","TYPE$4","VALUE$5","builtInStandardAttributes","builtInDomainDefinedAttributes","extensionAttributes","valueBER","asnValue","ACCESS_METHOD","ACCESS_LOCATION","CLEAR_PROPS$1v","SECONDS","MILLIS","MICROS","Accuracy","intMillis","intMicros","ALGORITHM_ID","ALGORITHM_PARAMS","ALGORITHM$2","PARAMS","CLEAR_PROPS$1u","algorithmIdentifier","ALT_NAMES","CLEAR_PROPS$1t","AltName","TYPE$3","VALUES$1","CLEAR_PROPS$1s","NOT_BEFORE_TIME","NOT_AFTER_TIME","CLEAR_PROPS$1r","NAMES","GENERAL_NAMES","id_SubjectDirectoryAttributes","id_SubjectKeyIdentifier","id_KeyUsage","id_PrivateKeyUsagePeriod","id_SubjectAltName","id_IssuerAltName","id_BasicConstraints","id_CRLNumber","id_BaseCRLNumber","id_CRLReason","id_InvalidityDate","id_IssuingDistributionPoint","id_CertificateIssuer","id_NameConstraints","id_CRLDistributionPoints","id_FreshestCRL","id_CertificatePolicies","id_AnyPolicy","id_MicrosoftAppPolicies","id_PolicyMappings","id_AuthorityKeyIdentifier","id_PolicyConstraints","id_ExtKeyUsage","id_InhibitAnyPolicy","id_AuthorityInfoAccess","id_SubjectInfoAccess","id_SignedCertificateTimestampList","id_MicrosoftCertTemplateV2","id_MicrosoftCaVersion","id_QCStatements","id_ContentType_Data","id_ContentType_SignedData","id_ContentType_EnvelopedData","id_ContentType_EncryptedData","id_eContentType_TSTInfo","id_CertBag_X509Certificate","id_CertBag_SDSICertificate","id_CertBag_AttributeCertificate","id_CRLBag_X509CRL","id_PKIX_OCSP_Basic","KEY_IDENTIFIER$1","AUTHORITY_CERT_ISSUER","AUTHORITY_CERT_SERIAL_NUMBER","CLEAR_PROPS$1q","PATH_LENGTH_CONSTRAINT","CA","CERTIFICATE_INDEX","KEY_INDEX","CAVersion","tempValue","keyIndexBuffer","keyIndexView8","keyIndexView16","certificateIndexBuffer","certificateIndexView8","certificateIndexView16","certificateIndexView","keyIndexView","pvutils.utilConcatBuf","POLICY_QUALIFIER_ID","QUALIFIER","CLEAR_PROPS$1p","POLICY_IDENTIFIER","POLICY_QUALIFIERS","CLEAR_PROPS$1o","CERTIFICATE_POLICIES","CLEAR_PROPS$1n","TEMPLATE_ID","TEMPLATE_MAJOR_VERSION","TEMPLATE_MINOR_VERSION","CLEAR_PROPS$1m","CertificateTemplate","DISTRIBUTION_POINT$1","DISTRIBUTION_POINT_NAMES$1","REASONS","CRL_ISSUER","CRL_ISSUER_NAMES","CLEAR_PROPS$1l","DISTRIBUTION_POINTS","CLEAR_PROPS$1k","KEY_PURPOSES","CLEAR_PROPS$1j","ExtKeyUsage","ACCESS_DESCRIPTIONS","InfoAccess","DISTRIBUTION_POINT","DISTRIBUTION_POINT_NAMES","ONLY_CONTAINS_USER_CERTS","ONLY_CONTAINS_CA_CERTS","ONLY_SOME_REASON","INDIRECT_CRL","ONLY_CONTAINS_ATTRIBUTE_CERTS","CLEAR_PROPS$1i","BASE","MINIMUM","MAXIMUM","CLEAR_PROPS$1h","valueMinimum","valueMaximum","PERMITTED_SUBTREES","EXCLUDED_SUBTREES","CLEAR_PROPS$1g","REQUIRE_EXPLICIT_POLICY","INHIBIT_POLICY_MAPPING","CLEAR_PROPS$1f","field1","ber1","int1","field2","ber2","int2","ISSUER_DOMAIN_POLICY","SUBJECT_DOMAIN_POLICY","CLEAR_PROPS$1e","MAPPINGS","CLEAR_PROPS$1d","NOT_BEFORE$1","NOT_AFTER$1","CLEAR_PROPS$1c","localNotBefore","localNotAfter","ID","TYPE$2","VALUES","QC_STATEMENT_CLEAR_PROPS","QC_STATEMENTS_CLEAR_PROPS","QCStatement","QCStatements","ECNamedCurves","nameOrId","NAMED_CURVE$1","ECPublicKey","asn1js.RawData","schema1","coordinateLength","pvutils.toBase64","pvutils.arrayBufferToString","xConvertBuffer","pvutils.stringToArrayBuffer","pvutils.fromBase64","convertBufferView","yConvertBuffer","MODULUS$1","PUBLIC_EXPONENT$1","CLEAR_PROPS$1b","pvutils.nearestPowerOf2","ALGORITHM$1","SUBJECT_PUBLIC_KEY","CLEAR_PROPS$1a","PublicKeyInfo","publicKeyASN1","parsedKey","publicKeyJWK","getCrypto","exportedKey","VERSION$l","PRIVATE_KEY$1","NAMED_CURVE","PUBLIC_KEY$1","CLEAR_PROPS$19","publicKeyData","curve","privateKeyJSON","publicKeyJSON","convertBuffer","PRIME","EXPONENT","COEFFICIENT$1","CLEAR_PROPS$18","VERSION$k","MODULUS","PUBLIC_EXPONENT","PRIVATE_EXPONENT","PRIME1","PRIME2","EXPONENT1","EXPONENT2","COEFFICIENT","OTHER_PRIME_INFOS","CLEAR_PROPS$17","VERSION$j","PRIVATE_KEY_ALGORITHM","PRIVATE_KEY","ATTRIBUTES$5","PARSED_KEY","CLEAR_PROPS$16","privateKeyASN1","CONTENT_TYPE$1","CONTENT_ENCRYPTION_ALGORITHM","ENCRYPTED_CONTENT","CLEAR_PROPS$15","PIECE_SIZE","constrString","pieceView","_array","_view","sequenceLengthBlock","encryptedValue","HASH_ALGORITHM$4","MASK_GEN_ALGORITHM$1","SALT_LENGTH","TRAILER_FIELD","CLEAR_PROPS$14","RSASSAPSSParams","SALT","ITERATION_COUNT","KEY_LENGTH","CLEAR_PROPS$13","PBKDF2Params","KEY_DERIVATION_FUNC","ENCRYPTION_SCHEME","CLEAR_PROPS$12","PBES2Params","AbstractCryptoEngine","makePKCS12B2Key","keyLength","iterationCount","originalPassword","decodedPassword","passwordTransformed","passwordView","saltView","iRound","chunk","prepareAlgorithm","CryptoEngine","extractable","_e","publicKeyInfo","privateKeyInfo","inputFormat","outputFormat","safety","algorithmName","operation","signatureAlgorithm","contentEncryptionOID","pbkdf2OID","hmacOID","ivBuffer","ivView","saltBuffer","contentView","pbkdf2Params","pbkdfKey","derivedKey","encryptedData","pbes2Parameters","contentEncryptionAlgorithm","hmacHashAlgorithm","dataBuffer","hmacAlgorithm","pkcsKey","hmacKey","privateKey","paramsObject","hashAlgorithmOID","pssParameters","createCMSECDSASignature","shaAlgorithm","algorithmId","algorithmObject","publicKeyAlgorithm","publicKeyAlgorithmParams","curveObject","publicKeyInfoBuffer","algorithmParamsChecked","signatureValue","createECDSASignatureFromCMS","hashAlgo","engine","isCryptoEngine","setEngine","cryptoArg","subtleArg","getEngine","_engine","signatureBuffer","rBuffer","rInteger","sBuffer","sInteger","cmsSignature","rValueView","sValueView","kdfWithCounter","hashFunction","zBuffer","Counter","SharedInfo","counterBuffer","counterView","combinedBuffer","kdf","Zbuffer","keydatalen","hashLength","maxCounter","quotient","incomingResult","currentCounter","found","newView","combinedView","VERSION$i","LOG_ID","EXTENSIONS$6","TIMESTAMP","HASH_ALGORITHM$3","SIGNATURE_ALGORITHM$8","SIGNATURE$7","NONE","MD5","ANONYMOUS","RSA","DSA","SignedCertificateTimestamp","seqStream","bs.SeqStream","bs.ByteStream","extensionsLength","signatureLength","signatureData","timeBuffer","timeView","baseArray","_hashAlgorithm","_signatureAlgorithm","_signature","pvutils.bufferToHexCodes","logs","dataType","logId","publicKeyBase64","log","pki","TIMESTAMPS","SignedCertificateTimestampList","overallLength","timestampsData","timestamp","timestampStream","ATTRIBUTES$4","CLEAR_PROPS$11","ExtensionValueFactory","EXTN_ID","CRITICAL","EXTN_VALUE","PARSED_VALUE$5","CLEAR_PROPS$10","parsedValue","EXTENSIONS$5","CLEAR_PROPS$$","ISSUER$5","SERIAL_NUMBER$6","ISSUER_UID","CLEAR_PROPS$_","VERSION$h","BASE_CERTIFICATE_ID$2","SUBJECT_NAME","ISSUER$4","SIGNATURE$6","SERIAL_NUMBER$5","ATTR_CERT_VALIDITY_PERIOD$1","ATTRIBUTES$3","ISSUER_UNIQUE_ID$2","EXTENSIONS$4","CLEAR_PROPS$Z","AttributeCertificateInfoV1","ACINFO$1","SIGNATURE_ALGORITHM$7","SIGNATURE_VALUE$4","CLEAR_PROPS$Y","AttributeCertificateV1","DIGESTED_OBJECT_TYPE","OTHER_OBJECT_TYPE_ID","DIGEST_ALGORITHM$2","OBJECT_DIGEST","CLEAR_PROPS$X","ISSUER_NAME","BASE_CERTIFICATE_ID$1","OBJECT_DIGEST_INFO$1","CLEAR_PROPS$W","BASE_CERTIFICATE_ID","ENTITY_NAME","OBJECT_DIGEST_INFO","CLEAR_PROPS$V","VERSION$g","HOLDER","ISSUER$3","SIGNATURE$5","SERIAL_NUMBER$4","ATTR_CERT_VALIDITY_PERIOD","ATTRIBUTES$2","ISSUER_UNIQUE_ID$1","EXTENSIONS$3","CLEAR_PROPS$U","AttributeCertificateInfoV2","ACINFO","SIGNATURE_ALGORITHM$6","SIGNATURE_VALUE$3","CLEAR_PROPS$T","AttributeCertificateV2","CONTENT_TYPE","CONTENT","CLEAR_PROPS$S","TYPE$1","VALUE$4","UTC_TIME_NAME","GENERAL_TIME_NAME","CLEAR_PROPS$R","TimeType","TBS$4","VERSION$f","SERIAL_NUMBER$3","SIGNATURE$4","ISSUER$2","NOT_BEFORE","NOT_AFTER","SUBJECT$1","SUBJECT_PUBLIC_KEY_INFO","ISSUER_UNIQUE_ID","SUBJECT_UNIQUE_ID","EXTENSIONS$2","SIGNATURE_ALGORITHM$5","SIGNATURE_VALUE$2","TBS_CERTIFICATE","TBS_CERTIFICATE_VERSION","TBS_CERTIFICATE_SERIAL_NUMBER","TBS_CERTIFICATE_SIGNATURE","TBS_CERTIFICATE_ISSUER","TBS_CERTIFICATE_NOT_BEFORE","TBS_CERTIFICATE_NOT_AFTER","TBS_CERTIFICATE_SUBJECT","TBS_CERTIFICATE_SUBJECT_PUBLIC_KEY","TBS_CERTIFICATE_ISSUER_UNIQUE_ID","TBS_CERTIFICATE_SUBJECT_UNIQUE_ID","TBS_CERTIFICATE_EXTENSIONS","CLEAR_PROPS$Q","encodeFlag","tbsSchema","signatureParameters","issuerCertificate","subjectPublicKeyInfo","checkCA","signerCert","isCA","CERT_ID$1","CERT_VALUE","PARSED_VALUE$4","CLEAR_PROPS$P","certValueHex","USER_CERTIFICATE","REVOCATION_DATE","CRL_ENTRY_EXTENSIONS","CLEAR_PROPS$O","TBS$3","VERSION$e","SIGNATURE$3","ISSUER$1","THIS_UPDATE$1","NEXT_UPDATE$1","REVOKED_CERTIFICATES","CRL_EXTENSIONS","SIGNATURE_ALGORITHM$4","SIGNATURE_VALUE$1","TBS_CERT_LIST","TBS_CERT_LIST_VERSION","TBS_CERT_LIST_SIGNATURE","TBS_CERT_LIST_ISSUER","TBS_CERT_LIST_THIS_UPDATE","TBS_CERT_LIST_NEXT_UPDATE","TBS_CERT_LIST_REVOKED_CERTIFICATES","TBS_CERT_LIST_EXTENSIONS","CLEAR_PROPS$N","tbsCertList","WELL_KNOWN_EXTENSIONS","CertificateRevocationList","certificate","revokedCertificate","CRL_ID","CRL_VALUE","PARSED_VALUE$3","CLEAR_PROPS$M","VERSION$d","ENCRYPTED_CONTENT_INFO$1","UNPROTECTED_ATTRS$1","CLEAR_PROPS$L","encryptParams","decryptParams","ENCRYPTION_ALGORITHM","ENCRYPTED_DATA","PARSED_VALUE$2","CLEAR_PROPS$K","decryptedData","cmsEncrypted","SECRET_TYPE_ID","SECRET_VALUE","CLEAR_PROPS$J","SafeBagValueFactory","BAG_ID","BAG_VALUE","BAG_ATTRIBUTES","CLEAR_PROPS$I","bagType","SAFE_BUGS","OTHER_CERT_FORMAT","OTHER_CERT","CLEAR_PROPS$H","CERTIFICATES$1","CLEAR_PROPS$G","initialTagNumber","elementSequence","OTHER_REV_INFO_FORMAT","OTHER_REV_INFO","CLEAR_PROPS$F","CRLS$3","OTHER_REVOCATION_INFOS","CLEAR_PROPS$E","CERTS$3","CRLS$2","CLEAR_PROPS$D","sequenceValue","ISSUER","SERIAL_NUMBER$2","CLEAR_PROPS$C","VARIANT$3","VALUE$3","CLEAR_PROPS$B","VERSION$c","RID$1","KEY_ENCRYPTION_ALGORITHM$3","ENCRYPTED_KEY$3","RECIPIENT_CERTIFICATE$1","CLEAR_PROPS$A","ALGORITHM","PUBLIC_KEY","CLEAR_PROPS$z","VARIANT$2","VALUE$2","CLEAR_PROPS$y","_schema","KEY_ATTR_ID","KEY_ATTR","CLEAR_PROPS$x","SUBJECT_KEY_IDENTIFIER","DATE$1","OTHER$1","CLEAR_PROPS$w","VARIANT$1","VALUE$1","CLEAR_PROPS$v","RID","ENCRYPTED_KEY$2","CLEAR_PROPS$u","ENCRYPTED_KEYS","RECIPIENT_ENCRYPTED_KEYS","CLEAR_PROPS$t","VERSION$b","ORIGINATOR","UKM","KEY_ENCRYPTION_ALGORITHM$2","RECIPIENT_ENCRYPTED_KEY","RECIPIENT_CERTIFICATE","RECIPIENT_PUBLIC_KEY","CLEAR_PROPS$s","KEY_IDENTIFIER","OTHER","CLEAR_PROPS$r","VERSION$a","KEK_ID","KEY_ENCRYPTION_ALGORITHM$1","ENCRYPTED_KEY$1","PER_DEFINED_KEK","CLEAR_PROPS$q","VERSION$9","KEY_DERIVATION_ALGORITHM","KEY_ENCRYPTION_ALGORITHM","ENCRYPTED_KEY","PASSWORD","CLEAR_PROPS$p","PasswordRecipientinfo","ORI_TYPE","ORI_VALUE","CLEAR_PROPS$o","VARIANT","CLEAR_PROPS$n","blockSequence","HASH_ALGORITHM$2","MASK_GEN_ALGORITHM","P_SOURCE_ALGORITHM","CLEAR_PROPS$m","RSAESOAEPParams","KEY_INFO","ENTITY_U_INFO","SUPP_PUB_INFO","CLEAR_PROPS$l","ECCCMSSharedInfo","VERSION$8","ORIGINATOR_INFO","RECIPIENT_INFOS","ENCRYPTED_CONTENT_INFO","UNPROTECTED_ATTRS","CLEAR_PROPS$k","defaultEncryptionParams","curveLengthByName","variant","encryptionParameters","algorithmParams","hashOID","keyInfo","recipientIdentifier","preDefinedData","keyIdentifierBuffer","keyIdentifierView","kekOID","keyId","extraRecipientInfoParams","encryptedKey","aesKWoid","aesKW","ecdhOID","ukmBuffer","ukmView","recipientInfoParams","contentToEncrypt","sessionKey","encryptedContent","exportedSessionKey","SubKeyAgreeRecipientInfo","recipientInfo","recipientCurve","recipientPublicKey","recipientCurveLength","ecdhKeys","exportedECDHPublicKey","derivedBits","aesKWAlgorithm","kwAlgorithm","kwLength","kwLengthBuffer","kwLengthView","encodedInfo","ecdhAlgorithm","derivedKeyRaw","awsKW","wrappedKey","originator","SubKeyTransRecipientInfo","algorithmParameters","rsaOAEPParams","SubKEKRecipientInfo","kekAlgorithm","kekKey","SubPasswordRecipientinfo","derivationKey","iterations","recipientIndex","decryptionParameters","curveOID","ecdhPrivateKey","keyCrypto","ecdhPublicKey","sharedSecret","applyKDF","includeAlgorithmParams","keyInfoAlgorithm","kdfResult","importAesKwKey","aesKwKey","unwrapSessionKey","importedKey","pbkdf2Key","unwrappedKey","SAFE_CONTENTS","PARSED_VALUE$1","CONTENT_INFOS","safeContent","errorTarget","authSafeContent","cmsEnveloped","envelopedData","recipientCertificate","recipientKey","decrypted","contentBuffer","currentParameters","encryptionAlgorithm","HASH_ALGORITHM$1","ISSUER_NAME_HASH","ISSUER_KEY_HASH","SERIAL_NUMBER$1","CLEAR_PROPS$j","CertID","certID","certificateID","hashIssuerName","issuerKeyBuffer","hashIssuerKey","CERT_ID","CERT_STATUS","THIS_UPDATE","NEXT_UPDATE","SINGLE_EXTENSIONS","CLEAR_PROPS$i","SingleResponse","TBS$2","VERSION$7","RESPONDER_ID","PRODUCED_AT","RESPONSES","RESPONSE_EXTENSIONS","RESPONSE_DATA","RESPONSE_DATA_VERSION","RESPONSE_DATA_RESPONDER_ID","RESPONSE_DATA_PRODUCED_AT","RESPONSE_DATA_RESPONSES","RESPONSE_DATA_RESPONSE_EXTENSIONS","CLEAR_PROPS$h","ResponseData","TRUSTED_CERTS","CERTS$2","CRLS$1","OCSPS$1","CHECK_DATE","FIND_ORIGIN","FIND_ISSUER","ChainValidationCode","ChainValidationError","isTrusted","trustedList","CertificateChainValidationEngine","validationEngine","localCert","trustedCert","keyIdentifier","authorityCertIssuer","authorityCertSerialNumber","checkCertificate","possibleIssuer","extensionFound","authorityCertSerialNumberEqual","intermediateCert","passedWhenNotRevValues","localCerts","buildPath","checkUnique","unique","findIssuerResult","buildPathResult","copy","findCRL","issuerCertificates","crls","crlsAndCertificates","crl","findOCSP","checkForCA","needToCheckCRL","mustBeCA","keyUsagePresent","cRLSign","basicCheck","checkDate","ocspResult","crlResult","leafCert","certificatePath","shortestLength","shortestIndex","compareDNSName","constraint","namePrepared","constraintPrepared","nameSplitted","constraintSplitted","nameLen","constrLen","compareRFC822Name","ns","cs","compareUniformResourceIdentifier","compareIPAddress","nameView","constraintView","compareDirectoryName","nameStart","localResult","initialPolicySet","initialExplicitPolicy","initialPolicyMappingInhibit","initialInhibitPolicy","initialPermittedSubtreesSet","initialExcludedSubtreesSet","initialRequiredNameForms","explicitPolicyIndicator","policyMappingInhibitIndicator","inhibitAnyPolicyIndicator","pendingConstraints","explicitPolicyPending","policyMappingInhibitPending","inhibitAnyPolicyPending","permittedSubtrees","excludedSubtrees","requiredNameForms","pathDepth","allPolicies","policiesAndCerts","anyPolicyArray","ii","policyMappings","certPolicies","explicitPolicyStart","policyIndex","policyId","certArray","searchAnyPolicy","issuerDomainPolicyIndex","subjectDomainPolicyIndex","authConstrPolicies","anyPolicyFound","userConstrPolicies","policyResult","subjectAltNames","certPermittedSubtrees","certExcludedSubtrees","formFound","constrGroups","groupPermitted","valueExists","group","excluded","TBS_RESPONSE_DATA","SIGNATURE_ALGORITHM$3","SIGNATURE$2","CERTS$1","BASIC_OCSP_RESPONSE","BASIC_OCSP_RESPONSE_TBS_RESPONSE_DATA","BASIC_OCSP_RESPONSE_SIGNATURE_ALGORITHM","BASIC_OCSP_RESPONSE_SIGNATURE","BASIC_OCSP_RESPONSE_CERTS","CLEAR_PROPS$g","BasicOCSPResponse","comparisonResult","hashesObject","certIDs","signatureParams","certIndex","trustedCerts","additionalCerts","caCert","TBS$1","VERSION$6","SUBJECT","SPKI","ATTRIBUTES$1","SIGNATURE_ALGORITHM$2","SIGNATURE_VALUE","CSR_INFO","CSR_INFO_VERSION","CSR_INFO_SUBJECT","CSR_INFO_SPKI","CSR_INFO_ATTRS","CLEAR_PROPS$f","DIGEST_ALGORITHM$1","DIGEST","CLEAR_PROPS$e","E_CONTENT_TYPE","E_CONTENT","CLEAR_PROPS$d","viewHex","MAC","MAC_SALT","ITERATIONS","CLEAR_PROPS$c","HASH_ALGORITHM","HASHED_MESSAGE","CLEAR_PROPS$b","MessageImprint","hashedMessage","REQ_CERT","SINGLE_REQUEST_EXTENSIONS","CLEAR_PROPS$a","Request","TBS","VERSION$5","REQUESTOR_NAME","REQUEST_LIST","REQUEST_EXTENSIONS","TBS_REQUEST$1","TBS_REQUEST_VERSION","TBS_REQUEST_REQUESTOR_NAME","TBS_REQUEST_REQUESTS","TBS_REQUEST_REQUEST_EXTENSIONS","CLEAR_PROPS$9","TBSRequest","SIGNATURE_ALGORITHM$1","SIGNATURE$1","CERTS","Signature","TBS_REQUEST","OPTIONAL_SIGNATURE","CLEAR_PROPS$8","OCSPRequest","RESPONSE_TYPE","RESPONSE","CLEAR_PROPS$7","ResponseBytes","RESPONSE_STATUS","RESPONSE_BYTES","OCSPResponse","basicResponse","asn1Basic","TYPE","ATTRIBUTES","ENCODED_VALUE","CLEAR_PROPS$6","SignedAndUnsignedAttributes","VERSION$4","SID","DIGEST_ALGORITHM","SIGNED_ATTRS","SIGNATURE_ALGORITHM","SIGNATURE","UNSIGNED_ATTRS","SIGNER_INFO","SIGNER_INFO_VERSION","SIGNER_INFO_SID","SIGNER_INFO_DIGEST_ALGORITHM","SIGNER_INFO_SIGNED_ATTRS","SIGNER_INFO_SIGNATURE_ALGORITHM","SIGNER_INFO_SIGNATURE","SIGNER_INFO_UNSIGNED_ATTRS","CLEAR_PROPS$5","currentSid","VERSION$3","POLICY","MESSAGE_IMPRINT$1","SERIAL_NUMBER","GEN_TIME","ORDERING","NONCE$1","ACCURACY","TSA","EXTENSIONS$1","TST_INFO","TST_INFO_VERSION","TST_INFO_POLICY","TST_INFO_MESSAGE_IMPRINT","TST_INFO_SERIAL_NUMBER","TST_INFO_GEN_TIME","TST_INFO_ACCURACY","TST_INFO_ORDERING","TST_INFO_NONCE","TST_INFO_TSA","TST_INFO_EXTENSIONS","CLEAR_PROPS$4","TSTInfo","VERSION$2","DIGEST_ALGORITHMS","ENCAP_CONTENT_INFO","CERTIFICATES","CRLS","SIGNER_INFOS","OCSPS","SIGNED_DATA","SIGNED_DATA_VERSION","SIGNED_DATA_DIGEST_ALGORITHMS","SIGNED_DATA_ENCAP_CONTENT_INFO","SIGNED_DATA_CERTIFICATES","SIGNED_DATA_CRLS","SIGNED_DATA_SIGNER_INFOS","CLEAR_PROPS$3","SignedDataVerifyError","signatureVerified","signerCertificate","signerCertificateVerified","timestampSerial","certificateSet","signerInfoSchema","certificateSetSchema","crlSchema","signerInfo","signer","checkChain","extendedMode","findOrigin","findIssuer","messageDigestValue","digest","tstInfo","certs","chainParams","chainEngine","verificationResult","signerInfoHashAlgorithm","eContent","foundContentType","foundMessageDigest","messageDigest","verifyResult","signerIndex","VERSION$1","AUTH_SAFE","MAC_DATA","PARSED_VALUE","CLERA_PROPS","cmsSigned","signedAttr","STATUS$1","STATUS_STRINGS","FAIL_INFO","CLEAR_PROPS$2","PKIStatus","PKIStatusInfo","_status","VERSION","MESSAGE_IMPRINT","REQ_POLICY","NONCE","CERT_REQ","EXTENSIONS","TIME_STAMP_REQ","TIME_STAMP_REQ_VERSION","TIME_STAMP_REQ_MESSAGE_IMPRINT","TIME_STAMP_REQ_POLICY","TIME_STAMP_REQ_NONCE","TIME_STAMP_REQ_CERT_REQ","TIME_STAMP_REQ_EXTENSIONS","CLEAR_PROPS$1","TimeStampReq","STATUS","TIME_STAMP_TOKEN","TIME_STAMP_RESP","TIME_STAMP_RESP_STATUS","TIME_STAMP_RESP_TOKEN","CLEAR_PROPS","TimeStampResp","verificationParameters","initCryptoEngine","engineName","nodeCrypto","pkijs.setEngine","pkijs.CryptoEngine","MAX_INT32","areEqual","buf1","buf2","writeUInt32BE","uint64be","high","encodeBase64URL","pemToCert","certToPEM","__classPrivateFieldSet","receiver","kind","__classPrivateFieldGet","_COSEBase_encodedProtectedHeaders","COSEBase","validateAlgorithms","option","algorithms","SignatureBase","x5bag","x5chain","caRoots","pkijs.CertificateChainValidationEngine","pkijs.Certificate","x509Cert","errors.COSEInvalid","errors.COSEAlgNotAllowed","errors.COSESignatureVerificationFailed","cose","expectedType","decoded","Sign1","applicationHeaders","roots","wProtectedHeaders","encodedProtectedHeaders","unprotectedHeadersMap","encodeFn","Sign","signatures","bodyProtectedHeader","signers","bodyProtectedHeaders","unprotectedHeadersMapped","Mac0","mac0Structure","mac0","wUnprotectedHeaders","random","bitLength","generateIv","checkIvLength","iv","checkCekLength","cek","timingSafeEqual","cbcDecrypt","ciphertext","aad","keySize","encKey","macKey","macData","expectedTag","macCheckPassed","plaintext","gcmDecrypt","decrypt","cbcEncrypt","gcmEncrypt","encrypted","encrypt","Encrypt0","externalAAD","ciphertextWithTag","KeyType","JWKKeyType","reverseMap","COSEKeyParam","JWKParam","KTYSpecificJWKParams","KTYSpecificJWKParamsRev","KeyOps","JWKKeyOps","JWKKeyOpsToCOSE","toArray","JWKFromCOSEValue","JWKToCOSEValue","label","COSEKey","coseKey","kty","jwkKey","formatter","parsed","Encrypt","recipients","mapRecipient","decryptKey","partialIV","encryptKey","Recipient"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232]}